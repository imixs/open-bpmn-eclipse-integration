/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "../../node_modules/css-loader/dist/cjs.js!./css/diagram.css":
/*!*******************************************************************!*\
  !*** ../../node_modules/css-loader/dist/cjs.js!./css/diagram.css ***!
  \*******************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/sourceMaps.js */ "../../node_modules/css-loader/dist/runtime/sourceMaps.js");
/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/api.js */ "../../node_modules/css-loader/dist/runtime/api.js");
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);
// Imports


var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));
// Module
___CSS_LOADER_EXPORT___.push([module.id, `.sprotty-graph {
    background: white;
}

.sprotty-node {
    fill: #cdc;
    stroke: rgb(0, 0, 0);
}

.sprotty-edge {
    stroke: black;
}

.sprotty-edge.arrow {
    fill: black;
}

.sprotty-edge.selected {
    stroke: #844;
}

.sprotty-edge.selected > .arrow {
    fill: #844;
    stroke: #844;
}

.sprotty-node:not(.selected) {
    stroke: black;
}

.forkOrJoin > .sprotty-node {
    fill: black;
}

.forkOrJoin > .sprotty-node.selected {
    stroke: rgb(87, 87, 214);
}

polygon.sprotty-node {
    stroke: black;
}

.sprotty-node.selected {
    stroke: rgb(87, 87, 214);
}
`, "",{"version":3,"sources":["webpack://./css/diagram.css"],"names":[],"mappings":"AAAA;IACI,iBAAiB;AACrB;;AAEA;IACI,UAAU;IACV,oBAAoB;AACxB;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,WAAW;AACf;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,UAAU;IACV,YAAY;AAChB;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,WAAW;AACf;;AAEA;IACI,wBAAwB;AAC5B;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,wBAAwB;AAC5B","sourcesContent":[".sprotty-graph {\n    background: white;\n}\n\n.sprotty-node {\n    fill: #cdc;\n    stroke: rgb(0, 0, 0);\n}\n\n.sprotty-edge {\n    stroke: black;\n}\n\n.sprotty-edge.arrow {\n    fill: black;\n}\n\n.sprotty-edge.selected {\n    stroke: #844;\n}\n\n.sprotty-edge.selected > .arrow {\n    fill: #844;\n    stroke: #844;\n}\n\n.sprotty-node:not(.selected) {\n    stroke: black;\n}\n\n.forkOrJoin > .sprotty-node {\n    fill: black;\n}\n\n.forkOrJoin > .sprotty-node.selected {\n    stroke: rgb(87, 87, 214);\n}\n\npolygon.sprotty-node {\n    stroke: black;\n}\n\n.sprotty-node.selected {\n    stroke: rgb(87, 87, 214);\n}\n"],"sourceRoot":""}]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ "../../node_modules/css-loader/dist/cjs.js!../../node_modules/@eclipse-glsp-examples/workflow-glsp/css/diagram.css":
/*!*************************************************************************************************************************!*\
  !*** ../../node_modules/css-loader/dist/cjs.js!../../node_modules/@eclipse-glsp-examples/workflow-glsp/css/diagram.css ***!
  \*************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../css-loader/dist/runtime/sourceMaps.js */ "../../node_modules/css-loader/dist/runtime/sourceMaps.js");
/* harmony import */ var _css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../css-loader/dist/runtime/api.js */ "../../node_modules/css-loader/dist/runtime/api.js");
/* harmony import */ var _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);
// Imports


var ___CSS_LOADER_EXPORT___ = _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));
// Module
___CSS_LOADER_EXPORT___.push([module.id, `/********************************************************************************
 * Copyright (c) 2019-2022 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/

.sprotty-graph {
    font-size: 15pt;
    border: none;
    height: 100%;
}

.sprotty-text {
    font-size: 12pt;
    text-anchor: middle;
}

.sprotty-node {
    stroke-width: 0;
    font-weight: bold;
}

.sprotty-label {
    stroke-width: 0;
    fill: #000;
    font-weight: inherit;
    text-align: inherit;
    font-size: 100%;
}

.sprotty-label.heading {
    font-weight: normal;
    font-size: 0.7em;
    fill: #f0f3f8;
}

.icon path {
    stroke-width: 0;
    fill: #f0f3f8;
}

.icon .icon-background {
    fill: transparent;
}

.task.automated > .sprotty-node {
    fill: #5b9fa8;
}

.task.manual > .sprotty-node {
    fill: #db8651;
}

.category > .sprotty-node {
    fill: #5c87bd;
}

.category .category > .sprotty-node {
    /** Add a border to nested categories, so we can distinguish them */
    stroke: #38679a;
    fill: #6f9ad0;
    stroke-width: 1;
}

.sprotty-edge.weighted.low:not(.selected),
.sprotty-edge.weighted.low:not(.selected) .arrow {
    stroke: rgb(128, 90, 233);
}

.sprotty-edge.weighted.low:not(.selected) .arrow {
    fill: rgb(128, 90, 233);
}

.sprotty-edge.weighted:not(.selected),
.sprotty-edge.weighted:not(.selected) .arrow,
.sprotty-edge.weighted.medium:not(.selected),
.sprotty-edge.weighted.medium:not(.selected) .arrow {
    stroke: rgb(98, 60, 193);
}

.sprotty-edge.weighted:not(.selected) .arrow,
.sprotty-edge.weighted.medium:not(.selected) .arrow {
    fill: rgb(98, 60, 193);
}

.sprotty-edge.weighted.high:not(.selected),
.sprotty-edge.weighted.high:not(.selected) .arrow {
    stroke: rgb(68, 30, 163);
}

.sprotty-edge.weighted.high:not(.selected) .arrow {
    fill: rgb(68, 30, 163);
}

.sprotty-comp {
    stroke: transparent;
    fill: transparent;
}

.label-edit input {
    margin-top: -3px;
    margin-left: -3px;
}
`, "",{"version":3,"sources":["webpack://./../../node_modules/@eclipse-glsp-examples/workflow-glsp/css/diagram.css"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;iFAciF;;AAEjF;IACI,eAAe;IACf,YAAY;IACZ,YAAY;AAChB;;AAEA;IACI,eAAe;IACf,mBAAmB;AACvB;;AAEA;IACI,eAAe;IACf,iBAAiB;AACrB;;AAEA;IACI,eAAe;IACf,UAAU;IACV,oBAAoB;IACpB,mBAAmB;IACnB,eAAe;AACnB;;AAEA;IACI,mBAAmB;IACnB,gBAAgB;IAChB,aAAa;AACjB;;AAEA;IACI,eAAe;IACf,aAAa;AACjB;;AAEA;IACI,iBAAiB;AACrB;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,mEAAmE;IACnE,eAAe;IACf,aAAa;IACb,eAAe;AACnB;;AAEA;;IAEI,yBAAyB;AAC7B;;AAEA;IACI,uBAAuB;AAC3B;;AAEA;;;;IAII,wBAAwB;AAC5B;;AAEA;;IAEI,sBAAsB;AAC1B;;AAEA;;IAEI,wBAAwB;AAC5B;;AAEA;IACI,sBAAsB;AAC1B;;AAEA;IACI,mBAAmB;IACnB,iBAAiB;AACrB;;AAEA;IACI,gBAAgB;IAChB,iBAAiB;AACrB","sourcesContent":["/********************************************************************************\n * Copyright (c) 2019-2022 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\n.sprotty-graph {\n    font-size: 15pt;\n    border: none;\n    height: 100%;\n}\n\n.sprotty-text {\n    font-size: 12pt;\n    text-anchor: middle;\n}\n\n.sprotty-node {\n    stroke-width: 0;\n    font-weight: bold;\n}\n\n.sprotty-label {\n    stroke-width: 0;\n    fill: #000;\n    font-weight: inherit;\n    text-align: inherit;\n    font-size: 100%;\n}\n\n.sprotty-label.heading {\n    font-weight: normal;\n    font-size: 0.7em;\n    fill: #f0f3f8;\n}\n\n.icon path {\n    stroke-width: 0;\n    fill: #f0f3f8;\n}\n\n.icon .icon-background {\n    fill: transparent;\n}\n\n.task.automated > .sprotty-node {\n    fill: #5b9fa8;\n}\n\n.task.manual > .sprotty-node {\n    fill: #db8651;\n}\n\n.category > .sprotty-node {\n    fill: #5c87bd;\n}\n\n.category .category > .sprotty-node {\n    /** Add a border to nested categories, so we can distinguish them */\n    stroke: #38679a;\n    fill: #6f9ad0;\n    stroke-width: 1;\n}\n\n.sprotty-edge.weighted.low:not(.selected),\n.sprotty-edge.weighted.low:not(.selected) .arrow {\n    stroke: rgb(128, 90, 233);\n}\n\n.sprotty-edge.weighted.low:not(.selected) .arrow {\n    fill: rgb(128, 90, 233);\n}\n\n.sprotty-edge.weighted:not(.selected),\n.sprotty-edge.weighted:not(.selected) .arrow,\n.sprotty-edge.weighted.medium:not(.selected),\n.sprotty-edge.weighted.medium:not(.selected) .arrow {\n    stroke: rgb(98, 60, 193);\n}\n\n.sprotty-edge.weighted:not(.selected) .arrow,\n.sprotty-edge.weighted.medium:not(.selected) .arrow {\n    fill: rgb(98, 60, 193);\n}\n\n.sprotty-edge.weighted.high:not(.selected),\n.sprotty-edge.weighted.high:not(.selected) .arrow {\n    stroke: rgb(68, 30, 163);\n}\n\n.sprotty-edge.weighted.high:not(.selected) .arrow {\n    fill: rgb(68, 30, 163);\n}\n\n.sprotty-comp {\n    stroke: transparent;\n    fill: transparent;\n}\n\n.label-edit input {\n    margin-top: -3px;\n    margin-left: -3px;\n}\n"],"sourceRoot":""}]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ "../../node_modules/css-loader/dist/cjs.js!../../node_modules/@eclipse-glsp/client/css/autocomplete-palette.css":
/*!**********************************************************************************************************************!*\
  !*** ../../node_modules/css-loader/dist/cjs.js!../../node_modules/@eclipse-glsp/client/css/autocomplete-palette.css ***!
  \**********************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../css-loader/dist/runtime/sourceMaps.js */ "../../node_modules/css-loader/dist/runtime/sourceMaps.js");
/* harmony import */ var _css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../css-loader/dist/runtime/api.js */ "../../node_modules/css-loader/dist/runtime/api.js");
/* harmony import */ var _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);
// Imports


var ___CSS_LOADER_EXPORT___ = _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));
// Module
___CSS_LOADER_EXPORT___.push([module.id, `/********************************************************************************
 * Copyright (c) 2023 Business Informatics Group (TU Wien) and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/

.autocomplete-palette {
    position: absolute;
    left: 20px;
    top: 20px;
    width: 400px;
}
`, "",{"version":3,"sources":["webpack://./../../node_modules/@eclipse-glsp/client/css/autocomplete-palette.css"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;iFAciF;;AAEjF;IACI,kBAAkB;IAClB,UAAU;IACV,SAAS;IACT,YAAY;AAChB","sourcesContent":["/********************************************************************************\n * Copyright (c) 2023 Business Informatics Group (TU Wien) and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\n.autocomplete-palette {\n    position: absolute;\n    left: 20px;\n    top: 20px;\n    width: 400px;\n}\n"],"sourceRoot":""}]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ "../../node_modules/css-loader/dist/cjs.js!../../node_modules/@eclipse-glsp/client/css/command-palette.css":
/*!*****************************************************************************************************************!*\
  !*** ../../node_modules/css-loader/dist/cjs.js!../../node_modules/@eclipse-glsp/client/css/command-palette.css ***!
  \*****************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../css-loader/dist/runtime/sourceMaps.js */ "../../node_modules/css-loader/dist/runtime/sourceMaps.js");
/* harmony import */ var _css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../css-loader/dist/runtime/api.js */ "../../node_modules/css-loader/dist/runtime/api.js");
/* harmony import */ var _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);
// Imports


var ___CSS_LOADER_EXPORT___ = _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));
// Module
___CSS_LOADER_EXPORT___.push([module.id, `/********************************************************************************
 * Copyright (c) 2019-2021 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/

.command-palette {
    transition: opacity 0.3s linear;
    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);
}

.command-palette-suggestions {
    background: white;
    z-index: 1000;
    overflow: auto;
    box-sizing: border-box;
    border: 1px solid rgba(60, 60, 60, 0.6);
    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);
}

.command-palette-suggestions .icon {
    padding-right: 0.3em;
    display: flex;
    align-self: center;
}

.command-palette-suggestions em {
    font-weight: bold;
    font-style: normal;
}

.command-palette-suggestions > div {
    padding: 0 4px;
    display: flex;
}

.command-palette-suggestions .group {
    background: #eee;
}

.command-palette-suggestions > div:hover:not(.group),
.command-palette-suggestions > div.selected {
    cursor: pointer;
}

.command-palette-suggestions > div:hover:not(.group) {
    background: #e0e0e0;
}

.command-palette-suggestions > div.selected {
    background: #bbdefb;
}
`, "",{"version":3,"sources":["webpack://./../../node_modules/@eclipse-glsp/client/css/command-palette.css"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;iFAciF;;AAEjF;IACI,+BAA+B;IAC/B,4EAA4E;AAChF;;AAEA;IACI,iBAAiB;IACjB,aAAa;IACb,cAAc;IACd,sBAAsB;IACtB,uCAAuC;IACvC,4EAA4E;AAChF;;AAEA;IACI,oBAAoB;IACpB,aAAa;IACb,kBAAkB;AACtB;;AAEA;IACI,iBAAiB;IACjB,kBAAkB;AACtB;;AAEA;IACI,cAAc;IACd,aAAa;AACjB;;AAEA;IACI,gBAAgB;AACpB;;AAEA;;IAEI,eAAe;AACnB;;AAEA;IACI,mBAAmB;AACvB;;AAEA;IACI,mBAAmB;AACvB","sourcesContent":["/********************************************************************************\n * Copyright (c) 2019-2021 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\n.command-palette {\n    transition: opacity 0.3s linear;\n    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\n}\n\n.command-palette-suggestions {\n    background: white;\n    z-index: 1000;\n    overflow: auto;\n    box-sizing: border-box;\n    border: 1px solid rgba(60, 60, 60, 0.6);\n    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\n}\n\n.command-palette-suggestions .icon {\n    padding-right: 0.3em;\n    display: flex;\n    align-self: center;\n}\n\n.command-palette-suggestions em {\n    font-weight: bold;\n    font-style: normal;\n}\n\n.command-palette-suggestions > div {\n    padding: 0 4px;\n    display: flex;\n}\n\n.command-palette-suggestions .group {\n    background: #eee;\n}\n\n.command-palette-suggestions > div:hover:not(.group),\n.command-palette-suggestions > div.selected {\n    cursor: pointer;\n}\n\n.command-palette-suggestions > div:hover:not(.group) {\n    background: #e0e0e0;\n}\n\n.command-palette-suggestions > div.selected {\n    background: #bbdefb;\n}\n"],"sourceRoot":""}]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ "../../node_modules/css-loader/dist/cjs.js!../../node_modules/@eclipse-glsp/client/css/decoration.css":
/*!************************************************************************************************************!*\
  !*** ../../node_modules/css-loader/dist/cjs.js!../../node_modules/@eclipse-glsp/client/css/decoration.css ***!
  \************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../css-loader/dist/runtime/sourceMaps.js */ "../../node_modules/css-loader/dist/runtime/sourceMaps.js");
/* harmony import */ var _css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../css-loader/dist/runtime/api.js */ "../../node_modules/css-loader/dist/runtime/api.js");
/* harmony import */ var _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);
// Imports


var ___CSS_LOADER_EXPORT___ = _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));
// Module
___CSS_LOADER_EXPORT___.push([module.id, `/********************************************************************************
 * Copyright (c) 2020-2021 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/

:root {
    --glsp-error-foreground: red;
    --glsp-warning-foreground: yellow;
    --glsp-info-foreground: lightblue;
    --glsp-issue-background: rgb(255 255 255 / 85%);
}

.sprotty-issue-background {
    fill: var(--glsp-issue-background);
    background-color: var(--glsp-issue-background);
}

.sprotty-issue.sprotty-error {
    fill: var(--glsp-error-foreground);
    background-color: var(--glsp-error-foreground);
}

.sprotty-issue.sprotty-warning {
    fill: var(--glsp-warning-foreground);
    background-color: var(--glsp-warning-foreground);
}

.sprotty-issue.sprotty-info {
    fill: var(--glsp-info-foreground);
    background-color: var(--glsp-info-foreground);
}
`, "",{"version":3,"sources":["webpack://./../../node_modules/@eclipse-glsp/client/css/decoration.css"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;iFAciF;;AAEjF;IACI,4BAA4B;IAC5B,iCAAiC;IACjC,iCAAiC;IACjC,+CAA+C;AACnD;;AAEA;IACI,kCAAkC;IAClC,8CAA8C;AAClD;;AAEA;IACI,kCAAkC;IAClC,8CAA8C;AAClD;;AAEA;IACI,oCAAoC;IACpC,gDAAgD;AACpD;;AAEA;IACI,iCAAiC;IACjC,6CAA6C;AACjD","sourcesContent":["/********************************************************************************\n * Copyright (c) 2020-2021 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\n:root {\n    --glsp-error-foreground: red;\n    --glsp-warning-foreground: yellow;\n    --glsp-info-foreground: lightblue;\n    --glsp-issue-background: rgb(255 255 255 / 85%);\n}\n\n.sprotty-issue-background {\n    fill: var(--glsp-issue-background);\n    background-color: var(--glsp-issue-background);\n}\n\n.sprotty-issue.sprotty-error {\n    fill: var(--glsp-error-foreground);\n    background-color: var(--glsp-error-foreground);\n}\n\n.sprotty-issue.sprotty-warning {\n    fill: var(--glsp-warning-foreground);\n    background-color: var(--glsp-warning-foreground);\n}\n\n.sprotty-issue.sprotty-info {\n    fill: var(--glsp-info-foreground);\n    background-color: var(--glsp-info-foreground);\n}\n"],"sourceRoot":""}]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ "../../node_modules/css-loader/dist/cjs.js!../../node_modules/@eclipse-glsp/client/css/glsp-sprotty.css":
/*!**************************************************************************************************************!*\
  !*** ../../node_modules/css-loader/dist/cjs.js!../../node_modules/@eclipse-glsp/client/css/glsp-sprotty.css ***!
  \**************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../css-loader/dist/runtime/sourceMaps.js */ "../../node_modules/css-loader/dist/runtime/sourceMaps.js");
/* harmony import */ var _css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../css-loader/dist/runtime/api.js */ "../../node_modules/css-loader/dist/runtime/api.js");
/* harmony import */ var _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);
// Imports


var ___CSS_LOADER_EXPORT___ = _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));
// Module
___CSS_LOADER_EXPORT___.push([module.id, `/********************************************************************************
 * Copyright (c) 2019-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/

.sprotty {
    padding: 0px;
    font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;
}

.sprotty svg text::selection {
    background: none;
}

.sprotty-hidden {
    display: block;
    position: absolute;
    width: 0px;
    height: 0px;
}

.sprotty-popup {
    font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;
    position: absolute;
    background: white;
    border-radius: 5px;
    border: 1px solid;
    max-width: 400px;
    min-width: 100px;
    z-index: 1;
}

.sprotty-popup > div {
    margin: 10px;
}

.sprotty-popup-closed {
    display: none;
}

.sprotty-resize-handle {
    /* radius does not work in Firefox */
    r: 5px;
    fill: #1d80d1;
    stroke: none;
    z-index: 1000;
}

.sprotty-resize-handle.selected {
    fill: #1d80d1;
}

.sprotty-resize-handle.active {
    fill: #1d80d1;
}

.sprotty-edge {
    fill: none;
    stroke-width: 1.5px;
}

.sprotty-edge.selected {
    stroke-width: 1.5px;
}

.sprotty-edge.mouseover:not(.selected) path {
    stroke-width: 1.5px;
}

.sprotty-node:not(.selected) {
    stroke-width: 0px;
}

.sprotty-node.mouseover:not(.selected),
.sprotty-edge.mouseover:not(.selected) {
    opacity: 60%;
}

.sprotty-node.selected,
.sprotty-edge.selected {
    stroke: #1d80d1;
    stroke-width: 1.5px;
    stroke-dashoffset: 5;
    stroke-dasharray: 5, 5;
    stroke-linecap: round;
}

.sprotty-edge.mouseover:not(.selected) .arrow,
.sprotty-edge.selected .arrow {
    stroke-dashoffset: none;
    stroke-dasharray: none;
}

.sprotty .node-creation-mode {
    cursor: copy;
}

.sprotty .overlap-forbidden-mode {
    cursor: not-allowed;
}

.sprotty .default-mode {
    cursor: default;
}

.sprotty .edge-modification-not-allowed-mode {
    cursor: no-drop;
}

.sprotty .edge-creation-select-source-mode {
    cursor: pointer;
}

.sprotty .edge-creation-select-target-mode,
.sprotty .edge-reconnect-select-target-mode {
    cursor: crosshair;
}

.sprotty .move-mode {
    cursor: move;
}

.sprotty .resize-nesw-mode {
    cursor: nesw-resize;
}

.sprotty .resize-nwse-mode {
    cursor: nwse-resize;
}

.sprotty .element-deletion-mode {
    cursor: pointer;
}

.sprotty .marquee-mode {
    cursor: crosshair;
}

.sprotty-node.marquee {
    fill: lightgray;
    opacity: 0.2;
}

.sprotty-edge > .sprotty-routing-handle {
    r: 5px;
    fill: #1d80d1;
    stroke: none;
    z-index: 1000;
}

.sprotty-edge > .sprotty-routing-handle[data-kind='line'] {
    opacity: 0.35;
}

.sprotty-edge > .sprotty-routing-handle.selected {
    fill: #1d80d1;
}

.sprotty-edge > .sprotty-routing-handle.mouseover {
    stroke: #1d80d1a1;
    stroke-width: 1;
}

.sprotty-missing {
    stroke-width: 1;
    stroke: #f00;
    fill: #f00;
    font-size: 14pt;
    text-anchor: middle;
}

.sprotty g .movement-not-allowed > .sprotty-node {
    stroke: var(--glsp-error-foreground) !important;
}

.sprotty-resize-handle.movement-not-allowed {
    stroke: var(--glsp-error-foreground) !important;
    fill: var(--glsp-error-foreground) !important;
}

.sprotty .error > .sprotty-node {
    filter: drop-shadow(0px 0px 2px var(--glsp-error-foreground)) !important;
}

.sprotty .warning > .sprotty-node {
    filter: drop-shadow(0px 0px 2px var(--glsp-warning-foreground)) !important;
}

.sprotty .info > .sprotty-node {
    filter: drop-shadow(0px 0px 2px var(--glsp-info-foreground)) !important;
}

.sprotty svg {
    border-style: solid;
    border-width: 1px;
    border-color: #bbb;
}

.sprotty text {
    stroke-width: 0;
    stroke: #000;
    fill: #000;
    font-family: sans-serif;
    font-size: 8pt;
    text-anchor: middle;
}

.glsp-projection {
    width: 40%;
    opacity: 1;
}

.sprotty-projection-bar.vertical.bordered-projection-bar {
    width: var(--theia-scrollbar-rail-width);
}

.sprotty-projection-bar.horizontal.bordered-projection-bar {
    height: var(--theia-scrollbar-rail-width);
}

.projection-scroll-bar {
    transition: opacity 0.8s linear;
}

.mouse-enter .projection-scroll-bar {
    opacity: 0.3;
    background: transparent;
    background-color: #aaa;
    z-index: 1;
}

.mouse-leave .projection-scroll-bar {
    opacity: 0;
    pointer-events: none;
    background: transparent;
    background-color: #aaa;
    z-index: 1;
}

.bordered-projection-bar {
    border-left: 1px solid rgba(212, 212, 212, 0.2);
    border-top: 1px solid rgba(212, 212, 212, 0.2);
    fill: transparent;
    width: var(--theia-scrollbar-rail-width);
}

.search-hidden {
    opacity: 0.2;
}

.search-highlighted .sprotty-node,
.search-highlighted .sprotty-edge {
    stroke-width: 1.5px;
    stroke-width: 2px;
    stroke-dashoffset: 5;
    stroke-dasharray: 5, 5;
    stroke-linecap: round;
    stroke: rgb(218, 89, 15) !important;
    stroke: #130bf7 !important;
}
`, "",{"version":3,"sources":["webpack://./../../node_modules/@eclipse-glsp/client/css/glsp-sprotty.css"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;iFAciF;;AAEjF;IACI,YAAY;IACZ,2DAA2D;AAC/D;;AAEA;IACI,gBAAgB;AACpB;;AAEA;IACI,cAAc;IACd,kBAAkB;IAClB,UAAU;IACV,WAAW;AACf;;AAEA;IACI,2DAA2D;IAC3D,kBAAkB;IAClB,iBAAiB;IACjB,kBAAkB;IAClB,iBAAiB;IACjB,gBAAgB;IAChB,gBAAgB;IAChB,UAAU;AACd;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,oCAAoC;IACpC,MAAM;IACN,aAAa;IACb,YAAY;IACZ,aAAa;AACjB;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,UAAU;IACV,mBAAmB;AACvB;;AAEA;IACI,mBAAmB;AACvB;;AAEA;IACI,mBAAmB;AACvB;;AAEA;IACI,iBAAiB;AACrB;;AAEA;;IAEI,YAAY;AAChB;;AAEA;;IAEI,eAAe;IACf,mBAAmB;IACnB,oBAAoB;IACpB,sBAAsB;IACtB,qBAAqB;AACzB;;AAEA;;IAEI,uBAAuB;IACvB,sBAAsB;AAC1B;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,mBAAmB;AACvB;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,eAAe;AACnB;;AAEA;;IAEI,iBAAiB;AACrB;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,mBAAmB;AACvB;;AAEA;IACI,mBAAmB;AACvB;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,iBAAiB;AACrB;;AAEA;IACI,eAAe;IACf,YAAY;AAChB;;AAEA;IACI,MAAM;IACN,aAAa;IACb,YAAY;IACZ,aAAa;AACjB;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,iBAAiB;IACjB,eAAe;AACnB;;AAEA;IACI,eAAe;IACf,YAAY;IACZ,UAAU;IACV,eAAe;IACf,mBAAmB;AACvB;;AAEA;IACI,+CAA+C;AACnD;;AAEA;IACI,+CAA+C;IAC/C,6CAA6C;AACjD;;AAEA;IACI,wEAAwE;AAC5E;;AAEA;IACI,0EAA0E;AAC9E;;AAEA;IACI,uEAAuE;AAC3E;;AAEA;IACI,mBAAmB;IACnB,iBAAiB;IACjB,kBAAkB;AACtB;;AAEA;IACI,eAAe;IACf,YAAY;IACZ,UAAU;IACV,uBAAuB;IACvB,cAAc;IACd,mBAAmB;AACvB;;AAEA;IACI,UAAU;IACV,UAAU;AACd;;AAEA;IACI,wCAAwC;AAC5C;;AAEA;IACI,yCAAyC;AAC7C;;AAEA;IACI,+BAA+B;AACnC;;AAEA;IACI,YAAY;IACZ,uBAAuB;IACvB,sBAAsB;IACtB,UAAU;AACd;;AAEA;IACI,UAAU;IACV,oBAAoB;IACpB,uBAAuB;IACvB,sBAAsB;IACtB,UAAU;AACd;;AAEA;IACI,+CAA+C;IAC/C,8CAA8C;IAC9C,iBAAiB;IACjB,wCAAwC;AAC5C;;AAEA;IACI,YAAY;AAChB;;AAEA;;IAEI,mBAAmB;IACnB,iBAAiB;IACjB,oBAAoB;IACpB,sBAAsB;IACtB,qBAAqB;IACrB,mCAAmC;IACnC,0BAA0B;AAC9B","sourcesContent":["/********************************************************************************\n * Copyright (c) 2019-2023 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\n.sprotty {\n    padding: 0px;\n    font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;\n}\n\n.sprotty svg text::selection {\n    background: none;\n}\n\n.sprotty-hidden {\n    display: block;\n    position: absolute;\n    width: 0px;\n    height: 0px;\n}\n\n.sprotty-popup {\n    font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;\n    position: absolute;\n    background: white;\n    border-radius: 5px;\n    border: 1px solid;\n    max-width: 400px;\n    min-width: 100px;\n    z-index: 1;\n}\n\n.sprotty-popup > div {\n    margin: 10px;\n}\n\n.sprotty-popup-closed {\n    display: none;\n}\n\n.sprotty-resize-handle {\n    /* radius does not work in Firefox */\n    r: 5px;\n    fill: #1d80d1;\n    stroke: none;\n    z-index: 1000;\n}\n\n.sprotty-resize-handle.selected {\n    fill: #1d80d1;\n}\n\n.sprotty-resize-handle.active {\n    fill: #1d80d1;\n}\n\n.sprotty-edge {\n    fill: none;\n    stroke-width: 1.5px;\n}\n\n.sprotty-edge.selected {\n    stroke-width: 1.5px;\n}\n\n.sprotty-edge.mouseover:not(.selected) path {\n    stroke-width: 1.5px;\n}\n\n.sprotty-node:not(.selected) {\n    stroke-width: 0px;\n}\n\n.sprotty-node.mouseover:not(.selected),\n.sprotty-edge.mouseover:not(.selected) {\n    opacity: 60%;\n}\n\n.sprotty-node.selected,\n.sprotty-edge.selected {\n    stroke: #1d80d1;\n    stroke-width: 1.5px;\n    stroke-dashoffset: 5;\n    stroke-dasharray: 5, 5;\n    stroke-linecap: round;\n}\n\n.sprotty-edge.mouseover:not(.selected) .arrow,\n.sprotty-edge.selected .arrow {\n    stroke-dashoffset: none;\n    stroke-dasharray: none;\n}\n\n.sprotty .node-creation-mode {\n    cursor: copy;\n}\n\n.sprotty .overlap-forbidden-mode {\n    cursor: not-allowed;\n}\n\n.sprotty .default-mode {\n    cursor: default;\n}\n\n.sprotty .edge-modification-not-allowed-mode {\n    cursor: no-drop;\n}\n\n.sprotty .edge-creation-select-source-mode {\n    cursor: pointer;\n}\n\n.sprotty .edge-creation-select-target-mode,\n.sprotty .edge-reconnect-select-target-mode {\n    cursor: crosshair;\n}\n\n.sprotty .move-mode {\n    cursor: move;\n}\n\n.sprotty .resize-nesw-mode {\n    cursor: nesw-resize;\n}\n\n.sprotty .resize-nwse-mode {\n    cursor: nwse-resize;\n}\n\n.sprotty .element-deletion-mode {\n    cursor: pointer;\n}\n\n.sprotty .marquee-mode {\n    cursor: crosshair;\n}\n\n.sprotty-node.marquee {\n    fill: lightgray;\n    opacity: 0.2;\n}\n\n.sprotty-edge > .sprotty-routing-handle {\n    r: 5px;\n    fill: #1d80d1;\n    stroke: none;\n    z-index: 1000;\n}\n\n.sprotty-edge > .sprotty-routing-handle[data-kind='line'] {\n    opacity: 0.35;\n}\n\n.sprotty-edge > .sprotty-routing-handle.selected {\n    fill: #1d80d1;\n}\n\n.sprotty-edge > .sprotty-routing-handle.mouseover {\n    stroke: #1d80d1a1;\n    stroke-width: 1;\n}\n\n.sprotty-missing {\n    stroke-width: 1;\n    stroke: #f00;\n    fill: #f00;\n    font-size: 14pt;\n    text-anchor: middle;\n}\n\n.sprotty g .movement-not-allowed > .sprotty-node {\n    stroke: var(--glsp-error-foreground) !important;\n}\n\n.sprotty-resize-handle.movement-not-allowed {\n    stroke: var(--glsp-error-foreground) !important;\n    fill: var(--glsp-error-foreground) !important;\n}\n\n.sprotty .error > .sprotty-node {\n    filter: drop-shadow(0px 0px 2px var(--glsp-error-foreground)) !important;\n}\n\n.sprotty .warning > .sprotty-node {\n    filter: drop-shadow(0px 0px 2px var(--glsp-warning-foreground)) !important;\n}\n\n.sprotty .info > .sprotty-node {\n    filter: drop-shadow(0px 0px 2px var(--glsp-info-foreground)) !important;\n}\n\n.sprotty svg {\n    border-style: solid;\n    border-width: 1px;\n    border-color: #bbb;\n}\n\n.sprotty text {\n    stroke-width: 0;\n    stroke: #000;\n    fill: #000;\n    font-family: sans-serif;\n    font-size: 8pt;\n    text-anchor: middle;\n}\n\n.glsp-projection {\n    width: 40%;\n    opacity: 1;\n}\n\n.sprotty-projection-bar.vertical.bordered-projection-bar {\n    width: var(--theia-scrollbar-rail-width);\n}\n\n.sprotty-projection-bar.horizontal.bordered-projection-bar {\n    height: var(--theia-scrollbar-rail-width);\n}\n\n.projection-scroll-bar {\n    transition: opacity 0.8s linear;\n}\n\n.mouse-enter .projection-scroll-bar {\n    opacity: 0.3;\n    background: transparent;\n    background-color: #aaa;\n    z-index: 1;\n}\n\n.mouse-leave .projection-scroll-bar {\n    opacity: 0;\n    pointer-events: none;\n    background: transparent;\n    background-color: #aaa;\n    z-index: 1;\n}\n\n.bordered-projection-bar {\n    border-left: 1px solid rgba(212, 212, 212, 0.2);\n    border-top: 1px solid rgba(212, 212, 212, 0.2);\n    fill: transparent;\n    width: var(--theia-scrollbar-rail-width);\n}\n\n.search-hidden {\n    opacity: 0.2;\n}\n\n.search-highlighted .sprotty-node,\n.search-highlighted .sprotty-edge {\n    stroke-width: 1.5px;\n    stroke-width: 2px;\n    stroke-dashoffset: 5;\n    stroke-dasharray: 5, 5;\n    stroke-linecap: round;\n    stroke: rgb(218, 89, 15) !important;\n    stroke: #130bf7 !important;\n}\n"],"sourceRoot":""}]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ "../../node_modules/css-loader/dist/cjs.js!../../node_modules/@eclipse-glsp/client/css/tool-palette.css":
/*!**************************************************************************************************************!*\
  !*** ../../node_modules/css-loader/dist/cjs.js!../../node_modules/@eclipse-glsp/client/css/tool-palette.css ***!
  \**************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../css-loader/dist/runtime/sourceMaps.js */ "../../node_modules/css-loader/dist/runtime/sourceMaps.js");
/* harmony import */ var _css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../css-loader/dist/runtime/api.js */ "../../node_modules/css-loader/dist/runtime/api.js");
/* harmony import */ var _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);
// Imports


var ___CSS_LOADER_EXPORT___ = _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));
// Module
___CSS_LOADER_EXPORT___.push([module.id, `/********************************************************************************
 * Copyright (c) 2019-2021 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/

/* Css for main container */
.tool-palette {
    position: absolute;
    right: 40px;
    top: 25px;
    text-align: center;
    width: 225px;
    display: block;
    z-index: 1000;
    border-style: solid;
    border-width: 0px;
    border-color: #bbb;
    border-radius: 5px;
    color: black;
    user-select: none;
    /* supported by Chrome and Opera */
    -webkit-user-select: none;
    /* Safari */
    -khtml-user-select: none;
    /* Konqueror HTML */
    -moz-user-select: none;
    /* Firefox */
    -ms-user-select: none;
    /* Internet Explorer/Edge */
}

/* Css for header compartment */

.palette-header {
    padding: 0.4em;
    text-align: left;
    background: #cccccc;
    border: 1px solid rgba(60, 60, 60, 0.6);
    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);
    display: flex;
    align-items: center;
    justify-content: space-between;
    flex-wrap: wrap;
}

.header-icon {
    display: flex;
    align-items: center;
}

.header-icon i {
    margin-right: 0.2em;
}

.header-tools {
    display: flex;
    align-items: center;
}

.header-tools i {
    border: 1px solid #cccccc;
    padding: 0.15em;
    margin-right: 0.15em;
}

.header-tools i:hover {
    background: #dfdfdf;
}

.header-tools .clicked {
    background: #bddaef;
    border: 1px solid rgba(60, 60, 60, 0.6);
}

/*Css for palette body compartment */

.palette-body {
    background: rgba(100, 100, 100, 0.2);
    border: 1px solid rgba(60, 60, 60, 0.6);
    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);
}

.tool-group {
    text-align: left;
    background: #ededee;
}

.group-header {
    background: #cccccc;
    display: flex;
    align-items: center;
}

.group-header:hover {
    background: #aaaaaa;
}

.group-header i {
    padding: 0.4em;
}

.tool-button {
    background: #ededee;
    padding: 0.4em;
    display: flex;
    align-items: center;
}

.tool-button i {
    margin-right: 0.4em;
}

.tool-button:hover {
    background: #dfdfdf;
}

.tool-button.clicked {
    background: #bddaef;
}

.tool-button.collapsed {
    display: none;
}

.collapsible-palette {
    overflow: auto;
    transition: max-height 0.2s ease-out;
}

.minimize-palette-button {
    position: absolute;
    right: 20px;
    top: 35px;
    z-index: 1000;
}

.search-input {
    background: #dfdfdf;
    color: black;
    border: #bddaef;
    padding-left: 3px;
    width: 100%;
    margin: 3px;
}
`, "",{"version":3,"sources":["webpack://./../../node_modules/@eclipse-glsp/client/css/tool-palette.css"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;iFAciF;;AAEjF,2BAA2B;AAC3B;IACI,kBAAkB;IAClB,WAAW;IACX,SAAS;IACT,kBAAkB;IAClB,YAAY;IACZ,cAAc;IACd,aAAa;IACb,mBAAmB;IACnB,iBAAiB;IACjB,kBAAkB;IAClB,kBAAkB;IAClB,YAAY;IACZ,iBAAiB;IACjB,kCAAkC;IAClC,yBAAyB;IACzB,WAAW;IACX,wBAAwB;IACxB,mBAAmB;IACnB,sBAAsB;IACtB,YAAY;IACZ,qBAAqB;IACrB,2BAA2B;AAC/B;;AAEA,+BAA+B;;AAE/B;IACI,cAAc;IACd,gBAAgB;IAChB,mBAAmB;IACnB,uCAAuC;IACvC,4EAA4E;IAC5E,aAAa;IACb,mBAAmB;IACnB,8BAA8B;IAC9B,eAAe;AACnB;;AAEA;IACI,aAAa;IACb,mBAAmB;AACvB;;AAEA;IACI,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,mBAAmB;AACvB;;AAEA;IACI,yBAAyB;IACzB,eAAe;IACf,oBAAoB;AACxB;;AAEA;IACI,mBAAmB;AACvB;;AAEA;IACI,mBAAmB;IACnB,uCAAuC;AAC3C;;AAEA,oCAAoC;;AAEpC;IACI,oCAAoC;IACpC,uCAAuC;IACvC,4EAA4E;AAChF;;AAEA;IACI,gBAAgB;IAChB,mBAAmB;AACvB;;AAEA;IACI,mBAAmB;IACnB,aAAa;IACb,mBAAmB;AACvB;;AAEA;IACI,mBAAmB;AACvB;;AAEA;IACI,cAAc;AAClB;;AAEA;IACI,mBAAmB;IACnB,cAAc;IACd,aAAa;IACb,mBAAmB;AACvB;;AAEA;IACI,mBAAmB;AACvB;;AAEA;IACI,mBAAmB;AACvB;;AAEA;IACI,mBAAmB;AACvB;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,cAAc;IACd,oCAAoC;AACxC;;AAEA;IACI,kBAAkB;IAClB,WAAW;IACX,SAAS;IACT,aAAa;AACjB;;AAEA;IACI,mBAAmB;IACnB,YAAY;IACZ,eAAe;IACf,iBAAiB;IACjB,WAAW;IACX,WAAW;AACf","sourcesContent":["/********************************************************************************\n * Copyright (c) 2019-2021 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\n/* Css for main container */\n.tool-palette {\n    position: absolute;\n    right: 40px;\n    top: 25px;\n    text-align: center;\n    width: 225px;\n    display: block;\n    z-index: 1000;\n    border-style: solid;\n    border-width: 0px;\n    border-color: #bbb;\n    border-radius: 5px;\n    color: black;\n    user-select: none;\n    /* supported by Chrome and Opera */\n    -webkit-user-select: none;\n    /* Safari */\n    -khtml-user-select: none;\n    /* Konqueror HTML */\n    -moz-user-select: none;\n    /* Firefox */\n    -ms-user-select: none;\n    /* Internet Explorer/Edge */\n}\n\n/* Css for header compartment */\n\n.palette-header {\n    padding: 0.4em;\n    text-align: left;\n    background: #cccccc;\n    border: 1px solid rgba(60, 60, 60, 0.6);\n    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    flex-wrap: wrap;\n}\n\n.header-icon {\n    display: flex;\n    align-items: center;\n}\n\n.header-icon i {\n    margin-right: 0.2em;\n}\n\n.header-tools {\n    display: flex;\n    align-items: center;\n}\n\n.header-tools i {\n    border: 1px solid #cccccc;\n    padding: 0.15em;\n    margin-right: 0.15em;\n}\n\n.header-tools i:hover {\n    background: #dfdfdf;\n}\n\n.header-tools .clicked {\n    background: #bddaef;\n    border: 1px solid rgba(60, 60, 60, 0.6);\n}\n\n/*Css for palette body compartment */\n\n.palette-body {\n    background: rgba(100, 100, 100, 0.2);\n    border: 1px solid rgba(60, 60, 60, 0.6);\n    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\n}\n\n.tool-group {\n    text-align: left;\n    background: #ededee;\n}\n\n.group-header {\n    background: #cccccc;\n    display: flex;\n    align-items: center;\n}\n\n.group-header:hover {\n    background: #aaaaaa;\n}\n\n.group-header i {\n    padding: 0.4em;\n}\n\n.tool-button {\n    background: #ededee;\n    padding: 0.4em;\n    display: flex;\n    align-items: center;\n}\n\n.tool-button i {\n    margin-right: 0.4em;\n}\n\n.tool-button:hover {\n    background: #dfdfdf;\n}\n\n.tool-button.clicked {\n    background: #bddaef;\n}\n\n.tool-button.collapsed {\n    display: none;\n}\n\n.collapsible-palette {\n    overflow: auto;\n    transition: max-height 0.2s ease-out;\n}\n\n.minimize-palette-button {\n    position: absolute;\n    right: 20px;\n    top: 35px;\n    z-index: 1000;\n}\n\n.search-input {\n    background: #dfdfdf;\n    color: black;\n    border: #bddaef;\n    padding-left: 3px;\n    width: 100%;\n    margin: 3px;\n}\n"],"sourceRoot":""}]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ "../../node_modules/css-loader/dist/cjs.js!../../node_modules/@vscode/codicons/dist/codicon.css":
/*!******************************************************************************************************!*\
  !*** ../../node_modules/css-loader/dist/cjs.js!../../node_modules/@vscode/codicons/dist/codicon.css ***!
  \******************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../css-loader/dist/runtime/sourceMaps.js */ "../../node_modules/css-loader/dist/runtime/sourceMaps.js");
/* harmony import */ var _css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../css-loader/dist/runtime/api.js */ "../../node_modules/css-loader/dist/runtime/api.js");
/* harmony import */ var _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../css-loader/dist/runtime/getUrl.js */ "../../node_modules/css-loader/dist/runtime/getUrl.js");
/* harmony import */ var _css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2__);
// Imports



var ___CSS_LOADER_URL_IMPORT_0___ = new URL(/* asset import */ __webpack_require__(/*! ./codicon.ttf?7cea6a135a6c0359d1f6d18e6b2c5c42 */ "../../node_modules/@vscode/codicons/dist/codicon.ttf?7cea6a135a6c0359d1f6d18e6b2c5c42"), __webpack_require__.b);
var ___CSS_LOADER_EXPORT___ = _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));
var ___CSS_LOADER_URL_REPLACEMENT_0___ = _css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_0___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, `/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/

@font-face {
	font-family: "codicon";
	src: url(${___CSS_LOADER_URL_REPLACEMENT_0___}) format("truetype");
}

.codicon[class*='codicon-'] {
	font: normal normal normal 16px/1 codicon;
	display: block;
	text-decoration: none;
	text-rendering: auto;
	text-align: center;
	-webkit-font-smoothing: antialiased;
	-moz-osx-font-smoothing: grayscale;
	user-select: none;
	-webkit-user-select: none;
	-ms-user-select: none;
}


.codicon-add:before { content: "\\ea60" }
.codicon-plus:before { content: "\\ea60" }
.codicon-gist-new:before { content: "\\ea60" }
.codicon-repo-create:before { content: "\\ea60" }
.codicon-lightbulb:before { content: "\\ea61" }
.codicon-light-bulb:before { content: "\\ea61" }
.codicon-repo:before { content: "\\ea62" }
.codicon-repo-delete:before { content: "\\ea62" }
.codicon-gist-fork:before { content: "\\ea63" }
.codicon-repo-forked:before { content: "\\ea63" }
.codicon-git-pull-request:before { content: "\\ea64" }
.codicon-git-pull-request-abandoned:before { content: "\\ea64" }
.codicon-record-keys:before { content: "\\ea65" }
.codicon-keyboard:before { content: "\\ea65" }
.codicon-tag:before { content: "\\ea66" }
.codicon-tag-add:before { content: "\\ea66" }
.codicon-tag-remove:before { content: "\\ea66" }
.codicon-person:before { content: "\\ea67" }
.codicon-person-follow:before { content: "\\ea67" }
.codicon-person-outline:before { content: "\\ea67" }
.codicon-person-filled:before { content: "\\ea67" }
.codicon-git-branch:before { content: "\\ea68" }
.codicon-git-branch-create:before { content: "\\ea68" }
.codicon-git-branch-delete:before { content: "\\ea68" }
.codicon-source-control:before { content: "\\ea68" }
.codicon-mirror:before { content: "\\ea69" }
.codicon-mirror-public:before { content: "\\ea69" }
.codicon-star:before { content: "\\ea6a" }
.codicon-star-add:before { content: "\\ea6a" }
.codicon-star-delete:before { content: "\\ea6a" }
.codicon-star-empty:before { content: "\\ea6a" }
.codicon-comment:before { content: "\\ea6b" }
.codicon-comment-add:before { content: "\\ea6b" }
.codicon-alert:before { content: "\\ea6c" }
.codicon-warning:before { content: "\\ea6c" }
.codicon-search:before { content: "\\ea6d" }
.codicon-search-save:before { content: "\\ea6d" }
.codicon-log-out:before { content: "\\ea6e" }
.codicon-sign-out:before { content: "\\ea6e" }
.codicon-log-in:before { content: "\\ea6f" }
.codicon-sign-in:before { content: "\\ea6f" }
.codicon-eye:before { content: "\\ea70" }
.codicon-eye-unwatch:before { content: "\\ea70" }
.codicon-eye-watch:before { content: "\\ea70" }
.codicon-circle-filled:before { content: "\\ea71" }
.codicon-primitive-dot:before { content: "\\ea71" }
.codicon-close-dirty:before { content: "\\ea71" }
.codicon-debug-breakpoint:before { content: "\\ea71" }
.codicon-debug-breakpoint-disabled:before { content: "\\ea71" }
.codicon-debug-hint:before { content: "\\ea71" }
.codicon-primitive-square:before { content: "\\ea72" }
.codicon-edit:before { content: "\\ea73" }
.codicon-pencil:before { content: "\\ea73" }
.codicon-info:before { content: "\\ea74" }
.codicon-issue-opened:before { content: "\\ea74" }
.codicon-gist-private:before { content: "\\ea75" }
.codicon-git-fork-private:before { content: "\\ea75" }
.codicon-lock:before { content: "\\ea75" }
.codicon-mirror-private:before { content: "\\ea75" }
.codicon-close:before { content: "\\ea76" }
.codicon-remove-close:before { content: "\\ea76" }
.codicon-x:before { content: "\\ea76" }
.codicon-repo-sync:before { content: "\\ea77" }
.codicon-sync:before { content: "\\ea77" }
.codicon-clone:before { content: "\\ea78" }
.codicon-desktop-download:before { content: "\\ea78" }
.codicon-beaker:before { content: "\\ea79" }
.codicon-microscope:before { content: "\\ea79" }
.codicon-vm:before { content: "\\ea7a" }
.codicon-device-desktop:before { content: "\\ea7a" }
.codicon-file:before { content: "\\ea7b" }
.codicon-file-text:before { content: "\\ea7b" }
.codicon-more:before { content: "\\ea7c" }
.codicon-ellipsis:before { content: "\\ea7c" }
.codicon-kebab-horizontal:before { content: "\\ea7c" }
.codicon-mail-reply:before { content: "\\ea7d" }
.codicon-reply:before { content: "\\ea7d" }
.codicon-organization:before { content: "\\ea7e" }
.codicon-organization-filled:before { content: "\\ea7e" }
.codicon-organization-outline:before { content: "\\ea7e" }
.codicon-new-file:before { content: "\\ea7f" }
.codicon-file-add:before { content: "\\ea7f" }
.codicon-new-folder:before { content: "\\ea80" }
.codicon-file-directory-create:before { content: "\\ea80" }
.codicon-trash:before { content: "\\ea81" }
.codicon-trashcan:before { content: "\\ea81" }
.codicon-history:before { content: "\\ea82" }
.codicon-clock:before { content: "\\ea82" }
.codicon-folder:before { content: "\\ea83" }
.codicon-file-directory:before { content: "\\ea83" }
.codicon-symbol-folder:before { content: "\\ea83" }
.codicon-logo-github:before { content: "\\ea84" }
.codicon-mark-github:before { content: "\\ea84" }
.codicon-github:before { content: "\\ea84" }
.codicon-terminal:before { content: "\\ea85" }
.codicon-console:before { content: "\\ea85" }
.codicon-repl:before { content: "\\ea85" }
.codicon-zap:before { content: "\\ea86" }
.codicon-symbol-event:before { content: "\\ea86" }
.codicon-error:before { content: "\\ea87" }
.codicon-stop:before { content: "\\ea87" }
.codicon-variable:before { content: "\\ea88" }
.codicon-symbol-variable:before { content: "\\ea88" }
.codicon-array:before { content: "\\ea8a" }
.codicon-symbol-array:before { content: "\\ea8a" }
.codicon-symbol-module:before { content: "\\ea8b" }
.codicon-symbol-package:before { content: "\\ea8b" }
.codicon-symbol-namespace:before { content: "\\ea8b" }
.codicon-symbol-object:before { content: "\\ea8b" }
.codicon-symbol-method:before { content: "\\ea8c" }
.codicon-symbol-function:before { content: "\\ea8c" }
.codicon-symbol-constructor:before { content: "\\ea8c" }
.codicon-symbol-boolean:before { content: "\\ea8f" }
.codicon-symbol-null:before { content: "\\ea8f" }
.codicon-symbol-numeric:before { content: "\\ea90" }
.codicon-symbol-number:before { content: "\\ea90" }
.codicon-symbol-structure:before { content: "\\ea91" }
.codicon-symbol-struct:before { content: "\\ea91" }
.codicon-symbol-parameter:before { content: "\\ea92" }
.codicon-symbol-type-parameter:before { content: "\\ea92" }
.codicon-symbol-key:before { content: "\\ea93" }
.codicon-symbol-text:before { content: "\\ea93" }
.codicon-symbol-reference:before { content: "\\ea94" }
.codicon-go-to-file:before { content: "\\ea94" }
.codicon-symbol-enum:before { content: "\\ea95" }
.codicon-symbol-value:before { content: "\\ea95" }
.codicon-symbol-ruler:before { content: "\\ea96" }
.codicon-symbol-unit:before { content: "\\ea96" }
.codicon-activate-breakpoints:before { content: "\\ea97" }
.codicon-archive:before { content: "\\ea98" }
.codicon-arrow-both:before { content: "\\ea99" }
.codicon-arrow-down:before { content: "\\ea9a" }
.codicon-arrow-left:before { content: "\\ea9b" }
.codicon-arrow-right:before { content: "\\ea9c" }
.codicon-arrow-small-down:before { content: "\\ea9d" }
.codicon-arrow-small-left:before { content: "\\ea9e" }
.codicon-arrow-small-right:before { content: "\\ea9f" }
.codicon-arrow-small-up:before { content: "\\eaa0" }
.codicon-arrow-up:before { content: "\\eaa1" }
.codicon-bell:before { content: "\\eaa2" }
.codicon-bold:before { content: "\\eaa3" }
.codicon-book:before { content: "\\eaa4" }
.codicon-bookmark:before { content: "\\eaa5" }
.codicon-debug-breakpoint-conditional-unverified:before { content: "\\eaa6" }
.codicon-debug-breakpoint-conditional:before { content: "\\eaa7" }
.codicon-debug-breakpoint-conditional-disabled:before { content: "\\eaa7" }
.codicon-debug-breakpoint-data-unverified:before { content: "\\eaa8" }
.codicon-debug-breakpoint-data:before { content: "\\eaa9" }
.codicon-debug-breakpoint-data-disabled:before { content: "\\eaa9" }
.codicon-debug-breakpoint-log-unverified:before { content: "\\eaaa" }
.codicon-debug-breakpoint-log:before { content: "\\eaab" }
.codicon-debug-breakpoint-log-disabled:before { content: "\\eaab" }
.codicon-briefcase:before { content: "\\eaac" }
.codicon-broadcast:before { content: "\\eaad" }
.codicon-browser:before { content: "\\eaae" }
.codicon-bug:before { content: "\\eaaf" }
.codicon-calendar:before { content: "\\eab0" }
.codicon-case-sensitive:before { content: "\\eab1" }
.codicon-check:before { content: "\\eab2" }
.codicon-checklist:before { content: "\\eab3" }
.codicon-chevron-down:before { content: "\\eab4" }
.codicon-chevron-left:before { content: "\\eab5" }
.codicon-chevron-right:before { content: "\\eab6" }
.codicon-chevron-up:before { content: "\\eab7" }
.codicon-chrome-close:before { content: "\\eab8" }
.codicon-chrome-maximize:before { content: "\\eab9" }
.codicon-chrome-minimize:before { content: "\\eaba" }
.codicon-chrome-restore:before { content: "\\eabb" }
.codicon-circle-outline:before { content: "\\eabc" }
.codicon-debug-breakpoint-unverified:before { content: "\\eabc" }
.codicon-circle-slash:before { content: "\\eabd" }
.codicon-circuit-board:before { content: "\\eabe" }
.codicon-clear-all:before { content: "\\eabf" }
.codicon-clippy:before { content: "\\eac0" }
.codicon-close-all:before { content: "\\eac1" }
.codicon-cloud-download:before { content: "\\eac2" }
.codicon-cloud-upload:before { content: "\\eac3" }
.codicon-code:before { content: "\\eac4" }
.codicon-collapse-all:before { content: "\\eac5" }
.codicon-color-mode:before { content: "\\eac6" }
.codicon-comment-discussion:before { content: "\\eac7" }
.codicon-credit-card:before { content: "\\eac9" }
.codicon-dash:before { content: "\\eacc" }
.codicon-dashboard:before { content: "\\eacd" }
.codicon-database:before { content: "\\eace" }
.codicon-debug-continue:before { content: "\\eacf" }
.codicon-debug-disconnect:before { content: "\\ead0" }
.codicon-debug-pause:before { content: "\\ead1" }
.codicon-debug-restart:before { content: "\\ead2" }
.codicon-debug-start:before { content: "\\ead3" }
.codicon-debug-step-into:before { content: "\\ead4" }
.codicon-debug-step-out:before { content: "\\ead5" }
.codicon-debug-step-over:before { content: "\\ead6" }
.codicon-debug-stop:before { content: "\\ead7" }
.codicon-debug:before { content: "\\ead8" }
.codicon-device-camera-video:before { content: "\\ead9" }
.codicon-device-camera:before { content: "\\eada" }
.codicon-device-mobile:before { content: "\\eadb" }
.codicon-diff-added:before { content: "\\eadc" }
.codicon-diff-ignored:before { content: "\\eadd" }
.codicon-diff-modified:before { content: "\\eade" }
.codicon-diff-removed:before { content: "\\eadf" }
.codicon-diff-renamed:before { content: "\\eae0" }
.codicon-diff:before { content: "\\eae1" }
.codicon-discard:before { content: "\\eae2" }
.codicon-editor-layout:before { content: "\\eae3" }
.codicon-empty-window:before { content: "\\eae4" }
.codicon-exclude:before { content: "\\eae5" }
.codicon-extensions:before { content: "\\eae6" }
.codicon-eye-closed:before { content: "\\eae7" }
.codicon-file-binary:before { content: "\\eae8" }
.codicon-file-code:before { content: "\\eae9" }
.codicon-file-media:before { content: "\\eaea" }
.codicon-file-pdf:before { content: "\\eaeb" }
.codicon-file-submodule:before { content: "\\eaec" }
.codicon-file-symlink-directory:before { content: "\\eaed" }
.codicon-file-symlink-file:before { content: "\\eaee" }
.codicon-file-zip:before { content: "\\eaef" }
.codicon-files:before { content: "\\eaf0" }
.codicon-filter:before { content: "\\eaf1" }
.codicon-flame:before { content: "\\eaf2" }
.codicon-fold-down:before { content: "\\eaf3" }
.codicon-fold-up:before { content: "\\eaf4" }
.codicon-fold:before { content: "\\eaf5" }
.codicon-folder-active:before { content: "\\eaf6" }
.codicon-folder-opened:before { content: "\\eaf7" }
.codicon-gear:before { content: "\\eaf8" }
.codicon-gift:before { content: "\\eaf9" }
.codicon-gist-secret:before { content: "\\eafa" }
.codicon-gist:before { content: "\\eafb" }
.codicon-git-commit:before { content: "\\eafc" }
.codicon-git-compare:before { content: "\\eafd" }
.codicon-compare-changes:before { content: "\\eafd" }
.codicon-git-merge:before { content: "\\eafe" }
.codicon-github-action:before { content: "\\eaff" }
.codicon-github-alt:before { content: "\\eb00" }
.codicon-globe:before { content: "\\eb01" }
.codicon-grabber:before { content: "\\eb02" }
.codicon-graph:before { content: "\\eb03" }
.codicon-gripper:before { content: "\\eb04" }
.codicon-heart:before { content: "\\eb05" }
.codicon-home:before { content: "\\eb06" }
.codicon-horizontal-rule:before { content: "\\eb07" }
.codicon-hubot:before { content: "\\eb08" }
.codicon-inbox:before { content: "\\eb09" }
.codicon-issue-reopened:before { content: "\\eb0b" }
.codicon-issues:before { content: "\\eb0c" }
.codicon-italic:before { content: "\\eb0d" }
.codicon-jersey:before { content: "\\eb0e" }
.codicon-json:before { content: "\\eb0f" }
.codicon-kebab-vertical:before { content: "\\eb10" }
.codicon-key:before { content: "\\eb11" }
.codicon-law:before { content: "\\eb12" }
.codicon-lightbulb-autofix:before { content: "\\eb13" }
.codicon-link-external:before { content: "\\eb14" }
.codicon-link:before { content: "\\eb15" }
.codicon-list-ordered:before { content: "\\eb16" }
.codicon-list-unordered:before { content: "\\eb17" }
.codicon-live-share:before { content: "\\eb18" }
.codicon-loading:before { content: "\\eb19" }
.codicon-location:before { content: "\\eb1a" }
.codicon-mail-read:before { content: "\\eb1b" }
.codicon-mail:before { content: "\\eb1c" }
.codicon-markdown:before { content: "\\eb1d" }
.codicon-megaphone:before { content: "\\eb1e" }
.codicon-mention:before { content: "\\eb1f" }
.codicon-milestone:before { content: "\\eb20" }
.codicon-mortar-board:before { content: "\\eb21" }
.codicon-move:before { content: "\\eb22" }
.codicon-multiple-windows:before { content: "\\eb23" }
.codicon-mute:before { content: "\\eb24" }
.codicon-no-newline:before { content: "\\eb25" }
.codicon-note:before { content: "\\eb26" }
.codicon-octoface:before { content: "\\eb27" }
.codicon-open-preview:before { content: "\\eb28" }
.codicon-package:before { content: "\\eb29" }
.codicon-paintcan:before { content: "\\eb2a" }
.codicon-pin:before { content: "\\eb2b" }
.codicon-play:before { content: "\\eb2c" }
.codicon-run:before { content: "\\eb2c" }
.codicon-plug:before { content: "\\eb2d" }
.codicon-preserve-case:before { content: "\\eb2e" }
.codicon-preview:before { content: "\\eb2f" }
.codicon-project:before { content: "\\eb30" }
.codicon-pulse:before { content: "\\eb31" }
.codicon-question:before { content: "\\eb32" }
.codicon-quote:before { content: "\\eb33" }
.codicon-radio-tower:before { content: "\\eb34" }
.codicon-reactions:before { content: "\\eb35" }
.codicon-references:before { content: "\\eb36" }
.codicon-refresh:before { content: "\\eb37" }
.codicon-regex:before { content: "\\eb38" }
.codicon-remote-explorer:before { content: "\\eb39" }
.codicon-remote:before { content: "\\eb3a" }
.codicon-remove:before { content: "\\eb3b" }
.codicon-replace-all:before { content: "\\eb3c" }
.codicon-replace:before { content: "\\eb3d" }
.codicon-repo-clone:before { content: "\\eb3e" }
.codicon-repo-force-push:before { content: "\\eb3f" }
.codicon-repo-pull:before { content: "\\eb40" }
.codicon-repo-push:before { content: "\\eb41" }
.codicon-report:before { content: "\\eb42" }
.codicon-request-changes:before { content: "\\eb43" }
.codicon-rocket:before { content: "\\eb44" }
.codicon-root-folder-opened:before { content: "\\eb45" }
.codicon-root-folder:before { content: "\\eb46" }
.codicon-rss:before { content: "\\eb47" }
.codicon-ruby:before { content: "\\eb48" }
.codicon-save-all:before { content: "\\eb49" }
.codicon-save-as:before { content: "\\eb4a" }
.codicon-save:before { content: "\\eb4b" }
.codicon-screen-full:before { content: "\\eb4c" }
.codicon-screen-normal:before { content: "\\eb4d" }
.codicon-search-stop:before { content: "\\eb4e" }
.codicon-server:before { content: "\\eb50" }
.codicon-settings-gear:before { content: "\\eb51" }
.codicon-settings:before { content: "\\eb52" }
.codicon-shield:before { content: "\\eb53" }
.codicon-smiley:before { content: "\\eb54" }
.codicon-sort-precedence:before { content: "\\eb55" }
.codicon-split-horizontal:before { content: "\\eb56" }
.codicon-split-vertical:before { content: "\\eb57" }
.codicon-squirrel:before { content: "\\eb58" }
.codicon-star-full:before { content: "\\eb59" }
.codicon-star-half:before { content: "\\eb5a" }
.codicon-symbol-class:before { content: "\\eb5b" }
.codicon-symbol-color:before { content: "\\eb5c" }
.codicon-symbol-constant:before { content: "\\eb5d" }
.codicon-symbol-enum-member:before { content: "\\eb5e" }
.codicon-symbol-field:before { content: "\\eb5f" }
.codicon-symbol-file:before { content: "\\eb60" }
.codicon-symbol-interface:before { content: "\\eb61" }
.codicon-symbol-keyword:before { content: "\\eb62" }
.codicon-symbol-misc:before { content: "\\eb63" }
.codicon-symbol-operator:before { content: "\\eb64" }
.codicon-symbol-property:before { content: "\\eb65" }
.codicon-wrench:before { content: "\\eb65" }
.codicon-wrench-subaction:before { content: "\\eb65" }
.codicon-symbol-snippet:before { content: "\\eb66" }
.codicon-tasklist:before { content: "\\eb67" }
.codicon-telescope:before { content: "\\eb68" }
.codicon-text-size:before { content: "\\eb69" }
.codicon-three-bars:before { content: "\\eb6a" }
.codicon-thumbsdown:before { content: "\\eb6b" }
.codicon-thumbsup:before { content: "\\eb6c" }
.codicon-tools:before { content: "\\eb6d" }
.codicon-triangle-down:before { content: "\\eb6e" }
.codicon-triangle-left:before { content: "\\eb6f" }
.codicon-triangle-right:before { content: "\\eb70" }
.codicon-triangle-up:before { content: "\\eb71" }
.codicon-twitter:before { content: "\\eb72" }
.codicon-unfold:before { content: "\\eb73" }
.codicon-unlock:before { content: "\\eb74" }
.codicon-unmute:before { content: "\\eb75" }
.codicon-unverified:before { content: "\\eb76" }
.codicon-verified:before { content: "\\eb77" }
.codicon-versions:before { content: "\\eb78" }
.codicon-vm-active:before { content: "\\eb79" }
.codicon-vm-outline:before { content: "\\eb7a" }
.codicon-vm-running:before { content: "\\eb7b" }
.codicon-watch:before { content: "\\eb7c" }
.codicon-whitespace:before { content: "\\eb7d" }
.codicon-whole-word:before { content: "\\eb7e" }
.codicon-window:before { content: "\\eb7f" }
.codicon-word-wrap:before { content: "\\eb80" }
.codicon-zoom-in:before { content: "\\eb81" }
.codicon-zoom-out:before { content: "\\eb82" }
.codicon-list-filter:before { content: "\\eb83" }
.codicon-list-flat:before { content: "\\eb84" }
.codicon-list-selection:before { content: "\\eb85" }
.codicon-selection:before { content: "\\eb85" }
.codicon-list-tree:before { content: "\\eb86" }
.codicon-debug-breakpoint-function-unverified:before { content: "\\eb87" }
.codicon-debug-breakpoint-function:before { content: "\\eb88" }
.codicon-debug-breakpoint-function-disabled:before { content: "\\eb88" }
.codicon-debug-stackframe-active:before { content: "\\eb89" }
.codicon-debug-stackframe-dot:before { content: "\\eb8a" }
.codicon-debug-stackframe:before { content: "\\eb8b" }
.codicon-debug-stackframe-focused:before { content: "\\eb8b" }
.codicon-debug-breakpoint-unsupported:before { content: "\\eb8c" }
.codicon-symbol-string:before { content: "\\eb8d" }
.codicon-debug-reverse-continue:before { content: "\\eb8e" }
.codicon-debug-step-back:before { content: "\\eb8f" }
.codicon-debug-restart-frame:before { content: "\\eb90" }
.codicon-debug-alt:before { content: "\\eb91" }
.codicon-call-incoming:before { content: "\\eb92" }
.codicon-call-outgoing:before { content: "\\eb93" }
.codicon-menu:before { content: "\\eb94" }
.codicon-expand-all:before { content: "\\eb95" }
.codicon-feedback:before { content: "\\eb96" }
.codicon-group-by-ref-type:before { content: "\\eb97" }
.codicon-ungroup-by-ref-type:before { content: "\\eb98" }
.codicon-account:before { content: "\\eb99" }
.codicon-bell-dot:before { content: "\\eb9a" }
.codicon-debug-console:before { content: "\\eb9b" }
.codicon-library:before { content: "\\eb9c" }
.codicon-output:before { content: "\\eb9d" }
.codicon-run-all:before { content: "\\eb9e" }
.codicon-sync-ignored:before { content: "\\eb9f" }
.codicon-pinned:before { content: "\\eba0" }
.codicon-github-inverted:before { content: "\\eba1" }
.codicon-server-process:before { content: "\\eba2" }
.codicon-server-environment:before { content: "\\eba3" }
.codicon-pass:before { content: "\\eba4" }
.codicon-issue-closed:before { content: "\\eba4" }
.codicon-stop-circle:before { content: "\\eba5" }
.codicon-play-circle:before { content: "\\eba6" }
.codicon-record:before { content: "\\eba7" }
.codicon-debug-alt-small:before { content: "\\eba8" }
.codicon-vm-connect:before { content: "\\eba9" }
.codicon-cloud:before { content: "\\ebaa" }
.codicon-merge:before { content: "\\ebab" }
.codicon-export:before { content: "\\ebac" }
.codicon-graph-left:before { content: "\\ebad" }
.codicon-magnet:before { content: "\\ebae" }
.codicon-notebook:before { content: "\\ebaf" }
.codicon-redo:before { content: "\\ebb0" }
.codicon-check-all:before { content: "\\ebb1" }
.codicon-pinned-dirty:before { content: "\\ebb2" }
.codicon-pass-filled:before { content: "\\ebb3" }
.codicon-circle-large-filled:before { content: "\\ebb4" }
.codicon-circle-large-outline:before { content: "\\ebb5" }
.codicon-combine:before { content: "\\ebb6" }
.codicon-gather:before { content: "\\ebb6" }
.codicon-table:before { content: "\\ebb7" }
.codicon-variable-group:before { content: "\\ebb8" }
.codicon-type-hierarchy:before { content: "\\ebb9" }
.codicon-type-hierarchy-sub:before { content: "\\ebba" }
.codicon-type-hierarchy-super:before { content: "\\ebbb" }
.codicon-git-pull-request-create:before { content: "\\ebbc" }
.codicon-run-above:before { content: "\\ebbd" }
.codicon-run-below:before { content: "\\ebbe" }
.codicon-notebook-template:before { content: "\\ebbf" }
.codicon-debug-rerun:before { content: "\\ebc0" }
.codicon-workspace-trusted:before { content: "\\ebc1" }
.codicon-workspace-untrusted:before { content: "\\ebc2" }
.codicon-workspace-unknown:before { content: "\\ebc3" }
.codicon-terminal-cmd:before { content: "\\ebc4" }
.codicon-terminal-debian:before { content: "\\ebc5" }
.codicon-terminal-linux:before { content: "\\ebc6" }
.codicon-terminal-powershell:before { content: "\\ebc7" }
.codicon-terminal-tmux:before { content: "\\ebc8" }
.codicon-terminal-ubuntu:before { content: "\\ebc9" }
.codicon-terminal-bash:before { content: "\\ebca" }
.codicon-arrow-swap:before { content: "\\ebcb" }
.codicon-copy:before { content: "\\ebcc" }
.codicon-person-add:before { content: "\\ebcd" }
.codicon-filter-filled:before { content: "\\ebce" }
.codicon-wand:before { content: "\\ebcf" }
.codicon-debug-line-by-line:before { content: "\\ebd0" }
.codicon-inspect:before { content: "\\ebd1" }
.codicon-layers:before { content: "\\ebd2" }
.codicon-layers-dot:before { content: "\\ebd3" }
.codicon-layers-active:before { content: "\\ebd4" }
.codicon-compass:before { content: "\\ebd5" }
.codicon-compass-dot:before { content: "\\ebd6" }
.codicon-compass-active:before { content: "\\ebd7" }
.codicon-azure:before { content: "\\ebd8" }
.codicon-issue-draft:before { content: "\\ebd9" }
.codicon-git-pull-request-closed:before { content: "\\ebda" }
.codicon-git-pull-request-draft:before { content: "\\ebdb" }
.codicon-debug-all:before { content: "\\ebdc" }
.codicon-debug-coverage:before { content: "\\ebdd" }
.codicon-run-errors:before { content: "\\ebde" }
.codicon-folder-library:before { content: "\\ebdf" }
.codicon-debug-continue-small:before { content: "\\ebe0" }
.codicon-beaker-stop:before { content: "\\ebe1" }
.codicon-graph-line:before { content: "\\ebe2" }
.codicon-graph-scatter:before { content: "\\ebe3" }
.codicon-pie-chart:before { content: "\\ebe4" }
.codicon-bracket:before { content: "\\eb0f" }
.codicon-bracket-dot:before { content: "\\ebe5" }
.codicon-bracket-error:before { content: "\\ebe6" }
`, "",{"version":3,"sources":["webpack://./../../node_modules/@vscode/codicons/dist/codicon.css"],"names":[],"mappings":"AAAA;;;+FAG+F;;AAE/F;CACC,sBAAsB;CACtB,+DAA6E;AAC9E;;AAEA;CACC,yCAAyC;CACzC,cAAc;CACd,qBAAqB;CACrB,oBAAoB;CACpB,kBAAkB;CAClB,mCAAmC;CACnC,kCAAkC;CAClC,iBAAiB;CACjB,yBAAyB;CACzB,qBAAqB;AACtB;;;AAGA,sBAAsB,iBAAiB;AACvC,uBAAuB,iBAAiB;AACxC,2BAA2B,iBAAiB;AAC5C,8BAA8B,iBAAiB;AAC/C,4BAA4B,iBAAiB;AAC7C,6BAA6B,iBAAiB;AAC9C,uBAAuB,iBAAiB;AACxC,8BAA8B,iBAAiB;AAC/C,4BAA4B,iBAAiB;AAC7C,8BAA8B,iBAAiB;AAC/C,mCAAmC,iBAAiB;AACpD,6CAA6C,iBAAiB;AAC9D,8BAA8B,iBAAiB;AAC/C,2BAA2B,iBAAiB;AAC5C,sBAAsB,iBAAiB;AACvC,0BAA0B,iBAAiB;AAC3C,6BAA6B,iBAAiB;AAC9C,yBAAyB,iBAAiB;AAC1C,gCAAgC,iBAAiB;AACjD,iCAAiC,iBAAiB;AAClD,gCAAgC,iBAAiB;AACjD,6BAA6B,iBAAiB;AAC9C,oCAAoC,iBAAiB;AACrD,oCAAoC,iBAAiB;AACrD,iCAAiC,iBAAiB;AAClD,yBAAyB,iBAAiB;AAC1C,gCAAgC,iBAAiB;AACjD,uBAAuB,iBAAiB;AACxC,2BAA2B,iBAAiB;AAC5C,8BAA8B,iBAAiB;AAC/C,6BAA6B,iBAAiB;AAC9C,0BAA0B,iBAAiB;AAC3C,8BAA8B,iBAAiB;AAC/C,wBAAwB,iBAAiB;AACzC,0BAA0B,iBAAiB;AAC3C,yBAAyB,iBAAiB;AAC1C,8BAA8B,iBAAiB;AAC/C,0BAA0B,iBAAiB;AAC3C,2BAA2B,iBAAiB;AAC5C,yBAAyB,iBAAiB;AAC1C,0BAA0B,iBAAiB;AAC3C,sBAAsB,iBAAiB;AACvC,8BAA8B,iBAAiB;AAC/C,4BAA4B,iBAAiB;AAC7C,gCAAgC,iBAAiB;AACjD,gCAAgC,iBAAiB;AACjD,8BAA8B,iBAAiB;AAC/C,mCAAmC,iBAAiB;AACpD,4CAA4C,iBAAiB;AAC7D,6BAA6B,iBAAiB;AAC9C,mCAAmC,iBAAiB;AACpD,uBAAuB,iBAAiB;AACxC,yBAAyB,iBAAiB;AAC1C,uBAAuB,iBAAiB;AACxC,+BAA+B,iBAAiB;AAChD,+BAA+B,iBAAiB;AAChD,mCAAmC,iBAAiB;AACpD,uBAAuB,iBAAiB;AACxC,iCAAiC,iBAAiB;AAClD,wBAAwB,iBAAiB;AACzC,+BAA+B,iBAAiB;AAChD,oBAAoB,iBAAiB;AACrC,4BAA4B,iBAAiB;AAC7C,uBAAuB,iBAAiB;AACxC,wBAAwB,iBAAiB;AACzC,mCAAmC,iBAAiB;AACpD,yBAAyB,iBAAiB;AAC1C,6BAA6B,iBAAiB;AAC9C,qBAAqB,iBAAiB;AACtC,iCAAiC,iBAAiB;AAClD,uBAAuB,iBAAiB;AACxC,4BAA4B,iBAAiB;AAC7C,uBAAuB,iBAAiB;AACxC,2BAA2B,iBAAiB;AAC5C,mCAAmC,iBAAiB;AACpD,6BAA6B,iBAAiB;AAC9C,wBAAwB,iBAAiB;AACzC,+BAA+B,iBAAiB;AAChD,sCAAsC,iBAAiB;AACvD,uCAAuC,iBAAiB;AACxD,2BAA2B,iBAAiB;AAC5C,2BAA2B,iBAAiB;AAC5C,6BAA6B,iBAAiB;AAC9C,wCAAwC,iBAAiB;AACzD,wBAAwB,iBAAiB;AACzC,2BAA2B,iBAAiB;AAC5C,0BAA0B,iBAAiB;AAC3C,wBAAwB,iBAAiB;AACzC,yBAAyB,iBAAiB;AAC1C,iCAAiC,iBAAiB;AAClD,gCAAgC,iBAAiB;AACjD,8BAA8B,iBAAiB;AAC/C,8BAA8B,iBAAiB;AAC/C,yBAAyB,iBAAiB;AAC1C,2BAA2B,iBAAiB;AAC5C,0BAA0B,iBAAiB;AAC3C,uBAAuB,iBAAiB;AACxC,sBAAsB,iBAAiB;AACvC,+BAA+B,iBAAiB;AAChD,wBAAwB,iBAAiB;AACzC,uBAAuB,iBAAiB;AACxC,2BAA2B,iBAAiB;AAC5C,kCAAkC,iBAAiB;AACnD,wBAAwB,iBAAiB;AACzC,+BAA+B,iBAAiB;AAChD,gCAAgC,iBAAiB;AACjD,iCAAiC,iBAAiB;AAClD,mCAAmC,iBAAiB;AACpD,gCAAgC,iBAAiB;AACjD,gCAAgC,iBAAiB;AACjD,kCAAkC,iBAAiB;AACnD,qCAAqC,iBAAiB;AACtD,iCAAiC,iBAAiB;AAClD,8BAA8B,iBAAiB;AAC/C,iCAAiC,iBAAiB;AAClD,gCAAgC,iBAAiB;AACjD,mCAAmC,iBAAiB;AACpD,gCAAgC,iBAAiB;AACjD,mCAAmC,iBAAiB;AACpD,wCAAwC,iBAAiB;AACzD,6BAA6B,iBAAiB;AAC9C,8BAA8B,iBAAiB;AAC/C,mCAAmC,iBAAiB;AACpD,6BAA6B,iBAAiB;AAC9C,8BAA8B,iBAAiB;AAC/C,+BAA+B,iBAAiB;AAChD,+BAA+B,iBAAiB;AAChD,8BAA8B,iBAAiB;AAC/C,uCAAuC,iBAAiB;AACxD,0BAA0B,iBAAiB;AAC3C,6BAA6B,iBAAiB;AAC9C,6BAA6B,iBAAiB;AAC9C,6BAA6B,iBAAiB;AAC9C,8BAA8B,iBAAiB;AAC/C,mCAAmC,iBAAiB;AACpD,mCAAmC,iBAAiB;AACpD,oCAAoC,iBAAiB;AACrD,iCAAiC,iBAAiB;AAClD,2BAA2B,iBAAiB;AAC5C,uBAAuB,iBAAiB;AACxC,uBAAuB,iBAAiB;AACxC,uBAAuB,iBAAiB;AACxC,2BAA2B,iBAAiB;AAC5C,0DAA0D,iBAAiB;AAC3E,+CAA+C,iBAAiB;AAChE,wDAAwD,iBAAiB;AACzE,mDAAmD,iBAAiB;AACpE,wCAAwC,iBAAiB;AACzD,iDAAiD,iBAAiB;AAClE,kDAAkD,iBAAiB;AACnE,uCAAuC,iBAAiB;AACxD,gDAAgD,iBAAiB;AACjE,4BAA4B,iBAAiB;AAC7C,4BAA4B,iBAAiB;AAC7C,0BAA0B,iBAAiB;AAC3C,sBAAsB,iBAAiB;AACvC,2BAA2B,iBAAiB;AAC5C,iCAAiC,iBAAiB;AAClD,wBAAwB,iBAAiB;AACzC,4BAA4B,iBAAiB;AAC7C,+BAA+B,iBAAiB;AAChD,+BAA+B,iBAAiB;AAChD,gCAAgC,iBAAiB;AACjD,6BAA6B,iBAAiB;AAC9C,+BAA+B,iBAAiB;AAChD,kCAAkC,iBAAiB;AACnD,kCAAkC,iBAAiB;AACnD,iCAAiC,iBAAiB;AAClD,iCAAiC,iBAAiB;AAClD,8CAA8C,iBAAiB;AAC/D,+BAA+B,iBAAiB;AAChD,gCAAgC,iBAAiB;AACjD,4BAA4B,iBAAiB;AAC7C,yBAAyB,iBAAiB;AAC1C,4BAA4B,iBAAiB;AAC7C,iCAAiC,iBAAiB;AAClD,+BAA+B,iBAAiB;AAChD,uBAAuB,iBAAiB;AACxC,+BAA+B,iBAAiB;AAChD,6BAA6B,iBAAiB;AAC9C,qCAAqC,iBAAiB;AACtD,8BAA8B,iBAAiB;AAC/C,uBAAuB,iBAAiB;AACxC,4BAA4B,iBAAiB;AAC7C,2BAA2B,iBAAiB;AAC5C,iCAAiC,iBAAiB;AAClD,mCAAmC,iBAAiB;AACpD,8BAA8B,iBAAiB;AAC/C,gCAAgC,iBAAiB;AACjD,8BAA8B,iBAAiB;AAC/C,kCAAkC,iBAAiB;AACnD,iCAAiC,iBAAiB;AAClD,kCAAkC,iBAAiB;AACnD,6BAA6B,iBAAiB;AAC9C,wBAAwB,iBAAiB;AACzC,sCAAsC,iBAAiB;AACvD,gCAAgC,iBAAiB;AACjD,gCAAgC,iBAAiB;AACjD,6BAA6B,iBAAiB;AAC9C,+BAA+B,iBAAiB;AAChD,gCAAgC,iBAAiB;AACjD,+BAA+B,iBAAiB;AAChD,+BAA+B,iBAAiB;AAChD,uBAAuB,iBAAiB;AACxC,0BAA0B,iBAAiB;AAC3C,gCAAgC,iBAAiB;AACjD,+BAA+B,iBAAiB;AAChD,0BAA0B,iBAAiB;AAC3C,6BAA6B,iBAAiB;AAC9C,6BAA6B,iBAAiB;AAC9C,8BAA8B,iBAAiB;AAC/C,4BAA4B,iBAAiB;AAC7C,6BAA6B,iBAAiB;AAC9C,2BAA2B,iBAAiB;AAC5C,iCAAiC,iBAAiB;AAClD,yCAAyC,iBAAiB;AAC1D,oCAAoC,iBAAiB;AACrD,2BAA2B,iBAAiB;AAC5C,wBAAwB,iBAAiB;AACzC,yBAAyB,iBAAiB;AAC1C,wBAAwB,iBAAiB;AACzC,4BAA4B,iBAAiB;AAC7C,0BAA0B,iBAAiB;AAC3C,uBAAuB,iBAAiB;AACxC,gCAAgC,iBAAiB;AACjD,gCAAgC,iBAAiB;AACjD,uBAAuB,iBAAiB;AACxC,uBAAuB,iBAAiB;AACxC,8BAA8B,iBAAiB;AAC/C,uBAAuB,iBAAiB;AACxC,6BAA6B,iBAAiB;AAC9C,8BAA8B,iBAAiB;AAC/C,kCAAkC,iBAAiB;AACnD,4BAA4B,iBAAiB;AAC7C,gCAAgC,iBAAiB;AACjD,6BAA6B,iBAAiB;AAC9C,wBAAwB,iBAAiB;AACzC,0BAA0B,iBAAiB;AAC3C,wBAAwB,iBAAiB;AACzC,0BAA0B,iBAAiB;AAC3C,wBAAwB,iBAAiB;AACzC,uBAAuB,iBAAiB;AACxC,kCAAkC,iBAAiB;AACnD,wBAAwB,iBAAiB;AACzC,wBAAwB,iBAAiB;AACzC,iCAAiC,iBAAiB;AAClD,yBAAyB,iBAAiB;AAC1C,yBAAyB,iBAAiB;AAC1C,yBAAyB,iBAAiB;AAC1C,uBAAuB,iBAAiB;AACxC,iCAAiC,iBAAiB;AAClD,sBAAsB,iBAAiB;AACvC,sBAAsB,iBAAiB;AACvC,oCAAoC,iBAAiB;AACrD,gCAAgC,iBAAiB;AACjD,uBAAuB,iBAAiB;AACxC,+BAA+B,iBAAiB;AAChD,iCAAiC,iBAAiB;AAClD,6BAA6B,iBAAiB;AAC9C,0BAA0B,iBAAiB;AAC3C,2BAA2B,iBAAiB;AAC5C,4BAA4B,iBAAiB;AAC7C,uBAAuB,iBAAiB;AACxC,2BAA2B,iBAAiB;AAC5C,4BAA4B,iBAAiB;AAC7C,0BAA0B,iBAAiB;AAC3C,4BAA4B,iBAAiB;AAC7C,+BAA+B,iBAAiB;AAChD,uBAAuB,iBAAiB;AACxC,mCAAmC,iBAAiB;AACpD,uBAAuB,iBAAiB;AACxC,6BAA6B,iBAAiB;AAC9C,uBAAuB,iBAAiB;AACxC,2BAA2B,iBAAiB;AAC5C,+BAA+B,iBAAiB;AAChD,0BAA0B,iBAAiB;AAC3C,2BAA2B,iBAAiB;AAC5C,sBAAsB,iBAAiB;AACvC,uBAAuB,iBAAiB;AACxC,sBAAsB,iBAAiB;AACvC,uBAAuB,iBAAiB;AACxC,gCAAgC,iBAAiB;AACjD,0BAA0B,iBAAiB;AAC3C,0BAA0B,iBAAiB;AAC3C,wBAAwB,iBAAiB;AACzC,2BAA2B,iBAAiB;AAC5C,wBAAwB,iBAAiB;AACzC,8BAA8B,iBAAiB;AAC/C,4BAA4B,iBAAiB;AAC7C,6BAA6B,iBAAiB;AAC9C,0BAA0B,iBAAiB;AAC3C,wBAAwB,iBAAiB;AACzC,kCAAkC,iBAAiB;AACnD,yBAAyB,iBAAiB;AAC1C,yBAAyB,iBAAiB;AAC1C,8BAA8B,iBAAiB;AAC/C,0BAA0B,iBAAiB;AAC3C,6BAA6B,iBAAiB;AAC9C,kCAAkC,iBAAiB;AACnD,4BAA4B,iBAAiB;AAC7C,4BAA4B,iBAAiB;AAC7C,yBAAyB,iBAAiB;AAC1C,kCAAkC,iBAAiB;AACnD,yBAAyB,iBAAiB;AAC1C,qCAAqC,iBAAiB;AACtD,8BAA8B,iBAAiB;AAC/C,sBAAsB,iBAAiB;AACvC,uBAAuB,iBAAiB;AACxC,2BAA2B,iBAAiB;AAC5C,0BAA0B,iBAAiB;AAC3C,uBAAuB,iBAAiB;AACxC,8BAA8B,iBAAiB;AAC/C,gCAAgC,iBAAiB;AACjD,8BAA8B,iBAAiB;AAC/C,yBAAyB,iBAAiB;AAC1C,gCAAgC,iBAAiB;AACjD,2BAA2B,iBAAiB;AAC5C,yBAAyB,iBAAiB;AAC1C,yBAAyB,iBAAiB;AAC1C,kCAAkC,iBAAiB;AACnD,mCAAmC,iBAAiB;AACpD,iCAAiC,iBAAiB;AAClD,2BAA2B,iBAAiB;AAC5C,4BAA4B,iBAAiB;AAC7C,4BAA4B,iBAAiB;AAC7C,+BAA+B,iBAAiB;AAChD,+BAA+B,iBAAiB;AAChD,kCAAkC,iBAAiB;AACnD,qCAAqC,iBAAiB;AACtD,+BAA+B,iBAAiB;AAChD,8BAA8B,iBAAiB;AAC/C,mCAAmC,iBAAiB;AACpD,iCAAiC,iBAAiB;AAClD,8BAA8B,iBAAiB;AAC/C,kCAAkC,iBAAiB;AACnD,kCAAkC,iBAAiB;AACnD,yBAAyB,iBAAiB;AAC1C,mCAAmC,iBAAiB;AACpD,iCAAiC,iBAAiB;AAClD,2BAA2B,iBAAiB;AAC5C,4BAA4B,iBAAiB;AAC7C,4BAA4B,iBAAiB;AAC7C,6BAA6B,iBAAiB;AAC9C,6BAA6B,iBAAiB;AAC9C,2BAA2B,iBAAiB;AAC5C,wBAAwB,iBAAiB;AACzC,gCAAgC,iBAAiB;AACjD,gCAAgC,iBAAiB;AACjD,iCAAiC,iBAAiB;AAClD,8BAA8B,iBAAiB;AAC/C,0BAA0B,iBAAiB;AAC3C,yBAAyB,iBAAiB;AAC1C,yBAAyB,iBAAiB;AAC1C,yBAAyB,iBAAiB;AAC1C,6BAA6B,iBAAiB;AAC9C,2BAA2B,iBAAiB;AAC5C,2BAA2B,iBAAiB;AAC5C,4BAA4B,iBAAiB;AAC7C,6BAA6B,iBAAiB;AAC9C,6BAA6B,iBAAiB;AAC9C,wBAAwB,iBAAiB;AACzC,6BAA6B,iBAAiB;AAC9C,6BAA6B,iBAAiB;AAC9C,yBAAyB,iBAAiB;AAC1C,4BAA4B,iBAAiB;AAC7C,0BAA0B,iBAAiB;AAC3C,2BAA2B,iBAAiB;AAC5C,8BAA8B,iBAAiB;AAC/C,4BAA4B,iBAAiB;AAC7C,iCAAiC,iBAAiB;AAClD,4BAA4B,iBAAiB;AAC7C,4BAA4B,iBAAiB;AAC7C,uDAAuD,iBAAiB;AACxE,4CAA4C,iBAAiB;AAC7D,qDAAqD,iBAAiB;AACtE,0CAA0C,iBAAiB;AAC3D,uCAAuC,iBAAiB;AACxD,mCAAmC,iBAAiB;AACpD,2CAA2C,iBAAiB;AAC5D,+CAA+C,iBAAiB;AAChE,gCAAgC,iBAAiB;AACjD,yCAAyC,iBAAiB;AAC1D,kCAAkC,iBAAiB;AACnD,sCAAsC,iBAAiB;AACvD,4BAA4B,iBAAiB;AAC7C,gCAAgC,iBAAiB;AACjD,gCAAgC,iBAAiB;AACjD,uBAAuB,iBAAiB;AACxC,6BAA6B,iBAAiB;AAC9C,2BAA2B,iBAAiB;AAC5C,oCAAoC,iBAAiB;AACrD,sCAAsC,iBAAiB;AACvD,0BAA0B,iBAAiB;AAC3C,2BAA2B,iBAAiB;AAC5C,gCAAgC,iBAAiB;AACjD,0BAA0B,iBAAiB;AAC3C,yBAAyB,iBAAiB;AAC1C,0BAA0B,iBAAiB;AAC3C,+BAA+B,iBAAiB;AAChD,yBAAyB,iBAAiB;AAC1C,kCAAkC,iBAAiB;AACnD,iCAAiC,iBAAiB;AAClD,qCAAqC,iBAAiB;AACtD,uBAAuB,iBAAiB;AACxC,+BAA+B,iBAAiB;AAChD,8BAA8B,iBAAiB;AAC/C,8BAA8B,iBAAiB;AAC/C,yBAAyB,iBAAiB;AAC1C,kCAAkC,iBAAiB;AACnD,6BAA6B,iBAAiB;AAC9C,wBAAwB,iBAAiB;AACzC,wBAAwB,iBAAiB;AACzC,yBAAyB,iBAAiB;AAC1C,6BAA6B,iBAAiB;AAC9C,yBAAyB,iBAAiB;AAC1C,2BAA2B,iBAAiB;AAC5C,uBAAuB,iBAAiB;AACxC,4BAA4B,iBAAiB;AAC7C,+BAA+B,iBAAiB;AAChD,8BAA8B,iBAAiB;AAC/C,sCAAsC,iBAAiB;AACvD,uCAAuC,iBAAiB;AACxD,0BAA0B,iBAAiB;AAC3C,yBAAyB,iBAAiB;AAC1C,wBAAwB,iBAAiB;AACzC,iCAAiC,iBAAiB;AAClD,iCAAiC,iBAAiB;AAClD,qCAAqC,iBAAiB;AACtD,uCAAuC,iBAAiB;AACxD,0CAA0C,iBAAiB;AAC3D,4BAA4B,iBAAiB;AAC7C,4BAA4B,iBAAiB;AAC7C,oCAAoC,iBAAiB;AACrD,8BAA8B,iBAAiB;AAC/C,oCAAoC,iBAAiB;AACrD,sCAAsC,iBAAiB;AACvD,oCAAoC,iBAAiB;AACrD,+BAA+B,iBAAiB;AAChD,kCAAkC,iBAAiB;AACnD,iCAAiC,iBAAiB;AAClD,sCAAsC,iBAAiB;AACvD,gCAAgC,iBAAiB;AACjD,kCAAkC,iBAAiB;AACnD,gCAAgC,iBAAiB;AACjD,6BAA6B,iBAAiB;AAC9C,uBAAuB,iBAAiB;AACxC,6BAA6B,iBAAiB;AAC9C,gCAAgC,iBAAiB;AACjD,uBAAuB,iBAAiB;AACxC,qCAAqC,iBAAiB;AACtD,0BAA0B,iBAAiB;AAC3C,yBAAyB,iBAAiB;AAC1C,6BAA6B,iBAAiB;AAC9C,gCAAgC,iBAAiB;AACjD,0BAA0B,iBAAiB;AAC3C,8BAA8B,iBAAiB;AAC/C,iCAAiC,iBAAiB;AAClD,wBAAwB,iBAAiB;AACzC,8BAA8B,iBAAiB;AAC/C,0CAA0C,iBAAiB;AAC3D,yCAAyC,iBAAiB;AAC1D,4BAA4B,iBAAiB;AAC7C,iCAAiC,iBAAiB;AAClD,6BAA6B,iBAAiB;AAC9C,iCAAiC,iBAAiB;AAClD,uCAAuC,iBAAiB;AACxD,8BAA8B,iBAAiB;AAC/C,6BAA6B,iBAAiB;AAC9C,gCAAgC,iBAAiB;AACjD,4BAA4B,iBAAiB;AAC7C,0BAA0B,iBAAiB;AAC3C,8BAA8B,iBAAiB;AAC/C,gCAAgC,iBAAiB","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n@font-face {\n\tfont-family: \"codicon\";\n\tsrc: url(\"./codicon.ttf?7cea6a135a6c0359d1f6d18e6b2c5c42\") format(\"truetype\");\n}\n\n.codicon[class*='codicon-'] {\n\tfont: normal normal normal 16px/1 codicon;\n\tdisplay: block;\n\ttext-decoration: none;\n\ttext-rendering: auto;\n\ttext-align: center;\n\t-webkit-font-smoothing: antialiased;\n\t-moz-osx-font-smoothing: grayscale;\n\tuser-select: none;\n\t-webkit-user-select: none;\n\t-ms-user-select: none;\n}\n\n\n.codicon-add:before { content: \"\\ea60\" }\n.codicon-plus:before { content: \"\\ea60\" }\n.codicon-gist-new:before { content: \"\\ea60\" }\n.codicon-repo-create:before { content: \"\\ea60\" }\n.codicon-lightbulb:before { content: \"\\ea61\" }\n.codicon-light-bulb:before { content: \"\\ea61\" }\n.codicon-repo:before { content: \"\\ea62\" }\n.codicon-repo-delete:before { content: \"\\ea62\" }\n.codicon-gist-fork:before { content: \"\\ea63\" }\n.codicon-repo-forked:before { content: \"\\ea63\" }\n.codicon-git-pull-request:before { content: \"\\ea64\" }\n.codicon-git-pull-request-abandoned:before { content: \"\\ea64\" }\n.codicon-record-keys:before { content: \"\\ea65\" }\n.codicon-keyboard:before { content: \"\\ea65\" }\n.codicon-tag:before { content: \"\\ea66\" }\n.codicon-tag-add:before { content: \"\\ea66\" }\n.codicon-tag-remove:before { content: \"\\ea66\" }\n.codicon-person:before { content: \"\\ea67\" }\n.codicon-person-follow:before { content: \"\\ea67\" }\n.codicon-person-outline:before { content: \"\\ea67\" }\n.codicon-person-filled:before { content: \"\\ea67\" }\n.codicon-git-branch:before { content: \"\\ea68\" }\n.codicon-git-branch-create:before { content: \"\\ea68\" }\n.codicon-git-branch-delete:before { content: \"\\ea68\" }\n.codicon-source-control:before { content: \"\\ea68\" }\n.codicon-mirror:before { content: \"\\ea69\" }\n.codicon-mirror-public:before { content: \"\\ea69\" }\n.codicon-star:before { content: \"\\ea6a\" }\n.codicon-star-add:before { content: \"\\ea6a\" }\n.codicon-star-delete:before { content: \"\\ea6a\" }\n.codicon-star-empty:before { content: \"\\ea6a\" }\n.codicon-comment:before { content: \"\\ea6b\" }\n.codicon-comment-add:before { content: \"\\ea6b\" }\n.codicon-alert:before { content: \"\\ea6c\" }\n.codicon-warning:before { content: \"\\ea6c\" }\n.codicon-search:before { content: \"\\ea6d\" }\n.codicon-search-save:before { content: \"\\ea6d\" }\n.codicon-log-out:before { content: \"\\ea6e\" }\n.codicon-sign-out:before { content: \"\\ea6e\" }\n.codicon-log-in:before { content: \"\\ea6f\" }\n.codicon-sign-in:before { content: \"\\ea6f\" }\n.codicon-eye:before { content: \"\\ea70\" }\n.codicon-eye-unwatch:before { content: \"\\ea70\" }\n.codicon-eye-watch:before { content: \"\\ea70\" }\n.codicon-circle-filled:before { content: \"\\ea71\" }\n.codicon-primitive-dot:before { content: \"\\ea71\" }\n.codicon-close-dirty:before { content: \"\\ea71\" }\n.codicon-debug-breakpoint:before { content: \"\\ea71\" }\n.codicon-debug-breakpoint-disabled:before { content: \"\\ea71\" }\n.codicon-debug-hint:before { content: \"\\ea71\" }\n.codicon-primitive-square:before { content: \"\\ea72\" }\n.codicon-edit:before { content: \"\\ea73\" }\n.codicon-pencil:before { content: \"\\ea73\" }\n.codicon-info:before { content: \"\\ea74\" }\n.codicon-issue-opened:before { content: \"\\ea74\" }\n.codicon-gist-private:before { content: \"\\ea75\" }\n.codicon-git-fork-private:before { content: \"\\ea75\" }\n.codicon-lock:before { content: \"\\ea75\" }\n.codicon-mirror-private:before { content: \"\\ea75\" }\n.codicon-close:before { content: \"\\ea76\" }\n.codicon-remove-close:before { content: \"\\ea76\" }\n.codicon-x:before { content: \"\\ea76\" }\n.codicon-repo-sync:before { content: \"\\ea77\" }\n.codicon-sync:before { content: \"\\ea77\" }\n.codicon-clone:before { content: \"\\ea78\" }\n.codicon-desktop-download:before { content: \"\\ea78\" }\n.codicon-beaker:before { content: \"\\ea79\" }\n.codicon-microscope:before { content: \"\\ea79\" }\n.codicon-vm:before { content: \"\\ea7a\" }\n.codicon-device-desktop:before { content: \"\\ea7a\" }\n.codicon-file:before { content: \"\\ea7b\" }\n.codicon-file-text:before { content: \"\\ea7b\" }\n.codicon-more:before { content: \"\\ea7c\" }\n.codicon-ellipsis:before { content: \"\\ea7c\" }\n.codicon-kebab-horizontal:before { content: \"\\ea7c\" }\n.codicon-mail-reply:before { content: \"\\ea7d\" }\n.codicon-reply:before { content: \"\\ea7d\" }\n.codicon-organization:before { content: \"\\ea7e\" }\n.codicon-organization-filled:before { content: \"\\ea7e\" }\n.codicon-organization-outline:before { content: \"\\ea7e\" }\n.codicon-new-file:before { content: \"\\ea7f\" }\n.codicon-file-add:before { content: \"\\ea7f\" }\n.codicon-new-folder:before { content: \"\\ea80\" }\n.codicon-file-directory-create:before { content: \"\\ea80\" }\n.codicon-trash:before { content: \"\\ea81\" }\n.codicon-trashcan:before { content: \"\\ea81\" }\n.codicon-history:before { content: \"\\ea82\" }\n.codicon-clock:before { content: \"\\ea82\" }\n.codicon-folder:before { content: \"\\ea83\" }\n.codicon-file-directory:before { content: \"\\ea83\" }\n.codicon-symbol-folder:before { content: \"\\ea83\" }\n.codicon-logo-github:before { content: \"\\ea84\" }\n.codicon-mark-github:before { content: \"\\ea84\" }\n.codicon-github:before { content: \"\\ea84\" }\n.codicon-terminal:before { content: \"\\ea85\" }\n.codicon-console:before { content: \"\\ea85\" }\n.codicon-repl:before { content: \"\\ea85\" }\n.codicon-zap:before { content: \"\\ea86\" }\n.codicon-symbol-event:before { content: \"\\ea86\" }\n.codicon-error:before { content: \"\\ea87\" }\n.codicon-stop:before { content: \"\\ea87\" }\n.codicon-variable:before { content: \"\\ea88\" }\n.codicon-symbol-variable:before { content: \"\\ea88\" }\n.codicon-array:before { content: \"\\ea8a\" }\n.codicon-symbol-array:before { content: \"\\ea8a\" }\n.codicon-symbol-module:before { content: \"\\ea8b\" }\n.codicon-symbol-package:before { content: \"\\ea8b\" }\n.codicon-symbol-namespace:before { content: \"\\ea8b\" }\n.codicon-symbol-object:before { content: \"\\ea8b\" }\n.codicon-symbol-method:before { content: \"\\ea8c\" }\n.codicon-symbol-function:before { content: \"\\ea8c\" }\n.codicon-symbol-constructor:before { content: \"\\ea8c\" }\n.codicon-symbol-boolean:before { content: \"\\ea8f\" }\n.codicon-symbol-null:before { content: \"\\ea8f\" }\n.codicon-symbol-numeric:before { content: \"\\ea90\" }\n.codicon-symbol-number:before { content: \"\\ea90\" }\n.codicon-symbol-structure:before { content: \"\\ea91\" }\n.codicon-symbol-struct:before { content: \"\\ea91\" }\n.codicon-symbol-parameter:before { content: \"\\ea92\" }\n.codicon-symbol-type-parameter:before { content: \"\\ea92\" }\n.codicon-symbol-key:before { content: \"\\ea93\" }\n.codicon-symbol-text:before { content: \"\\ea93\" }\n.codicon-symbol-reference:before { content: \"\\ea94\" }\n.codicon-go-to-file:before { content: \"\\ea94\" }\n.codicon-symbol-enum:before { content: \"\\ea95\" }\n.codicon-symbol-value:before { content: \"\\ea95\" }\n.codicon-symbol-ruler:before { content: \"\\ea96\" }\n.codicon-symbol-unit:before { content: \"\\ea96\" }\n.codicon-activate-breakpoints:before { content: \"\\ea97\" }\n.codicon-archive:before { content: \"\\ea98\" }\n.codicon-arrow-both:before { content: \"\\ea99\" }\n.codicon-arrow-down:before { content: \"\\ea9a\" }\n.codicon-arrow-left:before { content: \"\\ea9b\" }\n.codicon-arrow-right:before { content: \"\\ea9c\" }\n.codicon-arrow-small-down:before { content: \"\\ea9d\" }\n.codicon-arrow-small-left:before { content: \"\\ea9e\" }\n.codicon-arrow-small-right:before { content: \"\\ea9f\" }\n.codicon-arrow-small-up:before { content: \"\\eaa0\" }\n.codicon-arrow-up:before { content: \"\\eaa1\" }\n.codicon-bell:before { content: \"\\eaa2\" }\n.codicon-bold:before { content: \"\\eaa3\" }\n.codicon-book:before { content: \"\\eaa4\" }\n.codicon-bookmark:before { content: \"\\eaa5\" }\n.codicon-debug-breakpoint-conditional-unverified:before { content: \"\\eaa6\" }\n.codicon-debug-breakpoint-conditional:before { content: \"\\eaa7\" }\n.codicon-debug-breakpoint-conditional-disabled:before { content: \"\\eaa7\" }\n.codicon-debug-breakpoint-data-unverified:before { content: \"\\eaa8\" }\n.codicon-debug-breakpoint-data:before { content: \"\\eaa9\" }\n.codicon-debug-breakpoint-data-disabled:before { content: \"\\eaa9\" }\n.codicon-debug-breakpoint-log-unverified:before { content: \"\\eaaa\" }\n.codicon-debug-breakpoint-log:before { content: \"\\eaab\" }\n.codicon-debug-breakpoint-log-disabled:before { content: \"\\eaab\" }\n.codicon-briefcase:before { content: \"\\eaac\" }\n.codicon-broadcast:before { content: \"\\eaad\" }\n.codicon-browser:before { content: \"\\eaae\" }\n.codicon-bug:before { content: \"\\eaaf\" }\n.codicon-calendar:before { content: \"\\eab0\" }\n.codicon-case-sensitive:before { content: \"\\eab1\" }\n.codicon-check:before { content: \"\\eab2\" }\n.codicon-checklist:before { content: \"\\eab3\" }\n.codicon-chevron-down:before { content: \"\\eab4\" }\n.codicon-chevron-left:before { content: \"\\eab5\" }\n.codicon-chevron-right:before { content: \"\\eab6\" }\n.codicon-chevron-up:before { content: \"\\eab7\" }\n.codicon-chrome-close:before { content: \"\\eab8\" }\n.codicon-chrome-maximize:before { content: \"\\eab9\" }\n.codicon-chrome-minimize:before { content: \"\\eaba\" }\n.codicon-chrome-restore:before { content: \"\\eabb\" }\n.codicon-circle-outline:before { content: \"\\eabc\" }\n.codicon-debug-breakpoint-unverified:before { content: \"\\eabc\" }\n.codicon-circle-slash:before { content: \"\\eabd\" }\n.codicon-circuit-board:before { content: \"\\eabe\" }\n.codicon-clear-all:before { content: \"\\eabf\" }\n.codicon-clippy:before { content: \"\\eac0\" }\n.codicon-close-all:before { content: \"\\eac1\" }\n.codicon-cloud-download:before { content: \"\\eac2\" }\n.codicon-cloud-upload:before { content: \"\\eac3\" }\n.codicon-code:before { content: \"\\eac4\" }\n.codicon-collapse-all:before { content: \"\\eac5\" }\n.codicon-color-mode:before { content: \"\\eac6\" }\n.codicon-comment-discussion:before { content: \"\\eac7\" }\n.codicon-credit-card:before { content: \"\\eac9\" }\n.codicon-dash:before { content: \"\\eacc\" }\n.codicon-dashboard:before { content: \"\\eacd\" }\n.codicon-database:before { content: \"\\eace\" }\n.codicon-debug-continue:before { content: \"\\eacf\" }\n.codicon-debug-disconnect:before { content: \"\\ead0\" }\n.codicon-debug-pause:before { content: \"\\ead1\" }\n.codicon-debug-restart:before { content: \"\\ead2\" }\n.codicon-debug-start:before { content: \"\\ead3\" }\n.codicon-debug-step-into:before { content: \"\\ead4\" }\n.codicon-debug-step-out:before { content: \"\\ead5\" }\n.codicon-debug-step-over:before { content: \"\\ead6\" }\n.codicon-debug-stop:before { content: \"\\ead7\" }\n.codicon-debug:before { content: \"\\ead8\" }\n.codicon-device-camera-video:before { content: \"\\ead9\" }\n.codicon-device-camera:before { content: \"\\eada\" }\n.codicon-device-mobile:before { content: \"\\eadb\" }\n.codicon-diff-added:before { content: \"\\eadc\" }\n.codicon-diff-ignored:before { content: \"\\eadd\" }\n.codicon-diff-modified:before { content: \"\\eade\" }\n.codicon-diff-removed:before { content: \"\\eadf\" }\n.codicon-diff-renamed:before { content: \"\\eae0\" }\n.codicon-diff:before { content: \"\\eae1\" }\n.codicon-discard:before { content: \"\\eae2\" }\n.codicon-editor-layout:before { content: \"\\eae3\" }\n.codicon-empty-window:before { content: \"\\eae4\" }\n.codicon-exclude:before { content: \"\\eae5\" }\n.codicon-extensions:before { content: \"\\eae6\" }\n.codicon-eye-closed:before { content: \"\\eae7\" }\n.codicon-file-binary:before { content: \"\\eae8\" }\n.codicon-file-code:before { content: \"\\eae9\" }\n.codicon-file-media:before { content: \"\\eaea\" }\n.codicon-file-pdf:before { content: \"\\eaeb\" }\n.codicon-file-submodule:before { content: \"\\eaec\" }\n.codicon-file-symlink-directory:before { content: \"\\eaed\" }\n.codicon-file-symlink-file:before { content: \"\\eaee\" }\n.codicon-file-zip:before { content: \"\\eaef\" }\n.codicon-files:before { content: \"\\eaf0\" }\n.codicon-filter:before { content: \"\\eaf1\" }\n.codicon-flame:before { content: \"\\eaf2\" }\n.codicon-fold-down:before { content: \"\\eaf3\" }\n.codicon-fold-up:before { content: \"\\eaf4\" }\n.codicon-fold:before { content: \"\\eaf5\" }\n.codicon-folder-active:before { content: \"\\eaf6\" }\n.codicon-folder-opened:before { content: \"\\eaf7\" }\n.codicon-gear:before { content: \"\\eaf8\" }\n.codicon-gift:before { content: \"\\eaf9\" }\n.codicon-gist-secret:before { content: \"\\eafa\" }\n.codicon-gist:before { content: \"\\eafb\" }\n.codicon-git-commit:before { content: \"\\eafc\" }\n.codicon-git-compare:before { content: \"\\eafd\" }\n.codicon-compare-changes:before { content: \"\\eafd\" }\n.codicon-git-merge:before { content: \"\\eafe\" }\n.codicon-github-action:before { content: \"\\eaff\" }\n.codicon-github-alt:before { content: \"\\eb00\" }\n.codicon-globe:before { content: \"\\eb01\" }\n.codicon-grabber:before { content: \"\\eb02\" }\n.codicon-graph:before { content: \"\\eb03\" }\n.codicon-gripper:before { content: \"\\eb04\" }\n.codicon-heart:before { content: \"\\eb05\" }\n.codicon-home:before { content: \"\\eb06\" }\n.codicon-horizontal-rule:before { content: \"\\eb07\" }\n.codicon-hubot:before { content: \"\\eb08\" }\n.codicon-inbox:before { content: \"\\eb09\" }\n.codicon-issue-reopened:before { content: \"\\eb0b\" }\n.codicon-issues:before { content: \"\\eb0c\" }\n.codicon-italic:before { content: \"\\eb0d\" }\n.codicon-jersey:before { content: \"\\eb0e\" }\n.codicon-json:before { content: \"\\eb0f\" }\n.codicon-kebab-vertical:before { content: \"\\eb10\" }\n.codicon-key:before { content: \"\\eb11\" }\n.codicon-law:before { content: \"\\eb12\" }\n.codicon-lightbulb-autofix:before { content: \"\\eb13\" }\n.codicon-link-external:before { content: \"\\eb14\" }\n.codicon-link:before { content: \"\\eb15\" }\n.codicon-list-ordered:before { content: \"\\eb16\" }\n.codicon-list-unordered:before { content: \"\\eb17\" }\n.codicon-live-share:before { content: \"\\eb18\" }\n.codicon-loading:before { content: \"\\eb19\" }\n.codicon-location:before { content: \"\\eb1a\" }\n.codicon-mail-read:before { content: \"\\eb1b\" }\n.codicon-mail:before { content: \"\\eb1c\" }\n.codicon-markdown:before { content: \"\\eb1d\" }\n.codicon-megaphone:before { content: \"\\eb1e\" }\n.codicon-mention:before { content: \"\\eb1f\" }\n.codicon-milestone:before { content: \"\\eb20\" }\n.codicon-mortar-board:before { content: \"\\eb21\" }\n.codicon-move:before { content: \"\\eb22\" }\n.codicon-multiple-windows:before { content: \"\\eb23\" }\n.codicon-mute:before { content: \"\\eb24\" }\n.codicon-no-newline:before { content: \"\\eb25\" }\n.codicon-note:before { content: \"\\eb26\" }\n.codicon-octoface:before { content: \"\\eb27\" }\n.codicon-open-preview:before { content: \"\\eb28\" }\n.codicon-package:before { content: \"\\eb29\" }\n.codicon-paintcan:before { content: \"\\eb2a\" }\n.codicon-pin:before { content: \"\\eb2b\" }\n.codicon-play:before { content: \"\\eb2c\" }\n.codicon-run:before { content: \"\\eb2c\" }\n.codicon-plug:before { content: \"\\eb2d\" }\n.codicon-preserve-case:before { content: \"\\eb2e\" }\n.codicon-preview:before { content: \"\\eb2f\" }\n.codicon-project:before { content: \"\\eb30\" }\n.codicon-pulse:before { content: \"\\eb31\" }\n.codicon-question:before { content: \"\\eb32\" }\n.codicon-quote:before { content: \"\\eb33\" }\n.codicon-radio-tower:before { content: \"\\eb34\" }\n.codicon-reactions:before { content: \"\\eb35\" }\n.codicon-references:before { content: \"\\eb36\" }\n.codicon-refresh:before { content: \"\\eb37\" }\n.codicon-regex:before { content: \"\\eb38\" }\n.codicon-remote-explorer:before { content: \"\\eb39\" }\n.codicon-remote:before { content: \"\\eb3a\" }\n.codicon-remove:before { content: \"\\eb3b\" }\n.codicon-replace-all:before { content: \"\\eb3c\" }\n.codicon-replace:before { content: \"\\eb3d\" }\n.codicon-repo-clone:before { content: \"\\eb3e\" }\n.codicon-repo-force-push:before { content: \"\\eb3f\" }\n.codicon-repo-pull:before { content: \"\\eb40\" }\n.codicon-repo-push:before { content: \"\\eb41\" }\n.codicon-report:before { content: \"\\eb42\" }\n.codicon-request-changes:before { content: \"\\eb43\" }\n.codicon-rocket:before { content: \"\\eb44\" }\n.codicon-root-folder-opened:before { content: \"\\eb45\" }\n.codicon-root-folder:before { content: \"\\eb46\" }\n.codicon-rss:before { content: \"\\eb47\" }\n.codicon-ruby:before { content: \"\\eb48\" }\n.codicon-save-all:before { content: \"\\eb49\" }\n.codicon-save-as:before { content: \"\\eb4a\" }\n.codicon-save:before { content: \"\\eb4b\" }\n.codicon-screen-full:before { content: \"\\eb4c\" }\n.codicon-screen-normal:before { content: \"\\eb4d\" }\n.codicon-search-stop:before { content: \"\\eb4e\" }\n.codicon-server:before { content: \"\\eb50\" }\n.codicon-settings-gear:before { content: \"\\eb51\" }\n.codicon-settings:before { content: \"\\eb52\" }\n.codicon-shield:before { content: \"\\eb53\" }\n.codicon-smiley:before { content: \"\\eb54\" }\n.codicon-sort-precedence:before { content: \"\\eb55\" }\n.codicon-split-horizontal:before { content: \"\\eb56\" }\n.codicon-split-vertical:before { content: \"\\eb57\" }\n.codicon-squirrel:before { content: \"\\eb58\" }\n.codicon-star-full:before { content: \"\\eb59\" }\n.codicon-star-half:before { content: \"\\eb5a\" }\n.codicon-symbol-class:before { content: \"\\eb5b\" }\n.codicon-symbol-color:before { content: \"\\eb5c\" }\n.codicon-symbol-constant:before { content: \"\\eb5d\" }\n.codicon-symbol-enum-member:before { content: \"\\eb5e\" }\n.codicon-symbol-field:before { content: \"\\eb5f\" }\n.codicon-symbol-file:before { content: \"\\eb60\" }\n.codicon-symbol-interface:before { content: \"\\eb61\" }\n.codicon-symbol-keyword:before { content: \"\\eb62\" }\n.codicon-symbol-misc:before { content: \"\\eb63\" }\n.codicon-symbol-operator:before { content: \"\\eb64\" }\n.codicon-symbol-property:before { content: \"\\eb65\" }\n.codicon-wrench:before { content: \"\\eb65\" }\n.codicon-wrench-subaction:before { content: \"\\eb65\" }\n.codicon-symbol-snippet:before { content: \"\\eb66\" }\n.codicon-tasklist:before { content: \"\\eb67\" }\n.codicon-telescope:before { content: \"\\eb68\" }\n.codicon-text-size:before { content: \"\\eb69\" }\n.codicon-three-bars:before { content: \"\\eb6a\" }\n.codicon-thumbsdown:before { content: \"\\eb6b\" }\n.codicon-thumbsup:before { content: \"\\eb6c\" }\n.codicon-tools:before { content: \"\\eb6d\" }\n.codicon-triangle-down:before { content: \"\\eb6e\" }\n.codicon-triangle-left:before { content: \"\\eb6f\" }\n.codicon-triangle-right:before { content: \"\\eb70\" }\n.codicon-triangle-up:before { content: \"\\eb71\" }\n.codicon-twitter:before { content: \"\\eb72\" }\n.codicon-unfold:before { content: \"\\eb73\" }\n.codicon-unlock:before { content: \"\\eb74\" }\n.codicon-unmute:before { content: \"\\eb75\" }\n.codicon-unverified:before { content: \"\\eb76\" }\n.codicon-verified:before { content: \"\\eb77\" }\n.codicon-versions:before { content: \"\\eb78\" }\n.codicon-vm-active:before { content: \"\\eb79\" }\n.codicon-vm-outline:before { content: \"\\eb7a\" }\n.codicon-vm-running:before { content: \"\\eb7b\" }\n.codicon-watch:before { content: \"\\eb7c\" }\n.codicon-whitespace:before { content: \"\\eb7d\" }\n.codicon-whole-word:before { content: \"\\eb7e\" }\n.codicon-window:before { content: \"\\eb7f\" }\n.codicon-word-wrap:before { content: \"\\eb80\" }\n.codicon-zoom-in:before { content: \"\\eb81\" }\n.codicon-zoom-out:before { content: \"\\eb82\" }\n.codicon-list-filter:before { content: \"\\eb83\" }\n.codicon-list-flat:before { content: \"\\eb84\" }\n.codicon-list-selection:before { content: \"\\eb85\" }\n.codicon-selection:before { content: \"\\eb85\" }\n.codicon-list-tree:before { content: \"\\eb86\" }\n.codicon-debug-breakpoint-function-unverified:before { content: \"\\eb87\" }\n.codicon-debug-breakpoint-function:before { content: \"\\eb88\" }\n.codicon-debug-breakpoint-function-disabled:before { content: \"\\eb88\" }\n.codicon-debug-stackframe-active:before { content: \"\\eb89\" }\n.codicon-debug-stackframe-dot:before { content: \"\\eb8a\" }\n.codicon-debug-stackframe:before { content: \"\\eb8b\" }\n.codicon-debug-stackframe-focused:before { content: \"\\eb8b\" }\n.codicon-debug-breakpoint-unsupported:before { content: \"\\eb8c\" }\n.codicon-symbol-string:before { content: \"\\eb8d\" }\n.codicon-debug-reverse-continue:before { content: \"\\eb8e\" }\n.codicon-debug-step-back:before { content: \"\\eb8f\" }\n.codicon-debug-restart-frame:before { content: \"\\eb90\" }\n.codicon-debug-alt:before { content: \"\\eb91\" }\n.codicon-call-incoming:before { content: \"\\eb92\" }\n.codicon-call-outgoing:before { content: \"\\eb93\" }\n.codicon-menu:before { content: \"\\eb94\" }\n.codicon-expand-all:before { content: \"\\eb95\" }\n.codicon-feedback:before { content: \"\\eb96\" }\n.codicon-group-by-ref-type:before { content: \"\\eb97\" }\n.codicon-ungroup-by-ref-type:before { content: \"\\eb98\" }\n.codicon-account:before { content: \"\\eb99\" }\n.codicon-bell-dot:before { content: \"\\eb9a\" }\n.codicon-debug-console:before { content: \"\\eb9b\" }\n.codicon-library:before { content: \"\\eb9c\" }\n.codicon-output:before { content: \"\\eb9d\" }\n.codicon-run-all:before { content: \"\\eb9e\" }\n.codicon-sync-ignored:before { content: \"\\eb9f\" }\n.codicon-pinned:before { content: \"\\eba0\" }\n.codicon-github-inverted:before { content: \"\\eba1\" }\n.codicon-server-process:before { content: \"\\eba2\" }\n.codicon-server-environment:before { content: \"\\eba3\" }\n.codicon-pass:before { content: \"\\eba4\" }\n.codicon-issue-closed:before { content: \"\\eba4\" }\n.codicon-stop-circle:before { content: \"\\eba5\" }\n.codicon-play-circle:before { content: \"\\eba6\" }\n.codicon-record:before { content: \"\\eba7\" }\n.codicon-debug-alt-small:before { content: \"\\eba8\" }\n.codicon-vm-connect:before { content: \"\\eba9\" }\n.codicon-cloud:before { content: \"\\ebaa\" }\n.codicon-merge:before { content: \"\\ebab\" }\n.codicon-export:before { content: \"\\ebac\" }\n.codicon-graph-left:before { content: \"\\ebad\" }\n.codicon-magnet:before { content: \"\\ebae\" }\n.codicon-notebook:before { content: \"\\ebaf\" }\n.codicon-redo:before { content: \"\\ebb0\" }\n.codicon-check-all:before { content: \"\\ebb1\" }\n.codicon-pinned-dirty:before { content: \"\\ebb2\" }\n.codicon-pass-filled:before { content: \"\\ebb3\" }\n.codicon-circle-large-filled:before { content: \"\\ebb4\" }\n.codicon-circle-large-outline:before { content: \"\\ebb5\" }\n.codicon-combine:before { content: \"\\ebb6\" }\n.codicon-gather:before { content: \"\\ebb6\" }\n.codicon-table:before { content: \"\\ebb7\" }\n.codicon-variable-group:before { content: \"\\ebb8\" }\n.codicon-type-hierarchy:before { content: \"\\ebb9\" }\n.codicon-type-hierarchy-sub:before { content: \"\\ebba\" }\n.codicon-type-hierarchy-super:before { content: \"\\ebbb\" }\n.codicon-git-pull-request-create:before { content: \"\\ebbc\" }\n.codicon-run-above:before { content: \"\\ebbd\" }\n.codicon-run-below:before { content: \"\\ebbe\" }\n.codicon-notebook-template:before { content: \"\\ebbf\" }\n.codicon-debug-rerun:before { content: \"\\ebc0\" }\n.codicon-workspace-trusted:before { content: \"\\ebc1\" }\n.codicon-workspace-untrusted:before { content: \"\\ebc2\" }\n.codicon-workspace-unknown:before { content: \"\\ebc3\" }\n.codicon-terminal-cmd:before { content: \"\\ebc4\" }\n.codicon-terminal-debian:before { content: \"\\ebc5\" }\n.codicon-terminal-linux:before { content: \"\\ebc6\" }\n.codicon-terminal-powershell:before { content: \"\\ebc7\" }\n.codicon-terminal-tmux:before { content: \"\\ebc8\" }\n.codicon-terminal-ubuntu:before { content: \"\\ebc9\" }\n.codicon-terminal-bash:before { content: \"\\ebca\" }\n.codicon-arrow-swap:before { content: \"\\ebcb\" }\n.codicon-copy:before { content: \"\\ebcc\" }\n.codicon-person-add:before { content: \"\\ebcd\" }\n.codicon-filter-filled:before { content: \"\\ebce\" }\n.codicon-wand:before { content: \"\\ebcf\" }\n.codicon-debug-line-by-line:before { content: \"\\ebd0\" }\n.codicon-inspect:before { content: \"\\ebd1\" }\n.codicon-layers:before { content: \"\\ebd2\" }\n.codicon-layers-dot:before { content: \"\\ebd3\" }\n.codicon-layers-active:before { content: \"\\ebd4\" }\n.codicon-compass:before { content: \"\\ebd5\" }\n.codicon-compass-dot:before { content: \"\\ebd6\" }\n.codicon-compass-active:before { content: \"\\ebd7\" }\n.codicon-azure:before { content: \"\\ebd8\" }\n.codicon-issue-draft:before { content: \"\\ebd9\" }\n.codicon-git-pull-request-closed:before { content: \"\\ebda\" }\n.codicon-git-pull-request-draft:before { content: \"\\ebdb\" }\n.codicon-debug-all:before { content: \"\\ebdc\" }\n.codicon-debug-coverage:before { content: \"\\ebdd\" }\n.codicon-run-errors:before { content: \"\\ebde\" }\n.codicon-folder-library:before { content: \"\\ebdf\" }\n.codicon-debug-continue-small:before { content: \"\\ebe0\" }\n.codicon-beaker-stop:before { content: \"\\ebe1\" }\n.codicon-graph-line:before { content: \"\\ebe2\" }\n.codicon-graph-scatter:before { content: \"\\ebe3\" }\n.codicon-pie-chart:before { content: \"\\ebe4\" }\n.codicon-bracket:before { content: \"\\eb0f\" }\n.codicon-bracket-dot:before { content: \"\\ebe5\" }\n.codicon-bracket-error:before { content: \"\\ebe6\" }\n"],"sourceRoot":""}]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ "../../node_modules/css-loader/dist/cjs.js!../../node_modules/balloon-css/balloon.min.css":
/*!************************************************************************************************!*\
  !*** ../../node_modules/css-loader/dist/cjs.js!../../node_modules/balloon-css/balloon.min.css ***!
  \************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../css-loader/dist/runtime/sourceMaps.js */ "../../node_modules/css-loader/dist/runtime/sourceMaps.js");
/* harmony import */ var _css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../css-loader/dist/runtime/api.js */ "../../node_modules/css-loader/dist/runtime/api.js");
/* harmony import */ var _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../css-loader/dist/runtime/getUrl.js */ "../../node_modules/css-loader/dist/runtime/getUrl.js");
/* harmony import */ var _css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2__);
// Imports



var ___CSS_LOADER_URL_IMPORT_0___ = new URL(/* asset import */ __webpack_require__(/*! data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D%22http://www.w3.org/2000/svg%22%20width%3D%2236px%22%20height%3D%2212px%22%3E%3Cpath%20fill%3D%22rgba%2817,17,17,0.9%29%22%20transform%3D%22rotate%280%29%22%20d%3D%22M2.658,0.000%20C-13.615,0.000%2050.938,0.000%2034.662,0.000%20C28.662,0.000%2023.035,12.002%2018.660,12.002%20C14.285,12.002%208.594,0.000%202.658,0.000%20Z%22/%3E%3C/svg%3E */ "data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D%22http://www.w3.org/2000/svg%22%20width%3D%2236px%22%20height%3D%2212px%22%3E%3Cpath%20fill%3D%22rgba%2817,17,17,0.9%29%22%20transform%3D%22rotate%280%29%22%20d%3D%22M2.658,0.000%20C-13.615,0.000%2050.938,0.000%2034.662,0.000%20C28.662,0.000%2023.035,12.002%2018.660,12.002%20C14.285,12.002%208.594,0.000%202.658,0.000%20Z%22/%3E%3C/svg%3E"), __webpack_require__.b);
var ___CSS_LOADER_URL_IMPORT_1___ = new URL(/* asset import */ __webpack_require__(/*! data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D%22http://www.w3.org/2000/svg%22%20width%3D%2236px%22%20height%3D%2212px%22%3E%3Cpath%20fill%3D%22rgba%2817,17,17,0.9%29%22%20transform%3D%22rotate%28180 18 6%29%22%20d%3D%22M2.658,0.000%20C-13.615,0.000%2050.938,0.000%2034.662,0.000%20C28.662,0.000%2023.035,12.002%2018.660,12.002%20C14.285,12.002%208.594,0.000%202.658,0.000%20Z%22/%3E%3C/svg%3E */ "data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D%22http://www.w3.org/2000/svg%22%20width%3D%2236px%22%20height%3D%2212px%22%3E%3Cpath%20fill%3D%22rgba%2817,17,17,0.9%29%22%20transform%3D%22rotate%28180 18 6%29%22%20d%3D%22M2.658,0.000%20C-13.615,0.000%2050.938,0.000%2034.662,0.000%20C28.662,0.000%2023.035,12.002%2018.660,12.002%20C14.285,12.002%208.594,0.000%202.658,0.000%20Z%22/%3E%3C/svg%3E"), __webpack_require__.b);
var ___CSS_LOADER_URL_IMPORT_2___ = new URL(/* asset import */ __webpack_require__(/*! data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D%22http://www.w3.org/2000/svg%22%20width%3D%2212px%22%20height%3D%2236px%22%3E%3Cpath%20fill%3D%22rgba%2817,17,17,0.9%29%22%20transform%3D%22rotate%28-90 18 18%29%22%20d%3D%22M2.658,0.000%20C-13.615,0.000%2050.938,0.000%2034.662,0.000%20C28.662,0.000%2023.035,12.002%2018.660,12.002%20C14.285,12.002%208.594,0.000%202.658,0.000%20Z%22/%3E%3C/svg%3E */ "data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D%22http://www.w3.org/2000/svg%22%20width%3D%2212px%22%20height%3D%2236px%22%3E%3Cpath%20fill%3D%22rgba%2817,17,17,0.9%29%22%20transform%3D%22rotate%28-90 18 18%29%22%20d%3D%22M2.658,0.000%20C-13.615,0.000%2050.938,0.000%2034.662,0.000%20C28.662,0.000%2023.035,12.002%2018.660,12.002%20C14.285,12.002%208.594,0.000%202.658,0.000%20Z%22/%3E%3C/svg%3E"), __webpack_require__.b);
var ___CSS_LOADER_URL_IMPORT_3___ = new URL(/* asset import */ __webpack_require__(/*! data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D%22http://www.w3.org/2000/svg%22%20width%3D%2212px%22%20height%3D%2236px%22%3E%3Cpath%20fill%3D%22rgba%2817,17,17,0.9%29%22%20transform%3D%22rotate%2890 6 6%29%22%20d%3D%22M2.658,0.000%20C-13.615,0.000%2050.938,0.000%2034.662,0.000%20C28.662,0.000%2023.035,12.002%2018.660,12.002%20C14.285,12.002%208.594,0.000%202.658,0.000%20Z%22/%3E%3C/svg%3E */ "data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D%22http://www.w3.org/2000/svg%22%20width%3D%2212px%22%20height%3D%2236px%22%3E%3Cpath%20fill%3D%22rgba%2817,17,17,0.9%29%22%20transform%3D%22rotate%2890 6 6%29%22%20d%3D%22M2.658,0.000%20C-13.615,0.000%2050.938,0.000%2034.662,0.000%20C28.662,0.000%2023.035,12.002%2018.660,12.002%20C14.285,12.002%208.594,0.000%202.658,0.000%20Z%22/%3E%3C/svg%3E"), __webpack_require__.b);
var ___CSS_LOADER_EXPORT___ = _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));
var ___CSS_LOADER_URL_REPLACEMENT_0___ = _css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_0___);
var ___CSS_LOADER_URL_REPLACEMENT_1___ = _css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_1___);
var ___CSS_LOADER_URL_REPLACEMENT_2___ = _css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_2___);
var ___CSS_LOADER_URL_REPLACEMENT_3___ = _css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_3___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, `button[data-balloon]{overflow:visible}[data-balloon]{position:relative;cursor:pointer}[data-balloon]:after{filter:alpha(opacity=0);-ms-filter:"progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";-moz-opacity:0;-khtml-opacity:0;opacity:0;pointer-events:none;-webkit-transition:all 0.18s ease-out 0.18s;-moz-transition:all 0.18s ease-out 0.18s;-ms-transition:all 0.18s ease-out 0.18s;-o-transition:all 0.18s ease-out 0.18s;transition:all 0.18s ease-out 0.18s;font-family:sans-serif !important;font-weight:normal !important;font-style:normal !important;text-shadow:none !important;font-size:12px !important;background:rgba(17,17,17,0.9);border-radius:4px;color:#fff;content:attr(data-balloon);padding:.5em 1em;position:absolute;white-space:nowrap;z-index:10}[data-balloon]:before{background:no-repeat url(${___CSS_LOADER_URL_REPLACEMENT_0___});background-size:100% auto;width:18px;height:6px;filter:alpha(opacity=0);-ms-filter:"progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";-moz-opacity:0;-khtml-opacity:0;opacity:0;pointer-events:none;-webkit-transition:all 0.18s ease-out 0.18s;-moz-transition:all 0.18s ease-out 0.18s;-ms-transition:all 0.18s ease-out 0.18s;-o-transition:all 0.18s ease-out 0.18s;transition:all 0.18s ease-out 0.18s;content:'';position:absolute;z-index:10}[data-balloon]:hover:before,[data-balloon]:hover:after,[data-balloon][data-balloon-visible]:before,[data-balloon][data-balloon-visible]:after{filter:alpha(opacity=100);-ms-filter:"progid:DXImageTransform.Microsoft.Alpha(Opacity=100)";-moz-opacity:1;-khtml-opacity:1;opacity:1;pointer-events:auto}[data-balloon]:not([data-balloon-pos]):after{bottom:100%;left:50%;margin-bottom:11px;-webkit-transform:translate(-50%, 10px);-moz-transform:translate(-50%, 10px);-ms-transform:translate(-50%, 10px);transform:translate(-50%, 10px);-webkit-transform-origin:top;-moz-transform-origin:top;-ms-transform-origin:top;transform-origin:top}[data-balloon]:not([data-balloon-pos]):before{bottom:100%;left:50%;margin-bottom:5px;-webkit-transform:translate(-50%, 10px);-moz-transform:translate(-50%, 10px);-ms-transform:translate(-50%, 10px);transform:translate(-50%, 10px);-webkit-transform-origin:top;-moz-transform-origin:top;-ms-transform-origin:top;transform-origin:top}[data-balloon]:not([data-balloon-pos]):hover:after,[data-balloon]:not([data-balloon-pos])[data-balloon-visible]:after{-webkit-transform:translate(-50%, 0);-moz-transform:translate(-50%, 0);-ms-transform:translate(-50%, 0);transform:translate(-50%, 0)}[data-balloon]:not([data-balloon-pos]):hover:before,[data-balloon]:not([data-balloon-pos])[data-balloon-visible]:before{-webkit-transform:translate(-50%, 0);-moz-transform:translate(-50%, 0);-ms-transform:translate(-50%, 0);transform:translate(-50%, 0)}[data-balloon].font-awesome:after{font-family:FontAwesome, sans-serif !important}[data-balloon][data-balloon-break]:after{white-space:pre}[data-balloon][data-balloon-blunt]:before,[data-balloon][data-balloon-blunt]:after{-webkit-transition:none;-moz-transition:none;-ms-transition:none;-o-transition:none;transition:none}[data-balloon][data-balloon-pos="up"]:after{bottom:100%;left:50%;margin-bottom:11px;-webkit-transform:translate(-50%, 10px);-moz-transform:translate(-50%, 10px);-ms-transform:translate(-50%, 10px);transform:translate(-50%, 10px);-webkit-transform-origin:top;-moz-transform-origin:top;-ms-transform-origin:top;transform-origin:top}[data-balloon][data-balloon-pos="up"]:before{bottom:100%;left:50%;margin-bottom:5px;-webkit-transform:translate(-50%, 10px);-moz-transform:translate(-50%, 10px);-ms-transform:translate(-50%, 10px);transform:translate(-50%, 10px);-webkit-transform-origin:top;-moz-transform-origin:top;-ms-transform-origin:top;transform-origin:top}[data-balloon][data-balloon-pos="up"]:hover:after,[data-balloon][data-balloon-pos="up"][data-balloon-visible]:after{-webkit-transform:translate(-50%, 0);-moz-transform:translate(-50%, 0);-ms-transform:translate(-50%, 0);transform:translate(-50%, 0)}[data-balloon][data-balloon-pos="up"]:hover:before,[data-balloon][data-balloon-pos="up"][data-balloon-visible]:before{-webkit-transform:translate(-50%, 0);-moz-transform:translate(-50%, 0);-ms-transform:translate(-50%, 0);transform:translate(-50%, 0)}[data-balloon][data-balloon-pos="up-left"]:after{bottom:100%;left:0;margin-bottom:11px;-webkit-transform:translate(0, 10px);-moz-transform:translate(0, 10px);-ms-transform:translate(0, 10px);transform:translate(0, 10px);-webkit-transform-origin:top;-moz-transform-origin:top;-ms-transform-origin:top;transform-origin:top}[data-balloon][data-balloon-pos="up-left"]:before{bottom:100%;left:5px;margin-bottom:5px;-webkit-transform:translate(0, 10px);-moz-transform:translate(0, 10px);-ms-transform:translate(0, 10px);transform:translate(0, 10px);-webkit-transform-origin:top;-moz-transform-origin:top;-ms-transform-origin:top;transform-origin:top}[data-balloon][data-balloon-pos="up-left"]:hover:after,[data-balloon][data-balloon-pos="up-left"][data-balloon-visible]:after{-webkit-transform:translate(0, 0);-moz-transform:translate(0, 0);-ms-transform:translate(0, 0);transform:translate(0, 0)}[data-balloon][data-balloon-pos="up-left"]:hover:before,[data-balloon][data-balloon-pos="up-left"][data-balloon-visible]:before{-webkit-transform:translate(0, 0);-moz-transform:translate(0, 0);-ms-transform:translate(0, 0);transform:translate(0, 0)}[data-balloon][data-balloon-pos="up-right"]:after{bottom:100%;right:0;margin-bottom:11px;-webkit-transform:translate(0, 10px);-moz-transform:translate(0, 10px);-ms-transform:translate(0, 10px);transform:translate(0, 10px);-webkit-transform-origin:top;-moz-transform-origin:top;-ms-transform-origin:top;transform-origin:top}[data-balloon][data-balloon-pos="up-right"]:before{bottom:100%;right:5px;margin-bottom:5px;-webkit-transform:translate(0, 10px);-moz-transform:translate(0, 10px);-ms-transform:translate(0, 10px);transform:translate(0, 10px);-webkit-transform-origin:top;-moz-transform-origin:top;-ms-transform-origin:top;transform-origin:top}[data-balloon][data-balloon-pos="up-right"]:hover:after,[data-balloon][data-balloon-pos="up-right"][data-balloon-visible]:after{-webkit-transform:translate(0, 0);-moz-transform:translate(0, 0);-ms-transform:translate(0, 0);transform:translate(0, 0)}[data-balloon][data-balloon-pos="up-right"]:hover:before,[data-balloon][data-balloon-pos="up-right"][data-balloon-visible]:before{-webkit-transform:translate(0, 0);-moz-transform:translate(0, 0);-ms-transform:translate(0, 0);transform:translate(0, 0)}[data-balloon][data-balloon-pos='down']:after{left:50%;margin-top:11px;top:100%;-webkit-transform:translate(-50%, -10px);-moz-transform:translate(-50%, -10px);-ms-transform:translate(-50%, -10px);transform:translate(-50%, -10px)}[data-balloon][data-balloon-pos='down']:before{background:no-repeat url(${___CSS_LOADER_URL_REPLACEMENT_1___});background-size:100% auto;width:18px;height:6px;left:50%;margin-top:5px;top:100%;-webkit-transform:translate(-50%, -10px);-moz-transform:translate(-50%, -10px);-ms-transform:translate(-50%, -10px);transform:translate(-50%, -10px)}[data-balloon][data-balloon-pos='down']:hover:after,[data-balloon][data-balloon-pos='down'][data-balloon-visible]:after{-webkit-transform:translate(-50%, 0);-moz-transform:translate(-50%, 0);-ms-transform:translate(-50%, 0);transform:translate(-50%, 0)}[data-balloon][data-balloon-pos='down']:hover:before,[data-balloon][data-balloon-pos='down'][data-balloon-visible]:before{-webkit-transform:translate(-50%, 0);-moz-transform:translate(-50%, 0);-ms-transform:translate(-50%, 0);transform:translate(-50%, 0)}[data-balloon][data-balloon-pos='down-left']:after{left:0;margin-top:11px;top:100%;-webkit-transform:translate(0, -10px);-moz-transform:translate(0, -10px);-ms-transform:translate(0, -10px);transform:translate(0, -10px)}[data-balloon][data-balloon-pos='down-left']:before{background:no-repeat url(${___CSS_LOADER_URL_REPLACEMENT_1___});background-size:100% auto;width:18px;height:6px;left:5px;margin-top:5px;top:100%;-webkit-transform:translate(0, -10px);-moz-transform:translate(0, -10px);-ms-transform:translate(0, -10px);transform:translate(0, -10px)}[data-balloon][data-balloon-pos='down-left']:hover:after,[data-balloon][data-balloon-pos='down-left'][data-balloon-visible]:after{-webkit-transform:translate(0, 0);-moz-transform:translate(0, 0);-ms-transform:translate(0, 0);transform:translate(0, 0)}[data-balloon][data-balloon-pos='down-left']:hover:before,[data-balloon][data-balloon-pos='down-left'][data-balloon-visible]:before{-webkit-transform:translate(0, 0);-moz-transform:translate(0, 0);-ms-transform:translate(0, 0);transform:translate(0, 0)}[data-balloon][data-balloon-pos='down-right']:after{right:0;margin-top:11px;top:100%;-webkit-transform:translate(0, -10px);-moz-transform:translate(0, -10px);-ms-transform:translate(0, -10px);transform:translate(0, -10px)}[data-balloon][data-balloon-pos='down-right']:before{background:no-repeat url(${___CSS_LOADER_URL_REPLACEMENT_1___});background-size:100% auto;width:18px;height:6px;right:5px;margin-top:5px;top:100%;-webkit-transform:translate(0, -10px);-moz-transform:translate(0, -10px);-ms-transform:translate(0, -10px);transform:translate(0, -10px)}[data-balloon][data-balloon-pos='down-right']:hover:after,[data-balloon][data-balloon-pos='down-right'][data-balloon-visible]:after{-webkit-transform:translate(0, 0);-moz-transform:translate(0, 0);-ms-transform:translate(0, 0);transform:translate(0, 0)}[data-balloon][data-balloon-pos='down-right']:hover:before,[data-balloon][data-balloon-pos='down-right'][data-balloon-visible]:before{-webkit-transform:translate(0, 0);-moz-transform:translate(0, 0);-ms-transform:translate(0, 0);transform:translate(0, 0)}[data-balloon][data-balloon-pos='left']:after{margin-right:11px;right:100%;top:50%;-webkit-transform:translate(10px, -50%);-moz-transform:translate(10px, -50%);-ms-transform:translate(10px, -50%);transform:translate(10px, -50%)}[data-balloon][data-balloon-pos='left']:before{background:no-repeat url(${___CSS_LOADER_URL_REPLACEMENT_2___});background-size:100% auto;width:6px;height:18px;margin-right:5px;right:100%;top:50%;-webkit-transform:translate(10px, -50%);-moz-transform:translate(10px, -50%);-ms-transform:translate(10px, -50%);transform:translate(10px, -50%)}[data-balloon][data-balloon-pos='left']:hover:after,[data-balloon][data-balloon-pos='left'][data-balloon-visible]:after{-webkit-transform:translate(0, -50%);-moz-transform:translate(0, -50%);-ms-transform:translate(0, -50%);transform:translate(0, -50%)}[data-balloon][data-balloon-pos='left']:hover:before,[data-balloon][data-balloon-pos='left'][data-balloon-visible]:before{-webkit-transform:translate(0, -50%);-moz-transform:translate(0, -50%);-ms-transform:translate(0, -50%);transform:translate(0, -50%)}[data-balloon][data-balloon-pos='right']:after{left:100%;margin-left:11px;top:50%;-webkit-transform:translate(-10px, -50%);-moz-transform:translate(-10px, -50%);-ms-transform:translate(-10px, -50%);transform:translate(-10px, -50%)}[data-balloon][data-balloon-pos='right']:before{background:no-repeat url(${___CSS_LOADER_URL_REPLACEMENT_3___});background-size:100% auto;width:6px;height:18px;left:100%;margin-left:5px;top:50%;-webkit-transform:translate(-10px, -50%);-moz-transform:translate(-10px, -50%);-ms-transform:translate(-10px, -50%);transform:translate(-10px, -50%)}[data-balloon][data-balloon-pos='right']:hover:after,[data-balloon][data-balloon-pos='right'][data-balloon-visible]:after{-webkit-transform:translate(0, -50%);-moz-transform:translate(0, -50%);-ms-transform:translate(0, -50%);transform:translate(0, -50%)}[data-balloon][data-balloon-pos='right']:hover:before,[data-balloon][data-balloon-pos='right'][data-balloon-visible]:before{-webkit-transform:translate(0, -50%);-moz-transform:translate(0, -50%);-ms-transform:translate(0, -50%);transform:translate(0, -50%)}[data-balloon][data-balloon-length='small']:after{white-space:normal;width:80px}[data-balloon][data-balloon-length='medium']:after{white-space:normal;width:150px}[data-balloon][data-balloon-length='large']:after{white-space:normal;width:260px}[data-balloon][data-balloon-length='xlarge']:after{white-space:normal;width:380px}@media screen and (max-width: 768px){[data-balloon][data-balloon-length='xlarge']:after{white-space:normal;width:90vw}}[data-balloon][data-balloon-length='fit']:after{white-space:normal;width:100%}
`, "",{"version":3,"sources":["webpack://./../../node_modules/balloon-css/balloon.min.css"],"names":[],"mappings":"AAAA,qBAAqB,gBAAgB,CAAC,eAAe,iBAAiB,CAAC,cAAc,CAAC,qBAAqB,uBAAuB,CAAC,+DAA+D,CAAC,cAAc,CAAC,gBAAgB,CAAC,SAAS,CAAC,mBAAmB,CAAC,2CAA2C,CAAC,wCAAwC,CAAC,uCAAuC,CAAC,sCAAsC,CAAC,mCAAmC,CAAC,iCAAiC,CAAC,6BAA6B,CAAC,4BAA4B,CAAC,2BAA2B,CAAC,yBAAyB,CAAC,6BAA6B,CAAC,iBAAiB,CAAC,UAAU,CAAC,0BAA0B,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,kBAAkB,CAAC,UAAU,CAAC,sBAAsB,4DAA0Z,CAAC,yBAAyB,CAAC,UAAU,CAAC,UAAU,CAAC,uBAAuB,CAAC,+DAA+D,CAAC,cAAc,CAAC,gBAAgB,CAAC,SAAS,CAAC,mBAAmB,CAAC,2CAA2C,CAAC,wCAAwC,CAAC,uCAAuC,CAAC,sCAAsC,CAAC,mCAAmC,CAAC,UAAU,CAAC,iBAAiB,CAAC,UAAU,CAAC,8IAA8I,yBAAyB,CAAC,iEAAiE,CAAC,cAAc,CAAC,gBAAgB,CAAC,SAAS,CAAC,mBAAmB,CAAC,6CAA6C,WAAW,CAAC,QAAQ,CAAC,kBAAkB,CAAC,uCAAuC,CAAC,oCAAoC,CAAC,mCAAmC,CAAC,+BAA+B,CAAC,4BAA4B,CAAC,yBAAyB,CAAC,wBAAwB,CAAC,oBAAoB,CAAC,8CAA8C,WAAW,CAAC,QAAQ,CAAC,iBAAiB,CAAC,uCAAuC,CAAC,oCAAoC,CAAC,mCAAmC,CAAC,+BAA+B,CAAC,4BAA4B,CAAC,yBAAyB,CAAC,wBAAwB,CAAC,oBAAoB,CAAC,sHAAsH,oCAAoC,CAAC,iCAAiC,CAAC,gCAAgC,CAAC,4BAA4B,CAAC,wHAAwH,oCAAoC,CAAC,iCAAiC,CAAC,gCAAgC,CAAC,4BAA4B,CAAC,kCAAkC,8CAA8C,CAAC,yCAAyC,eAAe,CAAC,mFAAmF,uBAAuB,CAAC,oBAAoB,CAAC,mBAAmB,CAAC,kBAAkB,CAAC,eAAe,CAAC,4CAA4C,WAAW,CAAC,QAAQ,CAAC,kBAAkB,CAAC,uCAAuC,CAAC,oCAAoC,CAAC,mCAAmC,CAAC,+BAA+B,CAAC,4BAA4B,CAAC,yBAAyB,CAAC,wBAAwB,CAAC,oBAAoB,CAAC,6CAA6C,WAAW,CAAC,QAAQ,CAAC,iBAAiB,CAAC,uCAAuC,CAAC,oCAAoC,CAAC,mCAAmC,CAAC,+BAA+B,CAAC,4BAA4B,CAAC,yBAAyB,CAAC,wBAAwB,CAAC,oBAAoB,CAAC,oHAAoH,oCAAoC,CAAC,iCAAiC,CAAC,gCAAgC,CAAC,4BAA4B,CAAC,sHAAsH,oCAAoC,CAAC,iCAAiC,CAAC,gCAAgC,CAAC,4BAA4B,CAAC,iDAAiD,WAAW,CAAC,MAAM,CAAC,kBAAkB,CAAC,oCAAoC,CAAC,iCAAiC,CAAC,gCAAgC,CAAC,4BAA4B,CAAC,4BAA4B,CAAC,yBAAyB,CAAC,wBAAwB,CAAC,oBAAoB,CAAC,kDAAkD,WAAW,CAAC,QAAQ,CAAC,iBAAiB,CAAC,oCAAoC,CAAC,iCAAiC,CAAC,gCAAgC,CAAC,4BAA4B,CAAC,4BAA4B,CAAC,yBAAyB,CAAC,wBAAwB,CAAC,oBAAoB,CAAC,8HAA8H,iCAAiC,CAAC,8BAA8B,CAAC,6BAA6B,CAAC,yBAAyB,CAAC,gIAAgI,iCAAiC,CAAC,8BAA8B,CAAC,6BAA6B,CAAC,yBAAyB,CAAC,kDAAkD,WAAW,CAAC,OAAO,CAAC,kBAAkB,CAAC,oCAAoC,CAAC,iCAAiC,CAAC,gCAAgC,CAAC,4BAA4B,CAAC,4BAA4B,CAAC,yBAAyB,CAAC,wBAAwB,CAAC,oBAAoB,CAAC,mDAAmD,WAAW,CAAC,SAAS,CAAC,iBAAiB,CAAC,oCAAoC,CAAC,iCAAiC,CAAC,gCAAgC,CAAC,4BAA4B,CAAC,4BAA4B,CAAC,yBAAyB,CAAC,wBAAwB,CAAC,oBAAoB,CAAC,gIAAgI,iCAAiC,CAAC,8BAA8B,CAAC,6BAA6B,CAAC,yBAAyB,CAAC,kIAAkI,iCAAiC,CAAC,8BAA8B,CAAC,6BAA6B,CAAC,yBAAyB,CAAC,8CAA8C,QAAQ,CAAC,eAAe,CAAC,QAAQ,CAAC,wCAAwC,CAAC,qCAAqC,CAAC,oCAAoC,CAAC,gCAAgC,CAAC,+CAA+C,4DAAia,CAAC,yBAAyB,CAAC,UAAU,CAAC,UAAU,CAAC,QAAQ,CAAC,cAAc,CAAC,QAAQ,CAAC,wCAAwC,CAAC,qCAAqC,CAAC,oCAAoC,CAAC,gCAAgC,CAAC,wHAAwH,oCAAoC,CAAC,iCAAiC,CAAC,gCAAgC,CAAC,4BAA4B,CAAC,0HAA0H,oCAAoC,CAAC,iCAAiC,CAAC,gCAAgC,CAAC,4BAA4B,CAAC,mDAAmD,MAAM,CAAC,eAAe,CAAC,QAAQ,CAAC,qCAAqC,CAAC,kCAAkC,CAAC,iCAAiC,CAAC,6BAA6B,CAAC,oDAAoD,4DAAia,CAAC,yBAAyB,CAAC,UAAU,CAAC,UAAU,CAAC,QAAQ,CAAC,cAAc,CAAC,QAAQ,CAAC,qCAAqC,CAAC,kCAAkC,CAAC,iCAAiC,CAAC,6BAA6B,CAAC,kIAAkI,iCAAiC,CAAC,8BAA8B,CAAC,6BAA6B,CAAC,yBAAyB,CAAC,oIAAoI,iCAAiC,CAAC,8BAA8B,CAAC,6BAA6B,CAAC,yBAAyB,CAAC,oDAAoD,OAAO,CAAC,eAAe,CAAC,QAAQ,CAAC,qCAAqC,CAAC,kCAAkC,CAAC,iCAAiC,CAAC,6BAA6B,CAAC,qDAAqD,4DAAia,CAAC,yBAAyB,CAAC,UAAU,CAAC,UAAU,CAAC,SAAS,CAAC,cAAc,CAAC,QAAQ,CAAC,qCAAqC,CAAC,kCAAkC,CAAC,iCAAiC,CAAC,6BAA6B,CAAC,oIAAoI,iCAAiC,CAAC,8BAA8B,CAAC,6BAA6B,CAAC,yBAAyB,CAAC,sIAAsI,iCAAiC,CAAC,8BAA8B,CAAC,6BAA6B,CAAC,yBAAyB,CAAC,8CAA8C,iBAAiB,CAAC,UAAU,CAAC,OAAO,CAAC,uCAAuC,CAAC,oCAAoC,CAAC,mCAAmC,CAAC,+BAA+B,CAAC,+CAA+C,4DAAka,CAAC,yBAAyB,CAAC,SAAS,CAAC,WAAW,CAAC,gBAAgB,CAAC,UAAU,CAAC,OAAO,CAAC,uCAAuC,CAAC,oCAAoC,CAAC,mCAAmC,CAAC,+BAA+B,CAAC,wHAAwH,oCAAoC,CAAC,iCAAiC,CAAC,gCAAgC,CAAC,4BAA4B,CAAC,0HAA0H,oCAAoC,CAAC,iCAAiC,CAAC,gCAAgC,CAAC,4BAA4B,CAAC,+CAA+C,SAAS,CAAC,gBAAgB,CAAC,OAAO,CAAC,wCAAwC,CAAC,qCAAqC,CAAC,oCAAoC,CAAC,gCAAgC,CAAC,gDAAgD,4DAA+Z,CAAC,yBAAyB,CAAC,SAAS,CAAC,WAAW,CAAC,SAAS,CAAC,eAAe,CAAC,OAAO,CAAC,wCAAwC,CAAC,qCAAqC,CAAC,oCAAoC,CAAC,gCAAgC,CAAC,0HAA0H,oCAAoC,CAAC,iCAAiC,CAAC,gCAAgC,CAAC,4BAA4B,CAAC,4HAA4H,oCAAoC,CAAC,iCAAiC,CAAC,gCAAgC,CAAC,4BAA4B,CAAC,kDAAkD,kBAAkB,CAAC,UAAU,CAAC,mDAAmD,kBAAkB,CAAC,WAAW,CAAC,kDAAkD,kBAAkB,CAAC,WAAW,CAAC,mDAAmD,kBAAkB,CAAC,WAAW,CAAC,qCAAqC,mDAAmD,kBAAkB,CAAC,UAAU,CAAC,CAAC,gDAAgD,kBAAkB,CAAC,UAAU","sourcesContent":["button[data-balloon]{overflow:visible}[data-balloon]{position:relative;cursor:pointer}[data-balloon]:after{filter:alpha(opacity=0);-ms-filter:\"progid:DXImageTransform.Microsoft.Alpha(Opacity=0)\";-moz-opacity:0;-khtml-opacity:0;opacity:0;pointer-events:none;-webkit-transition:all 0.18s ease-out 0.18s;-moz-transition:all 0.18s ease-out 0.18s;-ms-transition:all 0.18s ease-out 0.18s;-o-transition:all 0.18s ease-out 0.18s;transition:all 0.18s ease-out 0.18s;font-family:sans-serif !important;font-weight:normal !important;font-style:normal !important;text-shadow:none !important;font-size:12px !important;background:rgba(17,17,17,0.9);border-radius:4px;color:#fff;content:attr(data-balloon);padding:.5em 1em;position:absolute;white-space:nowrap;z-index:10}[data-balloon]:before{background:no-repeat url(\"data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D%22http://www.w3.org/2000/svg%22%20width%3D%2236px%22%20height%3D%2212px%22%3E%3Cpath%20fill%3D%22rgba(17,17,17,0.9)%22%20transform%3D%22rotate(0)%22%20d%3D%22M2.658,0.000%20C-13.615,0.000%2050.938,0.000%2034.662,0.000%20C28.662,0.000%2023.035,12.002%2018.660,12.002%20C14.285,12.002%208.594,0.000%202.658,0.000%20Z%22/%3E%3C/svg%3E\");background-size:100% auto;width:18px;height:6px;filter:alpha(opacity=0);-ms-filter:\"progid:DXImageTransform.Microsoft.Alpha(Opacity=0)\";-moz-opacity:0;-khtml-opacity:0;opacity:0;pointer-events:none;-webkit-transition:all 0.18s ease-out 0.18s;-moz-transition:all 0.18s ease-out 0.18s;-ms-transition:all 0.18s ease-out 0.18s;-o-transition:all 0.18s ease-out 0.18s;transition:all 0.18s ease-out 0.18s;content:'';position:absolute;z-index:10}[data-balloon]:hover:before,[data-balloon]:hover:after,[data-balloon][data-balloon-visible]:before,[data-balloon][data-balloon-visible]:after{filter:alpha(opacity=100);-ms-filter:\"progid:DXImageTransform.Microsoft.Alpha(Opacity=100)\";-moz-opacity:1;-khtml-opacity:1;opacity:1;pointer-events:auto}[data-balloon]:not([data-balloon-pos]):after{bottom:100%;left:50%;margin-bottom:11px;-webkit-transform:translate(-50%, 10px);-moz-transform:translate(-50%, 10px);-ms-transform:translate(-50%, 10px);transform:translate(-50%, 10px);-webkit-transform-origin:top;-moz-transform-origin:top;-ms-transform-origin:top;transform-origin:top}[data-balloon]:not([data-balloon-pos]):before{bottom:100%;left:50%;margin-bottom:5px;-webkit-transform:translate(-50%, 10px);-moz-transform:translate(-50%, 10px);-ms-transform:translate(-50%, 10px);transform:translate(-50%, 10px);-webkit-transform-origin:top;-moz-transform-origin:top;-ms-transform-origin:top;transform-origin:top}[data-balloon]:not([data-balloon-pos]):hover:after,[data-balloon]:not([data-balloon-pos])[data-balloon-visible]:after{-webkit-transform:translate(-50%, 0);-moz-transform:translate(-50%, 0);-ms-transform:translate(-50%, 0);transform:translate(-50%, 0)}[data-balloon]:not([data-balloon-pos]):hover:before,[data-balloon]:not([data-balloon-pos])[data-balloon-visible]:before{-webkit-transform:translate(-50%, 0);-moz-transform:translate(-50%, 0);-ms-transform:translate(-50%, 0);transform:translate(-50%, 0)}[data-balloon].font-awesome:after{font-family:FontAwesome, sans-serif !important}[data-balloon][data-balloon-break]:after{white-space:pre}[data-balloon][data-balloon-blunt]:before,[data-balloon][data-balloon-blunt]:after{-webkit-transition:none;-moz-transition:none;-ms-transition:none;-o-transition:none;transition:none}[data-balloon][data-balloon-pos=\"up\"]:after{bottom:100%;left:50%;margin-bottom:11px;-webkit-transform:translate(-50%, 10px);-moz-transform:translate(-50%, 10px);-ms-transform:translate(-50%, 10px);transform:translate(-50%, 10px);-webkit-transform-origin:top;-moz-transform-origin:top;-ms-transform-origin:top;transform-origin:top}[data-balloon][data-balloon-pos=\"up\"]:before{bottom:100%;left:50%;margin-bottom:5px;-webkit-transform:translate(-50%, 10px);-moz-transform:translate(-50%, 10px);-ms-transform:translate(-50%, 10px);transform:translate(-50%, 10px);-webkit-transform-origin:top;-moz-transform-origin:top;-ms-transform-origin:top;transform-origin:top}[data-balloon][data-balloon-pos=\"up\"]:hover:after,[data-balloon][data-balloon-pos=\"up\"][data-balloon-visible]:after{-webkit-transform:translate(-50%, 0);-moz-transform:translate(-50%, 0);-ms-transform:translate(-50%, 0);transform:translate(-50%, 0)}[data-balloon][data-balloon-pos=\"up\"]:hover:before,[data-balloon][data-balloon-pos=\"up\"][data-balloon-visible]:before{-webkit-transform:translate(-50%, 0);-moz-transform:translate(-50%, 0);-ms-transform:translate(-50%, 0);transform:translate(-50%, 0)}[data-balloon][data-balloon-pos=\"up-left\"]:after{bottom:100%;left:0;margin-bottom:11px;-webkit-transform:translate(0, 10px);-moz-transform:translate(0, 10px);-ms-transform:translate(0, 10px);transform:translate(0, 10px);-webkit-transform-origin:top;-moz-transform-origin:top;-ms-transform-origin:top;transform-origin:top}[data-balloon][data-balloon-pos=\"up-left\"]:before{bottom:100%;left:5px;margin-bottom:5px;-webkit-transform:translate(0, 10px);-moz-transform:translate(0, 10px);-ms-transform:translate(0, 10px);transform:translate(0, 10px);-webkit-transform-origin:top;-moz-transform-origin:top;-ms-transform-origin:top;transform-origin:top}[data-balloon][data-balloon-pos=\"up-left\"]:hover:after,[data-balloon][data-balloon-pos=\"up-left\"][data-balloon-visible]:after{-webkit-transform:translate(0, 0);-moz-transform:translate(0, 0);-ms-transform:translate(0, 0);transform:translate(0, 0)}[data-balloon][data-balloon-pos=\"up-left\"]:hover:before,[data-balloon][data-balloon-pos=\"up-left\"][data-balloon-visible]:before{-webkit-transform:translate(0, 0);-moz-transform:translate(0, 0);-ms-transform:translate(0, 0);transform:translate(0, 0)}[data-balloon][data-balloon-pos=\"up-right\"]:after{bottom:100%;right:0;margin-bottom:11px;-webkit-transform:translate(0, 10px);-moz-transform:translate(0, 10px);-ms-transform:translate(0, 10px);transform:translate(0, 10px);-webkit-transform-origin:top;-moz-transform-origin:top;-ms-transform-origin:top;transform-origin:top}[data-balloon][data-balloon-pos=\"up-right\"]:before{bottom:100%;right:5px;margin-bottom:5px;-webkit-transform:translate(0, 10px);-moz-transform:translate(0, 10px);-ms-transform:translate(0, 10px);transform:translate(0, 10px);-webkit-transform-origin:top;-moz-transform-origin:top;-ms-transform-origin:top;transform-origin:top}[data-balloon][data-balloon-pos=\"up-right\"]:hover:after,[data-balloon][data-balloon-pos=\"up-right\"][data-balloon-visible]:after{-webkit-transform:translate(0, 0);-moz-transform:translate(0, 0);-ms-transform:translate(0, 0);transform:translate(0, 0)}[data-balloon][data-balloon-pos=\"up-right\"]:hover:before,[data-balloon][data-balloon-pos=\"up-right\"][data-balloon-visible]:before{-webkit-transform:translate(0, 0);-moz-transform:translate(0, 0);-ms-transform:translate(0, 0);transform:translate(0, 0)}[data-balloon][data-balloon-pos='down']:after{left:50%;margin-top:11px;top:100%;-webkit-transform:translate(-50%, -10px);-moz-transform:translate(-50%, -10px);-ms-transform:translate(-50%, -10px);transform:translate(-50%, -10px)}[data-balloon][data-balloon-pos='down']:before{background:no-repeat url(\"data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D%22http://www.w3.org/2000/svg%22%20width%3D%2236px%22%20height%3D%2212px%22%3E%3Cpath%20fill%3D%22rgba(17,17,17,0.9)%22%20transform%3D%22rotate(180 18 6)%22%20d%3D%22M2.658,0.000%20C-13.615,0.000%2050.938,0.000%2034.662,0.000%20C28.662,0.000%2023.035,12.002%2018.660,12.002%20C14.285,12.002%208.594,0.000%202.658,0.000%20Z%22/%3E%3C/svg%3E\");background-size:100% auto;width:18px;height:6px;left:50%;margin-top:5px;top:100%;-webkit-transform:translate(-50%, -10px);-moz-transform:translate(-50%, -10px);-ms-transform:translate(-50%, -10px);transform:translate(-50%, -10px)}[data-balloon][data-balloon-pos='down']:hover:after,[data-balloon][data-balloon-pos='down'][data-balloon-visible]:after{-webkit-transform:translate(-50%, 0);-moz-transform:translate(-50%, 0);-ms-transform:translate(-50%, 0);transform:translate(-50%, 0)}[data-balloon][data-balloon-pos='down']:hover:before,[data-balloon][data-balloon-pos='down'][data-balloon-visible]:before{-webkit-transform:translate(-50%, 0);-moz-transform:translate(-50%, 0);-ms-transform:translate(-50%, 0);transform:translate(-50%, 0)}[data-balloon][data-balloon-pos='down-left']:after{left:0;margin-top:11px;top:100%;-webkit-transform:translate(0, -10px);-moz-transform:translate(0, -10px);-ms-transform:translate(0, -10px);transform:translate(0, -10px)}[data-balloon][data-balloon-pos='down-left']:before{background:no-repeat url(\"data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D%22http://www.w3.org/2000/svg%22%20width%3D%2236px%22%20height%3D%2212px%22%3E%3Cpath%20fill%3D%22rgba(17,17,17,0.9)%22%20transform%3D%22rotate(180 18 6)%22%20d%3D%22M2.658,0.000%20C-13.615,0.000%2050.938,0.000%2034.662,0.000%20C28.662,0.000%2023.035,12.002%2018.660,12.002%20C14.285,12.002%208.594,0.000%202.658,0.000%20Z%22/%3E%3C/svg%3E\");background-size:100% auto;width:18px;height:6px;left:5px;margin-top:5px;top:100%;-webkit-transform:translate(0, -10px);-moz-transform:translate(0, -10px);-ms-transform:translate(0, -10px);transform:translate(0, -10px)}[data-balloon][data-balloon-pos='down-left']:hover:after,[data-balloon][data-balloon-pos='down-left'][data-balloon-visible]:after{-webkit-transform:translate(0, 0);-moz-transform:translate(0, 0);-ms-transform:translate(0, 0);transform:translate(0, 0)}[data-balloon][data-balloon-pos='down-left']:hover:before,[data-balloon][data-balloon-pos='down-left'][data-balloon-visible]:before{-webkit-transform:translate(0, 0);-moz-transform:translate(0, 0);-ms-transform:translate(0, 0);transform:translate(0, 0)}[data-balloon][data-balloon-pos='down-right']:after{right:0;margin-top:11px;top:100%;-webkit-transform:translate(0, -10px);-moz-transform:translate(0, -10px);-ms-transform:translate(0, -10px);transform:translate(0, -10px)}[data-balloon][data-balloon-pos='down-right']:before{background:no-repeat url(\"data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D%22http://www.w3.org/2000/svg%22%20width%3D%2236px%22%20height%3D%2212px%22%3E%3Cpath%20fill%3D%22rgba(17,17,17,0.9)%22%20transform%3D%22rotate(180 18 6)%22%20d%3D%22M2.658,0.000%20C-13.615,0.000%2050.938,0.000%2034.662,0.000%20C28.662,0.000%2023.035,12.002%2018.660,12.002%20C14.285,12.002%208.594,0.000%202.658,0.000%20Z%22/%3E%3C/svg%3E\");background-size:100% auto;width:18px;height:6px;right:5px;margin-top:5px;top:100%;-webkit-transform:translate(0, -10px);-moz-transform:translate(0, -10px);-ms-transform:translate(0, -10px);transform:translate(0, -10px)}[data-balloon][data-balloon-pos='down-right']:hover:after,[data-balloon][data-balloon-pos='down-right'][data-balloon-visible]:after{-webkit-transform:translate(0, 0);-moz-transform:translate(0, 0);-ms-transform:translate(0, 0);transform:translate(0, 0)}[data-balloon][data-balloon-pos='down-right']:hover:before,[data-balloon][data-balloon-pos='down-right'][data-balloon-visible]:before{-webkit-transform:translate(0, 0);-moz-transform:translate(0, 0);-ms-transform:translate(0, 0);transform:translate(0, 0)}[data-balloon][data-balloon-pos='left']:after{margin-right:11px;right:100%;top:50%;-webkit-transform:translate(10px, -50%);-moz-transform:translate(10px, -50%);-ms-transform:translate(10px, -50%);transform:translate(10px, -50%)}[data-balloon][data-balloon-pos='left']:before{background:no-repeat url(\"data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D%22http://www.w3.org/2000/svg%22%20width%3D%2212px%22%20height%3D%2236px%22%3E%3Cpath%20fill%3D%22rgba(17,17,17,0.9)%22%20transform%3D%22rotate(-90 18 18)%22%20d%3D%22M2.658,0.000%20C-13.615,0.000%2050.938,0.000%2034.662,0.000%20C28.662,0.000%2023.035,12.002%2018.660,12.002%20C14.285,12.002%208.594,0.000%202.658,0.000%20Z%22/%3E%3C/svg%3E\");background-size:100% auto;width:6px;height:18px;margin-right:5px;right:100%;top:50%;-webkit-transform:translate(10px, -50%);-moz-transform:translate(10px, -50%);-ms-transform:translate(10px, -50%);transform:translate(10px, -50%)}[data-balloon][data-balloon-pos='left']:hover:after,[data-balloon][data-balloon-pos='left'][data-balloon-visible]:after{-webkit-transform:translate(0, -50%);-moz-transform:translate(0, -50%);-ms-transform:translate(0, -50%);transform:translate(0, -50%)}[data-balloon][data-balloon-pos='left']:hover:before,[data-balloon][data-balloon-pos='left'][data-balloon-visible]:before{-webkit-transform:translate(0, -50%);-moz-transform:translate(0, -50%);-ms-transform:translate(0, -50%);transform:translate(0, -50%)}[data-balloon][data-balloon-pos='right']:after{left:100%;margin-left:11px;top:50%;-webkit-transform:translate(-10px, -50%);-moz-transform:translate(-10px, -50%);-ms-transform:translate(-10px, -50%);transform:translate(-10px, -50%)}[data-balloon][data-balloon-pos='right']:before{background:no-repeat url(\"data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D%22http://www.w3.org/2000/svg%22%20width%3D%2212px%22%20height%3D%2236px%22%3E%3Cpath%20fill%3D%22rgba(17,17,17,0.9)%22%20transform%3D%22rotate(90 6 6)%22%20d%3D%22M2.658,0.000%20C-13.615,0.000%2050.938,0.000%2034.662,0.000%20C28.662,0.000%2023.035,12.002%2018.660,12.002%20C14.285,12.002%208.594,0.000%202.658,0.000%20Z%22/%3E%3C/svg%3E\");background-size:100% auto;width:6px;height:18px;left:100%;margin-left:5px;top:50%;-webkit-transform:translate(-10px, -50%);-moz-transform:translate(-10px, -50%);-ms-transform:translate(-10px, -50%);transform:translate(-10px, -50%)}[data-balloon][data-balloon-pos='right']:hover:after,[data-balloon][data-balloon-pos='right'][data-balloon-visible]:after{-webkit-transform:translate(0, -50%);-moz-transform:translate(0, -50%);-ms-transform:translate(0, -50%);transform:translate(0, -50%)}[data-balloon][data-balloon-pos='right']:hover:before,[data-balloon][data-balloon-pos='right'][data-balloon-visible]:before{-webkit-transform:translate(0, -50%);-moz-transform:translate(0, -50%);-ms-transform:translate(0, -50%);transform:translate(0, -50%)}[data-balloon][data-balloon-length='small']:after{white-space:normal;width:80px}[data-balloon][data-balloon-length='medium']:after{white-space:normal;width:150px}[data-balloon][data-balloon-length='large']:after{white-space:normal;width:260px}[data-balloon][data-balloon-length='xlarge']:after{white-space:normal;width:380px}@media screen and (max-width: 768px){[data-balloon][data-balloon-length='xlarge']:after{white-space:normal;width:90vw}}[data-balloon][data-balloon-length='fit']:after{white-space:normal;width:100%}\n"],"sourceRoot":""}]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ "../../node_modules/css-loader/dist/cjs.js!../../node_modules/sprotty/css/edit-label.css":
/*!***********************************************************************************************!*\
  !*** ../../node_modules/css-loader/dist/cjs.js!../../node_modules/sprotty/css/edit-label.css ***!
  \***********************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../css-loader/dist/runtime/sourceMaps.js */ "../../node_modules/css-loader/dist/runtime/sourceMaps.js");
/* harmony import */ var _css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../css-loader/dist/runtime/api.js */ "../../node_modules/css-loader/dist/runtime/api.js");
/* harmony import */ var _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);
// Imports


var ___CSS_LOADER_EXPORT___ = _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));
// Module
___CSS_LOADER_EXPORT___.push([module.id, `/********************************************************************************
 * Copyright (c) 2019-2020 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/

.label-edit input, .label-edit textarea {
    background: rgba(255, 255, 255, 0.5);
    border-radius: 5px;
    border: 0;
    width: 99%;
    height: 99%;
}

.label-edit input:focus, .label-edit textarea:focus {
    outline: none;
    outline-offset: 0px;
}

.label-edit {
    border-left: 1px dotted gray;
}

.label-edit.validation-warning {
    color: orange;
    border-left: 1px dotted orange;
}

.label-edit.validation-error {
    color: red;
    border-left: 1px dotted red;
}`, "",{"version":3,"sources":["webpack://./../../node_modules/sprotty/css/edit-label.css"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;iFAciF;;AAEjF;IACI,oCAAoC;IACpC,kBAAkB;IAClB,SAAS;IACT,UAAU;IACV,WAAW;AACf;;AAEA;IACI,aAAa;IACb,mBAAmB;AACvB;;AAEA;IACI,4BAA4B;AAChC;;AAEA;IACI,aAAa;IACb,8BAA8B;AAClC;;AAEA;IACI,UAAU;IACV,2BAA2B;AAC/B","sourcesContent":["/********************************************************************************\n * Copyright (c) 2019-2020 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\n.label-edit input, .label-edit textarea {\n    background: rgba(255, 255, 255, 0.5);\n    border-radius: 5px;\n    border: 0;\n    width: 99%;\n    height: 99%;\n}\n\n.label-edit input:focus, .label-edit textarea:focus {\n    outline: none;\n    outline-offset: 0px;\n}\n\n.label-edit {\n    border-left: 1px dotted gray;\n}\n\n.label-edit.validation-warning {\n    color: orange;\n    border-left: 1px dotted orange;\n}\n\n.label-edit.validation-error {\n    color: red;\n    border-left: 1px dotted red;\n}"],"sourceRoot":""}]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ "./lib/app.js":
/*!********************!*\
  !*** ./lib/app.js ***!
  \********************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
/********************************************************************************
 * Copyright (c) 2020-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const client_1 = __webpack_require__(/*! @eclipse-glsp/client */ "../../node_modules/@eclipse-glsp/client/lib/index.js");
const ide_1 = __webpack_require__(/*! @eclipse-glsp/ide */ "../../packages/ide/lib/index.js");
const protocol_1 = __webpack_require__(/*! @eclipse-glsp/protocol */ "../../node_modules/@eclipse-glsp/protocol/lib/index.js");
const di_config_1 = __webpack_require__(/*! ./di.config */ "./lib/di.config.js");
const urlParameters = (0, ide_1.getParameters)();
const filePath = urlParameters.path;
// In the Eclipse Integration, port is dynamic, as multiple editors
// and/or Eclipse Servers may be running in parallel (e.g. 1/Eclipse IDE)
const port = parseInt(urlParameters.port, 10);
const applicationId = urlParameters.application;
const id = 'workflow';
const diagramType = 'workflow-diagram';
const clientId = urlParameters.client || protocol_1.ApplicationIdProvider.get();
const widgetId = urlParameters.widget || clientId;
setWidgetId(widgetId);
const container = (0, di_config_1.default)(widgetId);
const diagramServer = container.get(client_1.TYPES.ModelSource);
diagramServer.clientId = clientId;
const websocket = new WebSocket(`ws://localhost:${port}/${id}`);
(0, protocol_1.listen)(websocket, connection => initialize(connection));
async function initialize(connectionProvider) {
    const client = new client_1.BaseJsonrpcGLSPClient({ id, connectionProvider });
    await diagramServer.connect(client);
    const result = await client.initializeServer({
        applicationId,
        protocolVersion: protocol_1.GLSPClient.protocolVersion
    });
    await (0, client_1.configureServerActions)(result, diagramType, container);
    await client.initializeClientSession({ clientSessionId: diagramServer.clientId, diagramType });
    const actionDispatcher = container.get(client_1.TYPES.IActionDispatcher);
    actionDispatcher.dispatch(client_1.RequestModelAction.create({
        // Java's URLEncoder.encode encodes spaces as plus sign but decodeURI expects spaces to be encoded as %20.
        // See also https://en.wikipedia.org/wiki/Query_string#URL_encoding for URL encoding in forms vs generic URL encoding.
        options: {
            sourceUri: 'file://' + decodeURI(filePath.replace(/\+/g, '%20')),
            diagramType: 'workflow-diagram'
        }
    }));
    actionDispatcher.dispatch(client_1.RequestTypeHintsAction.create());
    actionDispatcher.dispatch(client_1.EnableToolPaletteAction.create());
    actionDispatcher.onceModelInitialized().then(() => actionDispatcher.dispatch(client_1.CenterAction.create([])));
}
function setWidgetId(mainWidgetId) {
    const mainWidget = document.getElementById('sprotty');
    if (mainWidget) {
        mainWidget.id = mainWidgetId;
    }
}


/***/ }),

/***/ "./lib/di.config.js":
/*!**************************!*\
  !*** ./lib/di.config.js ***!
  \**************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
/********************************************************************************
 * Copyright (c) 2020-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const lib_1 = __webpack_require__(/*! @eclipse-glsp-examples/workflow-glsp/lib */ "../../node_modules/@eclipse-glsp-examples/workflow-glsp/lib/index.js");
const client_1 = __webpack_require__(/*! @eclipse-glsp/client */ "../../node_modules/@eclipse-glsp/client/lib/index.js");
const ide_1 = __webpack_require__(/*! @eclipse-glsp/ide */ "../../packages/ide/lib/index.js");
__webpack_require__(/*! ../css/diagram.css */ "./css/diagram.css");
function createContainer(widgetId) {
    const container = (0, lib_1.createWorkflowDiagramContainer)(widgetId);
    container.bind(client_1.TYPES.ModelSource).to(ide_1.EclipseGLSPDiagramServer).inSingletonScope();
    container.rebind(client_1.TYPES.ILogger).to(client_1.ConsoleLogger).inSingletonScope();
    container.rebind(client_1.TYPES.LogLevel).toConstantValue(client_1.LogLevel.warn);
    container.load(ide_1.eclipseCopyPasteModule);
    container.load(ide_1.eclipseDeleteModule);
    return container;
}
exports["default"] = createContainer;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp-examples/workflow-glsp/lib/di.config.js":
/*!********************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp-examples/workflow-glsp/lib/di.config.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.initializeWorkflowDiagramContainer = exports.createWorkflowDiagramContainer = exports.workflowDiagramModule = void 0;
/********************************************************************************
 * Copyright (c) 2019-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const client_1 = __webpack_require__(/*! @eclipse-glsp/client */ "../../node_modules/@eclipse-glsp/client/lib/index.js");
__webpack_require__(/*! balloon-css/balloon.min.css */ "../../node_modules/balloon-css/balloon.min.css");
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
__webpack_require__(/*! sprotty/css/edit-label.css */ "../../node_modules/sprotty/css/edit-label.css");
__webpack_require__(/*! ../css/diagram.css */ "../../node_modules/@eclipse-glsp-examples/workflow-glsp/css/diagram.css");
const di_config_1 = __webpack_require__(/*! ./direct-task-editing/di.config */ "../../node_modules/@eclipse-glsp-examples/workflow-glsp/lib/direct-task-editing/di.config.js");
const model_1 = __webpack_require__(/*! ./model */ "../../node_modules/@eclipse-glsp-examples/workflow-glsp/lib/model.js");
const workflow_views_1 = __webpack_require__(/*! ./workflow-views */ "../../node_modules/@eclipse-glsp-examples/workflow-glsp/lib/workflow-views.js");
exports.workflowDiagramModule = new inversify_1.ContainerModule((bind, unbind, isBound, rebind) => {
    const context = { bind, unbind, isBound, rebind };
    (0, client_1.bindOrRebind)(context, client_1.TYPES.ILogger).to(client_1.ConsoleLogger).inSingletonScope();
    (0, client_1.bindOrRebind)(context, client_1.TYPES.LogLevel).toConstantValue(client_1.LogLevel.warn);
    bind(client_1.TYPES.ISnapper).to(client_1.GridSnapper);
    (0, client_1.bindAsService)(context, client_1.TYPES.ICommandPaletteActionProvider, client_1.RevealNamedElementActionProvider);
    (0, client_1.bindAsService)(context, client_1.TYPES.IContextMenuItemProvider, client_1.DeleteElementContextMenuItemProvider);
    (0, client_1.configureDefaultModelElements)(context);
    (0, client_1.configureModelElement)(context, 'task:automated', model_1.TaskNode, client_1.RoundedCornerNodeView);
    (0, client_1.configureModelElement)(context, 'task:manual', model_1.TaskNode, client_1.RoundedCornerNodeView);
    (0, client_1.configureModelElement)(context, 'label:heading', client_1.SLabel, client_1.SLabelView, { enable: [client_1.editLabelFeature] });
    (0, client_1.configureModelElement)(context, 'comp:comp', client_1.SCompartment, client_1.SCompartmentView);
    (0, client_1.configureModelElement)(context, 'comp:header', client_1.SCompartment, client_1.SCompartmentView);
    (0, client_1.configureModelElement)(context, 'label:icon', client_1.SLabel, client_1.SLabelView);
    (0, client_1.configureModelElement)(context, client_1.DefaultTypes.EDGE, client_1.GEdge, workflow_views_1.WorkflowEdgeView);
    (0, client_1.configureModelElement)(context, 'edge:weighted', model_1.WeightedEdge, workflow_views_1.WorkflowEdgeView);
    (0, client_1.configureModelElement)(context, 'icon', model_1.Icon, workflow_views_1.IconView);
    (0, client_1.configureModelElement)(context, 'activityNode:merge', model_1.ActivityNode, client_1.DiamondNodeView);
    (0, client_1.configureModelElement)(context, 'activityNode:decision', model_1.ActivityNode, client_1.DiamondNodeView);
    (0, client_1.configureModelElement)(context, 'activityNode:fork', model_1.ActivityNode, client_1.RectangularNodeView);
    (0, client_1.configureModelElement)(context, 'activityNode:join', model_1.ActivityNode, client_1.RectangularNodeView);
    (0, client_1.configureModelElement)(context, client_1.DefaultTypes.GRAPH, client_1.GLSPGraph, client_1.GLSPProjectionView);
    (0, client_1.configureModelElement)(context, 'category', model_1.CategoryNode, client_1.RoundedCornerNodeView);
    (0, client_1.configureModelElement)(context, 'struct', client_1.SCompartment, client_1.StructureCompartmentView);
});
function createWorkflowDiagramContainer(widgetId, ...containerConfiguration) {
    return initializeWorkflowDiagramContainer(new inversify_1.Container(), widgetId, ...containerConfiguration);
}
exports.createWorkflowDiagramContainer = createWorkflowDiagramContainer;
function initializeWorkflowDiagramContainer(container, widgetId, ...containerConfiguration) {
    (0, client_1.initializeDiagramContainer)(container, exports.workflowDiagramModule, di_config_1.directTaskEditor, client_1.glspAccessibilityModule, ...containerConfiguration);
    (0, client_1.overrideViewerOptions)(container, {
        baseDiv: widgetId,
        hiddenDiv: widgetId + '_hidden'
    });
    return container;
}
exports.initializeWorkflowDiagramContainer = initializeWorkflowDiagramContainer;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp-examples/workflow-glsp/lib/direct-task-editing/di.config.js":
/*!****************************************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp-examples/workflow-glsp/lib/direct-task-editing/di.config.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.directTaskEditor = void 0;
/********************************************************************************
 * Copyright (c) 2019-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const client_1 = __webpack_require__(/*! @eclipse-glsp/client */ "../../node_modules/@eclipse-glsp/client/lib/index.js");
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const direct_task_editor_1 = __webpack_require__(/*! ./direct-task-editor */ "../../node_modules/@eclipse-glsp-examples/workflow-glsp/lib/direct-task-editing/direct-task-editor.js");
exports.directTaskEditor = new inversify_1.ContainerModule((bind, _unbind, _isBound) => {
    (0, client_1.bindAsService)(bind, client_1.TYPES.IUIExtension, direct_task_editor_1.TaskEditor);
});


/***/ }),

/***/ "../../node_modules/@eclipse-glsp-examples/workflow-glsp/lib/direct-task-editing/direct-task-editor.js":
/*!*************************************************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp-examples/workflow-glsp/lib/direct-task-editing/direct-task-editor.js ***!
  \*************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var TaskEditor_1;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TaskEditor = exports.EditTaskOperation = void 0;
/********************************************************************************
 * Copyright (c) 2020-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const client_1 = __webpack_require__(/*! @eclipse-glsp/client */ "../../node_modules/@eclipse-glsp/client/lib/index.js");
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const model_1 = __webpack_require__(/*! ../model */ "../../node_modules/@eclipse-glsp-examples/workflow-glsp/lib/model.js");
var EditTaskOperation;
(function (EditTaskOperation) {
    EditTaskOperation.KIND = 'editTask';
    function is(object) {
        return (client_1.Action.hasKind(object, EditTaskOperation.KIND) &&
            (0, client_1.hasStringProp)(object, 'taskId') &&
            (0, client_1.hasStringProp)(object, 'feature') &&
            (0, client_1.hasStringProp)(object, 'value'));
    }
    EditTaskOperation.is = is;
    function create(options) {
        return Object.assign({ kind: EditTaskOperation.KIND, isOperation: true }, options);
    }
    EditTaskOperation.create = create;
})(EditTaskOperation = exports.EditTaskOperation || (exports.EditTaskOperation = {}));
let TaskEditor = TaskEditor_1 = class TaskEditor extends client_1.AbstractUIExtension {
    constructor() {
        super(...arguments);
        this.autoSuggestionSettings = {
            noSuggestionsMessage: 'No suggestions available',
            suggestionsClass: 'command-palette-suggestions',
            debounceWaitMs: 50,
            showOnFocus: true
        };
    }
    id() {
        return TaskEditor_1.ID;
    }
    containerClass() {
        return 'command-palette';
    }
    initializeContents(containerElement) {
        this.autoSuggestion = new client_1.AutoCompleteWidget(this.autoSuggestionSettings, { provideSuggestions: input => this.retrieveSuggestions(input) }, { executeFromSuggestion: input => this.executeFromSuggestion(input) }, () => this.hide(), this.logger);
        this.autoSuggestion.configureValidation({ validate: input => this.validateInput(input) }, new client_1.ValidationDecorator(containerElement));
        this.autoSuggestion.configureTextSubmitHandler({
            executeFromTextOnlyInput: (input) => this.executeFromTextOnlyInput(input)
        });
        this.autoSuggestion.initialize(containerElement);
    }
    show(root, ...contextElementIds) {
        super.show(root, ...contextElementIds);
        this.autoSuggestion.open(root);
    }
    onBeforeShow(containerElement, root, ...contextElementIds) {
        this.task = getTask(contextElementIds, root.index)[0];
        this.autoSuggestion.inputField.value = '';
        this.setPosition(containerElement);
    }
    setPosition(containerElement) {
        let x = 0;
        let y = 0;
        if (this.task) {
            const bounds = (0, client_1.getAbsoluteClientBounds)(this.task, this.domHelper, this.viewerOptions);
            x = bounds.x + 5;
            y = bounds.y + 5;
        }
        containerElement.style.left = `${x}px`;
        containerElement.style.top = `${y}px`;
        containerElement.style.width = '200px';
    }
    async retrieveSuggestions(input) {
        const response = await this.actionDispatcher.request(client_1.RequestContextActions.create({ contextId: TaskEditor_1.ID, editorContext: this.editorContextService.get({ ['text']: input }) }));
        if (client_1.SetContextActions.is(response)) {
            return response.actions;
        }
        return Promise.reject();
    }
    async validateInput(input) {
        const response = await this.actionDispatcher.request(client_1.RequestEditValidationAction.create({ contextId: TaskEditor_1.ID, modelElementId: this.task.id, text: input }));
        if (client_1.SetEditValidationResultAction.is(response)) {
            return response.status;
        }
        return Promise.reject();
    }
    executeFromSuggestion(input) {
        this.actionDispatcher.dispatchAll((0, client_1.toActionArray)(input));
    }
    executeFromTextOnlyInput(input) {
        if (input.startsWith('duration:')) {
            const value = input.substring('duration:'.length);
            const action = EditTaskOperation.create({ taskId: this.task.id, feature: 'duration', value });
            this.actionDispatcher.dispatch(action);
        }
        else if (input.startsWith('taskType:')) {
            const value = input.substring('taskType:'.length);
            const action = EditTaskOperation.create({ taskId: this.task.id, feature: 'taskType', value });
            this.actionDispatcher.dispatch(action);
        }
        else {
            throw new Error('Unsupported Task Editing: ' + input);
        }
    }
    hide() {
        this.autoSuggestion.dispose();
        super.hide();
    }
};
TaskEditor.ID = 'task-editor';
__decorate([
    (0, inversify_1.inject)(client_1.TYPES.IActionDispatcher),
    __metadata("design:type", client_1.GLSPActionDispatcher)
], TaskEditor.prototype, "actionDispatcher", void 0);
__decorate([
    (0, inversify_1.inject)(client_1.EditorContextService),
    __metadata("design:type", client_1.EditorContextService)
], TaskEditor.prototype, "editorContextService", void 0);
__decorate([
    (0, inversify_1.inject)(client_1.TYPES.ViewerOptions),
    __metadata("design:type", Object)
], TaskEditor.prototype, "viewerOptions", void 0);
__decorate([
    (0, inversify_1.inject)(client_1.TYPES.DOMHelper),
    __metadata("design:type", client_1.DOMHelper)
], TaskEditor.prototype, "domHelper", void 0);
__decorate([
    (0, inversify_1.inject)(client_1.TYPES.ILogger),
    __metadata("design:type", Object)
], TaskEditor.prototype, "logger", void 0);
TaskEditor = TaskEditor_1 = __decorate([
    (0, inversify_1.injectable)()
], TaskEditor);
exports.TaskEditor = TaskEditor;
function getTask(ids, index) {
    return ids.map(id => index.getById(id)).filter(element => element && (0, model_1.isTaskNode)(element));
}


/***/ }),

/***/ "../../node_modules/@eclipse-glsp-examples/workflow-glsp/lib/index.js":
/*!****************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp-examples/workflow-glsp/lib/index.js ***!
  \****************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
/********************************************************************************
 * Copyright (c) 2019-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
__exportStar(__webpack_require__(/*! ./di.config */ "../../node_modules/@eclipse-glsp-examples/workflow-glsp/lib/di.config.js"), exports);
__exportStar(__webpack_require__(/*! ./direct-task-editing/direct-task-editor */ "../../node_modules/@eclipse-glsp-examples/workflow-glsp/lib/direct-task-editing/direct-task-editor.js"), exports);
__exportStar(__webpack_require__(/*! ./model */ "../../node_modules/@eclipse-glsp-examples/workflow-glsp/lib/model.js"), exports);
__exportStar(__webpack_require__(/*! ./workflow-views */ "../../node_modules/@eclipse-glsp-examples/workflow-glsp/lib/workflow-views.js"), exports);


/***/ }),

/***/ "../../node_modules/@eclipse-glsp-examples/workflow-glsp/lib/model.js":
/*!****************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp-examples/workflow-glsp/lib/model.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CategoryNode = exports.Icon = exports.ActivityNode = exports.WeightedEdge = exports.isTaskNode = exports.TaskNode = void 0;
/********************************************************************************
 * Copyright (c) 2020-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const client_1 = __webpack_require__(/*! @eclipse-glsp/client */ "../../node_modules/@eclipse-glsp/client/lib/index.js");
class TaskNode extends client_1.RectangularNode {
    get editableLabel() {
        const label = this.children.find(element => element.type === 'label:heading');
        if (label && (0, client_1.isEditableLabel)(label)) {
            return label;
        }
        return undefined;
    }
    get name() {
        var _a;
        const labelText = (_a = this.editableLabel) === null || _a === void 0 ? void 0 : _a.text;
        return labelText ? labelText : '<unknown>';
    }
}
TaskNode.DEFAULT_FEATURES = [
    client_1.connectableFeature,
    client_1.deletableFeature,
    client_1.selectFeature,
    client_1.boundsFeature,
    client_1.moveFeature,
    client_1.layoutContainerFeature,
    client_1.fadeFeature,
    client_1.hoverFeedbackFeature,
    client_1.popupFeature,
    client_1.nameFeature,
    client_1.withEditLabelFeature
];
exports.TaskNode = TaskNode;
function isTaskNode(element) {
    return element instanceof TaskNode || false;
}
exports.isTaskNode = isTaskNode;
class WeightedEdge extends client_1.GEdge {
}
exports.WeightedEdge = WeightedEdge;
class ActivityNode extends client_1.DiamondNode {
    constructor() {
        super(...arguments);
        this.nodeType = ActivityNode.Type.UNDEFINED;
        this.size = {
            width: 32,
            height: 32
        };
        this.strokeWidth = 1;
    }
}
exports.ActivityNode = ActivityNode;
(function (ActivityNode) {
    let Type;
    (function (Type) {
        Type.INITIAL = 'initialNode';
        Type.FINAL = 'finalNode';
        Type.DECISION = 'decisionNode';
        Type.MERGE = 'mergeNode';
        Type.JOIN = 'joinNode';
        Type.FORK = 'forkNode';
        Type.UNDEFINED = 'undefined';
    })(Type = ActivityNode.Type || (ActivityNode.Type = {}));
})(ActivityNode = exports.ActivityNode || (exports.ActivityNode = {}));
class Icon extends client_1.SShapeElement {
    constructor() {
        super(...arguments);
        this.size = {
            width: 32,
            height: 32
        };
    }
}
Icon.DEFAULT_FEATURES = [client_1.boundsFeature, client_1.layoutContainerFeature, client_1.layoutableChildFeature, client_1.fadeFeature];
exports.Icon = Icon;
class CategoryNode extends client_1.RectangularNode {
    constructor() {
        super(...arguments);
        this.name = '';
    }
    get editableLabel() {
        const label = this.children.find(element => element.type === 'label:heading');
        if (label && (0, client_1.isEditableLabel)(label)) {
            return label;
        }
        return undefined;
    }
}
CategoryNode.DEFAULT_FEATURES = [
    client_1.deletableFeature,
    client_1.selectFeature,
    client_1.boundsFeature,
    client_1.moveFeature,
    client_1.layoutContainerFeature,
    client_1.fadeFeature,
    client_1.hoverFeedbackFeature,
    client_1.popupFeature,
    client_1.nameFeature,
    client_1.withEditLabelFeature
];
exports.CategoryNode = CategoryNode;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp-examples/workflow-glsp/lib/workflow-views.js":
/*!*************************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp-examples/workflow-glsp/lib/workflow-views.js ***!
  \*************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.IconView = exports.WorkflowEdgeView = void 0;
/********************************************************************************
 * Copyright (c) 2019-2022 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const client_1 = __webpack_require__(/*! @eclipse-glsp/client */ "../../node_modules/@eclipse-glsp/client/lib/index.js");
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const model_1 = __webpack_require__(/*! ./model */ "../../node_modules/@eclipse-glsp-examples/workflow-glsp/lib/model.js");
// eslint-disable-next-line @typescript-eslint/no-unused-vars
const JSX = { createElement: client_1.svg };
let WorkflowEdgeView = class WorkflowEdgeView extends client_1.PolylineEdgeViewWithGapsOnIntersections {
    renderAdditionals(edge, segments, context) {
        const additionals = super.renderAdditionals(edge, segments, context);
        const p1 = segments[segments.length - 2];
        const p2 = segments[segments.length - 1];
        const arrow = (JSX.createElement("path", { "class-sprotty-edge": true, "class-arrow": true, d: 'M 1,0 L 10,-4 L 10,4 Z', transform: `rotate(${(0, client_1.toDegrees)((0, client_1.angleOfPoint)({ x: p1.x - p2.x, y: p1.y - p2.y }))} ${p2.x} ${p2.y}) translate(${p2.x} ${p2.y})` }));
        additionals.push(arrow);
        return additionals;
    }
};
WorkflowEdgeView = __decorate([
    (0, inversify_1.injectable)()
], WorkflowEdgeView);
exports.WorkflowEdgeView = WorkflowEdgeView;
let IconView = class IconView extends client_1.ShapeView {
    render(element, context) {
        const taskNode = (0, client_1.findParentByFeature)(element, model_1.isTaskNode);
        if (!taskNode || !this.isVisible(element, context)) {
            return undefined;
        }
        let icon;
        if (taskNode.type === 'task:manual') {
            // From codicons: https://github.com/microsoft/vscode-codicons/blob/main/src/icons/account.svg?short_path=8135b2d
            icon =
                // eslint-disable-next-line max-len
                'M16 7.992C16 3.58 12.416 0 8 0S0 3.58 0 7.992c0 2.43 1.104 4.62 2.832 6.09.016.016.032.016.032.032.144.112.288.224.448.336.08.048.144.111.224.175A7.98 7.98 0 0 0 8.016 16a7.98 7.98 0 0 0 4.48-1.375c.08-.048.144-.111.224-.16.144-.111.304-.223.448-.335.016-.016.032-.016.032-.032 1.696-1.487 2.8-3.676 2.8-6.106zm-8 7.001c-1.504 0-2.88-.48-4.016-1.279.016-.128.048-.255.08-.383a4.17 4.17 0 0 1 .416-.991c.176-.304.384-.576.64-.816.24-.24.528-.463.816-.639.304-.176.624-.304.976-.4A4.15 4.15 0 0 1 8 10.342a4.185 4.185 0 0 1 2.928 1.166c.368.368.656.8.864 1.295.112.288.192.592.24.911A7.03 7.03 0 0 1 8 14.993zm-2.448-7.4a2.49 2.49 0 0 1-.208-1.024c0-.351.064-.703.208-1.023.144-.32.336-.607.576-.847.24-.24.528-.431.848-.575.32-.144.672-.208 1.024-.208.368 0 .704.064 1.024.208.32.144.608.336.848.575.24.24.432.528.576.847.144.32.208.672.208 1.023 0 .368-.064.704-.208 1.023a2.84 2.84 0 0 1-.576.848 2.84 2.84 0 0 1-.848.575 2.715 2.715 0 0 1-2.064 0 2.84 2.84 0 0 1-.848-.575 2.526 2.526 0 0 1-.56-.848zm7.424 5.306c0-.032-.016-.048-.016-.08a5.22 5.22 0 0 0-.688-1.406 4.883 4.883 0 0 0-1.088-1.135 5.207 5.207 0 0 0-1.04-.608 2.82 2.82 0 0 0 .464-.383 4.2 4.2 0 0 0 .624-.784 3.624 3.624 0 0 0 .528-1.934 3.71 3.71 0 0 0-.288-1.47 3.799 3.799 0 0 0-.816-1.199 3.845 3.845 0 0 0-1.2-.8 3.72 3.72 0 0 0-1.472-.287 3.72 3.72 0 0 0-1.472.288 3.631 3.631 0 0 0-1.2.815 3.84 3.84 0 0 0-.8 1.199 3.71 3.71 0 0 0-.288 1.47c0 .352.048.688.144 1.007.096.336.224.64.4.927.16.288.384.544.624.784.144.144.304.271.48.383a5.12 5.12 0 0 0-1.04.624c-.416.32-.784.703-1.088 1.119a4.999 4.999 0 0 0-.688 1.406c-.016.032-.016.064-.016.08C1.776 11.636.992 9.91.992 7.992.992 4.14 4.144.991 8 .991s7.008 3.149 7.008 7.001a6.96 6.96 0 0 1-2.032 4.907z';
        }
        else {
            // From codicons: https://github.com/microsoft/vscode-codicons/blob/main/src/icons/gear.svg?short_path=8ee3ec4
            icon =
                // eslint-disable-next-line max-len
                'M9.1 4.4L8.6 2H7.4l-.5 2.4-.7.3-2-1.3-.9.8 1.3 2-.2.7-2.4.5v1.2l2.4.5.3.8-1.3 2 .8.8 2-1.3.8.3.4 2.3h1.2l.5-2.4.8-.3 2 1.3.8-.8-1.3-2 .3-.8 2.3-.4V7.4l-2.4-.5-.3-.8 1.3-2-.8-.8-2 1.3-.7-.2zM9.4 1l.5 2.4L12 2.1l2 2-1.4 2.1 2.4.4v2.8l-2.4.5L14 12l-2 2-2.1-1.4-.5 2.4H6.6l-.5-2.4L4 13.9l-2-2 1.4-2.1L1 9.4V6.6l2.4-.5L2.1 4l2-2 2.1 1.4.4-2.4h2.8zm.6 7c0 1.1-.9 2-2 2s-2-.9-2-2 .9-2 2-2 2 .9 2 2zM8 9c.6 0 1-.4 1-1s-.4-1-1-1-1 .4-1 1 .4 1 1 1z';
        }
        const vnode = (JSX.createElement("g", null,
            JSX.createElement("path", { transform: 'scale(1.15),translate(0.75,0.75)', 
                // From codicons: https://github.com/microsoft/vscode-codicons/blob/main/src/icons/terminal.svg?short_path=2ffc08e
                // eslint-disable-next-line max-len
                d: icon }),
            JSX.createElement("rect", { "class-icon-background": true, x: 0, y: 0, width: 25, height: 20 }),
            context.renderChildren(element)));
        const subType = (0, client_1.getSubType)(element);
        if (subType) {
            (0, client_1.setAttr)(vnode, 'class', subType);
        }
        return vnode;
    }
};
IconView = __decorate([
    (0, inversify_1.injectable)()
], IconView);
exports.IconView = IconView;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/base/action-dispatcher.js":
/*!*****************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/base/action-dispatcher.js ***!
  \*****************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.GLSPActionDispatcher = void 0;
/********************************************************************************
 * Copyright (c) 2019-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const _glsp_sprotty_1 = __webpack_require__(/*! ../glsp-sprotty/index */ "../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/index.js");
const model_initialization_constraint_1 = __webpack_require__(/*! ./model-initialization-constraint */ "../../node_modules/@eclipse-glsp/client/lib/base/model-initialization-constraint.js");
class GLSPActionDispatcher extends _glsp_sprotty_1.ActionDispatcher {
    constructor() {
        super(...arguments);
        this.timeouts = new Map();
        this.initializedConstraint = false;
    }
    initialize() {
        return super.initialize().then(() => this.startModelInitialization());
    }
    startModelInitialization() {
        if (!this.initializedConstraint) {
            this.logger.log(this, 'Starting model initialization mode');
            this.initializationConstraint.onInitialized().then(() => this.logger.log(this, 'Model initialization completed'));
            this.initializedConstraint = true;
        }
    }
    onceModelInitialized() {
        return this.initializationConstraint.onInitialized();
    }
    dispatch(action) {
        const result = super.dispatch(action);
        this.initializationConstraint.notifyDispatched(action);
        return result;
    }
    handleAction(action) {
        if (_glsp_sprotty_1.ResponseAction.hasValidResponseId(action)) {
            // clear timeout
            const timeout = this.timeouts.get(action.responseId);
            if (timeout !== undefined) {
                clearTimeout(timeout);
                this.timeouts.delete(action.responseId);
            }
            // we might have reached a timeout, so we simply drop the response
            const deferred = this.requests.get(action.responseId);
            if (deferred === undefined) {
                this.logger.log(this, 'No matching request for response', action);
                return Promise.resolve();
            }
        }
        return super.handleAction(action);
    }
    request(action) {
        if (!action.requestId && action.requestId === '') {
            // No request id has been specified. So we use a generated one.
            action.requestId = _glsp_sprotty_1.RequestAction.generateRequestId();
        }
        return super.request(action);
    }
    /**
     * Dispatch a request and waits for a response until the timeout given in `timeoutMs` has
     * been reached. The returned promise is resolved when a response with matching identifier
     * is dispatched or when the timeout has been reached. That response is _not_ passed to the
     * registered action handlers. Instead, it is the responsibility of the caller of this method
     * to handle the response properly. For example, it can be sent to the registered handlers by
     * passing it again to the `dispatch` method.
     * If `rejectOnTimeout` is set to false (default) the returned promise will be resolved with
     * no value, otherwise it will be rejected.
     */
    requestUntil(action, timeoutMs = 2000, rejectOnTimeout = false) {
        if (!action.requestId && action.requestId === '') {
            // No request id has been specified. So we use a generated one.
            action.requestId = _glsp_sprotty_1.RequestAction.generateRequestId();
        }
        const requestId = action.requestId;
        const timeout = setTimeout(() => {
            const deferred = this.requests.get(requestId);
            if (deferred !== undefined) {
                // cleanup
                clearTimeout(timeout);
                this.requests.delete(requestId);
                const notification = 'Request ' + requestId + ' (' + action + ') time out after ' + timeoutMs + 'ms.';
                if (rejectOnTimeout) {
                    deferred.reject(notification);
                }
                else {
                    this.logger.info(this, notification);
                    deferred.resolve();
                }
            }
        }, timeoutMs);
        this.timeouts.set(requestId, timeout);
        return super.request(action);
    }
}
__decorate([
    (0, inversify_1.inject)(model_initialization_constraint_1.ModelInitializationConstraint),
    __metadata("design:type", model_initialization_constraint_1.ModelInitializationConstraint)
], GLSPActionDispatcher.prototype, "initializationConstraint", void 0);
exports.GLSPActionDispatcher = GLSPActionDispatcher;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/base/actions/focus-change-action.js":
/*!***************************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/base/actions/focus-change-action.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.FocusStateChangedAction = void 0;
/********************************************************************************
 * Copyright (c) 2021-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const _glsp_sprotty_1 = __webpack_require__(/*! ../../glsp-sprotty/index */ "../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/index.js");
var FocusStateChangedAction;
(function (FocusStateChangedAction) {
    FocusStateChangedAction.KIND = 'focusStateChanged';
    function is(object) {
        return _glsp_sprotty_1.Action.hasKind(object, FocusStateChangedAction.KIND) && (0, _glsp_sprotty_1.hasBooleanProp)(object, 'hasFocus');
    }
    FocusStateChangedAction.is = is;
    function create(hasFocus = true) {
        return {
            kind: FocusStateChangedAction.KIND,
            hasFocus
        };
    }
    FocusStateChangedAction.create = create;
})(FocusStateChangedAction = exports.FocusStateChangedAction || (exports.FocusStateChangedAction = {}));


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/base/argumentable.js":
/*!************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/base/argumentable.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.hasArguments = void 0;
function hasArguments(element) {
    return element !== undefined && 'args' in element;
}
exports.hasArguments = hasArguments;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/base/auto-complete/auto-complete-actions.js":
/*!***********************************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/base/auto-complete/auto-complete-actions.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AutoCompleteValue = void 0;
/********************************************************************************
 * Copyright (c) 2020-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const _glsp_sprotty_1 = __webpack_require__(/*! ../../glsp-sprotty/index */ "../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/index.js");
var AutoCompleteValue;
(function (AutoCompleteValue) {
    function is(object) {
        return _glsp_sprotty_1.LabeledAction.is(object) && (0, _glsp_sprotty_1.hasStringProp)(object, 'text');
    }
    AutoCompleteValue.is = is;
})(AutoCompleteValue = exports.AutoCompleteValue || (exports.AutoCompleteValue = {}));


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/base/auto-complete/auto-complete-widget.js":
/*!**********************************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/base/auto-complete/auto-complete-widget.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.toActionArray = exports.AutoCompleteWidget = void 0;
const _glsp_sprotty_1 = __webpack_require__(/*! ../../glsp-sprotty/index */ "../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/index.js");
const auto_complete_actions_1 = __webpack_require__(/*! ./auto-complete-actions */ "../../node_modules/@eclipse-glsp/client/lib/base/auto-complete/auto-complete-actions.js");
const validation_decorator_1 = __webpack_require__(/*! ./validation-decorator */ "../../node_modules/@eclipse-glsp/client/lib/base/auto-complete/validation-decorator.js");
// eslint-disable-next-line @typescript-eslint/no-var-requires
const configureAutocomplete = __webpack_require__(/*! autocompleter */ "../../node_modules/autocompleter/autocomplete.js");
/**
 * The `AutoCompleteWidget` is a reusable UI element that provides a text input supporting auto-completion,
 * validation, validation messages, etc.
 *
 * An example for using it is available in the workflow diagram:
 * https://github.com/eclipse-glsp/glsp-client/blob/master/examples/workflow-glsp/src/direct-task-editing/direct-task-editor.ts
 */
class AutoCompleteWidget {
    constructor(autoSuggestionSettings, suggestionProvider, suggestionSubmitHandler, 
    // eslint-disable-next-line @typescript-eslint/no-empty-function
    notifyClose = () => { }, logger, options) {
        this.autoSuggestionSettings = autoSuggestionSettings;
        this.suggestionProvider = suggestionProvider;
        this.suggestionSubmitHandler = suggestionSubmitHandler;
        this.notifyClose = notifyClose;
        this.logger = logger;
        this.options = options;
        this.loadingIndicatorClasses = (0, _glsp_sprotty_1.codiconCSSClasses)('loading', false, true, ['loading']);
        this.validationDecorator = validation_decorator_1.IValidationDecorator.NO_DECORATION;
    }
    configureValidation(inputValidator, validationDecorator = validation_decorator_1.IValidationDecorator.NO_DECORATION) {
        this.inputValidator = inputValidator;
        this.validationDecorator = validationDecorator;
    }
    configureTextSubmitHandler(textSubmitHandler) {
        this.textSubmitHandler = textSubmitHandler;
    }
    initialize(containerElement) {
        this.containerElement = containerElement;
        this.inputElement = this.createInputElement();
        this.containerElement.appendChild(this.inputElement);
        this.containerElement.style.position = 'absolute';
    }
    createInputElement() {
        const inputElement = document.createElement('input');
        inputElement.style.position = 'absolute';
        inputElement.spellcheck = false;
        inputElement.autocapitalize = 'false';
        inputElement.autocomplete = 'false';
        inputElement.style.width = '100%';
        inputElement.addEventListener('keydown', event => this.handleKeyDown(event));
        inputElement.addEventListener('blur', () => {
            if (this.containerElement.style.visibility !== 'hidden') {
                window.setTimeout(() => this.notifyClose('blur'), 200);
            }
        });
        return inputElement;
    }
    handleKeyDown(event) {
        if ((0, _glsp_sprotty_1.matchesKeystroke)(event, 'Escape')) {
            this.notifyClose('escape');
            return;
        }
        if ((0, _glsp_sprotty_1.matchesKeystroke)(event, 'Enter') && !this.isInputElementChanged() && this.isSuggestionAvailable()) {
            return;
        }
        if (this.isInputElementChanged()) {
            this.invalidateValidationResultAndContextActions();
        }
        if (!(0, _glsp_sprotty_1.matchesKeystroke)(event, 'Enter') || this.isSuggestionAvailable()) {
            return;
        }
        if (!this.validationDecorator.isValidatedOk()) {
            event.stopImmediatePropagation();
            return;
        }
        if (this.textSubmitHandler) {
            this.executeFromTextOnlyInput();
            this.notifyClose('submission');
        }
    }
    isInputElementChanged() {
        return this.inputElement.value !== this.previousContent;
    }
    invalidateValidationResultAndContextActions() {
        this.contextActions = undefined;
        this.validationDecorator.invalidate();
    }
    open(root, ...contextElementIds) {
        this.contextActions = undefined;
        this.autoCompleteResult = configureAutocomplete(this.autocompleteSettings(root));
        this.previousContent = this.inputElement.value;
        this.inputElement.setSelectionRange(0, this.inputElement.value.length);
        this.inputElement.focus();
    }
    autocompleteSettings(root) {
        return {
            input: this.inputElement,
            emptyMsg: this.autoSuggestionSettings.noSuggestionsMessage,
            className: this.autoSuggestionSettings.suggestionsClass,
            showOnFocus: this.autoSuggestionSettings.showOnFocus,
            debounceWaitMs: this.autoSuggestionSettings.debounceWaitMs,
            minLength: -1,
            fetch: (text, update) => this.updateSuggestions(update, text, root),
            onSelect: (item) => this.onSelect(item),
            render: (item, currentValue) => this.renderSuggestions(item, currentValue),
            customize: (input, inputRect, container, maxHeight) => {
                this.customizeInputElement(input, inputRect, container, maxHeight);
            }
        };
    }
    customizeInputElement(input, inputRect, container, maxHeight) {
        var _a;
        // move container into our UIExtension container as this is already positioned correctly
        if (this.containerElement) {
            this.containerElement.appendChild(container);
            if (this.options && this.options.selectedSuggestionChanged) {
                const selectedElement = container.querySelector('.selected');
                // eslint-disable-next-line no-null/no-null
                if (selectedElement !== null && selectedElement !== undefined) {
                    const index = Array.from(container.children).indexOf(selectedElement);
                    this.options.selectedSuggestionChanged((_a = this.contextActions) === null || _a === void 0 ? void 0 : _a[index]);
                }
                else {
                    this.options.selectedSuggestionChanged(undefined);
                }
            }
        }
    }
    updateSuggestions(update, text, root, ...contextElementIds) {
        this.onLoading();
        this.doUpdateSuggestions(text, root)
            .then(actions => {
            var _a, _b;
            this.contextActions = this.filterActions(text, actions);
            update(this.contextActions);
            (_b = (_a = this.options) === null || _a === void 0 ? void 0 : _a.visibleSuggestionsChanged) === null || _b === void 0 ? void 0 : _b.call(_a, this.contextActions);
            this.onLoaded('success');
        })
            .catch(reason => {
            if (this.logger) {
                this.logger.error(this, 'Failed to obtain suggestions', reason);
            }
            this.onLoaded('error');
        });
    }
    onLoading() {
        if (this.loadingIndicator && this.containerElement.contains(this.loadingIndicator)) {
            return;
        }
        this.loadingIndicator = document.createElement('span');
        this.loadingIndicator.classList.add(...this.loadingIndicatorClasses);
        this.containerElement.appendChild(this.loadingIndicator);
    }
    doUpdateSuggestions(text, root, ...contextElementIds) {
        return this.suggestionProvider.provideSuggestions(text);
    }
    onLoaded(_success) {
        if (this.containerElement.contains(this.loadingIndicator)) {
            this.containerElement.removeChild(this.loadingIndicator);
        }
        this.validationDecorator.invalidate();
        this.validateInputIfNoContextActions();
        this.previousContent = this.inputElement.value;
    }
    renderSuggestions(item, value) {
        const itemElement = document.createElement('div');
        const wordMatcher = this.escapeForRegExp(value).split(' ').join('|');
        const regex = new RegExp(wordMatcher, 'gi');
        if (item.icon) {
            this.renderIcon(itemElement, item.icon);
        }
        itemElement.innerHTML += item.label.replace(regex, match => '<em>' + match + '</em>').replace(/ /g, '&nbsp;');
        return itemElement;
    }
    escapeForRegExp(value) {
        return value.replace(/([.?*+^$[\]\\(){}|-])/g, '\\$1');
    }
    renderIcon(itemElement, icon) {
        itemElement.innerHTML += `<span class="icon ${icon}"></span>`;
    }
    filterActions(filterText, actions) {
        return (0, _glsp_sprotty_1.toArray)(actions.filter(action => {
            const label = action.label.toLowerCase();
            const searchWords = filterText.split(' ');
            return searchWords.every(word => label.indexOf(word.toLowerCase()) !== -1);
        }));
    }
    onSelect(item) {
        if (auto_complete_actions_1.AutoCompleteValue.is(item)) {
            this.inputElement.value = item.text;
            // trigger update of suggestions with an keyup event
            window.setTimeout(() => this.inputElement.dispatchEvent(new Event('keyup')));
        }
        else {
            this.executeFromSuggestion(item);
            this.notifyClose('submission');
        }
    }
    validateInputIfNoContextActions() {
        if (this.isNoOrExactlyOneMatchingContextAction()) {
            this.validateInput();
        }
        else {
            this.validationDecorator.dispose();
        }
    }
    isNoOrExactlyOneMatchingContextAction() {
        return (!this.isSuggestionAvailable() ||
            (this.contextActions && this.contextActions.length === 1 && this.inputElement.value.endsWith(this.contextActions[0].label)));
    }
    isSuggestionAvailable() {
        return this.contextActions && this.contextActions.length > 0;
    }
    validateInput() {
        if (this.inputValidator) {
            this.inputValidator
                .validate(this.inputElement.value)
                .then(result => this.validationDecorator.decorateValidationResult(result))
                .catch(error => this.handleErrorDuringValidation(error));
        }
    }
    handleErrorDuringValidation(error) {
        if (this.logger) {
            this.logger.error(this, 'Failed to validate input', error);
        }
        this.validationDecorator.dispose();
    }
    executeFromSuggestion(input) {
        this.suggestionSubmitHandler.executeFromSuggestion(input);
    }
    executeFromTextOnlyInput() {
        if (this.textSubmitHandler) {
            this.textSubmitHandler.executeFromTextOnlyInput(this.inputElement.value);
        }
    }
    get inputField() {
        return this.inputElement;
    }
    dispose() {
        this.validationDecorator.dispose();
        if (this.autoCompleteResult) {
            this.autoCompleteResult.destroy();
        }
    }
}
exports.AutoCompleteWidget = AutoCompleteWidget;
function toActionArray(input) {
    if (_glsp_sprotty_1.LabeledAction.is(input)) {
        return input.actions;
    }
    else if (_glsp_sprotty_1.Action.is(input)) {
        return [input];
    }
    return [];
}
exports.toActionArray = toActionArray;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/base/auto-complete/validation-decorator.js":
/*!**********************************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/base/auto-complete/validation-decorator.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ValidationDecorator = exports.IValidationDecorator = void 0;
/********************************************************************************
 * Copyright (c) 2020-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const _glsp_sprotty_1 = __webpack_require__(/*! ../../glsp-sprotty/index */ "../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/index.js");
var IValidationDecorator;
(function (IValidationDecorator) {
    IValidationDecorator.NO_DECORATION = {
        // eslint-disable-next-line @typescript-eslint/no-empty-function
        decorateValidationResult(_status) { },
        isValidatedOk() {
            return false;
        },
        // eslint-disable-next-line @typescript-eslint/no-empty-function
        invalidate() { },
        // eslint-disable-next-line @typescript-eslint/no-empty-function
        dispose() { }
    };
})(IValidationDecorator = exports.IValidationDecorator || (exports.IValidationDecorator = {}));
class ValidationDecorator {
    constructor(containerElement) {
        this.containerElement = containerElement;
        this.warningClasses = ['warning'];
        this.warningIconClasses = (0, _glsp_sprotty_1.codiconCSSString)('warning');
        this.errorClasses = ['error'];
        this.errorIconClasses = (0, _glsp_sprotty_1.codiconCSSString)('error');
        this.isValidated = false;
        this.hasValidationError = false;
    }
    decorateValidationResult(status) {
        if (_glsp_sprotty_1.ValidationStatus.isError(status)) {
            this.hasValidationError = true;
            this.decorateError(status.message ? status.message : 'Error');
        }
        else if (_glsp_sprotty_1.ValidationStatus.isWarning(status)) {
            this.hasValidationError = false;
            this.decorateWarning(status.message ? status.message : 'Warning');
        }
        else {
            this.hasValidationError = false;
            this.dispose();
        }
        this.isValidated = true;
    }
    decorateError(message) {
        this.switchCssClasses(this.containerElement, this.errorClasses);
        const div = this.createDecorationDiv();
        this.switchCssClasses(div, this.errorClasses);
        div.innerHTML = `<span class="${this.errorIconClasses}"></span> ${message}`;
        this.adjustPosition();
    }
    decorateWarning(message) {
        this.switchCssClasses(this.containerElement, this.warningClasses);
        const div = this.createDecorationDiv();
        this.switchCssClasses(div, this.warningClasses);
        div.innerHTML = `<span class="${this.warningIconClasses}"></span> ${message}`;
        this.adjustPosition();
    }
    switchCssClasses(element, cssClasses) {
        element.classList.remove(...this.errorClasses, ...this.warningClasses);
        element.classList.add(...cssClasses);
    }
    createDecorationDiv() {
        if (!this.decorationDiv) {
            this.containerElement.classList.add('validation');
            this.decorationDiv = document.createElement('div');
            this.decorationDiv.style.width = `${this.decorationContainerWidth()}px`;
            this.decorationDiv.classList.add('validation-decorator');
            this.containerElement.appendChild(this.decorationDiv);
        }
        return this.decorationDiv;
    }
    decorationContainerWidth() {
        return this.containerElement.clientWidth - 5;
    }
    adjustPosition() {
        if (this.decorationDiv) {
            const height = this.decorationDiv.clientHeight + 2;
            this.decorationDiv.style.top = `-${height}px`;
        }
    }
    isValidatedOk() {
        return this.isValidated && !this.hasValidationError;
    }
    invalidate() {
        this.isValidated = false;
    }
    dispose() {
        this.hasValidationError = false;
        this.isValidated = false;
        if (this.decorationDiv && this.containerElement && this.containerElement.contains(this.decorationDiv)) {
            this.containerElement.removeChild(this.decorationDiv);
            this.switchCssClasses(this.containerElement, []);
            this.decorationDiv = undefined;
        }
    }
}
exports.ValidationDecorator = ValidationDecorator;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/base/command-stack.js":
/*!*************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/base/command-stack.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.GLSPCommandStack = void 0;
/********************************************************************************
 * Copyright (c) 2019-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const _glsp_sprotty_1 = __webpack_require__(/*! ../glsp-sprotty/index */ "../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/index.js");
let GLSPCommandStack = class GLSPCommandStack extends _glsp_sprotty_1.CommandStack {
    undo() {
        this.logger.warn(this, 'GLSPCommandStack.undo() was called. This should never happen as the GLSP server is responsible for handling undo requests');
        return this.currentModel;
    }
    redo() {
        this.logger.warn(this, 'GLSPCommandStack.redo() was called. This should never happen as the GLSP server is responsible for handling redo requests');
        return this.currentModel;
    }
};
GLSPCommandStack = __decorate([
    (0, inversify_1.injectable)()
], GLSPCommandStack);
exports.GLSPCommandStack = GLSPCommandStack;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/base/container-modules.js":
/*!*****************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/base/container-modules.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2021-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.createClientContainer = exports.initializeDiagramContainer = exports.DEFAULT_MODULES = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const _glsp_sprotty_1 = __webpack_require__(/*! ../glsp-sprotty/index */ "../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/index.js");
const di_config_1 = __webpack_require__(/*! ../features/bounds/di.config */ "../../node_modules/@eclipse-glsp/client/lib/features/bounds/di.config.js");
const di_config_2 = __webpack_require__(/*! ../features/command-palette/di.config */ "../../node_modules/@eclipse-glsp/client/lib/features/command-palette/di.config.js");
const di_config_3 = __webpack_require__(/*! ../features/context-menu/di.config */ "../../node_modules/@eclipse-glsp/client/lib/features/context-menu/di.config.js");
const di_config_4 = __webpack_require__(/*! ../features/copy-paste/di.config */ "../../node_modules/@eclipse-glsp/client/lib/features/copy-paste/di.config.js");
const di_config_5 = __webpack_require__(/*! ../features/decoration/di.config */ "../../node_modules/@eclipse-glsp/client/lib/features/decoration/di.config.js");
const di_config_6 = __webpack_require__(/*! ../features/edit-label/di.config */ "../../node_modules/@eclipse-glsp/client/lib/features/edit-label/di.config.js");
const di_config_7 = __webpack_require__(/*! ../features/export/di.config */ "../../node_modules/@eclipse-glsp/client/lib/features/export/di.config.js");
const di_config_8 = __webpack_require__(/*! ../features/hints/di.config */ "../../node_modules/@eclipse-glsp/client/lib/features/hints/di.config.js");
const di_config_9 = __webpack_require__(/*! ../features/hover/di.config */ "../../node_modules/@eclipse-glsp/client/lib/features/hover/di.config.js");
const di_config_10 = __webpack_require__(/*! ../features/layout/di.config */ "../../node_modules/@eclipse-glsp/client/lib/features/layout/di.config.js");
const di_config_11 = __webpack_require__(/*! ../features/mouse-tool/di.config */ "../../node_modules/@eclipse-glsp/client/lib/features/mouse-tool/di.config.js");
const di_config_12 = __webpack_require__(/*! ../features/navigation/di.config */ "../../node_modules/@eclipse-glsp/client/lib/features/navigation/di.config.js");
const di_config_13 = __webpack_require__(/*! ../features/select/di.config */ "../../node_modules/@eclipse-glsp/client/lib/features/select/di.config.js");
const di_config_14 = __webpack_require__(/*! ../features/source-model-watcher/di.config */ "../../node_modules/@eclipse-glsp/client/lib/features/source-model-watcher/di.config.js");
const di_config_15 = __webpack_require__(/*! ../features/svg-metadata/di.config */ "../../node_modules/@eclipse-glsp/client/lib/features/svg-metadata/di.config.js");
const di_config_16 = __webpack_require__(/*! ../features/tool-feedback/di.config */ "../../node_modules/@eclipse-glsp/client/lib/features/tool-feedback/di.config.js");
const di_config_17 = __webpack_require__(/*! ../features/tool-palette/di.config */ "../../node_modules/@eclipse-glsp/client/lib/features/tool-palette/di.config.js");
const di_config_18 = __webpack_require__(/*! ../features/tools/di.config */ "../../node_modules/@eclipse-glsp/client/lib/features/tools/di.config.js");
const di_config_19 = __webpack_require__(/*! ../features/validation/di.config */ "../../node_modules/@eclipse-glsp/client/lib/features/validation/di.config.js");
const di_config_20 = __webpack_require__(/*! ../features/viewport/di.config */ "../../node_modules/@eclipse-glsp/client/lib/features/viewport/di.config.js");
const di_config_21 = __webpack_require__(/*! ./di.config */ "../../node_modules/@eclipse-glsp/client/lib/base/di.config.js");
exports.DEFAULT_MODULES = [
    _glsp_sprotty_1.defaultModule,
    di_config_21.default,
    _glsp_sprotty_1.buttonModule,
    _glsp_sprotty_1.edgeIntersectionModule,
    _glsp_sprotty_1.edgeLayoutModule,
    _glsp_sprotty_1.expandModule,
    di_config_7.default,
    _glsp_sprotty_1.fadeModule,
    di_config_1.default,
    di_config_2.default,
    di_config_3.default,
    di_config_5.default,
    di_config_6.default,
    di_config_9.default,
    di_config_11.default,
    di_config_13.default,
    di_config_4.glspServerCopyPasteModule,
    di_config_20.default,
    _glsp_sprotty_1.labelEditUiModule,
    di_config_10.default,
    di_config_19.markerNavigatorModule,
    di_config_8.default,
    _glsp_sprotty_1.modelSourceModule,
    di_config_14.default,
    di_config_12.default,
    _glsp_sprotty_1.openModule,
    di_config_17.default,
    _glsp_sprotty_1.routingModule,
    di_config_16.default,
    di_config_18.toolsModule,
    di_config_18.enableDefaultToolsOnFocusLossModule,
    di_config_19.validationModule,
    _glsp_sprotty_1.zorderModule,
    di_config_15.default
];
/**
 *  Initializes a GLSP Diagram container with the GLSP default modules and the specified custom `modules`.
 *  Additional modules can be passed as direct arguments or as part of a {@link ModuleConfiguration}.
 *  ```typescript
 *  const container= createDiagramContainer(myModule1, myModule2)
 *  // or
 *  const container= createDiagramContainer({ add: [myModule1, myModule2]})
 *  ```
 *  Default modules can be excluded using {@link ModuleConfiguration}s.
 *  This means, you can still customize the default modules in two ways.
 *
 * First, you can exclude default modules and add a module with your custom code.
 *
 * ```typescript
 * const container = createDiagramContainer({ add:myModelSourceWatcherModule, remove: modelSourceWatcherModule} );
 * ```
 *
 * Second, you can unbind or rebind implementations that are originally bound in one of the default modules.
 *
 * ```typescript
 * rebind(NavigationTargetResolver).to(MyNavigationTargetResolver);
 * ```
 *
 * @param containerConfiguration
 *          Custom modules to be loaded in addition to the default modules and/or default modules that should be excluded.
 * @returns The initialized container.
 */
function initializeDiagramContainer(container, ...containerConfiguration) {
    return (0, _glsp_sprotty_1.initializeContainer)(container, ...exports.DEFAULT_MODULES, ...containerConfiguration);
}
exports.initializeDiagramContainer = initializeDiagramContainer;
/**
 * Creates a GLSP Client container with the GLSP default modules and the specified custom `modules`.
 *
 * You can still customize the default modules in two ways.
 *
 * First, you can unload default modules and load them again with your custom code.
 *
 * ```typescript
 * const container = createClientContainer(myModule1, myModule2);
 * container.unload(modelSourceWatcherModule);
 * container.load(myModelSourceWatcherModule);
 * ```
 *
 * Second, you can unbind or rebind implementations that are originally bound in one of the default modules.
 *
 * ```typescript
 * rebind(NavigationTargetResolver).to(MyNavigationTargetResolver);
 * ```
 * @param modules Custom modules to be loaded in addition to the default modules.
 * @returns The created container.
 * @deprecated Please use `initializeDiagramContainer` from `@eclipse-glsp/client` instead
 */
function createClientContainer(...modules) {
    return initializeDiagramContainer(new inversify_1.Container(), ...modules);
}
exports.createClientContainer = createClientContainer;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/base/di.config.js":
/*!*********************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/base/di.config.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.configureServerActions = void 0;
/********************************************************************************
 * Copyright (c) 2019-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
__webpack_require__(/*! @vscode/codicons/dist/codicon.css */ "../../node_modules/@vscode/codicons/dist/codicon.css");
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const _glsp_sprotty_1 = __webpack_require__(/*! ../glsp-sprotty/index */ "../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/index.js");
__webpack_require__(/*! ../../css/glsp-sprotty.css */ "../../node_modules/@eclipse-glsp/client/css/glsp-sprotty.css");
const action_dispatcher_1 = __webpack_require__(/*! ./action-dispatcher */ "../../node_modules/@eclipse-glsp/client/lib/base/action-dispatcher.js");
const focus_change_action_1 = __webpack_require__(/*! ./actions/focus-change-action */ "../../node_modules/@eclipse-glsp/client/lib/base/actions/focus-change-action.js");
const command_stack_1 = __webpack_require__(/*! ./command-stack */ "../../node_modules/@eclipse-glsp/client/lib/base/command-stack.js");
const editor_context_service_1 = __webpack_require__(/*! ./editor-context-service */ "../../node_modules/@eclipse-glsp/client/lib/base/editor-context-service.js");
const focus_tracker_1 = __webpack_require__(/*! ./focus-tracker */ "../../node_modules/@eclipse-glsp/client/lib/base/focus-tracker.js");
const model_initialization_constraint_1 = __webpack_require__(/*! ./model-initialization-constraint */ "../../node_modules/@eclipse-glsp/client/lib/base/model-initialization-constraint.js");
const model_registry_1 = __webpack_require__(/*! ./model/model-registry */ "../../node_modules/@eclipse-glsp/client/lib/base/model/model-registry.js");
const update_model_command_1 = __webpack_require__(/*! ./model/update-model-command */ "../../node_modules/@eclipse-glsp/client/lib/base/model/update-model-command.js");
const selection_clearing_mouse_listener_1 = __webpack_require__(/*! ./selection-clearing-mouse-listener */ "../../node_modules/@eclipse-glsp/client/lib/base/selection-clearing-mouse-listener.js");
const glsp_tool_manager_1 = __webpack_require__(/*! ./tool-manager/glsp-tool-manager */ "../../node_modules/@eclipse-glsp/client/lib/base/tool-manager/glsp-tool-manager.js");
const view_registry_1 = __webpack_require__(/*! ./view/view-registry */ "../../node_modules/@eclipse-glsp/client/lib/base/view/view-registry.js");
const defaultGLSPModule = new inversify_1.ContainerModule((bind, _unbind, isBound, rebind) => {
    const context = { bind, _unbind, isBound, rebind };
    bind(editor_context_service_1.EditorContextService).toSelf().inSingletonScope();
    bind(_glsp_sprotty_1.TYPES.IEditorContextServiceProvider).toProvider(ctx => () => new Promise((resolve, reject) => {
        if (ctx.container.isBound(editor_context_service_1.EditorContextService)) {
            resolve(ctx.container.get(editor_context_service_1.EditorContextService));
        }
        else {
            reject();
        }
    }));
    (0, _glsp_sprotty_1.configureActionHandler)(context, _glsp_sprotty_1.SetEditModeAction.KIND, editor_context_service_1.EditorContextService);
    bind(focus_tracker_1.FocusTracker).toSelf().inSingletonScope();
    (0, _glsp_sprotty_1.configureActionHandler)(context, focus_change_action_1.FocusStateChangedAction.KIND, focus_tracker_1.FocusTracker);
    // Model update initialization ------------------------------------
    (0, _glsp_sprotty_1.configureCommand)(context, update_model_command_1.FeedbackAwareUpdateModelCommand);
    (0, _glsp_sprotty_1.configureActionHandler)(context, _glsp_sprotty_1.SetModelCommand.KIND, update_model_command_1.SetModelActionHandler);
    (0, _glsp_sprotty_1.bindAsService)(context, _glsp_sprotty_1.TYPES.MouseListener, selection_clearing_mouse_listener_1.SelectionClearingMouseListener);
    (0, _glsp_sprotty_1.bindOrRebind)(context, _glsp_sprotty_1.TYPES.ICommandStack).to(command_stack_1.GLSPCommandStack);
    bind(glsp_tool_manager_1.GLSPToolManager).toSelf().inSingletonScope();
    (0, _glsp_sprotty_1.bindOrRebind)(context, _glsp_sprotty_1.TYPES.IToolManager).toService(glsp_tool_manager_1.GLSPToolManager);
    bind(action_dispatcher_1.GLSPActionDispatcher).toSelf().inSingletonScope();
    (0, _glsp_sprotty_1.bindOrRebind)(context, _glsp_sprotty_1.TYPES.IActionDispatcher).toService(action_dispatcher_1.GLSPActionDispatcher);
    bind(model_initialization_constraint_1.ModelInitializationConstraint).to(model_initialization_constraint_1.DefaultModelInitializationConstraint).inSingletonScope();
    // support re-registration of model elements and views
    (0, _glsp_sprotty_1.bindOrRebind)(context, _glsp_sprotty_1.TYPES.SModelRegistry).to(model_registry_1.GLSPModelRegistry).inSingletonScope();
    (0, _glsp_sprotty_1.bindOrRebind)(context, _glsp_sprotty_1.TYPES.ViewRegistry).to(view_registry_1.GLSPViewRegistry).inSingletonScope();
});
exports["default"] = defaultGLSPModule;
/**
 * Utility function to configure the {@link ModelSource}, i.e. the `DiagramServer`, as action handler for all server actions for the given
 * diagramType.
 * @param result A promise that resolves after all server actions have been registered.
 * @param diagramType The diagram type.
 * @param container The di container.
 */
async function configureServerActions(result, diagramType, container) {
    const modelSource = container.get(_glsp_sprotty_1.TYPES.ModelSource);
    const actionHandlerRegistry = container.get(_glsp_sprotty_1.ActionHandlerRegistry);
    const serverActions = result.serverActions[diagramType];
    if (serverActions.length === 0) {
        throw new Error(`No server-handled actions could be derived from the initialize result for diagramType: ${diagramType}!`);
    }
    serverActions.forEach(actionKind => actionHandlerRegistry.register(actionKind, modelSource));
}
exports.configureServerActions = configureServerActions;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/base/drag-aware-mouse-listener.js":
/*!*************************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/base/drag-aware-mouse-listener.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.DragAwareMouseListener = void 0;
/********************************************************************************
 * Copyright (c) 2019-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const _glsp_sprotty_1 = __webpack_require__(/*! ../glsp-sprotty/index */ "../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/index.js");
/**
 * A mouse listener that is aware of prior mouse dragging.
 *
 * Therefore, this listener distinguishes between mouse up events after dragging and
 * mouse up events without prior dragging. Subclasses may override the methods
 * `draggingMouseUp` and/or `nonDraggingMouseUp` to react to only these specific kinds
 * of mouse up events.
 */
class DragAwareMouseListener extends _glsp_sprotty_1.MouseListener {
    constructor() {
        super(...arguments);
        this._isMouseDown = false;
        this._isMouseDrag = false;
    }
    mouseDown(target, event) {
        this._isMouseDown = true;
        return [];
    }
    mouseMove(target, event) {
        if (this._isMouseDown) {
            this._isMouseDrag = true;
        }
        return [];
    }
    mouseUp(element, event) {
        this._isMouseDown = false;
        if (this._isMouseDrag) {
            this._isMouseDrag = false;
            return this.draggingMouseUp(element, event);
        }
        return this.nonDraggingMouseUp(element, event);
    }
    nonDraggingMouseUp(element, event) {
        return [];
    }
    draggingMouseUp(element, event) {
        return [];
    }
    get isMouseDrag() {
        return this._isMouseDrag;
    }
    get isMouseDown() {
        return this._isMouseDown;
    }
}
exports.DragAwareMouseListener = DragAwareMouseListener;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/base/editor-context-service.js":
/*!**********************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/base/editor-context-service.js ***!
  \**********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.EditorContextService = void 0;
/********************************************************************************
 * Copyright (c) 2020-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const _glsp_sprotty_1 = __webpack_require__(/*! ../glsp-sprotty/index */ "../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/index.js");
const selection_service_1 = __webpack_require__(/*! ../features/select/selection-service */ "../../node_modules/@eclipse-glsp/client/lib/features/select/selection-service.js");
const source_uri_aware_1 = __webpack_require__(/*! ./source-uri-aware */ "../../node_modules/@eclipse-glsp/client/lib/base/source-uri-aware.js");
/**
 * The `EditorContextService` is a central injectable component that gives read-only access to
 * certain aspects of the diagram, such as the currently selected elements, the model root,
 * the edit mode, the latest position of the mouse in the diagram.
 *
 * It has been introduced for two main reasons:
 * 1. to simplify accessing the model root and the current selection from components that are
 *    not commands,
 * 2. to conveniently create an EditorContext, which is a context object sent as part of several
 *    actions to the server to describe the current state of the editor (selection, last mouse
 *    position, etc.).
 */
let EditorContextService = class EditorContextService {
    constructor() {
        this.editModeListeners = [];
    }
    register(editModeListener) {
        (0, _glsp_sprotty_1.distinctAdd)(this.editModeListeners, editModeListener);
    }
    deregister(editModeListener) {
        (0, _glsp_sprotty_1.remove)(this.editModeListeners, editModeListener);
    }
    get(args) {
        return {
            selectedElementIds: Array.from(this.selectionService.getSelectedElementIDs()),
            lastMousePosition: this.mousePositionTracker.lastPositionOnDiagram,
            args
        };
    }
    getWithSelection(selectedElementIds, args) {
        return {
            selectedElementIds,
            lastMousePosition: this.mousePositionTracker.lastPositionOnDiagram,
            args
        };
    }
    handle(action) {
        if (_glsp_sprotty_1.SetEditModeAction.is(action)) {
            const oldValue = this._editMode;
            this._editMode = action.editMode;
            this.notifyEditModeListeners(oldValue);
        }
    }
    notifyEditModeListeners(oldValue) {
        this.editModeListeners.forEach(listener => listener.editModeChanged(oldValue, this.editMode));
    }
    async getSourceUri() {
        const modelSource = await this.modelSourceProvider();
        if ((0, source_uri_aware_1.isSourceUriAware)(modelSource)) {
            return modelSource.sourceURI;
        }
        return undefined;
    }
    get editMode() {
        return this._editMode;
    }
    get modelRoot() {
        return this.selectionService.getModelRoot();
    }
    get selectedElements() {
        return this.selectionService.getSelectedElements();
    }
    get isReadonly() {
        return this.editMode === _glsp_sprotty_1.EditMode.READONLY;
    }
};
__decorate([
    (0, inversify_1.inject)(_glsp_sprotty_1.TYPES.SelectionService),
    __metadata("design:type", selection_service_1.SelectionService)
], EditorContextService.prototype, "selectionService", void 0);
__decorate([
    (0, inversify_1.inject)(_glsp_sprotty_1.MousePositionTracker),
    __metadata("design:type", _glsp_sprotty_1.MousePositionTracker)
], EditorContextService.prototype, "mousePositionTracker", void 0);
__decorate([
    (0, inversify_1.multiInject)(_glsp_sprotty_1.TYPES.IEditModeListener),
    (0, inversify_1.optional)(),
    __metadata("design:type", Array)
], EditorContextService.prototype, "editModeListeners", void 0);
__decorate([
    (0, inversify_1.inject)(_glsp_sprotty_1.TYPES.ModelSourceProvider),
    __metadata("design:type", Function)
], EditorContextService.prototype, "modelSourceProvider", void 0);
EditorContextService = __decorate([
    (0, inversify_1.injectable)()
], EditorContextService);
exports.EditorContextService = EditorContextService;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/base/focus-tracker.js":
/*!*************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/base/focus-tracker.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.FocusTracker = void 0;
/********************************************************************************
 * Copyright (c) 2021-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const _glsp_sprotty_1 = __webpack_require__(/*! ../glsp-sprotty/index */ "../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/index.js");
const focus_change_action_1 = __webpack_require__(/*! ./actions/focus-change-action */ "../../node_modules/@eclipse-glsp/client/lib/base/actions/focus-change-action.js");
let FocusTracker = class FocusTracker {
    constructor() {
        this.inActiveCssClass = 'inactive';
        this._hasFocus = true;
    }
    get hasFocus() {
        return this._hasFocus;
    }
    handle(action) {
        if (focus_change_action_1.FocusStateChangedAction.is(action)) {
            this._hasFocus = action.hasFocus;
            const placeholder = document.getElementById(this.options.baseDiv);
            if (!placeholder) {
                return;
            }
            if (this.hasFocus) {
                if (placeholder.classList.contains(this.inActiveCssClass)) {
                    placeholder.classList.remove(this.inActiveCssClass);
                }
            }
            else {
                placeholder.classList.add(this.inActiveCssClass);
            }
        }
    }
};
__decorate([
    (0, inversify_1.inject)(_glsp_sprotty_1.TYPES.ViewerOptions),
    __metadata("design:type", Object)
], FocusTracker.prototype, "options", void 0);
FocusTracker = __decorate([
    (0, inversify_1.injectable)()
], FocusTracker);
exports.FocusTracker = FocusTracker;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/base/model-initialization-constraint.js":
/*!*******************************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/base/model-initialization-constraint.js ***!
  \*******************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.DefaultModelInitializationConstraint = exports.ModelInitializationConstraint = void 0;
/********************************************************************************
 * Copyright (c) 2020-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const _glsp_sprotty_1 = __webpack_require__(/*! ../glsp-sprotty/index */ "../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/index.js");
/**
 * The constraint defining when the initialization of the GLSP model is completed.
 *
 * Many actions, such as the `CenterAction`, can only be successfully processed if
 * the GLSP model initialization is completed, that is, the model has been set,
 * its bounds have been computed, the canvas bounds are available, etc.
 *
 * An injectable implementation of this constraint will be used by the
 * `GLSPActionDispatcher` to determine when the initialization is completed.
 * The action dispatcher therefore provides a promise via `onceInitialized()`
 * to trigger clients that want to dispatch an action, once the initialization
 * is done.
 *
 * For most of the cases `DefaultInitializationConstraint` can be used. In fact,
 * it is bound by default. However, custom implementations can rebind other
 * implementations of this constraint to, for instance, delay further before the
 * `onceInitialized()` promise is fulfilled by the `GLSPActionDispatcher`.
 */
let ModelInitializationConstraint = class ModelInitializationConstraint {
    constructor() {
        this.completion = new _glsp_sprotty_1.Deferred();
        this.completed = false;
    }
    get isCompleted() {
        return this.completed;
    }
    setCompleted(isCompleted) {
        this.completed = isCompleted;
        if (isCompleted) {
            this.completion.resolve();
        }
    }
    onInitialized() {
        return this.completion.promise;
    }
    notifyDispatched(action) {
        if (this.isCompleted) {
            return;
        }
        if (this.isInitializedAfter(action)) {
            this.setCompleted(true);
        }
    }
};
ModelInitializationConstraint = __decorate([
    (0, inversify_1.injectable)()
], ModelInitializationConstraint);
exports.ModelInitializationConstraint = ModelInitializationConstraint;
/**
 * Default initialization constraint triggers after a non-empty `UpdateModelAction`
 * and a subsequent `InitializeCanvasBoundsAction`.
 */
let DefaultModelInitializationConstraint = class DefaultModelInitializationConstraint extends ModelInitializationConstraint {
    constructor() {
        super(...arguments);
        this.seenNonEmptyModelAction = false;
    }
    isInitializedAfter(action) {
        if (this.isNonEmptyModelAction(action)) {
            this.seenNonEmptyModelAction = true;
        }
        else if (this.seenNonEmptyModelAction && action.kind === _glsp_sprotty_1.InitializeCanvasBoundsAction.KIND) {
            return true;
        }
        return false;
    }
    isNonEmptyModelAction(action) {
        if (_glsp_sprotty_1.SetModelAction.is(action) || _glsp_sprotty_1.UpdateModelAction.is(action)) {
            return action.newRoot.type !== 'NONE';
        }
        return false;
    }
};
DefaultModelInitializationConstraint = __decorate([
    (0, inversify_1.injectable)()
], DefaultModelInitializationConstraint);
exports.DefaultModelInitializationConstraint = DefaultModelInitializationConstraint;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/base/model/model-registry.js":
/*!********************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/base/model/model-registry.js ***!
  \********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.GLSPModelRegistry = void 0;
/********************************************************************************
 * Copyright (c) 2021-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const _glsp_sprotty_1 = __webpack_require__(/*! ../../glsp-sprotty/index */ "../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/index.js");
let GLSPModelRegistry = class GLSPModelRegistry extends _glsp_sprotty_1.SModelRegistry {
    register(key, factory) {
        if (key === undefined) {
            throw new Error('Key is undefined');
        }
        if (this.hasKey(key)) {
            // do not throw error but log overwriting
            console.log(`Factory for model element '${key}' will be overwritten.`);
        }
        this.elements.set(key, factory);
    }
};
GLSPModelRegistry = __decorate([
    (0, inversify_1.injectable)()
], GLSPModelRegistry);
exports.GLSPModelRegistry = GLSPModelRegistry;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/base/model/update-model-command.js":
/*!**************************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/base/model/update-model-command.js ***!
  \**************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.FeedbackAwareUpdateModelCommand = exports.SetModelActionHandler = void 0;
/********************************************************************************
 * Copyright (c) 2019-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const _glsp_sprotty_1 = __webpack_require__(/*! ../../glsp-sprotty/index */ "../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/index.js");
/**
 * ActionHandler that transforms a {@link SetModelAction} into an {@link UpdateModelAction} that can be handled
 * by the {@link FeedbackAwareUpdateModelCommand}. This can be done because in sprotty an {@link UpdateModelCommand} and
 * a {@link SetModelCommand} have the same behavior of no model is present yet.
 */
let SetModelActionHandler = class SetModelActionHandler {
    handle(action) {
        if (_glsp_sprotty_1.SetModelAction.is(action)) {
            return _glsp_sprotty_1.UpdateModelAction.create(action.newRoot, { animate: false });
        }
    }
};
SetModelActionHandler = __decorate([
    (0, inversify_1.injectable)()
], SetModelActionHandler);
exports.SetModelActionHandler = SetModelActionHandler;
/**
 * A special {@link UpdateModelCommand} that retrieves all registered {@link Action}s from the {@link IFeedbackActionDispatcher}
 * (if present) and applies their feedback to the `newRoot` before performing the update. This enables persistent client-side feedback
 * across model updates initiated by the GLSP server.
 */
let FeedbackAwareUpdateModelCommand = class FeedbackAwareUpdateModelCommand extends _glsp_sprotty_1.UpdateModelCommand {
    constructor(action, actionHandlerRegistryProvider) {
        super(Object.assign({ animate: true }, action));
        this.modelRootListeners = [];
        actionHandlerRegistryProvider().then(registry => (this.actionHandlerRegistry = registry));
    }
    performUpdate(oldRoot, newRoot, context) {
        if (this.feedbackActionDispatcher && this.actionHandlerRegistry) {
            // Create a temporary context which defines the `newRoot` as `root`
            // This way we do not corrupt the redo/undo behavior of the super class
            const tempContext = Object.assign(Object.assign({}, context), { root: newRoot });
            const feedbackCommands = this.getFeedbackCommands(this.actionHandlerRegistry);
            feedbackCommands.forEach(command => command.execute(tempContext));
        }
        this.modelRootListeners.forEach(listener => listener.modelRootChanged(newRoot));
        return super.performUpdate(oldRoot, newRoot, context);
    }
    getFeedbackCommands(registry) {
        const result = [];
        this.feedbackActionDispatcher.getRegisteredFeedback().forEach(action => {
            const commands = registry
                .get(action.kind)
                .filter((0, _glsp_sprotty_1.toTypeGuard)(_glsp_sprotty_1.CommandActionHandler))
                .map(handler => handler.handle(action));
            result.push(...commands);
        });
        // sort commands descanting by priority
        return result.sort((a, b) => this.getPriority(b) - this.getPriority(a));
    }
    getPriority(command) {
        var _a;
        return (_a = command.priority) !== null && _a !== void 0 ? _a : 0;
    }
    // Override the `createAnimations` implementation and remove the animation for edge morphing. Otherwise routing & reconnect
    // handles flicker after each server update.
    createAnimations(data, root, context) {
        const animations = super.createAnimations(data, root, context);
        return animations.filter(animation => !(animation instanceof _glsp_sprotty_1.MorphEdgesAnimation));
    }
};
__decorate([
    (0, inversify_1.inject)(_glsp_sprotty_1.TYPES.ILogger),
    __metadata("design:type", Object)
], FeedbackAwareUpdateModelCommand.prototype, "logger", void 0);
__decorate([
    (0, inversify_1.inject)(_glsp_sprotty_1.TYPES.IFeedbackActionDispatcher),
    (0, inversify_1.optional)(),
    __metadata("design:type", Object)
], FeedbackAwareUpdateModelCommand.prototype, "feedbackActionDispatcher", void 0);
__decorate([
    (0, inversify_1.multiInject)(_glsp_sprotty_1.TYPES.SModelRootListener),
    (0, inversify_1.optional)(),
    __metadata("design:type", Array)
], FeedbackAwareUpdateModelCommand.prototype, "modelRootListeners", void 0);
FeedbackAwareUpdateModelCommand = __decorate([
    (0, inversify_1.injectable)(),
    __param(0, (0, inversify_1.inject)(_glsp_sprotty_1.TYPES.Action)),
    __param(1, (0, inversify_1.inject)(_glsp_sprotty_1.TYPES.ActionHandlerRegistryProvider)),
    __metadata("design:paramtypes", [Object, Function])
], FeedbackAwareUpdateModelCommand);
exports.FeedbackAwareUpdateModelCommand = FeedbackAwareUpdateModelCommand;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/base/selection-clearing-mouse-listener.js":
/*!*********************************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/base/selection-clearing-mouse-listener.js ***!
  \*********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SelectionClearingMouseListener = void 0;
/********************************************************************************
 * Copyright (c) 2020-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const _glsp_sprotty_1 = __webpack_require__(/*! ../glsp-sprotty/index */ "../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/index.js");
/**
 * A mouse listener that clears the document selection on click
 *
 * Clicking on SVG elements doesn't update the document selection. In the context of diagramming
 * with GLSP, this is unnatural, as the user would expect that clicking in the diagram (e.g. to
 * select a diagram element) would clear any other selection state in the DOM. From a technical
 * point of view, an active selection in the document after clicking into the diagram may also
 * lead to bogus target elements in certain browser events, such as clipboard events, etc.
 *
 * This listener helps to overcome this problem by actively clearing any existing selection in
 * the document, if the user clicks into the diagram.
 */
let SelectionClearingMouseListener = class SelectionClearingMouseListener extends _glsp_sprotty_1.MouseListener {
    mouseDown(_target, event) {
        const selection = document.getSelection();
        // eslint-disable-next-line no-null/no-null
        if (selection === null) {
            return [];
        }
        selection.removeAllRanges();
        selection.addRange(document.createRange());
        return [];
    }
};
SelectionClearingMouseListener = __decorate([
    (0, inversify_1.injectable)()
], SelectionClearingMouseListener);
exports.SelectionClearingMouseListener = SelectionClearingMouseListener;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/base/source-uri-aware.js":
/*!****************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/base/source-uri-aware.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isSourceUriAware = void 0;
/********************************************************************************
 * Copyright (c) 2020-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const _glsp_sprotty_1 = __webpack_require__(/*! ../glsp-sprotty/index */ "../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/index.js");
function isSourceUriAware(obj) {
    return _glsp_sprotty_1.AnyObject.is(obj) && (0, _glsp_sprotty_1.hasStringProp)(obj, 'sourceURI');
}
exports.isSourceUriAware = isSourceUriAware;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/base/tool-manager/glsp-tool-manager.js":
/*!******************************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/base/tool-manager/glsp-tool-manager.js ***!
  \******************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.GLSPTool = exports.GLSPToolManager = void 0;
/********************************************************************************
 * Copyright (c) 2020-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const _glsp_sprotty_1 = __webpack_require__(/*! ../../glsp-sprotty/index */ "../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/index.js");
let GLSPToolManager = class GLSPToolManager extends _glsp_sprotty_1.ToolManager {
    initialize() {
        this.registerTools(...this.tools);
        this.registerDefaultTools(...this.defaultTools);
        this.enableDefaultTools();
        this.contextServiceProvider().then(editorContext => {
            editorContext.register(this);
            this.editorContext = editorContext;
        });
    }
    registerDefaultTools(...tools) {
        for (const tool of tools) {
            (0, _glsp_sprotty_1.distinctAdd)(this.defaultTools, tool);
        }
    }
    registerTools(...tools) {
        for (const tool of tools) {
            (0, _glsp_sprotty_1.distinctAdd)(this.tools, tool);
        }
    }
    enable(toolIds) {
        this.disableActiveTools();
        let tools = toolIds.map(id => this.tool(id));
        if (this.editorContext && this.editorContext.isReadonly) {
            tools = tools.filter(tool => tool && (!GLSPTool.is(tool) || tool.isEditTool === false));
        }
        tools.forEach(tool => {
            if (tool !== undefined) {
                tool.enable();
                this.actives.push(tool);
            }
        });
    }
    disableEditTools() {
        this.disableActiveTools();
        this.enable(this.defaultTools.filter(tool => !GLSPTool.is(tool) || tool.isEditTool === false).map(tool => tool.id));
    }
    editModeChanged(oldValue, newValue) {
        if (oldValue === newValue) {
            return;
        }
        if (newValue === _glsp_sprotty_1.EditMode.READONLY) {
            this.disableEditTools();
        }
        else if (newValue === _glsp_sprotty_1.EditMode.EDITABLE) {
            this.enableDefaultTools();
        }
    }
};
__decorate([
    (0, inversify_1.multiInject)(_glsp_sprotty_1.TYPES.ITool),
    (0, inversify_1.optional)(),
    __metadata("design:type", Array)
], GLSPToolManager.prototype, "tools", void 0);
__decorate([
    (0, inversify_1.multiInject)(_glsp_sprotty_1.TYPES.IDefaultTool),
    (0, inversify_1.optional)(),
    __metadata("design:type", Array)
], GLSPToolManager.prototype, "defaultTools", void 0);
__decorate([
    (0, inversify_1.inject)(_glsp_sprotty_1.TYPES.IEditorContextServiceProvider),
    __metadata("design:type", Function)
], GLSPToolManager.prototype, "contextServiceProvider", void 0);
__decorate([
    (0, inversify_1.postConstruct)(),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", []),
    __metadata("design:returntype", void 0)
], GLSPToolManager.prototype, "initialize", null);
GLSPToolManager = __decorate([
    (0, inversify_1.injectable)()
], GLSPToolManager);
exports.GLSPToolManager = GLSPToolManager;
var GLSPTool;
(function (GLSPTool) {
    function is(object) {
        return (_glsp_sprotty_1.AnyObject.is(object) &&
            (0, _glsp_sprotty_1.hasStringProp)(object, 'id') &&
            (0, _glsp_sprotty_1.hasFunctionProp)(object, 'enable') &&
            (0, _glsp_sprotty_1.hasFunctionProp)(object, 'disable') &&
            (0, _glsp_sprotty_1.hasBooleanProp)(object, 'isEditTool'));
    }
    GLSPTool.is = is;
})(GLSPTool = exports.GLSPTool || (exports.GLSPTool = {}));


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/base/view/view-registry.js":
/*!******************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/base/view/view-registry.js ***!
  \******************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.GLSPViewRegistry = void 0;
/********************************************************************************
 * Copyright (c) 2019-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const _glsp_sprotty_1 = __webpack_require__(/*! ../../glsp-sprotty/index */ "../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/index.js");
let GLSPViewRegistry = class GLSPViewRegistry extends _glsp_sprotty_1.ViewRegistry {
    register(key, instance) {
        if (key === undefined) {
            throw new Error('Key is undefined');
        }
        if (this.hasKey(key)) {
            // do not throw error but log overwriting
            console.log(`View instance for type '${key}' will be overwritten.`);
        }
        this.elements.set(key, instance);
    }
};
GLSPViewRegistry = __decorate([
    (0, inversify_1.injectable)()
], GLSPViewRegistry);
exports.GLSPViewRegistry = GLSPViewRegistry;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/features/accessibility/di.config.js":
/*!***************************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/features/accessibility/di.config.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2023 Business Informatics Group (TU Wien) and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.glspAccessibilityModule = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const di_config_1 = __webpack_require__(/*! ./move-zoom/di.config */ "../../node_modules/@eclipse-glsp/client/lib/features/accessibility/move-zoom/di.config.js");
const di_config_2 = __webpack_require__(/*! ./resize-key-tool/di.config */ "../../node_modules/@eclipse-glsp/client/lib/features/accessibility/resize-key-tool/di.config.js");
const di_config_3 = __webpack_require__(/*! ./search/di.config */ "../../node_modules/@eclipse-glsp/client/lib/features/accessibility/search/di.config.js");
const di_config_4 = __webpack_require__(/*! ./view-key-tools/di.config */ "../../node_modules/@eclipse-glsp/client/lib/features/accessibility/view-key-tools/di.config.js");
/**
 * Enables the accessibility tools for a keyboard-only-usage
 */
exports.glspAccessibilityModule = new inversify_1.ContainerModule((bind, unbind, isBound, rebind) => {
    const context = { bind, unbind, isBound, rebind };
    (0, di_config_2.configureResizeTools)(context);
    (0, di_config_4.configureViewKeyTools)(context);
    (0, di_config_1.configureMoveZoom)(context);
    (0, di_config_3.configureSearchPaletteModule)(context);
});


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/features/accessibility/move-zoom/di.config.js":
/*!*************************************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/features/accessibility/move-zoom/di.config.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2023 Business Informatics Group (TU Wien) and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.configureMoveZoom = exports.glspMoveZoomModule = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const _glsp_sprotty_1 = __webpack_require__(/*! ../../../glsp-sprotty/index */ "../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/index.js");
const move_handler_1 = __webpack_require__(/*! ./move-handler */ "../../node_modules/@eclipse-glsp/client/lib/features/accessibility/move-zoom/move-handler.js");
const zoom_handler_1 = __webpack_require__(/*! ./zoom-handler */ "../../node_modules/@eclipse-glsp/client/lib/features/accessibility/move-zoom/zoom-handler.js");
/**
 * Handles move and zoom actions.
 */
exports.glspMoveZoomModule = new inversify_1.ContainerModule((bind, unbind, isBound, rebind) => {
    const context = { bind, unbind, isBound, rebind };
    configureMoveZoom(context);
});
function configureMoveZoom(context) {
    context.bind(move_handler_1.MoveViewportHandler).toSelf().inSingletonScope();
    context.bind(move_handler_1.MoveElementHandler).toSelf().inSingletonScope();
    context.bind(zoom_handler_1.ZoomViewportHandler).toSelf().inSingletonScope();
    context.bind(zoom_handler_1.ZoomElementHandler).toSelf().inSingletonScope();
    (0, _glsp_sprotty_1.configureActionHandler)(context, move_handler_1.MoveViewportAction.KIND, move_handler_1.MoveViewportHandler);
    (0, _glsp_sprotty_1.configureActionHandler)(context, move_handler_1.MoveElementAction.KIND, move_handler_1.MoveElementHandler);
    (0, _glsp_sprotty_1.configureActionHandler)(context, zoom_handler_1.ZoomViewportAction.KIND, zoom_handler_1.ZoomViewportHandler);
    (0, _glsp_sprotty_1.configureActionHandler)(context, zoom_handler_1.ZoomElementAction.KIND, zoom_handler_1.ZoomElementHandler);
}
exports.configureMoveZoom = configureMoveZoom;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/features/accessibility/move-zoom/move-handler.js":
/*!****************************************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/features/accessibility/move-zoom/move-handler.js ***!
  \****************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2023 Business Informatics Group (TU Wien) and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.MoveElementHandler = exports.MoveViewportHandler = exports.MoveElementAction = exports.MoveViewportAction = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const lodash_1 = __webpack_require__(/*! lodash */ "../../node_modules/lodash/lodash.js");
const _glsp_sprotty_1 = __webpack_require__(/*! ../../../glsp-sprotty/index */ "../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/index.js");
const editor_context_service_1 = __webpack_require__(/*! ../../../base/editor-context-service */ "../../node_modules/@eclipse-glsp/client/lib/base/editor-context-service.js");
const smodel_util_1 = __webpack_require__(/*! ../../../utils/smodel-util */ "../../node_modules/@eclipse-glsp/client/lib/utils/smodel-util.js");
var MoveViewportAction;
(function (MoveViewportAction) {
    MoveViewportAction.KIND = 'moveViewportAction';
    function is(object) {
        return _glsp_sprotty_1.Action.hasKind(object, MoveViewportAction.KIND);
    }
    MoveViewportAction.is = is;
    function create(moveX, moveY) {
        return { kind: MoveViewportAction.KIND, moveX, moveY };
    }
    MoveViewportAction.create = create;
})(MoveViewportAction = exports.MoveViewportAction || (exports.MoveViewportAction = {}));
var MoveElementAction;
(function (MoveElementAction) {
    MoveElementAction.KIND = 'moveElementAction';
    function is(object) {
        return _glsp_sprotty_1.Action.hasKind(object, MoveElementAction.KIND);
    }
    MoveElementAction.is = is;
    function create(elementIds, moveX, moveY) {
        return { kind: MoveElementAction.KIND, elementIds, moveX, moveY };
    }
    MoveElementAction.create = create;
})(MoveElementAction = exports.MoveElementAction || (exports.MoveElementAction = {}));
/* The MoveViewportHandler class is an implementation of the IActionHandler interface that handles
moving of the viewport. */
let MoveViewportHandler = class MoveViewportHandler {
    constructor() {
        this.throttledHandleViewportMove = (0, lodash_1.throttle)((action) => this.handleMoveViewport(action), 150);
    }
    handle(action) {
        if (MoveViewportAction.is(action)) {
            this.throttledHandleViewportMove(action);
        }
    }
    handleMoveViewport(action) {
        const viewport = (0, _glsp_sprotty_1.findParentByFeature)(this.editorContextService.modelRoot, _glsp_sprotty_1.isViewport);
        if (!viewport) {
            return;
        }
        this.dispatcher.dispatch(this.moveViewport(viewport, action.moveX, action.moveY));
    }
    moveViewport(viewport, offsetX, offSetY) {
        const newViewport = {
            scroll: {
                x: viewport.scroll.x + offsetX,
                y: viewport.scroll.y + offSetY
            },
            zoom: viewport.zoom
        };
        return _glsp_sprotty_1.SetViewportAction.create(viewport.id, newViewport, { animate: true });
    }
};
__decorate([
    (0, inversify_1.inject)(editor_context_service_1.EditorContextService),
    __metadata("design:type", editor_context_service_1.EditorContextService)
], MoveViewportHandler.prototype, "editorContextService", void 0);
__decorate([
    (0, inversify_1.inject)(_glsp_sprotty_1.TYPES.IActionDispatcher),
    __metadata("design:type", Object)
], MoveViewportHandler.prototype, "dispatcher", void 0);
MoveViewportHandler = __decorate([
    (0, inversify_1.injectable)()
], MoveViewportHandler);
exports.MoveViewportHandler = MoveViewportHandler;
/* The MoveElementHandler class is an implementation of the IActionHandler interface that handles
moving elements. */
let MoveElementHandler = class MoveElementHandler {
    constructor() {
        this.throttledHandleElementMove = (0, lodash_1.throttle)((action) => this.handleMoveElement(action), 150);
    }
    handle(action) {
        if (MoveElementAction.is(action)) {
            this.throttledHandleElementMove(action);
        }
    }
    handleMoveElement(action) {
        const viewport = (0, _glsp_sprotty_1.findParentByFeature)(this.editorContextService.modelRoot, _glsp_sprotty_1.isViewport);
        if (!viewport) {
            return;
        }
        const elements = (0, smodel_util_1.getElements)(this.editorContextService.modelRoot.index, action.elementIds, smodel_util_1.isSelectableAndBoundsAware);
        this.dispatcher.dispatchAll(this.move(viewport, elements, action.moveX, action.moveY));
    }
    getBounds(element, offSetX, offSetY) {
        return { x: element.bounds.x + offSetX, y: element.bounds.y + offSetY };
    }
    adaptViewport(viewport, newPoint, moveX, moveY) {
        if (newPoint.x < viewport.scroll.x ||
            newPoint.x > viewport.scroll.x + viewport.canvasBounds.width ||
            newPoint.y < viewport.scroll.y ||
            newPoint.y > viewport.scroll.y + viewport.canvasBounds.height) {
            return MoveViewportAction.create(moveX, moveY);
        }
        return;
    }
    moveElement(element, offSetX, offSetY) {
        return _glsp_sprotty_1.ChangeBoundsOperation.create([
            {
                elementId: element.id,
                newSize: {
                    width: element.bounds.width,
                    height: element.bounds.height
                },
                newPosition: {
                    x: element.bounds.x + offSetX,
                    y: element.bounds.y + offSetY
                }
            }
        ]);
    }
    move(viewport, selectedElements, deltaX, deltaY) {
        const results = [];
        if (selectedElements.length !== 0) {
            selectedElements.forEach(currentElement => {
                results.push(this.moveElement(currentElement, deltaX, deltaY));
                const newPosition = this.getBounds(currentElement, deltaX, deltaY);
                const viewportAction = this.adaptViewport(viewport, newPosition, deltaX, deltaY);
                if (viewportAction) {
                    results.push(viewportAction);
                }
            });
        }
        return results;
    }
};
__decorate([
    (0, inversify_1.inject)(editor_context_service_1.EditorContextService),
    __metadata("design:type", editor_context_service_1.EditorContextService)
], MoveElementHandler.prototype, "editorContextService", void 0);
__decorate([
    (0, inversify_1.inject)(_glsp_sprotty_1.TYPES.IActionDispatcher),
    __metadata("design:type", Object)
], MoveElementHandler.prototype, "dispatcher", void 0);
MoveElementHandler = __decorate([
    (0, inversify_1.injectable)()
], MoveElementHandler);
exports.MoveElementHandler = MoveElementHandler;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/features/accessibility/move-zoom/zoom-handler.js":
/*!****************************************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/features/accessibility/move-zoom/zoom-handler.js ***!
  \****************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2023 Business Informatics Group (TU Wien) and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ZoomElementHandler = exports.ZoomViewportHandler = exports.ZoomElementAction = exports.ZoomViewportAction = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const lodash_1 = __webpack_require__(/*! lodash */ "../../node_modules/lodash/lodash.js");
const _glsp_sprotty_1 = __webpack_require__(/*! ../../../glsp-sprotty/index */ "../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/index.js");
const editor_context_service_1 = __webpack_require__(/*! ../../../base/editor-context-service */ "../../node_modules/@eclipse-glsp/client/lib/base/editor-context-service.js");
const smodel_util_1 = __webpack_require__(/*! ../../../utils/smodel-util */ "../../node_modules/@eclipse-glsp/client/lib/utils/smodel-util.js");
var ZoomViewportAction;
(function (ZoomViewportAction) {
    ZoomViewportAction.KIND = 'zoomViewportAction';
    function is(object) {
        return _glsp_sprotty_1.Action.hasKind(object, ZoomViewportAction.KIND);
    }
    ZoomViewportAction.is = is;
    function create(zoomFactor) {
        return { kind: ZoomViewportAction.KIND, zoomFactor };
    }
    ZoomViewportAction.create = create;
})(ZoomViewportAction = exports.ZoomViewportAction || (exports.ZoomViewportAction = {}));
var ZoomElementAction;
(function (ZoomElementAction) {
    ZoomElementAction.KIND = 'zoomElementAction';
    function is(object) {
        return _glsp_sprotty_1.Action.hasKind(object, ZoomElementAction.KIND);
    }
    ZoomElementAction.is = is;
    function create(elementIds, zoomFactor) {
        return { kind: ZoomElementAction.KIND, elementIds, zoomFactor };
    }
    ZoomElementAction.create = create;
})(ZoomElementAction = exports.ZoomElementAction || (exports.ZoomElementAction = {}));
/* The ZoomViewportHandler class is an implementation of the IActionHandler interface that handles
zooming in and out of a viewport. */
let ZoomViewportHandler = class ZoomViewportHandler {
    constructor() {
        this.throttledHandleViewportZoom = (0, lodash_1.throttle)((action) => this.handleZoomViewport(action), 150);
    }
    handle(action) {
        if (ZoomViewportAction.is(action)) {
            this.throttledHandleViewportZoom(action);
        }
    }
    handleZoomViewport(action) {
        const viewport = (0, _glsp_sprotty_1.findParentByFeature)(this.editorContextService.modelRoot, _glsp_sprotty_1.isViewport);
        if (!viewport) {
            return;
        }
        this.dispatcher.dispatch(this.setNewZoomFactor(viewport, action.zoomFactor));
    }
    setNewZoomFactor(viewport, zoomFactor) {
        const newZoom = viewport.zoom * zoomFactor;
        const newViewport = {
            scroll: viewport.scroll,
            zoom: newZoom
        };
        return _glsp_sprotty_1.SetViewportAction.create(viewport.id, newViewport, { animate: true });
    }
};
ZoomViewportHandler.defaultZoomInFactor = 1.1;
ZoomViewportHandler.defaultZoomOutFactor = 0.9;
__decorate([
    (0, inversify_1.inject)(editor_context_service_1.EditorContextService),
    __metadata("design:type", editor_context_service_1.EditorContextService)
], ZoomViewportHandler.prototype, "editorContextService", void 0);
__decorate([
    (0, inversify_1.inject)(_glsp_sprotty_1.TYPES.IActionDispatcher),
    __metadata("design:type", Object)
], ZoomViewportHandler.prototype, "dispatcher", void 0);
ZoomViewportHandler = __decorate([
    (0, inversify_1.injectable)()
], ZoomViewportHandler);
exports.ZoomViewportHandler = ZoomViewportHandler;
/* The ZoomElementHandler class is an implementation of the IActionHandler interface that handles
zooming in and out of elements. */
let ZoomElementHandler = class ZoomElementHandler {
    constructor() {
        this.throttledHandleElementZoom = (0, lodash_1.throttle)((action) => this.handleZoomElement(action), 150);
    }
    handle(action) {
        if (ZoomElementAction.is(action)) {
            this.throttledHandleElementZoom(action);
        }
    }
    handleZoomElement(action) {
        const viewport = (0, _glsp_sprotty_1.findParentByFeature)(this.editorContextService.modelRoot, _glsp_sprotty_1.isViewport);
        if (!viewport) {
            return;
        }
        const elements = (0, smodel_util_1.getElements)(this.editorContextService.modelRoot.index, action.elementIds, smodel_util_1.isSelectableAndBoundsAware);
        const center = this.getCenter(viewport, elements);
        this.dispatcher.dispatch(this.setNewZoomFactor(viewport, action.zoomFactor, center));
    }
    getCenter(viewport, selectedElements) {
        // Get bounds of elements based on the viewport
        const allBounds = selectedElements.map(e => this.boundsInViewport(viewport, e, e.bounds));
        const mergedBounds = allBounds.reduce((b0, b1) => _glsp_sprotty_1.Bounds.combine(b0, b1));
        return _glsp_sprotty_1.Bounds.center(mergedBounds);
    }
    // copy from center-fit.ts, translates the children bounds to the viewport bounds
    boundsInViewport(viewport, element, bounds) {
        if (element instanceof _glsp_sprotty_1.SChildElement && element.parent !== viewport) {
            return this.boundsInViewport(viewport, element.parent, element.parent.localToParent(bounds));
        }
        else {
            return bounds;
        }
    }
    setNewZoomFactor(viewport, zoomFactor, point) {
        const newZoom = viewport.zoom * zoomFactor;
        const newViewport = {
            scroll: {
                x: point.x - (0.5 * viewport.canvasBounds.width) / newZoom,
                y: point.y - (0.5 * viewport.canvasBounds.height) / newZoom
            },
            zoom: newZoom
        };
        return _glsp_sprotty_1.SetViewportAction.create(viewport.id, newViewport, { animate: true });
    }
};
__decorate([
    (0, inversify_1.inject)(editor_context_service_1.EditorContextService),
    __metadata("design:type", editor_context_service_1.EditorContextService)
], ZoomElementHandler.prototype, "editorContextService", void 0);
__decorate([
    (0, inversify_1.inject)(_glsp_sprotty_1.TYPES.IActionDispatcher),
    __metadata("design:type", Object)
], ZoomElementHandler.prototype, "dispatcher", void 0);
ZoomElementHandler = __decorate([
    (0, inversify_1.injectable)()
], ZoomElementHandler);
exports.ZoomElementHandler = ZoomElementHandler;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/features/accessibility/resize-key-tool/di.config.js":
/*!*******************************************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/features/accessibility/resize-key-tool/di.config.js ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2023 Business Informatics Group (TU Wien) and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.configureResizeTools = exports.glspResizeKeyModule = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const _glsp_sprotty_1 = __webpack_require__(/*! ../../../glsp-sprotty/index */ "../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/index.js");
const resize_key_handler_1 = __webpack_require__(/*! ./resize-key-handler */ "../../node_modules/@eclipse-glsp/client/lib/features/accessibility/resize-key-tool/resize-key-handler.js");
const resize_key_tool_1 = __webpack_require__(/*! ./resize-key-tool */ "../../node_modules/@eclipse-glsp/client/lib/features/accessibility/resize-key-tool/resize-key-tool.js");
/**
 * Handles resize actions.
 */
exports.glspResizeKeyModule = new inversify_1.ContainerModule((bind, unbind, isBound, rebind) => {
    const context = { bind, unbind, isBound, rebind };
    configureResizeTools(context);
});
function configureResizeTools(context) {
    context.bind(resize_key_handler_1.ResizeElementHandler).toSelf().inSingletonScope();
    (0, _glsp_sprotty_1.configureActionHandler)(context, resize_key_handler_1.ResizeElementAction.KIND, resize_key_handler_1.ResizeElementHandler);
    (0, _glsp_sprotty_1.bindAsService)(context, _glsp_sprotty_1.TYPES.IDefaultTool, resize_key_tool_1.ResizeKeyTool);
}
exports.configureResizeTools = configureResizeTools;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/features/accessibility/resize-key-tool/resize-key-handler.js":
/*!****************************************************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/features/accessibility/resize-key-tool/resize-key-handler.js ***!
  \****************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2023 Business Informatics Group (TU Wien) and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var ResizeElementHandler_1;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ResizeElementHandler = exports.ResizeElementAction = exports.ResizeType = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const _glsp_sprotty_1 = __webpack_require__(/*! ../../../glsp-sprotty/index */ "../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/index.js");
const editor_context_service_1 = __webpack_require__(/*! ../../../base/editor-context-service */ "../../node_modules/@eclipse-glsp/client/lib/base/editor-context-service.js");
const layout_utils_1 = __webpack_require__(/*! ../../../utils/layout-utils */ "../../node_modules/@eclipse-glsp/client/lib/utils/layout-utils.js");
const smodel_util_1 = __webpack_require__(/*! ../../../utils/smodel-util */ "../../node_modules/@eclipse-glsp/client/lib/utils/smodel-util.js");
const snap_1 = __webpack_require__(/*! ../../change-bounds/snap */ "../../node_modules/@eclipse-glsp/client/lib/features/change-bounds/snap.js");
var ResizeType;
(function (ResizeType) {
    ResizeType[ResizeType["Increase"] = 0] = "Increase";
    ResizeType[ResizeType["Decrease"] = 1] = "Decrease";
    ResizeType[ResizeType["MinSize"] = 2] = "MinSize";
})(ResizeType = exports.ResizeType || (exports.ResizeType = {}));
var ResizeElementAction;
(function (ResizeElementAction) {
    ResizeElementAction.KIND = 'resizeElementAction';
    function is(object) {
        return _glsp_sprotty_1.Action.hasKind(object, ResizeElementAction.KIND);
    }
    ResizeElementAction.is = is;
    function create(elementIds, resizeType) {
        return { kind: ResizeElementAction.KIND, elementIds, resizeType };
    }
    ResizeElementAction.create = create;
})(ResizeElementAction = exports.ResizeElementAction || (exports.ResizeElementAction = {}));
/* The ResizeElementHandler class is an implementation of the IActionHandler interface that handles
resizing of elements. */
let ResizeElementHandler = ResizeElementHandler_1 = class ResizeElementHandler {
    constructor(snapper) {
        this.snapper = snapper;
        this.grid = { x: ResizeElementHandler_1.defaultResizeX, y: ResizeElementHandler_1.defaultResizeY };
        this.isEditMode = false;
        if (snapper instanceof snap_1.GridSnapper) {
            this.grid = snapper.grid;
        }
    }
    handle(action) {
        if (ResizeElementAction.is(action)) {
            this.handleResizeElement(action);
        }
    }
    handleResizeElement(action) {
        const elements = (0, smodel_util_1.getElements)(this.editorContextService.modelRoot.index, action.elementIds, smodel_util_1.isSelectableAndBoundsAware);
        this.dispatcher.dispatchAll(this.resize(elements, action));
    }
    resize(elements, action) {
        const actions = [];
        elements.forEach(element => {
            const { x, y, width: oldWidth, height: oldHeight } = element.bounds;
            let width = 0;
            let height = 0;
            if (action.resizeType === ResizeType.Decrease) {
                width = oldWidth - this.grid.x;
                height = oldHeight - this.grid.y;
            }
            else if (action.resizeType === ResizeType.Increase) {
                width = oldWidth + this.grid.x;
                height = oldHeight + this.grid.y;
            }
            else if (action.resizeType === ResizeType.MinSize) {
                width = (0, layout_utils_1.minWidth)(element);
                height = (0, layout_utils_1.minHeight)(element);
            }
            if (this.isValidBoundChange(element, { x, y }, { width, height })) {
                const resizeElement = { id: element.id, bounds: { x, y, width, height } };
                actions.push(_glsp_sprotty_1.ChangeBoundsOperation.create([(0, smodel_util_1.toElementAndBounds)(resizeElement)]));
            }
        });
        return actions;
    }
    isValidBoundChange(element, newPosition, newSize) {
        return (0, layout_utils_1.isValidSize)(element, newSize) && (0, layout_utils_1.isValidMove)(element, newPosition);
    }
};
// Default x resize used if GridSnapper is not provided
ResizeElementHandler.defaultResizeX = 20;
// Default y resize used if GridSnapper is not provided
ResizeElementHandler.defaultResizeY = 20;
__decorate([
    (0, inversify_1.inject)(editor_context_service_1.EditorContextService),
    __metadata("design:type", editor_context_service_1.EditorContextService)
], ResizeElementHandler.prototype, "editorContextService", void 0);
__decorate([
    (0, inversify_1.inject)(_glsp_sprotty_1.TYPES.IActionDispatcher),
    __metadata("design:type", Object)
], ResizeElementHandler.prototype, "dispatcher", void 0);
ResizeElementHandler = ResizeElementHandler_1 = __decorate([
    (0, inversify_1.injectable)(),
    __param(0, (0, inversify_1.inject)(_glsp_sprotty_1.TYPES.ISnapper)),
    __param(0, (0, inversify_1.optional)()),
    __metadata("design:paramtypes", [Object])
], ResizeElementHandler);
exports.ResizeElementHandler = ResizeElementHandler;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/features/accessibility/resize-key-tool/resize-key-tool.js":
/*!*************************************************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/features/accessibility/resize-key-tool/resize-key-tool.js ***!
  \*************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2023 Business Informatics Group (TU Wien) and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var ResizeKeyTool_1;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ResizeKeyListener = exports.ResizeKeyTool = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const keyboard_1 = __webpack_require__(/*! sprotty/lib/utils/keyboard */ "../../node_modules/sprotty/lib/utils/keyboard.js");
const _glsp_sprotty_1 = __webpack_require__(/*! ../../../glsp-sprotty/index */ "../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/index.js");
const selection_service_1 = __webpack_require__(/*! ../../select/selection-service */ "../../node_modules/@eclipse-glsp/client/lib/features/select/selection-service.js");
const resize_key_handler_1 = __webpack_require__(/*! ./resize-key-handler */ "../../node_modules/@eclipse-glsp/client/lib/features/accessibility/resize-key-tool/resize-key-handler.js");
let ResizeKeyTool = ResizeKeyTool_1 = class ResizeKeyTool {
    constructor() {
        this.isEditTool = true;
        this.resizeKeyListener = new ResizeKeyListener(this);
    }
    get id() {
        return ResizeKeyTool_1.ID;
    }
    enable() {
        this.keytool.register(this.resizeKeyListener);
    }
    disable() {
        this.keytool.deregister(this.resizeKeyListener);
    }
};
ResizeKeyTool.ID = 'glsp.resize-key-tool';
__decorate([
    (0, inversify_1.inject)(_glsp_sprotty_1.KeyTool),
    __metadata("design:type", _glsp_sprotty_1.KeyTool)
], ResizeKeyTool.prototype, "keytool", void 0);
__decorate([
    (0, inversify_1.inject)(_glsp_sprotty_1.TYPES.IMovementRestrictor),
    (0, inversify_1.optional)(),
    __metadata("design:type", Object)
], ResizeKeyTool.prototype, "movementRestrictor", void 0);
__decorate([
    (0, inversify_1.inject)(_glsp_sprotty_1.TYPES.ISnapper),
    (0, inversify_1.optional)(),
    __metadata("design:type", Object)
], ResizeKeyTool.prototype, "snapper", void 0);
__decorate([
    (0, inversify_1.inject)(_glsp_sprotty_1.TYPES.SelectionService),
    __metadata("design:type", selection_service_1.SelectionService)
], ResizeKeyTool.prototype, "selectionService", void 0);
ResizeKeyTool = ResizeKeyTool_1 = __decorate([
    (0, inversify_1.injectable)()
], ResizeKeyTool);
exports.ResizeKeyTool = ResizeKeyTool;
let ResizeKeyListener = class ResizeKeyListener extends _glsp_sprotty_1.KeyListener {
    constructor(tool) {
        super();
        this.tool = tool;
        this.isEditMode = false;
    }
    keyDown(element, event) {
        const actions = [];
        const selectedElementsIds = this.tool.selectionService.getSelectedElementIDs();
        if (this.isEditMode && this.matchesDeactivateResizeModeKeystroke(event)) {
            this.isEditMode = false;
            actions.push(_glsp_sprotty_1.EnableDefaultToolsAction.create());
        }
        if (selectedElementsIds.length > 0) {
            if (!this.isEditMode && this.matchesActivateResizeModeKeystroke(event)) {
                this.isEditMode = true;
                actions.push(_glsp_sprotty_1.EnableToolsAction.create([ResizeKeyTool.ID]));
            }
            if (this.isEditMode) {
                if (this.matchesIncreaseSizeKeystroke(event)) {
                    actions.push(resize_key_handler_1.ResizeElementAction.create(selectedElementsIds, resize_key_handler_1.ResizeType.Increase));
                }
                else if (this.matchesDecreaseSizeKeystroke(event)) {
                    actions.push(resize_key_handler_1.ResizeElementAction.create(selectedElementsIds, resize_key_handler_1.ResizeType.Decrease));
                }
                else if (this.matchesMinSizeKeystroke(event)) {
                    actions.push(resize_key_handler_1.ResizeElementAction.create(selectedElementsIds, resize_key_handler_1.ResizeType.MinSize));
                }
            }
        }
        return actions;
    }
    matchesIncreaseSizeKeystroke(event) {
        /** here event.key is used for '+', as keycode 187 is already declared for 'Equals' in {@link matchesKeystroke}.*/
        return event.key === '+' || (0, keyboard_1.matchesKeystroke)(event, 'NumpadAdd');
    }
    matchesActivateResizeModeKeystroke(event) {
        return (0, keyboard_1.matchesKeystroke)(event, 'KeyA', 'alt');
    }
    matchesDeactivateResizeModeKeystroke(event) {
        return (0, keyboard_1.matchesKeystroke)(event, 'Escape');
    }
    matchesMinSizeKeystroke(event) {
        return (0, keyboard_1.matchesKeystroke)(event, 'Digit0', 'ctrl') || (0, keyboard_1.matchesKeystroke)(event, 'Numpad0', 'ctrl');
    }
    matchesDecreaseSizeKeystroke(event) {
        return (0, keyboard_1.matchesKeystroke)(event, 'Minus') || (0, keyboard_1.matchesKeystroke)(event, 'NumpadSubtract');
    }
};
ResizeKeyListener = __decorate([
    (0, inversify_1.injectable)(),
    __metadata("design:paramtypes", [ResizeKeyTool])
], ResizeKeyListener);
exports.ResizeKeyListener = ResizeKeyListener;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/features/accessibility/search/di.config.js":
/*!**********************************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/features/accessibility/search/di.config.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2023 Business Informatics Group (TU Wien) and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.configureSearchPaletteModule = exports.glspSearchPaletteModule = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const _glsp_sprotty_1 = __webpack_require__(/*! ../../../glsp-sprotty/index */ "../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/index.js");
const search_palette_1 = __webpack_require__(/*! ./search-palette */ "../../node_modules/@eclipse-glsp/client/lib/features/accessibility/search/search-palette.js");
const search_tool_1 = __webpack_require__(/*! ./search-tool */ "../../node_modules/@eclipse-glsp/client/lib/features/accessibility/search/search-tool.js");
exports.glspSearchPaletteModule = new inversify_1.ContainerModule((bind, _unbind, isBound, rebind) => {
    const context = { bind, isBound, rebind };
    configureSearchPaletteModule(context);
});
function configureSearchPaletteModule(context) {
    (0, _glsp_sprotty_1.bindAsService)(context, _glsp_sprotty_1.TYPES.IUIExtension, search_palette_1.SearchAutocompletePalette);
    (0, _glsp_sprotty_1.bindAsService)(context, _glsp_sprotty_1.TYPES.IDefaultTool, search_tool_1.SearchAutocompletePaletteTool);
}
exports.configureSearchPaletteModule = configureSearchPaletteModule;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/features/accessibility/search/search-palette.js":
/*!***************************************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/features/accessibility/search/search-palette.js ***!
  \***************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2023 Business Informatics Group (TU Wien) and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var SearchAutocompletePalette_1;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SearchAutocompletePalette = exports.RevealEdgeElementAutocompleteSuggestionProvider = exports.RevealNamedElementAutocompleteSuggestionProvider = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const lodash_1 = __webpack_require__(/*! lodash */ "../../node_modules/lodash/lodash.js");
const iterable_1 = __webpack_require__(/*! sprotty/lib/utils/iterable */ "../../node_modules/sprotty/lib/utils/iterable.js");
const _glsp_sprotty_1 = __webpack_require__(/*! ../../../glsp-sprotty/index */ "../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/index.js");
const base_autocomplete_palette_1 = __webpack_require__(/*! ../../autocomplete-palette/base-autocomplete-palette */ "../../node_modules/@eclipse-glsp/client/lib/features/autocomplete-palette/base-autocomplete-palette.js");
const css_feedback_1 = __webpack_require__(/*! ../../tool-feedback/css-feedback */ "../../node_modules/@eclipse-glsp/client/lib/features/tool-feedback/css-feedback.js");
const CSS_SEARCH_HIDDEN = 'search-hidden';
const CSS_SEARCH_HIGHLIGHTED = 'search-highlighted';
class RevealNamedElementAutocompleteSuggestionProvider {
    async retrieveSuggestions(root, text) {
        const nameables = (0, iterable_1.toArray)(root.index.all().filter(element => (0, _glsp_sprotty_1.isNameable)(element)));
        return nameables.map(nameable => {
            var _a;
            return ({
                element: nameable,
                action: {
                    label: `[${nameable.type}] ${(_a = (0, _glsp_sprotty_1.name)(nameable)) !== null && _a !== void 0 ? _a : '<no-name>'}`,
                    actions: this.getActions(nameable),
                    icon: (0, _glsp_sprotty_1.codiconCSSString)('eye')
                }
            });
        });
    }
    getActions(nameable) {
        return [_glsp_sprotty_1.SelectAction.create({ selectedElementsIDs: [nameable.id] }), _glsp_sprotty_1.CenterAction.create([nameable.id], { retainZoom: true })];
    }
}
exports.RevealNamedElementAutocompleteSuggestionProvider = RevealNamedElementAutocompleteSuggestionProvider;
class RevealEdgeElementAutocompleteSuggestionProvider {
    async retrieveSuggestions(root, text) {
        const edges = (0, iterable_1.toArray)(root.index.all().filter(element => element instanceof _glsp_sprotty_1.SEdge));
        return edges.map(edge => ({
            element: edge,
            action: {
                label: `[${edge.type}]  ${this.getEdgeLabel(root, edge)}`,
                actions: this.getActions(edge),
                icon: (0, _glsp_sprotty_1.codiconCSSString)('arrow-both')
            }
        }));
    }
    getActions(edge) {
        return [_glsp_sprotty_1.SelectAction.create({ selectedElementsIDs: [edge.id] }), _glsp_sprotty_1.CenterAction.create([edge.sourceId, edge.targetId])];
    }
    getEdgeLabel(root, edge) {
        var _a, _b;
        let sourceName = '';
        let targetName = '';
        const sourceNode = root.index.getById(edge.sourceId);
        const targetNode = root.index.getById(edge.targetId);
        if (sourceNode !== undefined) {
            sourceName = (_a = (0, _glsp_sprotty_1.name)(sourceNode)) !== null && _a !== void 0 ? _a : sourceNode.type;
        }
        if (targetNode !== undefined) {
            targetName = (_b = (0, _glsp_sprotty_1.name)(targetNode)) !== null && _b !== void 0 ? _b : targetNode.type;
        }
        return sourceName + ' -> ' + targetName;
    }
}
exports.RevealEdgeElementAutocompleteSuggestionProvider = RevealEdgeElementAutocompleteSuggestionProvider;
let SearchAutocompletePalette = SearchAutocompletePalette_1 = class SearchAutocompletePalette extends base_autocomplete_palette_1.BaseAutocompletePalette {
    constructor() {
        super(...arguments);
        this.cachedSuggestions = [];
    }
    id() {
        return SearchAutocompletePalette_1.ID;
    }
    initializeContents(containerElement) {
        super.initializeContents(containerElement);
        this.autocompleteWidget.inputField.placeholder = 'Search for elements';
    }
    getSuggestionProviders(root, input) {
        return [new RevealNamedElementAutocompleteSuggestionProvider(), new RevealEdgeElementAutocompleteSuggestionProvider()];
    }
    async retrieveSuggestions(root, input) {
        const providers = this.getSuggestionProviders(root, input);
        const suggestions = (await Promise.all(providers.map(provider => provider.retrieveSuggestions(root, input)))).flat(1);
        this.cachedSuggestions = suggestions;
        return suggestions.map(s => s.action);
    }
    async visibleSuggestionsChanged(root, labeledActions) {
        await this.applyCSS(this.getHiddenElements(root, this.getSuggestionsFromLabeledActions(labeledActions)), CSS_SEARCH_HIDDEN);
        await this.deleteCSS(this.getSuggestionsFromLabeledActions(labeledActions).map(s => s.element), CSS_SEARCH_HIDDEN);
    }
    async selectedSuggestionChanged(root, labeledAction) {
        await this.deleteAllCSS(root, CSS_SEARCH_HIGHLIGHTED);
        if (labeledAction !== undefined) {
            const suggestions = this.getSuggestionsFromLabeledActions([labeledAction]);
            const actions = [];
            suggestions.map(currElem => actions.push(_glsp_sprotty_1.CenterAction.create([currElem.element.id], { animate: true, retainZoom: true })));
            this.actionDispatcher.dispatchAll(actions);
            await this.applyCSS(suggestions.map(s => s.element), CSS_SEARCH_HIGHLIGHTED);
        }
    }
    show(root, ...contextElementIds) {
        this.actionDispatcher.dispatch(_glsp_sprotty_1.SelectAllAction.create(false));
        super.show(root, ...contextElementIds);
    }
    hide() {
        if (this.root !== undefined) {
            this.deleteAllCSS(this.root, CSS_SEARCH_HIDDEN);
            this.deleteAllCSS(this.root, CSS_SEARCH_HIGHLIGHTED);
            this.autocompleteWidget.inputField.value = '';
        }
        super.hide();
    }
    applyCSS(elements, cssClass) {
        const actions = elements.map(element => (0, css_feedback_1.applyCssClasses)(element, cssClass));
        return this.actionDispatcher.dispatchAll(actions);
    }
    deleteCSS(elements, cssClass) {
        const actions = elements.map(element => (0, css_feedback_1.deleteCssClasses)(element, cssClass));
        return this.actionDispatcher.dispatchAll(actions);
    }
    deleteAllCSS(root, cssClass) {
        const actions = (0, iterable_1.toArray)(root.index.all().map(element => (0, css_feedback_1.deleteCssClasses)(element, cssClass)));
        return this.actionDispatcher.dispatchAll(actions);
    }
    getSuggestionsFromLabeledActions(labeledActions) {
        return this.cachedSuggestions.filter(c => labeledActions.find(s => (0, lodash_1.isEqual)(s, c.action)));
    }
    getHiddenSuggestionsFromLabeledActions(labeledActions) {
        return this.cachedSuggestions.filter(c => !labeledActions.find(s => (0, lodash_1.isEqual)(s, c.action)));
    }
    getHiddenElements(root, suggestions) {
        return (0, iterable_1.toArray)(root.index
            .all()
            .filter(element => element instanceof _glsp_sprotty_1.SNode || element instanceof _glsp_sprotty_1.SEdge)
            .filter(element => suggestions.find(suggestion => suggestion.element.id === element.id) === undefined));
    }
};
SearchAutocompletePalette.ID = 'search-autocomplete-palette';
SearchAutocompletePalette = SearchAutocompletePalette_1 = __decorate([
    (0, inversify_1.injectable)()
], SearchAutocompletePalette);
exports.SearchAutocompletePalette = SearchAutocompletePalette;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/features/accessibility/search/search-tool.js":
/*!************************************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/features/accessibility/search/search-tool.js ***!
  \************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2023 Business Informatics Group (TU Wien) and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var SearchAutocompletePaletteTool_1;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SearchAutocompletePaletteKeyListener = exports.SearchAutocompletePaletteTool = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const keyboard_1 = __webpack_require__(/*! sprotty/lib/utils/keyboard */ "../../node_modules/sprotty/lib/utils/keyboard.js");
const _glsp_sprotty_1 = __webpack_require__(/*! ../../../glsp-sprotty/index */ "../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/index.js");
const search_palette_1 = __webpack_require__(/*! ./search-palette */ "../../node_modules/@eclipse-glsp/client/lib/features/accessibility/search/search-palette.js");
let SearchAutocompletePaletteTool = SearchAutocompletePaletteTool_1 = class SearchAutocompletePaletteTool {
    constructor() {
        this.keyListener = new SearchAutocompletePaletteKeyListener();
    }
    get id() {
        return SearchAutocompletePaletteTool_1.ID;
    }
    enable() {
        this.keyTool.register(this.keyListener);
    }
    disable() {
        this.keyTool.deregister(this.keyListener);
    }
};
SearchAutocompletePaletteTool.ID = 'glsp.search-autocomplete-palette-tool';
__decorate([
    (0, inversify_1.inject)(_glsp_sprotty_1.KeyTool),
    __metadata("design:type", _glsp_sprotty_1.KeyTool)
], SearchAutocompletePaletteTool.prototype, "keyTool", void 0);
SearchAutocompletePaletteTool = SearchAutocompletePaletteTool_1 = __decorate([
    (0, inversify_1.injectable)()
], SearchAutocompletePaletteTool);
exports.SearchAutocompletePaletteTool = SearchAutocompletePaletteTool;
class SearchAutocompletePaletteKeyListener extends _glsp_sprotty_1.KeyListener {
    keyDown(element, event) {
        if (this.matchesSearchActivateKeystroke(event)) {
            return [
                _glsp_sprotty_1.SetUIExtensionVisibilityAction.create({
                    extensionId: search_palette_1.SearchAutocompletePalette.ID,
                    visible: true
                })
            ];
        }
        return [];
    }
    matchesSearchActivateKeystroke(event) {
        return (0, keyboard_1.matchesKeystroke)(event, 'KeyF', 'ctrl');
    }
}
exports.SearchAutocompletePaletteKeyListener = SearchAutocompletePaletteKeyListener;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/features/accessibility/view-key-tools/deselect-key-tool.js":
/*!**************************************************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/features/accessibility/view-key-tools/deselect-key-tool.js ***!
  \**************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2023 Business Informatics Group (TU Wien) and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var DeselectKeyTool_1;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.DeselectKeyListener = exports.DeselectKeyTool = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const iterable_1 = __webpack_require__(/*! sprotty/lib/utils/iterable */ "../../node_modules/sprotty/lib/utils/iterable.js");
const keyboard_1 = __webpack_require__(/*! sprotty/lib/utils/keyboard */ "../../node_modules/sprotty/lib/utils/keyboard.js");
const _glsp_sprotty_1 = __webpack_require__(/*! ../../../glsp-sprotty/index */ "../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/index.js");
const model_1 = __webpack_require__(/*! ../../change-bounds/model */ "../../node_modules/@eclipse-glsp/client/lib/features/change-bounds/model.js");
/**
 * Deselects the element if there is no interaction possible with element.
 */
let DeselectKeyTool = DeselectKeyTool_1 = class DeselectKeyTool {
    constructor() {
        this.isEditTool = true;
        this.deselectKeyListener = new DeselectKeyListener();
    }
    get id() {
        return DeselectKeyTool_1.ID;
    }
    enable() {
        this.keytool.register(this.deselectKeyListener);
    }
    disable() {
        this.keytool.deregister(this.deselectKeyListener);
    }
};
DeselectKeyTool.ID = 'glsp.deselect-key-tool';
__decorate([
    (0, inversify_1.inject)(_glsp_sprotty_1.KeyTool),
    __metadata("design:type", _glsp_sprotty_1.KeyTool)
], DeselectKeyTool.prototype, "keytool", void 0);
DeselectKeyTool = DeselectKeyTool_1 = __decorate([
    (0, inversify_1.injectable)()
], DeselectKeyTool);
exports.DeselectKeyTool = DeselectKeyTool;
class DeselectKeyListener extends _glsp_sprotty_1.KeyListener {
    keyDown(target, event) {
        if (this.matchesDeselectKeystroke(event)) {
            const isResizeHandleActive = (0, iterable_1.toArray)(target.root.index.all().filter(el => el instanceof model_1.SResizeHandle)).length > 0;
            if (isResizeHandleActive) {
                return [];
            }
            const deselect = (0, iterable_1.toArray)(target.root.index.all().filter(element => (0, _glsp_sprotty_1.isSelectable)(element) && element.selected));
            const actions = [];
            if (deselect.length > 0) {
                actions.push(_glsp_sprotty_1.SelectAction.create({ deselectedElementsIDs: deselect.map(e => e.id) }));
            }
            const routableDeselect = deselect.filter(e => e instanceof _glsp_sprotty_1.SRoutableElement).map(e => e.id);
            if (routableDeselect.length > 0) {
                actions.push(_glsp_sprotty_1.SwitchEditModeAction.create({ elementsToDeactivate: routableDeselect }));
            }
            return actions;
        }
        return [];
    }
    matchesDeselectKeystroke(event) {
        return (0, keyboard_1.matchesKeystroke)(event, 'Escape');
    }
}
exports.DeselectKeyListener = DeselectKeyListener;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/features/accessibility/view-key-tools/di.config.js":
/*!******************************************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/features/accessibility/view-key-tools/di.config.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2019-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.configureViewKeyTools = exports.glspViewKeyToolsModule = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const _glsp_sprotty_1 = __webpack_require__(/*! ../../../glsp-sprotty/index */ "../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/index.js");
const deselect_key_tool_1 = __webpack_require__(/*! ../view-key-tools/deselect-key-tool */ "../../node_modules/@eclipse-glsp/client/lib/features/accessibility/view-key-tools/deselect-key-tool.js");
const movement_key_tool_1 = __webpack_require__(/*! ./movement-key-tool */ "../../node_modules/@eclipse-glsp/client/lib/features/accessibility/view-key-tools/movement-key-tool.js");
const zoom_key_tool_1 = __webpack_require__(/*! ./zoom-key-tool */ "../../node_modules/@eclipse-glsp/client/lib/features/accessibility/view-key-tools/zoom-key-tool.js");
exports.glspViewKeyToolsModule = new inversify_1.ContainerModule((bind, _unbind, isBound, rebind) => {
    const context = { bind, isBound, rebind };
    configureViewKeyTools(context);
});
function configureViewKeyTools(context) {
    (0, _glsp_sprotty_1.bindAsService)(context, _glsp_sprotty_1.TYPES.IDefaultTool, movement_key_tool_1.MovementKeyTool);
    (0, _glsp_sprotty_1.bindAsService)(context, _glsp_sprotty_1.TYPES.IDefaultTool, zoom_key_tool_1.ZoomKeyTool);
    (0, _glsp_sprotty_1.bindAsService)(context, _glsp_sprotty_1.TYPES.IDefaultTool, deselect_key_tool_1.DeselectKeyTool);
}
exports.configureViewKeyTools = configureViewKeyTools;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/features/accessibility/view-key-tools/movement-key-tool.js":
/*!**************************************************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/features/accessibility/view-key-tools/movement-key-tool.js ***!
  \**************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2023 Business Informatics Group (TU Wien) and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var MovementKeyTool_1;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.MoveKeyListener = exports.MovementKeyTool = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const keyboard_1 = __webpack_require__(/*! sprotty/lib/utils/keyboard */ "../../node_modules/sprotty/lib/utils/keyboard.js");
const _glsp_sprotty_1 = __webpack_require__(/*! ../../../glsp-sprotty/index */ "../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/index.js");
const snap_1 = __webpack_require__(/*! ../../change-bounds/snap */ "../../node_modules/@eclipse-glsp/client/lib/features/change-bounds/snap.js");
const selection_service_1 = __webpack_require__(/*! ../../select/selection-service */ "../../node_modules/@eclipse-glsp/client/lib/features/select/selection-service.js");
const move_handler_1 = __webpack_require__(/*! ../move-zoom/move-handler */ "../../node_modules/@eclipse-glsp/client/lib/features/accessibility/move-zoom/move-handler.js");
/**
 * Moves viewport and elements when its focused and arrow keys are hit.
 */
let MovementKeyTool = MovementKeyTool_1 = class MovementKeyTool {
    constructor() {
        this.isEditTool = true;
        this.movementKeyListener = new MoveKeyListener(this);
    }
    get id() {
        return MovementKeyTool_1.ID;
    }
    enable() {
        this.keytool.register(this.movementKeyListener);
    }
    disable() {
        this.keytool.deregister(this.movementKeyListener);
    }
};
MovementKeyTool.ID = 'glsp.movement-key-tool';
__decorate([
    (0, inversify_1.inject)(_glsp_sprotty_1.KeyTool),
    __metadata("design:type", _glsp_sprotty_1.KeyTool)
], MovementKeyTool.prototype, "keytool", void 0);
__decorate([
    (0, inversify_1.inject)(_glsp_sprotty_1.TYPES.SelectionService),
    __metadata("design:type", selection_service_1.SelectionService)
], MovementKeyTool.prototype, "selectionService", void 0);
__decorate([
    (0, inversify_1.inject)(_glsp_sprotty_1.TYPES.ISnapper),
    (0, inversify_1.optional)(),
    __metadata("design:type", Object)
], MovementKeyTool.prototype, "snapper", void 0);
MovementKeyTool = MovementKeyTool_1 = __decorate([
    (0, inversify_1.injectable)()
], MovementKeyTool);
exports.MovementKeyTool = MovementKeyTool;
class MoveKeyListener extends _glsp_sprotty_1.KeyListener {
    constructor(tool) {
        super();
        this.tool = tool;
        this.grid = { x: MoveKeyListener.defaultMoveX, y: MoveKeyListener.defaultMoveY };
        if (this.tool.snapper instanceof snap_1.GridSnapper) {
            this.grid = this.tool.snapper.grid;
        }
    }
    keyDown(element, event) {
        const selectedElementIds = this.tool.selectionService.getSelectedElementIDs();
        if (selectedElementIds.length > 0) {
            if (this.matchesMoveUpKeystroke(event)) {
                return [move_handler_1.MoveElementAction.create(selectedElementIds, 0, -this.grid.x)];
            }
            else if (this.matchesMoveDownKeystroke(event)) {
                return [move_handler_1.MoveElementAction.create(selectedElementIds, 0, this.grid.x)];
            }
            else if (this.matchesMoveRightKeystroke(event)) {
                return [move_handler_1.MoveElementAction.create(selectedElementIds, this.grid.x, 0)];
            }
            else if (this.matchesMoveLeftKeystroke(event)) {
                return [move_handler_1.MoveElementAction.create(selectedElementIds, -this.grid.x, 0)];
            }
        }
        else {
            if (this.matchesMoveUpKeystroke(event)) {
                return [move_handler_1.MoveViewportAction.create(0, -this.grid.x)];
            }
            else if (this.matchesMoveDownKeystroke(event)) {
                return [move_handler_1.MoveViewportAction.create(0, this.grid.x)];
            }
            else if (this.matchesMoveRightKeystroke(event)) {
                return [move_handler_1.MoveViewportAction.create(this.grid.x, 0)];
            }
            else if (this.matchesMoveLeftKeystroke(event)) {
                return [move_handler_1.MoveViewportAction.create(-this.grid.x, 0)];
            }
        }
        return [];
    }
    matchesMoveUpKeystroke(event) {
        return (0, keyboard_1.matchesKeystroke)(event, 'ArrowUp');
    }
    matchesMoveDownKeystroke(event) {
        return (0, keyboard_1.matchesKeystroke)(event, 'ArrowDown');
    }
    matchesMoveRightKeystroke(event) {
        return (0, keyboard_1.matchesKeystroke)(event, 'ArrowRight');
    }
    matchesMoveLeftKeystroke(event) {
        return (0, keyboard_1.matchesKeystroke)(event, 'ArrowLeft');
    }
}
// Default x distance used if GridSnapper is not provided
MoveKeyListener.defaultMoveX = 20;
// Default y distance used if GridSnapper is not provided
MoveKeyListener.defaultMoveY = 20;
exports.MoveKeyListener = MoveKeyListener;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/features/accessibility/view-key-tools/zoom-key-tool.js":
/*!**********************************************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/features/accessibility/view-key-tools/zoom-key-tool.js ***!
  \**********************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2023 Business Informatics Group (TU Wien) and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var ZoomKeyTool_1;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ZoomKeyListener = exports.ZoomKeyTool = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const keyboard_1 = __webpack_require__(/*! sprotty/lib/utils/keyboard */ "../../node_modules/sprotty/lib/utils/keyboard.js");
const _glsp_sprotty_1 = __webpack_require__(/*! ../../../glsp-sprotty/index */ "../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/index.js");
const selection_service_1 = __webpack_require__(/*! ../../select/selection-service */ "../../node_modules/@eclipse-glsp/client/lib/features/select/selection-service.js");
const zoom_handler_1 = __webpack_require__(/*! ../move-zoom/zoom-handler */ "../../node_modules/@eclipse-glsp/client/lib/features/accessibility/move-zoom/zoom-handler.js");
/**
 * Zoom viewport and elements when its focused and arrow keys are hit.
 */
let ZoomKeyTool = ZoomKeyTool_1 = class ZoomKeyTool {
    constructor() {
        this.isEditTool = false;
        this.zoomKeyListener = new ZoomKeyListener(this);
    }
    get id() {
        return ZoomKeyTool_1.ID;
    }
    enable() {
        this.keytool.register(this.zoomKeyListener);
    }
    disable() {
        this.keytool.deregister(this.zoomKeyListener);
    }
};
ZoomKeyTool.ID = 'glsp.zoom-key-tool';
__decorate([
    (0, inversify_1.inject)(_glsp_sprotty_1.KeyTool),
    __metadata("design:type", _glsp_sprotty_1.KeyTool)
], ZoomKeyTool.prototype, "keytool", void 0);
__decorate([
    (0, inversify_1.inject)(_glsp_sprotty_1.TYPES.SelectionService),
    __metadata("design:type", selection_service_1.SelectionService)
], ZoomKeyTool.prototype, "selectionService", void 0);
ZoomKeyTool = ZoomKeyTool_1 = __decorate([
    (0, inversify_1.injectable)()
], ZoomKeyTool);
exports.ZoomKeyTool = ZoomKeyTool;
class ZoomKeyListener extends _glsp_sprotty_1.KeyListener {
    constructor(tool) {
        super();
        this.tool = tool;
    }
    keyDown(element, event) {
        const selectedElementIds = this.tool.selectionService.getSelectedElementIDs();
        if (this.matchesZoomOutKeystroke(event)) {
            if (selectedElementIds.length > 0) {
                return [zoom_handler_1.ZoomElementAction.create(selectedElementIds, ZoomKeyListener.defaultZoomOutFactor)];
            }
            else {
                return [zoom_handler_1.ZoomViewportAction.create(ZoomKeyListener.defaultZoomOutFactor)];
            }
        }
        else if (this.matchesZoomInKeystroke(event)) {
            if (selectedElementIds.length > 0) {
                return [zoom_handler_1.ZoomElementAction.create(selectedElementIds, ZoomKeyListener.defaultZoomInFactor)];
            }
            else {
                return [zoom_handler_1.ZoomViewportAction.create(ZoomKeyListener.defaultZoomInFactor)];
            }
        }
        else if (this.matchesMinZoomLevelKeystroke(event)) {
            return [_glsp_sprotty_1.CenterAction.create(selectedElementIds)];
        }
        return [];
    }
    matchesZoomInKeystroke(event) {
        /** here event.key is used for '+', as keycode 187 is already declared for 'Equals' in {@link matchesKeystroke}.*/
        return event.key === '+' || (0, keyboard_1.matchesKeystroke)(event, 'NumpadAdd');
    }
    matchesMinZoomLevelKeystroke(event) {
        return (0, keyboard_1.matchesKeystroke)(event, 'Digit0', 'ctrl') || (0, keyboard_1.matchesKeystroke)(event, 'Numpad0', 'ctrl');
    }
    matchesZoomOutKeystroke(event) {
        return (0, keyboard_1.matchesKeystroke)(event, 'Minus') || (0, keyboard_1.matchesKeystroke)(event, 'NumpadSubtract');
    }
}
ZoomKeyListener.defaultZoomInFactor = 1.1;
ZoomKeyListener.defaultZoomOutFactor = 0.9;
exports.ZoomKeyListener = ZoomKeyListener;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/features/autocomplete-palette/base-autocomplete-palette.js":
/*!**************************************************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/features/autocomplete-palette/base-autocomplete-palette.js ***!
  \**************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2023 Business Informatics Group (TU Wien) and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.BaseAutocompletePalette = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const _glsp_sprotty_1 = __webpack_require__(/*! ../../glsp-sprotty/index */ "../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/index.js");
__webpack_require__(/*! ../../../css/autocomplete-palette.css */ "../../node_modules/@eclipse-glsp/client/css/autocomplete-palette.css");
const action_dispatcher_1 = __webpack_require__(/*! ../../base/action-dispatcher */ "../../node_modules/@eclipse-glsp/client/lib/base/action-dispatcher.js");
const auto_complete_widget_1 = __webpack_require__(/*! ../../base/auto-complete/auto-complete-widget */ "../../node_modules/@eclipse-glsp/client/lib/base/auto-complete/auto-complete-widget.js");
class BaseAutocompletePalette extends _glsp_sprotty_1.AbstractUIExtension {
    constructor() {
        super(...arguments);
        this.autoSuggestionSettings = {
            noSuggestionsMessage: 'No suggestions available',
            suggestionsClass: 'command-palette-suggestions',
            debounceWaitMs: 50,
            showOnFocus: true
        };
    }
    containerClass() {
        return 'autocomplete-palette';
    }
    show(root, ...contextElementIds) {
        super.show(root, ...contextElementIds);
        this.root = root;
        this.autocompleteWidget.open(root);
    }
    hide() {
        this.autocompleteWidget.dispose();
        this.root = undefined;
        super.hide();
    }
    initializeContents(containerElement) {
        containerElement.classList.add('command-palette');
        this.autocompleteWidget = new auto_complete_widget_1.AutoCompleteWidget(this.autoSuggestionSettings, { provideSuggestions: input => this.retrieveSuggestions(this.root, input) }, { executeFromSuggestion: input => this.executeSuggestion(input) }, reason => this.autocompleteHide(reason), this.logger, {
            visibleSuggestionsChanged: suggestions => this.visibleSuggestionsChanged(this.root, suggestions),
            selectedSuggestionChanged: suggestion => this.selectedSuggestionChanged(this.root, suggestion)
        });
        this.autocompleteWidget.initialize(containerElement);
    }
    async visibleSuggestionsChanged(root, labeledActions) {
        return;
    }
    async selectedSuggestionChanged(root, labeledAction) {
        return;
    }
    autocompleteHide(reason) {
        this.hide();
    }
    executeSuggestion(input) {
        this.actionDispatcher.dispatchAll((0, auto_complete_widget_1.toActionArray)(input));
    }
}
__decorate([
    (0, inversify_1.inject)(_glsp_sprotty_1.TYPES.IActionDispatcher),
    __metadata("design:type", action_dispatcher_1.GLSPActionDispatcher)
], BaseAutocompletePalette.prototype, "actionDispatcher", void 0);
exports.BaseAutocompletePalette = BaseAutocompletePalette;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/features/bounds/di.config.js":
/*!********************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/features/bounds/di.config.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
/********************************************************************************
 * Copyright (c) 2022-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const _glsp_sprotty_1 = __webpack_require__(/*! ../../glsp-sprotty/index */ "../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/index.js");
const freeform_layout_1 = __webpack_require__(/*! ./freeform-layout */ "../../node_modules/@eclipse-glsp/client/lib/features/bounds/freeform-layout.js");
const glsp_hidden_bounds_updater_1 = __webpack_require__(/*! ./glsp-hidden-bounds-updater */ "../../node_modules/@eclipse-glsp/client/lib/features/bounds/glsp-hidden-bounds-updater.js");
const hbox_layout_1 = __webpack_require__(/*! ./hbox-layout */ "../../node_modules/@eclipse-glsp/client/lib/features/bounds/hbox-layout.js");
const vbox_layout_1 = __webpack_require__(/*! ./vbox-layout */ "../../node_modules/@eclipse-glsp/client/lib/features/bounds/vbox-layout.js");
const glspBoundsModule = new inversify_1.ContainerModule((bind, _unbind, isBound, _rebind) => {
    const context = { bind, isBound };
    (0, _glsp_sprotty_1.configureCommand)(context, _glsp_sprotty_1.SetBoundsCommand);
    (0, _glsp_sprotty_1.configureCommand)(context, _glsp_sprotty_1.RequestBoundsCommand);
    bind(_glsp_sprotty_1.HiddenBoundsUpdater).toSelf().inSingletonScope();
    (0, _glsp_sprotty_1.bindAsService)(context, _glsp_sprotty_1.TYPES.HiddenVNodePostprocessor, glsp_hidden_bounds_updater_1.GLSPHiddenBoundsUpdater);
    bind(_glsp_sprotty_1.TYPES.Layouter).to(_glsp_sprotty_1.Layouter).inSingletonScope();
    bind(_glsp_sprotty_1.TYPES.LayoutRegistry).to(_glsp_sprotty_1.LayoutRegistry).inSingletonScope();
    (0, _glsp_sprotty_1.configureLayout)(context, _glsp_sprotty_1.VBoxLayouter.KIND, vbox_layout_1.VBoxLayouterExt);
    (0, _glsp_sprotty_1.configureLayout)(context, _glsp_sprotty_1.HBoxLayouter.KIND, hbox_layout_1.HBoxLayouterExt);
    (0, _glsp_sprotty_1.configureLayout)(context, freeform_layout_1.FreeFormLayouter.KIND, freeform_layout_1.FreeFormLayouter);
});
exports["default"] = glspBoundsModule;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/features/bounds/freeform-layout.js":
/*!**************************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/features/bounds/freeform-layout.js ***!
  \**************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.FreeFormLayouter = void 0;
/********************************************************************************
 * Copyright (c) 2021-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const _glsp_sprotty_1 = __webpack_require__(/*! ../../glsp-sprotty/index */ "../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/index.js");
/**
 * Layouts children of a container with explicit X/Y positions
 */
let FreeFormLayouter = class FreeFormLayouter extends _glsp_sprotty_1.AbstractLayout {
    layout(container, layouter) {
        const boundsData = layouter.getBoundsData(container);
        const options = this.getLayoutOptions(container);
        const childrenSize = this.getChildrenSize(container, options, layouter);
        // The real size of the compartment will be determined by the parent node layout;
        // we only need to compute the bounds required to layout the children.
        const maxWidth = childrenSize.width > 0 ? childrenSize.width + options.paddingLeft + options.paddingRight : 0;
        const maxHeight = childrenSize.height > 0 ? childrenSize.height + options.paddingTop + options.paddingBottom : 0;
        if (maxWidth > 0 && maxHeight > 0) {
            const offset = this.layoutChildren(container, layouter, options, maxWidth, maxHeight);
            boundsData.bounds = this.getFinalContainerBounds(container, offset, options, maxWidth, maxHeight);
            boundsData.boundsChanged = true;
        }
        else {
            boundsData.bounds = { x: boundsData.bounds.x, y: boundsData.bounds.y, width: 0, height: 0 };
            boundsData.boundsChanged = true;
        }
    }
    getChildrenSize(container, containerOptions, layouter) {
        let maxX = 0;
        let maxY = 0;
        container.children.forEach(child => {
            const bounds = layouter.getBoundsData(child).bounds;
            if (bounds !== undefined && _glsp_sprotty_1.Dimension.isValid(bounds)) {
                const childMaxX = bounds.x + bounds.width;
                const childMaxY = bounds.y + bounds.height;
                maxX = Math.max(maxX, childMaxX);
                maxY = Math.max(maxY, childMaxY);
            }
        });
        return {
            width: maxX,
            height: maxY
        };
    }
    layoutChild(child, boundsData, bounds, childOptions, containerOptions, currentOffset, maxWidth, maxHeight) {
        boundsData.bounds = {
            x: child.bounds.x,
            y: child.bounds.y,
            width: bounds.width,
            height: bounds.height
        };
        boundsData.boundsChanged = true;
        return currentOffset;
    }
    getFinalContainerBounds(container, lastOffset, options, maxWidth, maxHeight) {
        const result = {
            x: container.bounds.x,
            y: container.bounds.y,
            width: Math.max(options.minWidth, maxWidth + options.paddingLeft + options.paddingRight),
            height: Math.max(options.minHeight, maxHeight + options.paddingTop + options.paddingBottom)
        };
        return result;
    }
    getDefaultLayoutOptions() {
        return {
            resizeContainer: true,
            paddingTop: 0,
            paddingBottom: 0,
            paddingLeft: 0,
            paddingRight: 0,
            paddingFactor: 1,
            minWidth: 0,
            minHeight: 0
        };
    }
    spread(a, b) {
        return Object.assign(Object.assign({}, a), b);
    }
};
FreeFormLayouter.KIND = 'freeform';
FreeFormLayouter = __decorate([
    (0, inversify_1.injectable)()
], FreeFormLayouter);
exports.FreeFormLayouter = FreeFormLayouter;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/features/bounds/glsp-hidden-bounds-updater.js":
/*!*************************************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/features/bounds/glsp-hidden-bounds-updater.js ***!
  \*************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2022-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.GLSPHiddenBoundsUpdater = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const _glsp_sprotty_1 = __webpack_require__(/*! ../../glsp-sprotty/index */ "../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/index.js");
const smodel_util_1 = __webpack_require__(/*! ../../utils/smodel-util */ "../../node_modules/@eclipse-glsp/client/lib/utils/smodel-util.js");
/**
 * Grabs the bounds from hidden SVG DOM elements, applies layouts, collects routes and fires {@link ComputedBoundsAction}s.
 *
 * The actions will contain the bound, alignment, and routing points of elements.
 */
let GLSPHiddenBoundsUpdater = class GLSPHiddenBoundsUpdater extends _glsp_sprotty_1.HiddenBoundsUpdater {
    constructor() {
        super(...arguments);
        this.element2route = [];
        this.edges = [];
        this.nodes = [];
    }
    decorate(vnode, element) {
        super.decorate(vnode, element);
        if ((0, smodel_util_1.isRoutable)(element)) {
            this.element2route.push((0, smodel_util_1.calcElementAndRoute)(element, this.edgeRouterRegistry));
        }
        return vnode;
    }
    postUpdate(cause) {
        const actions = this.captureActions(() => super.postUpdate(cause));
        actions
            .filter(action => _glsp_sprotty_1.ComputedBoundsAction.is(action))
            .forEach(action => this.actionDispatcher.dispatch(this.enhanceAction(action)));
        this.element2route = [];
    }
    captureActions(call) {
        const capturingActionDispatcher = new CapturingActionDispatcher();
        const actualActionDispatcher = this.actionDispatcher;
        this.actionDispatcher = capturingActionDispatcher;
        try {
            call();
            return capturingActionDispatcher.actions;
        }
        finally {
            this.actionDispatcher = actualActionDispatcher;
        }
    }
    enhanceAction(action) {
        action.routes = this.element2route.length === 0 ? undefined : this.element2route;
        return action;
    }
};
__decorate([
    (0, inversify_1.inject)(_glsp_sprotty_1.EdgeRouterRegistry),
    (0, inversify_1.optional)(),
    __metadata("design:type", _glsp_sprotty_1.EdgeRouterRegistry)
], GLSPHiddenBoundsUpdater.prototype, "edgeRouterRegistry", void 0);
GLSPHiddenBoundsUpdater = __decorate([
    (0, inversify_1.injectable)()
], GLSPHiddenBoundsUpdater);
exports.GLSPHiddenBoundsUpdater = GLSPHiddenBoundsUpdater;
class CapturingActionDispatcher {
    constructor() {
        this.actions = [];
    }
    async dispatch(action) {
        this.actions.push(action);
    }
    async dispatchAll(actions) {
        this.actions.push(...actions);
    }
    async request(action) {
        // ignore, not needed for our purposes
        return new _glsp_sprotty_1.Deferred().promise;
    }
}


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/features/bounds/hbox-layout.js":
/*!**********************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/features/bounds/hbox-layout.js ***!
  \**********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.HBoxLayouterExt = void 0;
/********************************************************************************
 * Copyright (c) 2021-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const _glsp_sprotty_1 = __webpack_require__(/*! ../../glsp-sprotty/index */ "../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/index.js");
/**
 * Extends HBoxLayouter to support additional layout options
 */
let HBoxLayouterExt = class HBoxLayouterExt extends _glsp_sprotty_1.HBoxLayouter {
    layout(container, layouter) {
        var _a, _b;
        const boundsData = layouter.getBoundsData(container);
        const options = this.getLayoutOptions(container);
        const childrenSize = this.getChildrenSize(container, options, layouter);
        const fixedSize = this.getFixedContainerBounds(container, options, layouter);
        const currentWidth = boundsData.bounds ? ((_a = boundsData.bounds) === null || _a === void 0 ? void 0 : _a.width) - options.paddingLeft - options.paddingRight : 0;
        const currentHeight = boundsData.bounds ? ((_b = boundsData.bounds) === null || _b === void 0 ? void 0 : _b.height) - options.paddingTop - options.paddingBottom : 0;
        const maxWidth = options.paddingFactor *
            (options.resizeContainer
                ? Math.max(fixedSize.width - options.paddingLeft - options.paddingRight, childrenSize.width)
                : Math.max(0, fixedSize.width - options.paddingLeft - options.paddingRight));
        const maxHeight = options.paddingFactor *
            (options.resizeContainer
                ? Math.max(fixedSize.height - options.paddingTop - options.paddingBottom, childrenSize.height)
                : Math.max(0, fixedSize.height - options.paddingTop - options.paddingBottom));
        const width = Math.max(currentWidth, maxWidth);
        const height = Math.max(currentHeight, maxHeight);
        // Remaining size that can be grabbed by children with the hGrab option
        const grabWidth = width - childrenSize.width;
        // Number of children that request hGrab
        // FIXME: This approach works fine when only 1 child uses HGrab, but may cause rounding issues
        // when the grabHeight can't be equally shared by all children.
        const grabbingChildren = container.children
            .map(child => this.getChildLayoutOptions(child, options))
            .filter(opt => opt.hGrab).length;
        if (width > 0 && height > 0) {
            const offset = this.layoutChildren(container, layouter, options, width, height, grabWidth, grabbingChildren);
            boundsData.bounds = this.getFinalContainerBounds(container, offset, options, childrenSize.width, childrenSize.height);
            boundsData.boundsChanged = true;
        }
    }
    getChildrenSize(container, containerOptions, layouter) {
        let maxWidth = 0;
        let maxHeight = -1;
        let isFirst = true;
        container.children.forEach(child => {
            if ((0, _glsp_sprotty_1.isLayoutableChild)(child)) {
                const bounds = layouter.getBoundsData(child).bounds;
                if (bounds !== undefined && _glsp_sprotty_1.Dimension.isValid(bounds)) {
                    maxWidth += bounds.width;
                    if (isFirst) {
                        isFirst = false;
                    }
                    else {
                        maxWidth += containerOptions.hGap;
                    }
                    maxHeight = Math.max(maxHeight, bounds.height);
                }
            }
        });
        const result = {
            width: maxWidth,
            height: maxHeight
        };
        return result;
    }
    layoutChildren(container, layouter, containerOptions, maxWidth, maxHeight, grabWidth, grabbingChildren) {
        let currentOffset = {
            x: containerOptions.paddingLeft + 0.5 * (maxWidth - maxWidth / containerOptions.paddingFactor),
            y: containerOptions.paddingTop + 0.5 * (maxHeight - maxHeight / containerOptions.paddingFactor)
        };
        container.children.forEach(child => {
            if ((0, _glsp_sprotty_1.isLayoutableChild)(child)) {
                const boundsData = layouter.getBoundsData(child);
                const bounds = boundsData.bounds;
                const childOptions = this.getChildLayoutOptions(child, containerOptions);
                if (bounds !== undefined && _glsp_sprotty_1.Dimension.isValid(bounds)) {
                    currentOffset = this.layoutChild(child, boundsData, bounds, childOptions, containerOptions, currentOffset, maxWidth, maxHeight, grabWidth, grabbingChildren);
                }
            }
        });
        return currentOffset;
    }
    layoutChild(child, boundsData, bounds, childOptions, containerOptions, currentOffset, maxWidth, maxHeight, grabWidth, grabbingChildren) {
        const vAlign = childOptions.vGrab ? 'top' : childOptions.vAlign;
        const dy = this.getDy(vAlign, bounds, maxHeight);
        let offset = super.layoutChild(child, boundsData, bounds, childOptions, containerOptions, currentOffset, maxWidth, maxHeight);
        boundsData.bounds = Object.assign(Object.assign({}, boundsData.bounds), { x: currentOffset.x, y: currentOffset.y + dy });
        if (childOptions.vGrab) {
            boundsData.bounds = {
                x: boundsData.bounds.x,
                y: boundsData.bounds.y,
                width: boundsData.bounds.width,
                height: maxHeight
            };
            boundsData.boundsChanged = true;
        }
        if (childOptions.hGrab && grabWidth && grabbingChildren) {
            const width = boundsData.bounds.width + grabWidth / grabbingChildren;
            boundsData.bounds = {
                x: boundsData.bounds.x,
                y: boundsData.bounds.y,
                width: width,
                height: boundsData.bounds.height
            };
            boundsData.boundsChanged = true;
            offset = { x: currentOffset.x + width, y: currentOffset.y };
        }
        return offset;
    }
    getFixedContainerBounds(container, layoutOptions, layouter) {
        var _a, _b;
        const currentContainer = container;
        // eslint-disable-next-line no-constant-condition
        if ((0, _glsp_sprotty_1.isBoundsAware)(currentContainer)) {
            const bounds = currentContainer.bounds;
            const elementOptions = this.getElementLayoutOptions(currentContainer);
            const width = (_a = elementOptions === null || elementOptions === void 0 ? void 0 : elementOptions.prefWidth) !== null && _a !== void 0 ? _a : 0;
            const height = (_b = elementOptions === null || elementOptions === void 0 ? void 0 : elementOptions.prefHeight) !== null && _b !== void 0 ? _b : 0;
            return Object.assign(Object.assign({}, bounds), { width, height });
        }
        return _glsp_sprotty_1.Bounds.EMPTY;
    }
    getChildLayoutOptions(child, containerOptions) {
        return super.getChildLayoutOptions(child, this.filterContainerOptions(containerOptions));
    }
    getLayoutOptions(element) {
        return super.getLayoutOptions(element);
    }
    getElementLayoutOptions(element) {
        return element.layoutOptions;
    }
    getFinalContainerBounds(container, lastOffset, options, maxWidth, maxHeight) {
        var _a, _b;
        const elementOptions = this.getElementLayoutOptions(container);
        const width = (_a = elementOptions === null || elementOptions === void 0 ? void 0 : elementOptions.prefWidth) !== null && _a !== void 0 ? _a : options.minWidth;
        const height = (_b = elementOptions === null || elementOptions === void 0 ? void 0 : elementOptions.prefHeight) !== null && _b !== void 0 ? _b : options.minHeight;
        const result = {
            x: container.bounds.x,
            y: container.bounds.y,
            width: Math.max(width, maxWidth + options.paddingLeft + options.paddingRight),
            height: Math.max(height, maxHeight + options.paddingTop + options.paddingBottom)
        };
        return result;
    }
    getDefaultLayoutOptions() {
        return {
            resizeContainer: true,
            paddingTop: 5,
            paddingBottom: 5,
            paddingLeft: 5,
            paddingRight: 5,
            paddingFactor: 1,
            hGap: 1,
            vAlign: 'center',
            minWidth: 0,
            minHeight: 0,
            hGrab: false,
            vGrab: false,
            // eslint-disable-next-line no-null/no-null
            prefHeight: null,
            // eslint-disable-next-line no-null/no-null
            prefWidth: null
        };
    }
    filterContainerOptions(containerOptions) {
        // Reset object-specific layout options to default before merging,
        // to make sure they won't be inherited (grab, prefSize)
        // eslint-disable-next-line no-null/no-null
        const localOptions = { vGrab: false, hGrab: false, prefHeight: null, prefWidth: null };
        return Object.assign(Object.assign({}, containerOptions), localOptions);
    }
};
HBoxLayouterExt.KIND = _glsp_sprotty_1.HBoxLayouter.KIND;
HBoxLayouterExt = __decorate([
    (0, inversify_1.injectable)()
], HBoxLayouterExt);
exports.HBoxLayouterExt = HBoxLayouterExt;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/features/bounds/layouter.js":
/*!*******************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/features/bounds/layouter.js ***!
  \*******************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.StatefulLayouterExt = exports.LayouterExt = void 0;
/********************************************************************************
 * Copyright (c) 2022-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const _glsp_sprotty_1 = __webpack_require__(/*! ../../glsp-sprotty/index */ "../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/index.js");
let LayouterExt = class LayouterExt extends _glsp_sprotty_1.Layouter {
    layout(element2boundsData) {
        new StatefulLayouterExt(element2boundsData, this.layoutRegistry, this.logger).layout();
    }
};
LayouterExt = __decorate([
    (0, inversify_1.injectable)()
], LayouterExt);
exports.LayouterExt = LayouterExt;
// 2-pass layout:
// Step 1: Find "rendered size" of each element (may take resizeContainer into account)
// Child-to-parent layout
// Step 2: Extend parents as necessary, then use the adjusted parent size to properly
// align children (center/end alignments, hGrab/vGrab)
// Parent-to-children layout
class StatefulLayouterExt extends _glsp_sprotty_1.StatefulLayouter {
    /**
     *
     * @param elementToBoundsData The map of element to bounds data. Bounds Data are computed from the hidden
     * SVG rendering pass.
     * @param layoutRegistry2 The registry of available layouts.
     * @param log The log.
     */
    constructor(elementToBoundsData, layoutRegistry2, log) {
        super(elementToBoundsData, layoutRegistry2, log);
        this.elementToBoundsData = elementToBoundsData;
        this.layoutRegistry2 = layoutRegistry2;
        this.toBeLayouted2 = [];
        elementToBoundsData.forEach((data, element) => {
            if ((0, _glsp_sprotty_1.isLayoutContainer)(element)) {
                this.toBeLayouted2.push(element);
            }
        });
        for (const element of this.toBeLayouted2) {
            // Clear previous layout information for dynamic-layout objects
            elementToBoundsData.delete(element);
        }
    }
    getBoundsData(element) {
        let boundsData = this.elementToBoundsData.get(element);
        let bounds = element.bounds;
        if ((0, _glsp_sprotty_1.isLayoutContainer)(element) && this.toBeLayouted2.indexOf(element) >= 0) {
            bounds = this.doLayout(element);
        }
        else if ((0, _glsp_sprotty_1.isLayoutContainer)(element)) {
            bounds = {
                x: 0,
                y: 0,
                width: -1,
                height: -1
            };
        }
        if (!boundsData) {
            boundsData = {
                bounds: bounds,
                boundsChanged: false,
                alignmentChanged: false
            };
            this.elementToBoundsData.set(element, boundsData);
        }
        return boundsData;
    }
    layout() {
        // First pass: apply layout with cleared container data. Will get
        // preferred size for all elements (Children first, then parents)
        while (this.toBeLayouted2.length > 0) {
            const element = this.toBeLayouted2[0];
            this.doLayout(element);
        }
        this.toBeLayouted2 = [];
        this.elementToBoundsData.forEach((data, element) => {
            if ((0, _glsp_sprotty_1.isLayoutContainer)(element)) {
                this.toBeLayouted2.push(element);
            }
        });
        // Second pass: apply layout with initial size data for all
        // nodes. Update the position/size of all elements, taking
        // vGrab/hGrab into account (parent -> children).
        while (this.toBeLayouted2.length > 0) {
            const element = this.toBeLayouted2[0];
            this.doLayout(element);
        }
    }
    doLayout(element) {
        const index = this.toBeLayouted2.indexOf(element);
        if (index >= 0) {
            this.toBeLayouted2.splice(index, 1);
        }
        const layout = this.layoutRegistry2.get(element.layout);
        if (layout) {
            layout.layout(element, this);
        }
        const boundsData = this.elementToBoundsData.get(element);
        if (boundsData !== undefined && boundsData.bounds !== undefined) {
            return boundsData.bounds;
        }
        else {
            this.log.error(element, 'Layout failed');
            return _glsp_sprotty_1.Bounds.EMPTY;
        }
    }
}
exports.StatefulLayouterExt = StatefulLayouterExt;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/features/bounds/vbox-layout.js":
/*!**********************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/features/bounds/vbox-layout.js ***!
  \**********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.VBoxLayouterExt = void 0;
/********************************************************************************
 * Copyright (c) 2021-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const _glsp_sprotty_1 = __webpack_require__(/*! ../../glsp-sprotty/index */ "../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/index.js");
/**
 * Extends VBoxLayouter to support additional layout options
 */
let VBoxLayouterExt = class VBoxLayouterExt extends _glsp_sprotty_1.VBoxLayouter {
    layout(container, layouter) {
        var _a, _b;
        const boundsData = layouter.getBoundsData(container);
        const options = this.getLayoutOptions(container);
        const childrenSize = this.getChildrenSize(container, options, layouter);
        const fixedSize = this.getFixedContainerBounds(container, options, layouter);
        const currentWidth = (((_a = boundsData.bounds) === null || _a === void 0 ? void 0 : _a.width) || 0) - options.paddingLeft - options.paddingRight;
        const currentHeight = (((_b = boundsData.bounds) === null || _b === void 0 ? void 0 : _b.height) || 0) - options.paddingTop - options.paddingBottom;
        const maxWidth = options.paddingFactor *
            (options.resizeContainer
                ? Math.max(fixedSize.width - options.paddingLeft - options.paddingRight, childrenSize.width)
                : Math.max(0, fixedSize.width - options.paddingLeft - options.paddingRight));
        const maxHeight = options.paddingFactor *
            (options.resizeContainer
                ? Math.max(fixedSize.height - options.paddingTop - options.paddingBottom, childrenSize.height)
                : Math.max(0, fixedSize.height - options.paddingTop - options.paddingBottom));
        const width = Math.max(currentWidth, maxWidth);
        const height = Math.max(currentHeight, maxHeight);
        // Remaining size that can be grabbed by children with the vGrab option
        const grabHeight = height - childrenSize.height;
        // Number of children that request vGrab
        // FIXME: This approach works fine when only 1 child uses VGrab, but may cause rounding issues
        // when the grabHeight can't be equally shared by all children.
        const grabbingChildren = container.children
            .map(child => this.getChildLayoutOptions(child, options))
            .filter(opt => opt.vGrab).length;
        if (maxWidth > 0 && maxHeight > 0) {
            const offset = this.layoutChildren(container, layouter, options, width, height, grabHeight, grabbingChildren);
            boundsData.bounds = this.getFinalContainerBounds(container, offset, options, childrenSize.width, childrenSize.height);
            boundsData.boundsChanged = true;
        }
    }
    getChildrenSize(container, containerOptions, layouter) {
        let maxWidth = -1;
        let maxHeight = 0;
        let isFirst = true;
        container.children.forEach(child => {
            if ((0, _glsp_sprotty_1.isLayoutableChild)(child)) {
                const bounds = layouter.getBoundsData(child).bounds;
                if (bounds !== undefined && _glsp_sprotty_1.Dimension.isValid(bounds)) {
                    maxHeight += bounds.height;
                    if (isFirst) {
                        isFirst = false;
                    }
                    else {
                        maxHeight += containerOptions.vGap;
                    }
                    maxWidth = Math.max(maxWidth, bounds.width);
                }
            }
        });
        const result = {
            width: maxWidth,
            height: maxHeight
        };
        return result;
    }
    layoutChildren(container, layouter, containerOptions, maxWidth, maxHeight, grabHeight, grabbingChildren) {
        let currentOffset = {
            x: containerOptions.paddingLeft + 0.5 * (maxWidth - maxWidth / containerOptions.paddingFactor),
            y: containerOptions.paddingTop + 0.5 * (maxHeight - maxHeight / containerOptions.paddingFactor)
        };
        container.children.forEach(child => {
            if ((0, _glsp_sprotty_1.isLayoutableChild)(child)) {
                const boundsData = layouter.getBoundsData(child);
                const bounds = boundsData.bounds;
                const childOptions = this.getChildLayoutOptions(child, containerOptions);
                if (bounds !== undefined && _glsp_sprotty_1.Dimension.isValid(bounds)) {
                    currentOffset = this.layoutChild(child, boundsData, bounds, childOptions, containerOptions, currentOffset, maxWidth, maxHeight, grabHeight, grabbingChildren);
                }
            }
        });
        return currentOffset;
    }
    layoutChild(child, boundsData, bounds, childOptions, containerOptions, currentOffset, maxWidth, maxHeight, grabHeight, grabbingChildren) {
        const hAlign = childOptions.hGrab ? 'left' : childOptions.hAlign;
        const dx = this.getDx(hAlign, bounds, maxWidth);
        let offset = super.layoutChild(child, boundsData, bounds, childOptions, containerOptions, currentOffset, maxWidth, maxHeight);
        boundsData.bounds = Object.assign(Object.assign({}, boundsData.bounds), { x: currentOffset.x + dx, y: currentOffset.y });
        if (childOptions.hGrab) {
            boundsData.bounds = {
                x: boundsData.bounds.x,
                y: boundsData.bounds.y,
                width: maxWidth,
                height: boundsData.bounds.height
            };
            boundsData.boundsChanged = true;
        }
        if (childOptions.vGrab && grabHeight && grabbingChildren) {
            const height = boundsData.bounds.height + grabHeight / grabbingChildren;
            boundsData.bounds = {
                x: boundsData.bounds.x,
                y: boundsData.bounds.y,
                width: boundsData.bounds.width,
                height: height
            };
            boundsData.boundsChanged = true;
            offset = { x: currentOffset.x, y: currentOffset.y + height };
        }
        return offset;
    }
    getFixedContainerBounds(container, layoutOptions, layouter) {
        var _a, _b;
        const currentContainer = container;
        // eslint-disable-next-line no-constant-condition
        if ((0, _glsp_sprotty_1.isBoundsAware)(currentContainer)) {
            const bounds = currentContainer.bounds;
            const elementOptions = this.getElementLayoutOptions(currentContainer);
            const width = (_a = elementOptions === null || elementOptions === void 0 ? void 0 : elementOptions.prefWidth) !== null && _a !== void 0 ? _a : 0;
            const height = (_b = elementOptions === null || elementOptions === void 0 ? void 0 : elementOptions.prefHeight) !== null && _b !== void 0 ? _b : 0;
            return Object.assign(Object.assign({}, bounds), { width, height });
        }
        return _glsp_sprotty_1.Bounds.EMPTY;
    }
    getChildLayoutOptions(child, containerOptions) {
        return super.getChildLayoutOptions(child, this.filterContainerOptions(containerOptions));
    }
    getLayoutOptions(element) {
        return super.getLayoutOptions(element);
    }
    getElementLayoutOptions(element) {
        return element.layoutOptions;
    }
    getFinalContainerBounds(container, lastOffset, options, maxWidth, maxHeight) {
        var _a, _b;
        const elementOptions = this.getElementLayoutOptions(container);
        const width = (_a = elementOptions === null || elementOptions === void 0 ? void 0 : elementOptions.prefWidth) !== null && _a !== void 0 ? _a : options.minWidth;
        const height = (_b = elementOptions === null || elementOptions === void 0 ? void 0 : elementOptions.prefHeight) !== null && _b !== void 0 ? _b : options.minHeight;
        const result = {
            x: container.bounds.x,
            y: container.bounds.y,
            width: Math.max(width, maxWidth + options.paddingLeft + options.paddingRight),
            height: Math.max(height, maxHeight + options.paddingTop + options.paddingBottom)
        };
        return result;
    }
    getDefaultLayoutOptions() {
        return {
            resizeContainer: true,
            paddingTop: 5,
            paddingBottom: 5,
            paddingLeft: 5,
            paddingRight: 5,
            paddingFactor: 1,
            vGap: 1,
            hAlign: 'center',
            minWidth: 0,
            minHeight: 0,
            hGrab: false,
            vGrab: false,
            // eslint-disable-next-line no-null/no-null
            prefHeight: null,
            // eslint-disable-next-line no-null/no-null
            prefWidth: null
        };
    }
    filterContainerOptions(containerOptions) {
        // Reset object-specific layout options to default before merging,
        // to make sure they won't be inherited (grab, prefSize)
        // eslint-disable-next-line no-null/no-null
        const localOptions = { vGrab: false, hGrab: false, prefHeight: null, prefWidth: null };
        return Object.assign(Object.assign({}, containerOptions), localOptions);
    }
};
VBoxLayouterExt.KIND = _glsp_sprotty_1.VBoxLayouter.KIND;
VBoxLayouterExt = __decorate([
    (0, inversify_1.injectable)()
], VBoxLayouterExt);
exports.VBoxLayouterExt = VBoxLayouterExt;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/features/change-bounds/model.js":
/*!***********************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/features/change-bounds/model.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.removeResizeHandles = exports.addResizeHandles = exports.SResizeHandle = exports.isBoundsAwareMoveable = exports.ResizeHandleLocation = exports.isResizable = exports.resizeFeature = void 0;
/********************************************************************************
 * Copyright (c) 2019-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const _glsp_sprotty_1 = __webpack_require__(/*! ../../glsp-sprotty/index */ "../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/index.js");
exports.resizeFeature = Symbol('resizeFeature');
function isResizable(element) {
    return (0, _glsp_sprotty_1.isBoundsAware)(element) && (0, _glsp_sprotty_1.isSelectable)(element) && element instanceof _glsp_sprotty_1.SParentElement && element.hasFeature(exports.resizeFeature);
}
exports.isResizable = isResizable;
// eslint-disable-next-line no-shadow
var ResizeHandleLocation;
(function (ResizeHandleLocation) {
    ResizeHandleLocation["TopLeft"] = "top-left";
    ResizeHandleLocation["TopRight"] = "top-right";
    ResizeHandleLocation["BottomLeft"] = "bottom-left";
    ResizeHandleLocation["BottomRight"] = "bottom-right";
})(ResizeHandleLocation = exports.ResizeHandleLocation || (exports.ResizeHandleLocation = {}));
function isBoundsAwareMoveable(element) {
    return (0, _glsp_sprotty_1.isMoveable)(element) && (0, _glsp_sprotty_1.isBoundsAware)(element);
}
exports.isBoundsAwareMoveable = isBoundsAwareMoveable;
class SResizeHandle extends _glsp_sprotty_1.SChildElement {
    constructor(location, type = SResizeHandle.TYPE, hoverFeedback = false) {
        super();
        this.location = location;
        this.type = type;
        this.hoverFeedback = hoverFeedback;
    }
    hasFeature(feature) {
        return feature === _glsp_sprotty_1.hoverFeedbackFeature;
    }
    isNwSeResize() {
        return this.location === ResizeHandleLocation.TopLeft || this.location === ResizeHandleLocation.BottomRight;
    }
    isNeSwResize() {
        return this.location === ResizeHandleLocation.TopRight || this.location === ResizeHandleLocation.BottomLeft;
    }
}
SResizeHandle.TYPE = 'resize-handle';
exports.SResizeHandle = SResizeHandle;
function addResizeHandles(element) {
    removeResizeHandles(element);
    element.add(new SResizeHandle(ResizeHandleLocation.TopLeft));
    element.add(new SResizeHandle(ResizeHandleLocation.TopRight));
    element.add(new SResizeHandle(ResizeHandleLocation.BottomLeft));
    element.add(new SResizeHandle(ResizeHandleLocation.BottomRight));
}
exports.addResizeHandles = addResizeHandles;
function removeResizeHandles(element) {
    element.removeAll(child => child instanceof SResizeHandle);
}
exports.removeResizeHandles = removeResizeHandles;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/features/change-bounds/movement-restrictor.js":
/*!*************************************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/features/change-bounds/movement-restrictor.js ***!
  \*************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.removeMovementRestrictionFeedback = exports.createMovementRestrictionFeedback = exports.NoOverlapMovementRestrictor = void 0;
/********************************************************************************
 * Copyright (c) 2019-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const _glsp_sprotty_1 = __webpack_require__(/*! ../../glsp-sprotty/index */ "../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/index.js");
const viewpoint_util_1 = __webpack_require__(/*! ../../utils/viewpoint-util */ "../../node_modules/@eclipse-glsp/client/lib/utils/viewpoint-util.js");
const css_feedback_1 = __webpack_require__(/*! ../tool-feedback/css-feedback */ "../../node_modules/@eclipse-glsp/client/lib/features/tool-feedback/css-feedback.js");
const model_1 = __webpack_require__(/*! ./model */ "../../node_modules/@eclipse-glsp/client/lib/features/change-bounds/model.js");
/**
 *  A `IMovementRestrictor` that checks for overlapping elements. Move operations
 *  are only valid if the element does not collide with another element after moving.
 */
let NoOverlapMovementRestrictor = class NoOverlapMovementRestrictor {
    constructor() {
        this.cssClasses = ['movement-not-allowed'];
    }
    validate(element, newLocation) {
        if (!(0, model_1.isBoundsAwareMoveable)(element) || !newLocation) {
            return false;
        }
        // Create ghost element at the newLocation
        const ghostElement = Object.create(element);
        ghostElement.bounds = {
            x: newLocation.x,
            y: newLocation.y,
            width: element.bounds.width,
            height: element.bounds.height
        };
        ghostElement.type = 'Ghost';
        ghostElement.id = element.id;
        return !Array.from(element.root.index
            .all()
            .filter(e => e.id !== ghostElement.id && e !== ghostElement.root && e instanceof _glsp_sprotty_1.SNode)
            .map(e => e)).some(e => this.areOverlapping(e, ghostElement));
    }
    areOverlapping(element1, element2) {
        const b1 = (0, viewpoint_util_1.toAbsoluteBounds)(element1);
        const b2 = (0, viewpoint_util_1.toAbsoluteBounds)(element2);
        const r1TopLeft = b1;
        const r1BottomRight = { x: b1.x + b1.width, y: b1.y + b1.height };
        const r2TopLeft = b2;
        const r2BottomRight = { x: b2.x + b2.width, y: b2.y + b2.height };
        // If one rectangle is on left side of other
        if (r1TopLeft.x > r2BottomRight.x || r2TopLeft.x > r1BottomRight.x) {
            return false;
        }
        // If one rectangle is above other
        if (r1BottomRight.y < r2TopLeft.y || r2BottomRight.y < r1TopLeft.y) {
            return false;
        }
        return true;
    }
};
NoOverlapMovementRestrictor = __decorate([
    (0, inversify_1.injectable)()
], NoOverlapMovementRestrictor);
exports.NoOverlapMovementRestrictor = NoOverlapMovementRestrictor;
/**
 * Utility function to create an action that applies the given {@link IMovementRestrictor.cssClasses} to the given element.
 * @param element The element on which the css classes should be applied.
 * @param movementRestrictor The movement restrictor whose cssClasses should be applied.
 * @returns The corresponding {@link ModifyCSSFeedbackAction}
 */
function createMovementRestrictionFeedback(element, movementRestrictor) {
    const elements = [element];
    if (element instanceof _glsp_sprotty_1.SParentElement) {
        element.children.filter(child => child instanceof model_1.SResizeHandle).forEach(e => elements.push(e));
    }
    return css_feedback_1.ModifyCSSFeedbackAction.create({ elements, add: movementRestrictor.cssClasses });
}
exports.createMovementRestrictionFeedback = createMovementRestrictionFeedback;
/**
 * Utility function to create an action that removes the given {@link IMovementRestrictor.cssClasses} from the given element.
 * @param element The element from which the css classes should be removed.
 * @param movementRestrictor The movement restrictor whose cssClasses should be removed.
 * @returns The corresponding {@link ModifyCSSFeedbackAction}
 */
function removeMovementRestrictionFeedback(element, movementRestrictor) {
    const elements = [element];
    if (element instanceof _glsp_sprotty_1.SParentElement) {
        element.children.filter(child => child instanceof model_1.SResizeHandle).forEach(e => elements.push(e));
    }
    return css_feedback_1.ModifyCSSFeedbackAction.create({ elements, remove: movementRestrictor.cssClasses });
}
exports.removeMovementRestrictionFeedback = removeMovementRestrictionFeedback;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/features/change-bounds/snap.js":
/*!**********************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/features/change-bounds/snap.js ***!
  \**********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.PointPositionUpdater = exports.GridSnapper = void 0;
/********************************************************************************
 * Copyright (c) 2020-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const _glsp_sprotty_1 = __webpack_require__(/*! ../../glsp-sprotty/index */ "../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/index.js");
/**
 * A {@link ISnapper} implementation that snaps all elements onto a fixed gride size.
 * The default grid size is 10x10 pixel.
 * To configure a custom grid size  bind the `TYPES.ISnapper` service identifier
 * to constant value, e.g:
 *
 * ```ts
 * bind(TYPES.ISnapper).toConstantValue(new GridSnapper({x:25 ,y:25 }));
 * ```
 */
let GridSnapper = class GridSnapper {
    constructor(grid = { x: 10, y: 10 }) {
        this.grid = grid;
    }
    snap(position, element) {
        return {
            x: Math.round(position.x / this.grid.x) * this.grid.x,
            y: Math.round(position.y / this.grid.y) * this.grid.y
        };
    }
};
GridSnapper = __decorate([
    (0, inversify_1.injectable)(),
    __metadata("design:paramtypes", [Object])
], GridSnapper);
exports.GridSnapper = GridSnapper;
/**
 * This class can be used to calculate the current position, when an element is
 * moved. This includes node movements, node resizing (resize handle movement)
 * or edge routing-point movements.
 *
 * You can initialize a this class with a optional {@link ISnapper}. If a
 * snapper is present, the positions will be snapped to the defined grid.
 */
class PointPositionUpdater {
    constructor(snapper) {
        this.snapper = snapper;
        this.positionDelta = { x: 0, y: 0 };
    }
    /**
     * Init the position with the {@link Point} of your mouse cursor.
     * This method is normally called in the `mouseDown` event.
     * @param mousePosition current mouse position e.g `{x: event.pageX, y: event.pageY }`
     */
    updateLastDragPosition(mousePosition) {
        this.lastDragPosition = mousePosition;
    }
    /**
     * Check if the mouse is currently not in a drag mode.
     * @returns true if the last drag position is undefined
     */
    isLastDragPositionUndefined() {
        return this.lastDragPosition === undefined;
    }
    /**
     * Reset the updater for new movements.
     * This method is normally called in the `mouseUp` event.
     */
    resetPosition() {
        this.lastDragPosition = undefined;
        this.positionDelta = { x: 0, y: 0 };
    }
    /**
     * Calculate the current position of your movement.
     * This method is normally called in the `mouseMove` event.
     * @param target node which is moved around
     * @param mousePosition current mouse position e.g `{x: event.pageX, y: event.pageY }`
     * @param isSnapEnabled if a snapper is defined you can disable it, e.g when a specific key is pressed `!event.altKey`
     * @returns current position or undefined if updater has no last drag position initialized
     */
    updatePosition(target, mousePosition, isSnapEnabled) {
        var _a;
        if (this.lastDragPosition) {
            const newDragPosition = mousePosition;
            const viewport = (0, _glsp_sprotty_1.findParentByFeature)(target, _glsp_sprotty_1.isViewport);
            const zoom = (_a = viewport === null || viewport === void 0 ? void 0 : viewport.zoom) !== null && _a !== void 0 ? _a : 1;
            const dx = (mousePosition.x - this.lastDragPosition.x) / zoom;
            const dy = (mousePosition.y - this.lastDragPosition.y) / zoom;
            const deltaToLastPosition = { x: dx, y: dy };
            this.lastDragPosition = newDragPosition;
            // update position delta with latest delta
            this.positionDelta.x += deltaToLastPosition.x;
            this.positionDelta.y += deltaToLastPosition.y;
            // snap our delta and only send update if the position actually changes
            // otherwise accumulate delta until we do snap to an update
            const positionUpdate = this.snap(this.positionDelta, target, isSnapEnabled);
            if (positionUpdate.x === 0 && positionUpdate.y === 0) {
                return undefined;
            }
            // we update our position so we update our delta by the snapped position
            this.positionDelta.x -= positionUpdate.x;
            this.positionDelta.y -= positionUpdate.y;
            return positionUpdate;
        }
        return undefined;
    }
    snap(position, element, isSnap) {
        return isSnap && this.snapper ? this.snapper.snap(position, element) : { x: position.x, y: position.y };
    }
}
exports.PointPositionUpdater = PointPositionUpdater;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/features/command-palette/command-palette-tool.js":
/*!****************************************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/features/command-palette/command-palette-tool.js ***!
  \****************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var CommandPaletteTool_1;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CommandPaletteTool = void 0;
/********************************************************************************
 * Copyright (c) 2019-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const _glsp_sprotty_1 = __webpack_require__(/*! ../../glsp-sprotty/index */ "../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/index.js");
let CommandPaletteTool = CommandPaletteTool_1 = class CommandPaletteTool {
    postConstruct() {
        this.commandPaletteKeyListener = this.createCommandPaletteKeyListener();
    }
    get id() {
        return CommandPaletteTool_1.ID;
    }
    enable() {
        this.keyTool.register(this.commandPaletteKeyListener);
    }
    disable() {
        this.keyTool.deregister(this.commandPaletteKeyListener);
    }
    createCommandPaletteKeyListener() {
        return new _glsp_sprotty_1.CommandPaletteKeyListener();
    }
};
CommandPaletteTool.ID = 'glsp.command-palette-tool';
__decorate([
    (0, inversify_1.inject)(_glsp_sprotty_1.KeyTool),
    __metadata("design:type", _glsp_sprotty_1.KeyTool)
], CommandPaletteTool.prototype, "keyTool", void 0);
__decorate([
    (0, inversify_1.postConstruct)(),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", []),
    __metadata("design:returntype", void 0)
], CommandPaletteTool.prototype, "postConstruct", null);
CommandPaletteTool = CommandPaletteTool_1 = __decorate([
    (0, inversify_1.injectable)()
], CommandPaletteTool);
exports.CommandPaletteTool = CommandPaletteTool;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/features/command-palette/di.config.js":
/*!*****************************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/features/command-palette/di.config.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
/********************************************************************************
 * Copyright (c) 2019-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const _glsp_sprotty_1 = __webpack_require__(/*! ../../glsp-sprotty/index */ "../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/index.js");
__webpack_require__(/*! ../../../css/command-palette.css */ "../../node_modules/@eclipse-glsp/client/css/command-palette.css");
const command_palette_tool_1 = __webpack_require__(/*! ./command-palette-tool */ "../../node_modules/@eclipse-glsp/client/lib/features/command-palette/command-palette-tool.js");
const server_command_palette_provider_1 = __webpack_require__(/*! ./server-command-palette-provider */ "../../node_modules/@eclipse-glsp/client/lib/features/command-palette/server-command-palette-provider.js");
const glspCommandPaletteModule = new inversify_1.ContainerModule(bind => {
    (0, _glsp_sprotty_1.bindAsService)(bind, _glsp_sprotty_1.TYPES.IUIExtension, _glsp_sprotty_1.CommandPalette);
    bind(_glsp_sprotty_1.TYPES.ICommandPaletteActionProviderRegistry).to(_glsp_sprotty_1.CommandPaletteActionProviderRegistry).inSingletonScope();
    (0, _glsp_sprotty_1.bindAsService)(bind, _glsp_sprotty_1.TYPES.ICommandPaletteActionProvider, server_command_palette_provider_1.ServerCommandPaletteActionProvider);
    (0, _glsp_sprotty_1.bindAsService)(bind, _glsp_sprotty_1.TYPES.IDefaultTool, command_palette_tool_1.CommandPaletteTool);
});
exports["default"] = glspCommandPaletteModule;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/features/command-palette/server-command-palette-provider.js":
/*!***************************************************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/features/command-palette/server-command-palette-provider.js ***!
  \***************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ServerCommandPaletteActionProvider = exports.ServerCommandPalette = void 0;
/********************************************************************************
 * Copyright (c) 2019-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const _glsp_sprotty_1 = __webpack_require__(/*! ../../glsp-sprotty/index */ "../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/index.js");
const action_dispatcher_1 = __webpack_require__(/*! ../../base/action-dispatcher */ "../../node_modules/@eclipse-glsp/client/lib/base/action-dispatcher.js");
const editor_context_service_1 = __webpack_require__(/*! ../../base/editor-context-service */ "../../node_modules/@eclipse-glsp/client/lib/base/editor-context-service.js");
var ServerCommandPalette;
(function (ServerCommandPalette) {
    ServerCommandPalette.CONTEXT_ID = 'command-palette';
    ServerCommandPalette.TEXT = 'text';
    ServerCommandPalette.INDEX = 'index';
})(ServerCommandPalette = exports.ServerCommandPalette || (exports.ServerCommandPalette = {}));
let ServerCommandPaletteActionProvider = class ServerCommandPaletteActionProvider {
    getActions(_root, text, _lastMousePosition, index) {
        const requestAction = _glsp_sprotty_1.RequestContextActions.create({
            contextId: ServerCommandPalette.CONTEXT_ID,
            editorContext: this.editorContext.get({
                [ServerCommandPalette.TEXT]: text,
                [ServerCommandPalette.INDEX]: index ? index : 0
            })
        });
        return this.actionDispatcher.requestUntil(requestAction).then(response => this.getPaletteActionsFromResponse(response));
    }
    getPaletteActionsFromResponse(action) {
        if (_glsp_sprotty_1.SetContextActions.is(action)) {
            return action.actions;
        }
        return [];
    }
};
__decorate([
    (0, inversify_1.inject)(_glsp_sprotty_1.TYPES.IActionDispatcher),
    __metadata("design:type", action_dispatcher_1.GLSPActionDispatcher)
], ServerCommandPaletteActionProvider.prototype, "actionDispatcher", void 0);
__decorate([
    (0, inversify_1.inject)(editor_context_service_1.EditorContextService),
    __metadata("design:type", editor_context_service_1.EditorContextService)
], ServerCommandPaletteActionProvider.prototype, "editorContext", void 0);
ServerCommandPaletteActionProvider = __decorate([
    (0, inversify_1.injectable)()
], ServerCommandPaletteActionProvider);
exports.ServerCommandPaletteActionProvider = ServerCommandPaletteActionProvider;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/features/context-menu/delete-element-context-menu.js":
/*!********************************************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/features/context-menu/delete-element-context-menu.js ***!
  \********************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.DeleteElementContextMenuItemProvider = void 0;
/********************************************************************************
 * Copyright (c) 2019-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const _glsp_sprotty_1 = __webpack_require__(/*! ../../glsp-sprotty/index */ "../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/index.js");
let DeleteElementContextMenuItemProvider = class DeleteElementContextMenuItemProvider {
    async getItems(_root, _lastMousePosition) {
        const editorContextService = await this.editorContextServiceProvider();
        return [this.createDeleteMenuItem(editorContextService)];
    }
    createDeleteMenuItem(editorContextService) {
        return {
            id: 'delete',
            label: 'Delete',
            sortString: 'd',
            group: 'edit',
            actions: [_glsp_sprotty_1.DeleteElementOperation.create(editorContextService.selectedElements.map(e => e.id))],
            isEnabled: () => !editorContextService.isReadonly && editorContextService.selectedElements.length > 0
        };
    }
};
__decorate([
    (0, inversify_1.inject)(_glsp_sprotty_1.TYPES.IEditorContextServiceProvider),
    __metadata("design:type", Function)
], DeleteElementContextMenuItemProvider.prototype, "editorContextServiceProvider", void 0);
DeleteElementContextMenuItemProvider = __decorate([
    (0, inversify_1.injectable)()
], DeleteElementContextMenuItemProvider);
exports.DeleteElementContextMenuItemProvider = DeleteElementContextMenuItemProvider;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/features/context-menu/di.config.js":
/*!**************************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/features/context-menu/di.config.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
/********************************************************************************
 * Copyright (c) 2019-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const _glsp_sprotty_1 = __webpack_require__(/*! ../../glsp-sprotty/index */ "../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/index.js");
const selection_service_aware_context_menu_mouse_listener_1 = __webpack_require__(/*! ./selection-service-aware-context-menu-mouse-listener */ "../../node_modules/@eclipse-glsp/client/lib/features/context-menu/selection-service-aware-context-menu-mouse-listener.js");
const server_context_menu_provider_1 = __webpack_require__(/*! ./server-context-menu-provider */ "../../node_modules/@eclipse-glsp/client/lib/features/context-menu/server-context-menu-provider.js");
const glspContextMenuModule = new inversify_1.ContainerModule(bind => {
    bind(_glsp_sprotty_1.TYPES.IContextMenuServiceProvider).toProvider(ctx => () => new Promise((resolve, reject) => {
        if (ctx.container.isBound(_glsp_sprotty_1.TYPES.IContextMenuService)) {
            resolve(ctx.container.get(_glsp_sprotty_1.TYPES.IContextMenuService));
        }
        else {
            reject();
        }
    }));
    (0, _glsp_sprotty_1.bindAsService)(bind, _glsp_sprotty_1.TYPES.MouseListener, selection_service_aware_context_menu_mouse_listener_1.SelectionServiceAwareContextMenuMouseListener);
    bind(_glsp_sprotty_1.TYPES.IContextMenuProviderRegistry).to(_glsp_sprotty_1.ContextMenuProviderRegistry);
    (0, _glsp_sprotty_1.bindAsService)(bind, _glsp_sprotty_1.TYPES.IContextMenuItemProvider, server_context_menu_provider_1.ServerContextMenuItemProvider);
});
exports["default"] = glspContextMenuModule;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/features/context-menu/selection-service-aware-context-menu-mouse-listener.js":
/*!********************************************************************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/features/context-menu/selection-service-aware-context-menu-mouse-listener.js ***!
  \********************************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SelectionServiceAwareContextMenuMouseListener = void 0;
/********************************************************************************
 * Copyright (c) 2019-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const _glsp_sprotty_1 = __webpack_require__(/*! ../../glsp-sprotty/index */ "../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/index.js");
const focus_change_action_1 = __webpack_require__(/*! ../../base/actions/focus-change-action */ "../../node_modules/@eclipse-glsp/client/lib/base/actions/focus-change-action.js");
const selection_service_1 = __webpack_require__(/*! ../select/selection-service */ "../../node_modules/@eclipse-glsp/client/lib/features/select/selection-service.js");
let SelectionServiceAwareContextMenuMouseListener = class SelectionServiceAwareContextMenuMouseListener extends _glsp_sprotty_1.MouseListener {
    /**
     * Opens the context menu.
     */
    contextMenu(target, event) {
        return this.openContextMenu(target, event);
    }
    /**
     * Opens the context menu.
     *
     *   - query the context menu service and the context menu elements
     *   - show the context menu
     *   - send a focus state change to indicate that the diagram becomes inactive, once the context menu is shown
     *
     * When the context menu is closed, we focus the diagram element again.
     */
    openContextMenu(target, event) {
        if (!this.contextMenuService || !this.menuProvider) {
            return [];
        }
        const mousePosition = { x: event.x, y: event.y };
        const result = Promise.all([this.contextMenuService(), this.menuProvider.getItems(target.root, mousePosition)])
            .then(([menuService, menuItems]) => menuService.show(menuItems, mousePosition, () => this.focusEventTarget(event)))
            .then(() => focus_change_action_1.FocusStateChangedAction.create(false));
        return [result];
    }
    focusEventTarget(event) {
        const targetElement = event.target instanceof SVGElement ? event.target : undefined;
        const svgParentElement = targetElement === null || targetElement === void 0 ? void 0 : targetElement.closest('svg');
        if (svgParentElement) {
            svgParentElement.focus();
        }
    }
};
__decorate([
    (0, inversify_1.inject)(_glsp_sprotty_1.TYPES.IContextMenuServiceProvider),
    (0, inversify_1.optional)(),
    __metadata("design:type", Function)
], SelectionServiceAwareContextMenuMouseListener.prototype, "contextMenuService", void 0);
__decorate([
    (0, inversify_1.inject)(_glsp_sprotty_1.TYPES.IContextMenuProviderRegistry),
    (0, inversify_1.optional)(),
    __metadata("design:type", _glsp_sprotty_1.ContextMenuProviderRegistry)
], SelectionServiceAwareContextMenuMouseListener.prototype, "menuProvider", void 0);
__decorate([
    (0, inversify_1.inject)(_glsp_sprotty_1.TYPES.SelectionService),
    __metadata("design:type", selection_service_1.SelectionService)
], SelectionServiceAwareContextMenuMouseListener.prototype, "selectionService", void 0);
SelectionServiceAwareContextMenuMouseListener = __decorate([
    (0, inversify_1.injectable)()
], SelectionServiceAwareContextMenuMouseListener);
exports.SelectionServiceAwareContextMenuMouseListener = SelectionServiceAwareContextMenuMouseListener;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/features/context-menu/server-context-menu-provider.js":
/*!*********************************************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/features/context-menu/server-context-menu-provider.js ***!
  \*********************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ServerContextMenuItemProvider = exports.ServerContextMenu = void 0;
/********************************************************************************
 * Copyright (c) 2019-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const _glsp_sprotty_1 = __webpack_require__(/*! ../../glsp-sprotty/index */ "../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/index.js");
const action_dispatcher_1 = __webpack_require__(/*! ../../base/action-dispatcher */ "../../node_modules/@eclipse-glsp/client/lib/base/action-dispatcher.js");
const editor_context_service_1 = __webpack_require__(/*! ../../base/editor-context-service */ "../../node_modules/@eclipse-glsp/client/lib/base/editor-context-service.js");
var ServerContextMenu;
(function (ServerContextMenu) {
    ServerContextMenu.CONTEXT_ID = 'context-menu';
})(ServerContextMenu = exports.ServerContextMenu || (exports.ServerContextMenu = {}));
let ServerContextMenuItemProvider = class ServerContextMenuItemProvider {
    getItems(root, lastMousePosition) {
        const selectedElementIds = Array.from(root.index
            .all()
            .filter(_glsp_sprotty_1.isSelected)
            .map(e => e.id));
        const editorContext = this.editorContext.getWithSelection(selectedElementIds);
        const requestAction = _glsp_sprotty_1.RequestContextActions.create({ contextId: ServerContextMenu.CONTEXT_ID, editorContext });
        return this.actionDispatcher.requestUntil(requestAction).then(response => this.getContextActionsFromResponse(response));
    }
    getContextActionsFromResponse(action) {
        if (_glsp_sprotty_1.SetContextActions.is(action)) {
            return action.actions;
        }
        return [];
    }
};
__decorate([
    (0, inversify_1.inject)(_glsp_sprotty_1.TYPES.IActionDispatcher),
    __metadata("design:type", action_dispatcher_1.GLSPActionDispatcher)
], ServerContextMenuItemProvider.prototype, "actionDispatcher", void 0);
__decorate([
    (0, inversify_1.inject)(editor_context_service_1.EditorContextService),
    __metadata("design:type", editor_context_service_1.EditorContextService)
], ServerContextMenuItemProvider.prototype, "editorContext", void 0);
ServerContextMenuItemProvider = __decorate([
    (0, inversify_1.injectable)()
], ServerContextMenuItemProvider);
exports.ServerContextMenuItemProvider = ServerContextMenuItemProvider;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/features/copy-paste/copy-paste-context-menu.js":
/*!**************************************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/features/copy-paste/copy-paste-context-menu.js ***!
  \**************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isNative = exports.supportsPaste = exports.supportsCut = exports.supportsCopy = exports.CopyPasteContextMenuItemProvider = exports.InvokeCopyPasteActionHandler = exports.InvokeCopyPasteAction = void 0;
/********************************************************************************
 * Copyright (c) 2020-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
/* eslint-disable deprecation/deprecation */
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const _glsp_sprotty_1 = __webpack_require__(/*! ../../glsp-sprotty/index */ "../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/index.js");
var InvokeCopyPasteAction;
(function (InvokeCopyPasteAction) {
    InvokeCopyPasteAction.KIND = 'invokeCopyPaste';
    function is(object) {
        return _glsp_sprotty_1.Action.hasKind(object, InvokeCopyPasteAction.KIND) && (0, _glsp_sprotty_1.hasStringProp)(object, 'command');
    }
    InvokeCopyPasteAction.is = is;
    function create(command) {
        return { kind: InvokeCopyPasteAction.KIND, command };
    }
    InvokeCopyPasteAction.create = create;
})(InvokeCopyPasteAction = exports.InvokeCopyPasteAction || (exports.InvokeCopyPasteAction = {}));
let InvokeCopyPasteActionHandler = class InvokeCopyPasteActionHandler {
    handle(action) {
        switch (action.command) {
            case 'copy':
                if (supportsCopy()) {
                    document.execCommand('copy');
                }
                else {
                    this.notifyUserToUseShortcut('copy');
                }
                break;
            case 'paste':
                if (supportsPaste()) {
                    document.execCommand('paste');
                }
                else {
                    this.notifyUserToUseShortcut('paste');
                }
                break;
            case 'cut':
                if (supportsCut()) {
                    document.execCommand('cut');
                }
                else {
                    this.notifyUserToUseShortcut('cut');
                }
                break;
        }
    }
    notifyUserToUseShortcut(operation) {
        const message = `Please use the browser's ${operation} command or shortcut.`;
        const timeout = 10000;
        const severity = 'WARNING';
        this.dispatcher.dispatchAll([
            _glsp_sprotty_1.ServerStatusAction.create(message, { severity, timeout }),
            _glsp_sprotty_1.ServerMessageAction.create(message, { severity, timeout })
        ]);
    }
};
__decorate([
    (0, inversify_1.inject)(_glsp_sprotty_1.TYPES.IActionDispatcher),
    __metadata("design:type", Object)
], InvokeCopyPasteActionHandler.prototype, "dispatcher", void 0);
InvokeCopyPasteActionHandler = __decorate([
    (0, inversify_1.injectable)()
], InvokeCopyPasteActionHandler);
exports.InvokeCopyPasteActionHandler = InvokeCopyPasteActionHandler;
let CopyPasteContextMenuItemProvider = class CopyPasteContextMenuItemProvider {
    getItems(root, _lastMousePosition) {
        const hasSelectedElements = Array.from(root.index.all().filter(_glsp_sprotty_1.isSelected)).length > 0;
        return Promise.resolve([
            this.createCopyMenuItem(hasSelectedElements),
            this.createCutMenuItem(hasSelectedElements),
            this.createPasteMenuItem()
        ]);
    }
    createPasteMenuItem() {
        return {
            id: 'paste',
            label: 'Paste',
            group: 'copy-paste',
            actions: [InvokeCopyPasteAction.create('paste')],
            isEnabled: () => true
        };
    }
    createCutMenuItem(hasSelectedElements) {
        return {
            id: 'cut',
            label: 'Cut',
            group: 'copy-paste',
            actions: [InvokeCopyPasteAction.create('cut')],
            isEnabled: () => hasSelectedElements
        };
    }
    createCopyMenuItem(hasSelectedElements) {
        return {
            id: 'copy',
            label: 'Copy',
            group: 'copy-paste',
            actions: [InvokeCopyPasteAction.create('copy')],
            isEnabled: () => hasSelectedElements
        };
    }
};
CopyPasteContextMenuItemProvider = __decorate([
    (0, inversify_1.injectable)()
], CopyPasteContextMenuItemProvider);
exports.CopyPasteContextMenuItemProvider = CopyPasteContextMenuItemProvider;
function supportsCopy() {
    return isNative() || document.queryCommandSupported('copy');
}
exports.supportsCopy = supportsCopy;
function supportsCut() {
    return isNative() || document.queryCommandSupported('cut');
}
exports.supportsCut = supportsCut;
function supportsPaste() {
    const isChrome = userAgent().indexOf('Chrome') >= 0;
    return isNative() || (!isChrome && document.queryCommandSupported('paste'));
}
exports.supportsPaste = supportsPaste;
function isNative() {
    return typeof window.process !== 'undefined';
}
exports.isNative = isNative;
function userAgent() {
    return typeof navigator !== 'undefined' ? navigator.userAgent : '';
}


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/features/copy-paste/copy-paste-handler.js":
/*!*********************************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/features/copy-paste/copy-paste-handler.js ***!
  \*********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ServerCopyPasteHandler = exports.LocalClipboardService = void 0;
/********************************************************************************
 * Copyright (c) 2019-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const uuid_1 = __webpack_require__(/*! uuid */ "../../node_modules/uuid/dist/esm-browser/index.js");
const _glsp_sprotty_1 = __webpack_require__(/*! ../../glsp-sprotty/index */ "../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/index.js");
const action_dispatcher_1 = __webpack_require__(/*! ../../base/action-dispatcher */ "../../node_modules/@eclipse-glsp/client/lib/base/action-dispatcher.js");
const editor_context_service_1 = __webpack_require__(/*! ../../base/editor-context-service */ "../../node_modules/@eclipse-glsp/client/lib/base/editor-context-service.js");
/**
 * A local implementation of the async clipboard interface.
 *
 * This implementation just stores the clipboard data in memory, but not in the clipboard.
 * This implementation can be used if you don't need to support cross-widget/browser/application
 * data transfer and you would like to avoid to require the permission of the user for accessing the
 * system clipboard asynchronously.
 *
 * In order to detect whether the user copied something else since we recorded the clipboard data
 * we put a uuid into the system clipboard synchronously. If on paste this ID has changed or is not
 * available anymore, we know that the user copied in another application or context, so we shouldn't
 * paste what we have stored locally and just return undefined.
 *
 * Real async clipboard service implementations can just ignore the ID that is passed and rely on the
 * system clipboard's content instead.
 */
let LocalClipboardService = class LocalClipboardService {
    clear() {
        this.currentId = undefined;
        this.data = undefined;
    }
    put(data, id) {
        this.currentId = id;
        this.data = data;
    }
    get(id) {
        if (id !== this.currentId) {
            return undefined;
        }
        return this.data;
    }
};
LocalClipboardService = __decorate([
    (0, inversify_1.injectable)()
], LocalClipboardService);
exports.LocalClipboardService = LocalClipboardService;
function toClipboardId(clipboardId) {
    return JSON.stringify({ clipboardId });
}
function isClipboardId(jsonData) {
    return jsonData !== undefined && 'clipboardId' in jsonData;
}
function getClipboardIdFromDataTransfer(dataTransfer) {
    const jsonString = dataTransfer.getData(CLIPBOARD_DATA_FORMAT);
    const jsonObject = jsonString ? JSON.parse(jsonString) : undefined;
    return isClipboardId(jsonObject) ? jsonObject.clipboardId : undefined;
}
const CLIPBOARD_DATA_FORMAT = 'text/plain';
let ServerCopyPasteHandler = class ServerCopyPasteHandler {
    handleCopy(event) {
        if (event.clipboardData && this.shouldCopy(event)) {
            const clipboardId = (0, uuid_1.v4)();
            event.clipboardData.setData(CLIPBOARD_DATA_FORMAT, toClipboardId(clipboardId));
            this.actionDispatcher
                .request(_glsp_sprotty_1.RequestClipboardDataAction.create(this.editorContext.get()))
                .then(action => this.clipboardService.put(action.clipboardData, clipboardId));
            event.preventDefault();
        }
        else {
            if (event.clipboardData) {
                event.clipboardData.clearData();
            }
            this.clipboardService.clear();
        }
    }
    handleCut(event) {
        if (event.clipboardData && this.shouldCopy(event)) {
            this.handleCopy(event);
            this.actionDispatcher.dispatch(_glsp_sprotty_1.CutOperation.create(this.editorContext.get()));
            event.preventDefault();
        }
    }
    handlePaste(event) {
        if (event.clipboardData && this.shouldPaste(event)) {
            const clipboardId = getClipboardIdFromDataTransfer(event.clipboardData);
            const clipboardData = this.clipboardService.get(clipboardId);
            if (clipboardData) {
                this.actionDispatcher.dispatch(_glsp_sprotty_1.PasteOperation.create({ clipboardData, editorContext: this.editorContext.get() }));
            }
            event.preventDefault();
        }
    }
    shouldCopy(_event) {
        return this.editorContext.get().selectedElementIds.length > 0 && this.isDiagramActive();
    }
    shouldPaste(_event) {
        return this.isDiagramActive();
    }
    isDiagramActive() {
        var _a, _b;
        return ((_b = (_a = document.activeElement) === null || _a === void 0 ? void 0 : _a.parentElement) === null || _b === void 0 ? void 0 : _b.id) === this.viewerOptions.baseDiv;
    }
};
__decorate([
    (0, inversify_1.inject)(_glsp_sprotty_1.TYPES.IActionDispatcher),
    __metadata("design:type", action_dispatcher_1.GLSPActionDispatcher)
], ServerCopyPasteHandler.prototype, "actionDispatcher", void 0);
__decorate([
    (0, inversify_1.inject)(_glsp_sprotty_1.TYPES.ViewerOptions),
    __metadata("design:type", Object)
], ServerCopyPasteHandler.prototype, "viewerOptions", void 0);
__decorate([
    (0, inversify_1.inject)(_glsp_sprotty_1.TYPES.IAsyncClipboardService),
    __metadata("design:type", Object)
], ServerCopyPasteHandler.prototype, "clipboardService", void 0);
__decorate([
    (0, inversify_1.inject)(editor_context_service_1.EditorContextService),
    __metadata("design:type", editor_context_service_1.EditorContextService)
], ServerCopyPasteHandler.prototype, "editorContext", void 0);
ServerCopyPasteHandler = __decorate([
    (0, inversify_1.injectable)()
], ServerCopyPasteHandler);
exports.ServerCopyPasteHandler = ServerCopyPasteHandler;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/features/copy-paste/di.config.js":
/*!************************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/features/copy-paste/di.config.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.copyPasteContextMenuModule = exports.glspServerCopyPasteModule = void 0;
/********************************************************************************
 * Copyright (c) 2019-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const _glsp_sprotty_1 = __webpack_require__(/*! ../../glsp-sprotty/index */ "../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/index.js");
const copy_paste_context_menu_1 = __webpack_require__(/*! ./copy-paste-context-menu */ "../../node_modules/@eclipse-glsp/client/lib/features/copy-paste/copy-paste-context-menu.js");
const copy_paste_handler_1 = __webpack_require__(/*! ./copy-paste-handler */ "../../node_modules/@eclipse-glsp/client/lib/features/copy-paste/copy-paste-handler.js");
exports.glspServerCopyPasteModule = new inversify_1.ContainerModule((bind, _unbind, isBound) => {
    bind(_glsp_sprotty_1.TYPES.ICopyPasteHandler).to(copy_paste_handler_1.ServerCopyPasteHandler);
    bind(_glsp_sprotty_1.TYPES.IAsyncClipboardService).to(copy_paste_handler_1.LocalClipboardService).inSingletonScope();
});
/**
 * This module is not required if the diagram is deployed in Theia but only intended to be used
 * in a standalone deployment of GLSP. If the GLSP diagram in Theia use the Theia-native
 * `CopyPasteMenuContribution` in `glsp-theia-integration` instead.
 */
exports.copyPasteContextMenuModule = new inversify_1.ContainerModule((bind, _unbind, isBound) => {
    bind(_glsp_sprotty_1.TYPES.IContextMenuProvider).to(copy_paste_context_menu_1.CopyPasteContextMenuItemProvider).inSingletonScope();
    bind(copy_paste_context_menu_1.InvokeCopyPasteActionHandler).toSelf().inSingletonScope();
    (0, _glsp_sprotty_1.configureActionHandler)({ bind, isBound }, copy_paste_context_menu_1.InvokeCopyPasteAction.KIND, copy_paste_context_menu_1.InvokeCopyPasteActionHandler);
});


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/features/decoration/decoration-placer.js":
/*!********************************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/features/decoration/decoration-placer.js ***!
  \********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var GlspDecorationPlacer_1;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.GlspDecorationPlacer = void 0;
/********************************************************************************
 * Copyright (c) 2019-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const _glsp_sprotty_1 = __webpack_require__(/*! ../../glsp-sprotty/index */ "../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/index.js");
let GlspDecorationPlacer = GlspDecorationPlacer_1 = class GlspDecorationPlacer extends _glsp_sprotty_1.DecorationPlacer {
    getPosition(element) {
        if (element instanceof _glsp_sprotty_1.SChildElement && element.parent instanceof _glsp_sprotty_1.SRoutableElement) {
            return super.getPosition(element);
        }
        if ((0, _glsp_sprotty_1.isSizeable)(element)) {
            return {
                x: GlspDecorationPlacer_1.DECORATION_OFFSET.x * element.bounds.width,
                y: GlspDecorationPlacer_1.DECORATION_OFFSET.y * element.bounds.height
            };
        }
        return _glsp_sprotty_1.Point.ORIGIN;
    }
};
GlspDecorationPlacer.DECORATION_OFFSET = { x: 12, y: 10 };
GlspDecorationPlacer = GlspDecorationPlacer_1 = __decorate([
    (0, inversify_1.injectable)()
], GlspDecorationPlacer);
exports.GlspDecorationPlacer = GlspDecorationPlacer;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/features/decoration/di.config.js":
/*!************************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/features/decoration/di.config.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
/********************************************************************************
 * Copyright (c) 2019-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const _glsp_sprotty_1 = __webpack_require__(/*! ../../glsp-sprotty/index */ "../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/index.js");
__webpack_require__(/*! ../../../css/decoration.css */ "../../node_modules/@eclipse-glsp/client/css/decoration.css");
const decoration_placer_1 = __webpack_require__(/*! ./decoration-placer */ "../../node_modules/@eclipse-glsp/client/lib/features/decoration/decoration-placer.js");
const glspDecorationModule = new inversify_1.ContainerModule(bind => {
    (0, _glsp_sprotty_1.bindAsService)(bind, _glsp_sprotty_1.TYPES.IVNodePostprocessor, decoration_placer_1.GlspDecorationPlacer);
});
exports["default"] = glspDecorationModule;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/features/edit-label/di.config.js":
/*!************************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/features/edit-label/di.config.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
/********************************************************************************
 * Copyright (c) 2019-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const _glsp_sprotty_1 = __webpack_require__(/*! ../../glsp-sprotty/index */ "../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/index.js");
const edit_label_tool_1 = __webpack_require__(/*! ./edit-label-tool */ "../../node_modules/@eclipse-glsp/client/lib/features/edit-label/edit-label-tool.js");
const edit_label_validator_1 = __webpack_require__(/*! ./edit-label-validator */ "../../node_modules/@eclipse-glsp/client/lib/features/edit-label/edit-label-validator.js");
const glspEditLabelModule = new inversify_1.ContainerModule((bind, _unbind, isBound, _rebind) => {
    bind(_glsp_sprotty_1.TYPES.IEditLabelValidator).to(edit_label_validator_1.ServerEditLabelValidator);
    bind(_glsp_sprotty_1.TYPES.IEditLabelValidationDecorator).to(edit_label_validator_1.BalloonLabelValidationDecorator);
    (0, _glsp_sprotty_1.bindAsService)(bind, _glsp_sprotty_1.TYPES.IDefaultTool, edit_label_tool_1.DirectLabelEditTool);
    (0, _glsp_sprotty_1.configureCommand)({ bind, isBound }, _glsp_sprotty_1.ApplyLabelEditCommand);
});
exports["default"] = glspEditLabelModule;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/features/edit-label/edit-label-tool.js":
/*!******************************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/features/edit-label/edit-label-tool.js ***!
  \******************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var DirectLabelEditTool_1;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.DirectLabelEditTool = void 0;
/********************************************************************************
 * Copyright (c) 2020-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const _glsp_sprotty_1 = __webpack_require__(/*! ../../glsp-sprotty/index */ "../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/index.js");
const base_glsp_tool_1 = __webpack_require__(/*! ../tools/base-glsp-tool */ "../../node_modules/@eclipse-glsp/client/lib/features/tools/base-glsp-tool.js");
let DirectLabelEditTool = DirectLabelEditTool_1 = class DirectLabelEditTool extends base_glsp_tool_1.BaseGLSPTool {
    get id() {
        return DirectLabelEditTool_1.ID;
    }
    createEditLabelMouseListener() {
        return new _glsp_sprotty_1.EditLabelMouseListener();
    }
    createEditLabelKeyListener() {
        return new _glsp_sprotty_1.EditLabelKeyListener();
    }
    enable() {
        this.editLabelKeyListener = this.createEditLabelKeyListener();
        this.editLabelMouseListener = this.createEditLabelMouseListener();
        this.mouseTool.register(this.editLabelMouseListener);
        this.keyTool.register(this.editLabelKeyListener);
    }
    disable() {
        this.keyTool.deregister(this.editLabelKeyListener);
        this.mouseTool.deregister(this.editLabelMouseListener);
    }
};
DirectLabelEditTool.ID = 'glsp.direct-label-edit-tool';
DirectLabelEditTool = DirectLabelEditTool_1 = __decorate([
    (0, inversify_1.injectable)()
], DirectLabelEditTool);
exports.DirectLabelEditTool = DirectLabelEditTool;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/features/edit-label/edit-label-validator.js":
/*!***********************************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/features/edit-label/edit-label-validator.js ***!
  \***********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.BalloonLabelValidationDecorator = exports.ServerEditLabelValidator = exports.LabelEditValidation = void 0;
/********************************************************************************
 * Copyright (c) 2019-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const _glsp_sprotty_1 = __webpack_require__(/*! ../../glsp-sprotty/index */ "../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/index.js");
const action_dispatcher_1 = __webpack_require__(/*! ../../base/action-dispatcher */ "../../node_modules/@eclipse-glsp/client/lib/base/action-dispatcher.js");
var LabelEditValidation;
(function (LabelEditValidation) {
    LabelEditValidation.CONTEXT_ID = 'label-edit';
    function toEditLabelValidationResult(status) {
        const message = status.message;
        let severity = 'ok';
        if (_glsp_sprotty_1.ValidationStatus.isError(status)) {
            severity = 'error';
        }
        else if (_glsp_sprotty_1.ValidationStatus.isWarning(status)) {
            severity = 'warning';
        }
        return { message, severity };
    }
    LabelEditValidation.toEditLabelValidationResult = toEditLabelValidationResult;
    function createValidationRequestAction(value, labelId) {
        return _glsp_sprotty_1.RequestEditValidationAction.create({ contextId: LabelEditValidation.CONTEXT_ID, modelElementId: labelId, text: value });
    }
    LabelEditValidation.createValidationRequestAction = createValidationRequestAction;
})(LabelEditValidation = exports.LabelEditValidation || (exports.LabelEditValidation = {}));
let ServerEditLabelValidator = class ServerEditLabelValidator {
    validate(value, label) {
        const action = LabelEditValidation.createValidationRequestAction(value, label.id);
        return this.actionDispatcher.requestUntil(action).then(response => this.getValidationResultFromResponse(response));
    }
    getValidationResultFromResponse(action) {
        if (_glsp_sprotty_1.SetEditValidationResultAction.is(action)) {
            return LabelEditValidation.toEditLabelValidationResult(action.status);
        }
        return { severity: 'ok' };
    }
};
__decorate([
    (0, inversify_1.inject)(_glsp_sprotty_1.TYPES.IActionDispatcher),
    __metadata("design:type", action_dispatcher_1.GLSPActionDispatcher)
], ServerEditLabelValidator.prototype, "actionDispatcher", void 0);
ServerEditLabelValidator = __decorate([
    (0, inversify_1.injectable)()
], ServerEditLabelValidator);
exports.ServerEditLabelValidator = ServerEditLabelValidator;
let BalloonLabelValidationDecorator = class BalloonLabelValidationDecorator {
    decorate(input, result) {
        const containerElement = input.parentElement;
        if (!containerElement) {
            return;
        }
        if (result.message) {
            containerElement.setAttribute('data-balloon', result.message);
            containerElement.setAttribute('data-balloon-pos', 'up-left');
            containerElement.setAttribute('data-balloon-visible', 'true');
        }
        switch (result.severity) {
            case 'ok':
                containerElement.classList.add('validation-ok');
                break;
            case 'warning':
                containerElement.classList.add('validation-warning');
                break;
            case 'error':
                containerElement.classList.add('validation-error');
                break;
        }
    }
    dispose(input) {
        const containerElement = input.parentElement;
        if (containerElement) {
            containerElement.removeAttribute('data-balloon');
            containerElement.removeAttribute('data-balloon-pos');
            containerElement.removeAttribute('data-balloon-visible');
            containerElement.classList.remove('validation-ok', 'validation-warning', 'validation-error');
        }
    }
};
BalloonLabelValidationDecorator = __decorate([
    (0, inversify_1.injectable)()
], BalloonLabelValidationDecorator);
exports.BalloonLabelValidationDecorator = BalloonLabelValidationDecorator;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/features/export/di.config.js":
/*!********************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/features/export/di.config.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
/********************************************************************************
 * Copyright (c) 2019-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const _glsp_sprotty_1 = __webpack_require__(/*! ../../glsp-sprotty/index */ "../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/index.js");
const glsp_svg_exporter_1 = __webpack_require__(/*! ./glsp-svg-exporter */ "../../node_modules/@eclipse-glsp/client/lib/features/export/glsp-svg-exporter.js");
const glspExportSvgModule = new inversify_1.ContainerModule((bind, _unbind, isBound) => {
    const context = { bind, isBound };
    (0, _glsp_sprotty_1.bindAsService)(context, _glsp_sprotty_1.TYPES.KeyListener, _glsp_sprotty_1.ExportSvgKeyListener);
    (0, _glsp_sprotty_1.bindAsService)(context, _glsp_sprotty_1.TYPES.HiddenVNodePostprocessor, _glsp_sprotty_1.ExportSvgPostprocessor);
    (0, _glsp_sprotty_1.configureCommand)(context, _glsp_sprotty_1.ExportSvgCommand);
    bind(_glsp_sprotty_1.TYPES.SvgExporter).to(glsp_svg_exporter_1.GLSPSvgExporter).inSingletonScope();
});
exports["default"] = glspExportSvgModule;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/features/export/glsp-svg-exporter.js":
/*!****************************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/features/export/glsp-svg-exporter.js ***!
  \****************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.GLSPSvgExporter = void 0;
/********************************************************************************
 * Copyright (c) 2022-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const uuid_1 = __webpack_require__(/*! uuid */ "../../node_modules/uuid/dist/esm-browser/index.js");
const _glsp_sprotty_1 = __webpack_require__(/*! ../../glsp-sprotty/index */ "../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/index.js");
let GLSPSvgExporter = class GLSPSvgExporter extends _glsp_sprotty_1.SvgExporter {
    export(root, _request) {
        if (typeof document !== 'undefined') {
            const svgElement = this.findSvgElement();
            if (svgElement) {
                // createSvg requires the svg to have a non-empty id, so we generate one if necessary
                const originalId = svgElement.id;
                try {
                    svgElement.id = originalId || (0, uuid_1.v4)();
                    // provide generated svg code with respective sizing for proper viewing in browser and remove undesired border
                    const bounds = this.getBounds(root);
                    const svg = this.createSvg(svgElement, root).replace('style="', `style="width: ${bounds.width}px !important;height: ${bounds.height}px !important;border: none !important;`);
                    // do not give request/response id here as otherwise the action is treated as an unrequested response
                    this.actionDispatcher.dispatch(_glsp_sprotty_1.ExportSvgAction.create(svg, ''));
                }
                finally {
                    svgElement.id = originalId;
                }
            }
        }
    }
    findSvgElement() {
        const div = document.getElementById(this.options.hiddenDiv);
        // search for first svg element as hierarchy within Sprotty might change
        return div && div.querySelector('svg');
    }
};
GLSPSvgExporter = __decorate([
    (0, inversify_1.injectable)()
], GLSPSvgExporter);
exports.GLSPSvgExporter = GLSPSvgExporter;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/features/hints/di.config.js":
/*!*******************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/features/hints/di.config.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
/********************************************************************************
 * Copyright (c) 2019-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const _glsp_sprotty_1 = __webpack_require__(/*! ../../glsp-sprotty/index */ "../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/index.js");
const type_hints_1 = __webpack_require__(/*! ./type-hints */ "../../node_modules/@eclipse-glsp/client/lib/features/hints/type-hints.js");
const modelHintsModule = new inversify_1.ContainerModule((bind, _unbind, isBound) => {
    bind(type_hints_1.TypeHintProvider).toSelf().inSingletonScope();
    bind(_glsp_sprotty_1.TYPES.ITypeHintProvider).toService(type_hints_1.TypeHintProvider);
    (0, _glsp_sprotty_1.configureActionHandler)({ bind, isBound }, _glsp_sprotty_1.SetTypeHintsAction.KIND, type_hints_1.TypeHintProvider);
    (0, _glsp_sprotty_1.configureCommand)({ bind, isBound }, type_hints_1.ApplyTypeHintsCommand);
});
exports["default"] = modelHintsModule;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/features/hints/model.js":
/*!***************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/features/hints/model.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isReparentable = exports.reparentFeature = exports.isContainable = exports.containerFeature = void 0;
exports.containerFeature = Symbol('containable');
function isContainable(element) {
    return element.hasFeature(exports.containerFeature);
}
exports.isContainable = isContainable;
exports.reparentFeature = Symbol('reparentFeature');
function isReparentable(element) {
    return element.hasFeature(exports.reparentFeature);
}
exports.isReparentable = isReparentable;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/features/hints/type-hints.js":
/*!********************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/features/hints/type-hints.js ***!
  \********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TypeHintProvider = exports.ApplyTypeHintsCommand = exports.ApplyTypeHintsAction = void 0;
/********************************************************************************
 * Copyright (c) 2019-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const _glsp_sprotty_1 = __webpack_require__(/*! ../../glsp-sprotty/index */ "../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/index.js");
const smodel_util_1 = __webpack_require__(/*! ../../utils/smodel-util */ "../../node_modules/@eclipse-glsp/client/lib/utils/smodel-util.js");
const model_1 = __webpack_require__(/*! ../change-bounds/model */ "../../node_modules/@eclipse-glsp/client/lib/features/change-bounds/model.js");
const model_2 = __webpack_require__(/*! ../reconnect/model */ "../../node_modules/@eclipse-glsp/client/lib/features/reconnect/model.js");
const model_3 = __webpack_require__(/*! ../tool-feedback/model */ "../../node_modules/@eclipse-glsp/client/lib/features/tool-feedback/model.js");
const model_4 = __webpack_require__(/*! ./model */ "../../node_modules/@eclipse-glsp/client/lib/features/hints/model.js");
var ApplyTypeHintsAction;
(function (ApplyTypeHintsAction) {
    ApplyTypeHintsAction.KIND = 'applyTypeHints';
    function is(object) {
        return _glsp_sprotty_1.Action.hasKind(object, ApplyTypeHintsAction.KIND);
    }
    ApplyTypeHintsAction.is = is;
    function create() {
        return { kind: ApplyTypeHintsAction.KIND };
    }
    ApplyTypeHintsAction.create = create;
})(ApplyTypeHintsAction = exports.ApplyTypeHintsAction || (exports.ApplyTypeHintsAction = {}));
let ApplyTypeHintsCommand = class ApplyTypeHintsCommand extends model_3.FeedbackCommand {
    constructor(action) {
        super();
        this.action = action;
        this.priority = 10;
    }
    execute(context) {
        context.root.index.all().forEach(element => {
            if (element instanceof _glsp_sprotty_1.SShapeElement || element instanceof _glsp_sprotty_1.SModelRoot) {
                this.applyShapeTypeHint(element);
            }
            else if (element instanceof _glsp_sprotty_1.SEdge) {
                return this.applyEdgeTypeHint(element);
            }
        });
        return context.root;
    }
    applyEdgeTypeHint(element) {
        const hint = this.typeHintProvider.getEdgeTypeHint(element);
        if (hint && isModifiableFeatureSet(element.features)) {
            addOrRemove(element.features, _glsp_sprotty_1.deletableFeature, hint.deletable);
            addOrRemove(element.features, _glsp_sprotty_1.editFeature, hint.routable);
            addOrRemove(element.features, model_2.reconnectFeature, hint.repositionable);
        }
    }
    applyShapeTypeHint(element) {
        const hint = this.typeHintProvider.getShapeTypeHint(element);
        if (hint && isModifiableFeatureSet(element.features)) {
            addOrRemove(element.features, _glsp_sprotty_1.deletableFeature, hint.deletable);
            addOrRemove(element.features, _glsp_sprotty_1.moveFeature, hint.repositionable);
            addOrRemove(element.features, model_1.resizeFeature, hint.resizable);
            addOrRemove(element.features, model_4.reparentFeature, hint.reparentable);
            addOrRemove(element.features, model_4.containerFeature, true);
            const containable = createContainable(hint);
            Object.assign(element, containable);
            addOrRemove(element.features, _glsp_sprotty_1.connectableFeature, true);
            const validSourceEdges = this.typeHintProvider.getValidEdgeElementTypes(element, 'source');
            const validTargetEdges = this.typeHintProvider.getValidEdgeElementTypes(element, 'target');
            const connectable = createConnectable(validSourceEdges, validTargetEdges);
            Object.assign(element, connectable);
        }
    }
};
ApplyTypeHintsCommand.KIND = ApplyTypeHintsAction.KIND;
__decorate([
    (0, inversify_1.inject)(_glsp_sprotty_1.TYPES.ITypeHintProvider),
    __metadata("design:type", Object)
], ApplyTypeHintsCommand.prototype, "typeHintProvider", void 0);
ApplyTypeHintsCommand = __decorate([
    (0, inversify_1.injectable)(),
    __param(0, (0, inversify_1.inject)(_glsp_sprotty_1.TYPES.Action)),
    __metadata("design:paramtypes", [Object])
], ApplyTypeHintsCommand);
exports.ApplyTypeHintsCommand = ApplyTypeHintsCommand;
function createConnectable(validSourceEdges, validTargetEdges) {
    return {
        canConnect: (routable, role) => role === 'source' ? validSourceEdges.includes(routable.type) : validTargetEdges.includes(routable.type)
    };
}
function createContainable(hint) {
    return {
        isContainableElement: element => hint.containableElementTypeIds ? hint.containableElementTypeIds.includes((0, smodel_util_1.getElementTypeId)(element)) : false
    };
}
function addOrRemove(features, feature, add) {
    if (add && !features.has(feature)) {
        features.add(feature);
    }
    else if (!add && features.has(feature)) {
        features.delete(feature);
    }
}
function isModifiableFeatureSet(featureSet) {
    return featureSet !== undefined && featureSet instanceof Set;
}
let TypeHintProvider = class TypeHintProvider {
    constructor() {
        this.shapeHints = new Map();
        this.edgeHints = new Map();
    }
    handle(action) {
        if (_glsp_sprotty_1.SetTypeHintsAction.is(action)) {
            action.shapeHints.forEach(hint => this.shapeHints.set(hint.elementTypeId, hint));
            action.edgeHints.forEach(hint => this.edgeHints.set(hint.elementTypeId, hint));
            this.feedbackActionDispatcher.registerFeedback(this, [ApplyTypeHintsAction.create()]);
        }
    }
    getValidEdgeElementTypes(input, role) {
        const elementTypeId = (0, smodel_util_1.getElementTypeId)(input);
        if (role === 'source') {
            return Array.from(Array.from(this.edgeHints.values())
                .filter(hint => hint.sourceElementTypeIds.some(sourceElementTypeId => (0, smodel_util_1.hasCompatibleType)(elementTypeId, sourceElementTypeId)))
                .map(hint => hint.elementTypeId));
        }
        else {
            return Array.from(Array.from(this.edgeHints.values())
                .filter(hint => hint.targetElementTypeIds.some(targetElementTypeId => (0, smodel_util_1.hasCompatibleType)(elementTypeId, targetElementTypeId)))
                .map(hint => hint.elementTypeId));
        }
    }
    getShapeTypeHint(input) {
        return getTypeHint(input, this.shapeHints);
    }
    getEdgeTypeHint(input) {
        return getTypeHint(input, this.edgeHints);
    }
};
__decorate([
    (0, inversify_1.inject)(_glsp_sprotty_1.TYPES.IFeedbackActionDispatcher),
    __metadata("design:type", Object)
], TypeHintProvider.prototype, "feedbackActionDispatcher", void 0);
TypeHintProvider = __decorate([
    (0, inversify_1.injectable)()
], TypeHintProvider);
exports.TypeHintProvider = TypeHintProvider;
function getTypeHint(input, hints) {
    const type = (0, smodel_util_1.getElementTypeId)(input);
    let hint = hints.get(type);
    // Check subtypes
    if (hint === undefined) {
        const subtypes = type.split(':');
        while (hint === undefined && subtypes.length > 0) {
            subtypes.pop();
            hint = hints.get(subtypes.join(':'));
        }
    }
    return hint;
}


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/features/hover/di.config.js":
/*!*******************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/features/hover/di.config.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
/********************************************************************************
 * Copyright (c) 2020-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const _glsp_sprotty_1 = __webpack_require__(/*! ../../glsp-sprotty/index */ "../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/index.js");
const focus_change_action_1 = __webpack_require__(/*! ../../base/actions/focus-change-action */ "../../node_modules/@eclipse-glsp/client/lib/base/actions/focus-change-action.js");
const hover_1 = __webpack_require__(/*! ./hover */ "../../node_modules/@eclipse-glsp/client/lib/features/hover/hover.js");
const glspHoverModule = new inversify_1.ContainerModule((bind, _unbind, isBound) => {
    const context = { bind, isBound };
    (0, _glsp_sprotty_1.bindAsService)(context, _glsp_sprotty_1.TYPES.PopupVNodePostprocessor, _glsp_sprotty_1.PopupPositionUpdater);
    (0, _glsp_sprotty_1.bindAsService)(context, _glsp_sprotty_1.TYPES.MouseListener, hover_1.GlspHoverMouseListener);
    (0, _glsp_sprotty_1.bindAsService)(context, _glsp_sprotty_1.TYPES.PopupMouseListener, _glsp_sprotty_1.PopupHoverMouseListener);
    (0, _glsp_sprotty_1.bindAsService)(context, _glsp_sprotty_1.TYPES.KeyListener, _glsp_sprotty_1.HoverKeyListener);
    bind(_glsp_sprotty_1.TYPES.HoverState).toConstantValue({
        mouseOverTimer: undefined,
        mouseOutTimer: undefined,
        popupOpen: false,
        previousPopupElement: undefined
    });
    bind(_glsp_sprotty_1.ClosePopupActionHandler).toSelf().inSingletonScope();
    (0, _glsp_sprotty_1.configureCommand)(context, _glsp_sprotty_1.HoverFeedbackCommand);
    (0, _glsp_sprotty_1.configureCommand)(context, _glsp_sprotty_1.SetPopupModelCommand);
    (0, _glsp_sprotty_1.configureActionHandler)(context, _glsp_sprotty_1.SetPopupModelCommand.KIND, _glsp_sprotty_1.ClosePopupActionHandler);
    (0, _glsp_sprotty_1.configureActionHandler)(context, _glsp_sprotty_1.FitToScreenCommand.KIND, _glsp_sprotty_1.ClosePopupActionHandler);
    (0, _glsp_sprotty_1.configureActionHandler)(context, _glsp_sprotty_1.CenterCommand.KIND, _glsp_sprotty_1.ClosePopupActionHandler);
    (0, _glsp_sprotty_1.configureActionHandler)(context, _glsp_sprotty_1.SetViewportCommand.KIND, _glsp_sprotty_1.ClosePopupActionHandler);
    (0, _glsp_sprotty_1.configureActionHandler)(context, _glsp_sprotty_1.MoveCommand.KIND, _glsp_sprotty_1.ClosePopupActionHandler);
    (0, _glsp_sprotty_1.configureActionHandler)(context, focus_change_action_1.FocusStateChangedAction.KIND, _glsp_sprotty_1.ClosePopupActionHandler);
    (0, _glsp_sprotty_1.configureActionHandler)(context, _glsp_sprotty_1.EnableToolsAction.KIND, hover_1.GlspHoverMouseListener);
    (0, _glsp_sprotty_1.configureActionHandler)(context, _glsp_sprotty_1.EnableDefaultToolsAction.KIND, hover_1.GlspHoverMouseListener);
    (0, _glsp_sprotty_1.configureActionHandler)(context, focus_change_action_1.FocusStateChangedAction.KIND, hover_1.GlspHoverMouseListener);
});
exports["default"] = glspHoverModule;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/features/hover/hover.js":
/*!***************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/features/hover/hover.js ***!
  \***************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.GlspHoverMouseListener = void 0;
/********************************************************************************
 * Copyright (c) 2020-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const _glsp_sprotty_1 = __webpack_require__(/*! ../../glsp-sprotty/index */ "../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/index.js");
const focus_change_action_1 = __webpack_require__(/*! ../../base/actions/focus-change-action */ "../../node_modules/@eclipse-glsp/client/lib/base/actions/focus-change-action.js");
const edge_creation_tool_1 = __webpack_require__(/*! ../tools/edge-creation-tool */ "../../node_modules/@eclipse-glsp/client/lib/features/tools/edge-creation-tool.js");
const issue_marker_1 = __webpack_require__(/*! ../validation/issue-marker */ "../../node_modules/@eclipse-glsp/client/lib/features/validation/issue-marker.js");
let GlspHoverMouseListener = class GlspHoverMouseListener extends _glsp_sprotty_1.HoverMouseListener {
    constructor() {
        super(...arguments);
        this.enableHover = true;
    }
    /**
     * Stops mouse over timer and remove hover feedback, if focus is lost.
     *
     * This fixes strange effects that appear if the mouse left the element via e.g. a context menu,
     * which explicitly removes the focus of the diagram.
     * @see SelectionServiceAwareContextMenuMouseListener
     * @param action should be a `FocusStateChangedAction`
     * @returns a `HoverFeedbackAction` resetting the state, if the specified action indicates lost focus
     */
    handle(action) {
        if (focus_change_action_1.FocusStateChangedAction.is(action) && !action.hasFocus) {
            this.stopMouseOverTimer();
            if (this.lastHoverFeedbackElementId) {
                const previousTargetId = this.lastHoverFeedbackElementId;
                this.lastHoverFeedbackElementId = undefined;
                return _glsp_sprotty_1.HoverFeedbackAction.create({ mouseoverElement: previousTargetId, mouseIsOver: false });
            }
        }
        else if (_glsp_sprotty_1.EnableToolsAction.is(action)) {
            this.enableHover = !action.toolIds.includes(edge_creation_tool_1.EdgeCreationTool.ID);
        }
        else if (_glsp_sprotty_1.EnableDefaultToolsAction.is(action)) {
            this.enableHover = true;
        }
    }
    mouseOver(target, event) {
        if (this.enableHover) {
            return super.mouseOver(target, event);
        }
        return [];
    }
    startMouseOverTimer(target, event) {
        this.stopMouseOverTimer();
        return new Promise(resolve => {
            this.state.mouseOverTimer = window.setTimeout(() => {
                const popupBounds = this.computePopupBounds(target, { x: event.pageX, y: event.pageY });
                if (target instanceof issue_marker_1.GIssueMarker) {
                    resolve(_glsp_sprotty_1.SetPopupModelAction.create(this.createPopupModel(target, popupBounds)));
                }
                else {
                    resolve(_glsp_sprotty_1.RequestPopupModelAction.create({ elementId: target.id, bounds: popupBounds }));
                }
                this.state.popupOpen = true;
                this.state.previousPopupElement = target;
            }, this.options.popupOpenDelay);
        });
    }
    createPopupModel(marker, bounds) {
        if (marker.issues !== undefined && marker.issues.length > 0) {
            return {
                type: 'html',
                id: 'sprotty-popup',
                children: [this.createMarkerIssuePopup(marker)],
                canvasBounds: this.modifyBounds(bounds)
            };
        }
        return { type: _glsp_sprotty_1.EMPTY_ROOT.type, id: _glsp_sprotty_1.EMPTY_ROOT.id };
    }
    createMarkerIssuePopup(marker) {
        const message = this.createIssueMessage(marker);
        return {
            type: 'pre-rendered',
            id: 'popup-title',
            code: `<div class="${(0, issue_marker_1.getSeverity)(marker)}"><div class="sprotty-popup-title">${message}</div></div>`
        };
    }
    createIssueMessage(marker) {
        return '<ul>' + marker.issues.map(i => '<li>' + i.severity.toUpperCase() + ': ' + i.message + '</li>').join('') + '</ul>';
    }
    modifyBounds(bounds) {
        return bounds;
    }
};
GlspHoverMouseListener = __decorate([
    (0, inversify_1.injectable)()
], GlspHoverMouseListener);
exports.GlspHoverMouseListener = GlspHoverMouseListener;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/features/layout/di.config.js":
/*!********************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/features/layout/di.config.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
/********************************************************************************
 * Copyright (c) 2019-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const _glsp_sprotty_1 = __webpack_require__(/*! ../../glsp-sprotty/index */ "../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/index.js");
const layout_elements_action_1 = __webpack_require__(/*! ./layout-elements-action */ "../../node_modules/@eclipse-glsp/client/lib/features/layout/layout-elements-action.js");
const layoutModule = new inversify_1.ContainerModule((bind, _unbind, isBound, rebind) => {
    const context = { bind, isBound };
    (0, _glsp_sprotty_1.configureActionHandler)(context, layout_elements_action_1.ResizeElementsAction.KIND, layout_elements_action_1.ResizeElementsActionHandler);
    (0, _glsp_sprotty_1.configureActionHandler)(context, layout_elements_action_1.AlignElementsAction.KIND, layout_elements_action_1.AlignElementsActionHandler);
});
exports["default"] = layoutModule;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/features/layout/layout-elements-action.js":
/*!*********************************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/features/layout/layout-elements-action.js ***!
  \*********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AlignElementsActionHandler = exports.AlignElementsAction = exports.SelectFunction = exports.Alignment = exports.ResizeElementsActionHandler = exports.LayoutElementsActionHandler = exports.ResizeElementsAction = exports.ReduceFunction = exports.ResizeDimension = void 0;
/********************************************************************************
 * Copyright (c) 2019-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const _glsp_sprotty_1 = __webpack_require__(/*! ../../glsp-sprotty/index */ "../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/index.js");
const layout_utils_1 = __webpack_require__(/*! ../../utils/layout-utils */ "../../node_modules/@eclipse-glsp/client/lib/utils/layout-utils.js");
const smodel_util_1 = __webpack_require__(/*! ../../utils/smodel-util */ "../../node_modules/@eclipse-glsp/client/lib/utils/smodel-util.js");
const model_1 = __webpack_require__(/*! ../change-bounds/model */ "../../node_modules/@eclipse-glsp/client/lib/features/change-bounds/model.js");
const selection_service_1 = __webpack_require__(/*! ../select/selection-service */ "../../node_modules/@eclipse-glsp/client/lib/features/select/selection-service.js");
/**
 * Used to specify the desired resize dimension for a {@link ResizeElementsCommand}.
 */
var ResizeDimension;
(function (ResizeDimension) {
    ResizeDimension[ResizeDimension["Width"] = 0] = "Width";
    ResizeDimension[ResizeDimension["Height"] = 1] = "Height";
    ResizeDimension[ResizeDimension["Width_And_Height"] = 2] = "Width_And_Height";
})(ResizeDimension = exports.ResizeDimension || (exports.ResizeDimension = {}));
var ReduceFunction;
(function (ReduceFunction) {
    /**
     * Returns the minimal value of the given numbers.
     * @param values Numbers to be evaluated.
     * @returns The reduced number.
     */
    function min(...values) {
        return Math.min(...values);
    }
    ReduceFunction.min = min;
    /**
     * Returns the maximal value of the given numbers.
     * @param values Numbers to be evaluated.
     * @returns The reduced number.
     */
    function max(...values) {
        return Math.max(...values);
    }
    ReduceFunction.max = max;
    /**
     * Computes the  average of the given numbers.
     * @param values Numbers to be evaluated.
     */
    function avg(...values) {
        return values.reduce((a, b) => a + b, 0) / values.length;
    }
    ReduceFunction.avg = avg;
    /**
     *  Returns the last value of the given numbers.
     *  @param values Numbers to be evaluated.
     *  @returns The reduced number.
     */
    function first(...values) {
        return values[0];
    }
    ReduceFunction.first = first;
    /**
     *  Returns the minimal value of the given numbers.
     *  @param values Numbers  to be evaluated.
     *  @returns The reduced number.
     */
    function last(...values) {
        return values[values.length - 1];
    }
    ReduceFunction.last = last;
    /**
     * Returns the reduce function that corresponds to the given {@link ReduceFunctionType}.
     * @param type The reduce function kind.
     * @returns The corresponding reduce function.
     */
    function get(type) {
        return ReduceFunction[type];
    }
    ReduceFunction.get = get;
})(ReduceFunction = exports.ReduceFunction || (exports.ReduceFunction = {}));
var ResizeElementsAction;
(function (ResizeElementsAction) {
    ResizeElementsAction.KIND = 'resizeElementAction';
    function is(object) {
        return (_glsp_sprotty_1.Action.hasKind(object, ResizeElementsAction.KIND) &&
            (0, _glsp_sprotty_1.hasArrayProp)(object, 'elementIds') &&
            (0, _glsp_sprotty_1.hasNumberProp)(object, 'dimension') &&
            (0, _glsp_sprotty_1.hasStringProp)(object, 'reduceFunction'));
    }
    ResizeElementsAction.is = is;
    function create(options) {
        return Object.assign({ kind: ResizeElementsAction.KIND, dimension: ResizeDimension.Width, elementIds: [] }, options);
    }
    ResizeElementsAction.create = create;
})(ResizeElementsAction = exports.ResizeElementsAction || (exports.ResizeElementsAction = {}));
let LayoutElementsActionHandler = class LayoutElementsActionHandler {
    getSelectedElements(selection) {
        const index = this.selectionService.getModelRoot().index;
        const selectedElements = selection.elementIds.length > 0 ? selection.elementIds : this.selectionService.getSelectedElementIDs();
        return (0, smodel_util_1.getElements)(index, selectedElements, this.isActionElement);
    }
    dispatchAction(action) {
        this.actionDispatcher.dispatch(action);
    }
    dispatchActions(actions) {
        this.actionDispatcher.dispatchAll(actions);
    }
};
__decorate([
    (0, inversify_1.inject)(_glsp_sprotty_1.TYPES.IActionDispatcher),
    __metadata("design:type", Object)
], LayoutElementsActionHandler.prototype, "actionDispatcher", void 0);
__decorate([
    (0, inversify_1.inject)(_glsp_sprotty_1.TYPES.SelectionService),
    __metadata("design:type", selection_service_1.SelectionService)
], LayoutElementsActionHandler.prototype, "selectionService", void 0);
__decorate([
    (0, inversify_1.inject)(_glsp_sprotty_1.TYPES.IMovementRestrictor),
    (0, inversify_1.optional)(),
    __metadata("design:type", Object)
], LayoutElementsActionHandler.prototype, "movementRestrictor", void 0);
LayoutElementsActionHandler = __decorate([
    (0, inversify_1.injectable)()
], LayoutElementsActionHandler);
exports.LayoutElementsActionHandler = LayoutElementsActionHandler;
let ResizeElementsActionHandler = class ResizeElementsActionHandler extends LayoutElementsActionHandler {
    handle(action) {
        const elements = this.getSelectedElements(action);
        if (elements.length > 1) {
            const reduceFn = ReduceFunction.get(action.reduceFunction);
            switch (action.dimension) {
                case ResizeDimension.Width:
                    return this.resizeWidth(elements, reduceFn);
                case ResizeDimension.Height:
                    return this.resizeHeight(elements, reduceFn);
                case ResizeDimension.Width_And_Height:
                    return this.resizeWidthAndHeight(elements, reduceFn);
            }
        }
    }
    resizeWidth(elements, reduceFn) {
        const targetWidth = reduceFn(...elements.map(element => element.bounds.width));
        this.dispatchResizeActions(elements, (element, bounds) => {
            // resize around center (horizontal)
            const halfDiffWidth = 0.5 * (targetWidth - element.bounds.width);
            bounds.newPosition.x = element.bounds.x - halfDiffWidth;
            bounds.newSize.width = targetWidth;
        });
    }
    resizeHeight(elements, reduceFn) {
        const targetHeight = reduceFn(...elements.map(element => element.bounds.height));
        this.dispatchResizeActions(elements, (element, bounds) => {
            // resize around middle (vertical)
            const halfDiffHeight = 0.5 * (targetHeight - element.bounds.height);
            bounds.newPosition.y = element.bounds.y - halfDiffHeight;
            bounds.newSize.height = targetHeight;
        });
    }
    resizeWidthAndHeight(elements, reduceFn) {
        const targetWidth = reduceFn(...elements.map(element => element.bounds.width));
        const targetHeight = reduceFn(...elements.map(element => element.bounds.height));
        this.dispatchResizeActions(elements, (element, bounds) => {
            // resize around center and middle (horizontal & vertical)
            const halfDiffWidth = 0.5 * (targetWidth - element.bounds.width);
            const halfDiffHeight = 0.5 * (targetHeight - element.bounds.height);
            bounds.newPosition = { x: element.bounds.x - halfDiffWidth, y: element.bounds.y - halfDiffHeight };
            bounds.newSize = { width: targetWidth, height: targetHeight };
        });
    }
    dispatchResizeActions(elements, change) {
        const elementAndBounds = []; // client- and server-side resize
        elements.forEach(element => {
            const elementChange = this.createElementAndBounds(element, change);
            if (elementChange) {
                // simply skip invalid changes
                elementAndBounds.push(elementChange);
            }
        });
        this.dispatchActions([_glsp_sprotty_1.SetBoundsAction.create(elementAndBounds), _glsp_sprotty_1.ChangeBoundsOperation.create(elementAndBounds)]);
    }
    createElementAndBounds(element, change) {
        const bounds = {
            elementId: element.id,
            newPosition: {
                x: element.bounds.x,
                y: element.bounds.y
            },
            newSize: {
                width: element.bounds.width,
                height: element.bounds.height
            }
        };
        change(element, bounds);
        return (0, layout_utils_1.toValidElementAndBounds)(element, bounds, this.movementRestrictor);
    }
    isActionElement(element) {
        return (0, model_1.isResizable)(element);
    }
};
ResizeElementsActionHandler = __decorate([
    (0, inversify_1.injectable)()
], ResizeElementsActionHandler);
exports.ResizeElementsActionHandler = ResizeElementsActionHandler;
var Alignment;
(function (Alignment) {
    Alignment[Alignment["Left"] = 0] = "Left";
    Alignment[Alignment["Center"] = 1] = "Center";
    Alignment[Alignment["Right"] = 2] = "Right";
    Alignment[Alignment["Top"] = 3] = "Top";
    Alignment[Alignment["Middle"] = 4] = "Middle";
    Alignment[Alignment["Bottom"] = 5] = "Bottom";
})(Alignment = exports.Alignment || (exports.Alignment = {}));
var SelectFunction;
(function (SelectFunction) {
    /**
     * Select all elements from the given set of elements.
     * @param elements The set of elements.
     * @returns All elements.
     */
    function all(elements) {
        return elements;
    }
    SelectFunction.all = all;
    /**
     * Select the first element from a given set of elements.
     * @param elements The elements.
     * @returns An array containing the first element of the given elements.
     */
    function first(elements) {
        return [elements[0]];
    }
    SelectFunction.first = first;
    /**
     * Select the last element from a given set of elements.
     * @param elements The elements.
     * @returns An array containing the last element of the given elements.
     */
    function last(elements) {
        return [elements[elements.length - 1]];
    }
    SelectFunction.last = last;
    /**
     * Returns the select function that corresponds to the given {@link SelectFunctionType}.
     * @param type The select function type.
     * @returns The corresponding select function.
     */
    function get(kind) {
        return SelectFunction[kind];
    }
    SelectFunction.get = get;
})(SelectFunction = exports.SelectFunction || (exports.SelectFunction = {}));
var AlignElementsAction;
(function (AlignElementsAction) {
    AlignElementsAction.KIND = 'alignElements';
    function is(object) {
        return (_glsp_sprotty_1.Action.hasKind(object, AlignElementsAction.KIND) &&
            (0, _glsp_sprotty_1.hasArrayProp)(object, 'elementIds') &&
            (0, _glsp_sprotty_1.hasNumberProp)(object, 'alignment') &&
            (0, _glsp_sprotty_1.hasStringProp)(object, 'selectFunction'));
    }
    AlignElementsAction.is = is;
    function create(options = {}) {
        return Object.assign({ kind: AlignElementsAction.KIND, elementIds: [], alignment: Alignment.Left, selectFunction: 'all' }, options);
    }
    AlignElementsAction.create = create;
})(AlignElementsAction = exports.AlignElementsAction || (exports.AlignElementsAction = {}));
let AlignElementsActionHandler = class AlignElementsActionHandler extends LayoutElementsActionHandler {
    handle(action) {
        const elements = this.getSelectedElements(action);
        const selectFn = SelectFunction.get(action.selectFunction);
        const calculatedElements = selectFn(elements);
        if (elements.length > 1) {
            switch (action.alignment) {
                case Alignment.Left:
                    return this.alignLeft(calculatedElements);
                case Alignment.Center:
                    return this.alignCenter(calculatedElements);
                case Alignment.Right:
                    return this.alignRight(calculatedElements);
                case Alignment.Top:
                    return this.alignTop(calculatedElements);
                case Alignment.Middle:
                    return this.alignMiddle(calculatedElements);
                case Alignment.Bottom:
                    return this.alignBottom(calculatedElements);
            }
        }
    }
    alignLeft(elements) {
        const minX = elements.map(element => element.bounds.x).reduce((a, b) => Math.min(a, b));
        this.dispatchAlignActions(elements, (_, move) => (move.toPosition.x = minX));
    }
    alignCenter(elements) {
        const minX = elements.map(element => element.bounds.x).reduce((a, b) => Math.min(a, b));
        const maxX = elements.map(element => element.bounds.x + element.bounds.width).reduce((a, b) => Math.max(a, b));
        const diffX = maxX - minX;
        const centerX = minX + 0.5 * diffX;
        this.dispatchAlignActions(elements, (element, move) => (move.toPosition.x = centerX - 0.5 * element.bounds.width));
    }
    alignRight(elements) {
        const maxX = elements.map(element => element.bounds.x + element.bounds.width).reduce((a, b) => Math.max(a, b));
        this.dispatchAlignActions(elements, (element, move) => (move.toPosition.x = maxX - element.bounds.width));
    }
    alignTop(elements) {
        const minY = elements.map(element => element.bounds.y).reduce((a, b) => Math.min(a, b));
        this.dispatchAlignActions(elements, (_, move) => (move.toPosition.y = minY));
    }
    alignMiddle(elements) {
        const minY = elements.map(element => element.bounds.y).reduce((a, b) => Math.min(a, b));
        const maxY = elements.map(element => element.bounds.y + element.bounds.height).reduce((a, b) => Math.max(a, b));
        const diffY = maxY - minY;
        const middleY = minY + 0.5 * diffY;
        this.dispatchAlignActions(elements, (element, move) => (move.toPosition.y = middleY - 0.5 * element.bounds.height));
    }
    alignBottom(elements) {
        const maxY = elements.map(element => element.bounds.y + element.bounds.height).reduce((a, b) => Math.max(a, b));
        this.dispatchAlignActions(elements, (element, move) => (move.toPosition.y = maxY - element.bounds.height));
    }
    dispatchAlignActions(elements, change) {
        const moves = []; // client-side move
        const elementAndBounds = []; // server-side move
        elements.forEach(element => {
            const move = this.createElementMove(element, change);
            if (move) {
                // simply skip invalid changes
                moves.push(move);
                const elementAndBound = this.createElementAndBounds(element, move);
                elementAndBounds.push(elementAndBound);
            }
        });
        this.dispatchActions([_glsp_sprotty_1.MoveAction.create(moves), _glsp_sprotty_1.ChangeBoundsOperation.create(elementAndBounds)]);
    }
    createElementMove(element, change) {
        const move = {
            elementId: element.id,
            fromPosition: {
                x: element.bounds.x,
                y: element.bounds.y
            },
            toPosition: {
                x: element.bounds.x,
                y: element.bounds.y
            }
        };
        change(element, move);
        return (0, layout_utils_1.toValidElementMove)(element, move, this.movementRestrictor);
    }
    createElementAndBounds(element, move) {
        return {
            elementId: element.id,
            newPosition: {
                x: move.toPosition.x,
                y: move.toPosition.y
            },
            newSize: {
                width: element.bounds.width,
                height: element.bounds.height
            }
        };
    }
    isActionElement(element) {
        return (0, model_1.isBoundsAwareMoveable)(element);
    }
};
AlignElementsActionHandler = __decorate([
    (0, inversify_1.injectable)()
], AlignElementsActionHandler);
exports.AlignElementsActionHandler = AlignElementsActionHandler;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/features/mouse-tool/di.config.js":
/*!************************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/features/mouse-tool/di.config.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
/********************************************************************************
 * Copyright (c) 2019-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const _glsp_sprotty_1 = __webpack_require__(/*! ../../glsp-sprotty/index */ "../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/index.js");
const mouse_tool_1 = __webpack_require__(/*! ./mouse-tool */ "../../node_modules/@eclipse-glsp/client/lib/features/mouse-tool/mouse-tool.js");
const glspMouseToolModule = new inversify_1.ContainerModule((bind, _unbind, _isBound, rebind) => {
    bind(mouse_tool_1.RankingMouseTool).toSelf().inSingletonScope();
    bind(_glsp_sprotty_1.TYPES.MouseTool).toService(mouse_tool_1.RankingMouseTool);
    rebind(_glsp_sprotty_1.MouseTool).toService(mouse_tool_1.RankingMouseTool);
});
exports["default"] = glspMouseToolModule;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/features/mouse-tool/mouse-tool.js":
/*!*************************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/features/mouse-tool/mouse-tool.js ***!
  \*************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.RankingMouseTool = void 0;
/********************************************************************************
 * Copyright (c) 2019-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const _glsp_sprotty_1 = __webpack_require__(/*! ../../glsp-sprotty/index */ "../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/index.js");
const model_1 = __webpack_require__(/*! ../rank/model */ "../../node_modules/@eclipse-glsp/client/lib/features/rank/model.js");
let RankingMouseTool = class RankingMouseTool extends _glsp_sprotty_1.MouseTool {
    constructor(mouseListeners = []) {
        super(mouseListeners);
        this.mouseListeners = mouseListeners;
        this.rankedMouseListeners = groupBy(mouseListeners, listener => (0, model_1.getRank)(listener));
    }
    register(mouseListener) {
        super.register(mouseListener);
        this.rankedMouseListeners = groupBy(this.mouseListeners, listener => (0, model_1.getRank)(listener));
    }
    deregister(mouseListener) {
        super.deregister(mouseListener);
        this.rankedMouseListeners = groupBy(this.mouseListeners, listener => (0, model_1.getRank)(listener));
    }
    handleEvent(methodName, model, event) {
        this.focusOnMouseEvent(methodName, model);
        const element = this.getTargetElement(model, event);
        if (!element) {
            return;
        }
        this.notifyListenersByRank(element, methodName, model, event);
    }
    async notifyListenersByRank(element, methodName, model, event) {
        for (const rank of this.rankedMouseListeners) {
            await this.dispatchActions(rank[1], methodName, element, event);
        }
    }
    async dispatchActions(mouseListeners, methodName, element, event) {
        const actions = mouseListeners.map(listener => listener[methodName](element, event)).reduce((a, b) => a.concat(b));
        if (actions.length > 0) {
            event.preventDefault();
            for (const actionOrPromise of actions) {
                if (_glsp_sprotty_1.Action.is(actionOrPromise)) {
                    await this.actionDispatcher.dispatch(actionOrPromise);
                }
                else {
                    actionOrPromise.then((action) => {
                        this.actionDispatcher.dispatch(action);
                    });
                }
            }
        }
    }
};
RankingMouseTool = __decorate([
    (0, inversify_1.injectable)(),
    __param(0, (0, inversify_1.multiInject)(_glsp_sprotty_1.TYPES.MouseListener)),
    __param(0, (0, inversify_1.optional)()),
    __metadata("design:paramtypes", [Array])
], RankingMouseTool);
exports.RankingMouseTool = RankingMouseTool;
function groupBy(array, keyFunction) {
    const unsortedMap = array.reduce((result, item) => {
        const key = keyFunction(item);
        if (!result.has(key)) {
            result.set(key, [item]);
        }
        else {
            const entries = result.get(key);
            if (entries) {
                entries.push(item);
            }
        }
        return result;
    }, new Map());
    return new Map([...unsortedMap.entries()].sort());
}


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/features/navigation/di.config.js":
/*!************************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/features/navigation/di.config.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
/********************************************************************************
 * Copyright (c) 2020-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const _glsp_sprotty_1 = __webpack_require__(/*! ../../glsp-sprotty/index */ "../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/index.js");
const navigation_action_handler_1 = __webpack_require__(/*! ./navigation-action-handler */ "../../node_modules/@eclipse-glsp/client/lib/features/navigation/navigation-action-handler.js");
const navigation_target_resolver_1 = __webpack_require__(/*! ./navigation-target-resolver */ "../../node_modules/@eclipse-glsp/client/lib/features/navigation/navigation-target-resolver.js");
const navigationModule = new inversify_1.ContainerModule((bind, _unbind, isBound) => {
    bind(navigation_target_resolver_1.NavigationTargetResolver).toSelf().inSingletonScope();
    bind(navigation_action_handler_1.NavigationActionHandler).toSelf().inSingletonScope();
    (0, _glsp_sprotty_1.configureActionHandler)({ bind, isBound }, navigation_action_handler_1.NavigateAction.KIND, navigation_action_handler_1.NavigationActionHandler);
    (0, _glsp_sprotty_1.configureActionHandler)({ bind, isBound }, _glsp_sprotty_1.NavigateToTargetAction.KIND, navigation_action_handler_1.NavigationActionHandler);
    (0, _glsp_sprotty_1.configureActionHandler)({ bind, isBound }, navigation_action_handler_1.ProcessNavigationArgumentsAction.KIND, navigation_action_handler_1.NavigationActionHandler);
    (0, _glsp_sprotty_1.configureActionHandler)({ bind, isBound }, _glsp_sprotty_1.NavigateToExternalTargetAction.KIND, navigation_action_handler_1.NavigationActionHandler);
});
exports["default"] = navigationModule;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/features/navigation/navigation-action-handler.js":
/*!****************************************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/features/navigation/navigation-action-handler.js ***!
  \****************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.NavigationActionHandler = exports.ProcessNavigationArgumentsAction = exports.NavigateAction = void 0;
/********************************************************************************
 * Copyright (c) 2020-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const _glsp_sprotty_1 = __webpack_require__(/*! ../../glsp-sprotty/index */ "../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/index.js");
const navigation_target_resolver_1 = __webpack_require__(/*! ./navigation-target-resolver */ "../../node_modules/@eclipse-glsp/client/lib/features/navigation/navigation-target-resolver.js");
var NavigateAction;
(function (NavigateAction) {
    NavigateAction.KIND = 'navigate';
    function is(object) {
        return _glsp_sprotty_1.Action.hasKind(object, NavigateAction.KIND) && (0, _glsp_sprotty_1.hasStringProp)(object, 'targetTypeId');
    }
    NavigateAction.is = is;
    function create(targetTypeId, options = {}) {
        return Object.assign({ kind: NavigateAction.KIND, targetTypeId }, options);
    }
    NavigateAction.create = create;
})(NavigateAction = exports.NavigateAction || (exports.NavigateAction = {}));
var ProcessNavigationArgumentsAction;
(function (ProcessNavigationArgumentsAction) {
    ProcessNavigationArgumentsAction.KIND = 'processNavigationArguments';
    function is(object) {
        return _glsp_sprotty_1.Action.hasKind(object, ProcessNavigationArgumentsAction.KIND) && (0, _glsp_sprotty_1.hasObjectProp)(object, 'args');
    }
    ProcessNavigationArgumentsAction.is = is;
    function create(args) {
        return {
            kind: ProcessNavigationArgumentsAction.KIND,
            args
        };
    }
    ProcessNavigationArgumentsAction.create = create;
})(ProcessNavigationArgumentsAction = exports.ProcessNavigationArgumentsAction || (exports.ProcessNavigationArgumentsAction = {}));
/**
 * Default handler for all actions that are related to the navigation.
 *
 * For a `NavigateAction` this handler triggers a `RequestNavigationTargetAction` to obtain the actual
 * navigation targets for the navigation type that is specified in the `NavigateAction`.
 * Once the navigation targets are available, it will trigger a `NavigateToTargetAction` to actually
 * perform the navigation.
 *
 * In other scenarios, clients may also trigger the `NavigateToTargetAction` directly, e.g. when opening
 * the diagram.
 *
 * Depending on the URI and arguments of the navigation target we may encounter three cases:
 *   *(a)* the navigation target already specifies element IDs, in which case this action handler navigates
 *         to the specified elements directly, by the selecting them and centering them in the viewport.
 *   *(b)* the arguments of the navigation targets don't contain element IDs, but other arguments, the
 *         navigation target needs to be resolved into actual element IDs by the `NavigationTargetResolver`.
 *         This can for instance be useful, if the navigation deals with queries or some other more complex
 *         logic that can't be dealt with on the client.
 *  *(c)* the target isn't resolved by the `NavigationTargetResolver`, e.g. because the `uri` doesn't match
 *        the URI of the current diagram. In this case, the navigation request is forwarded by dispatching
 *        a `NavigateToExternalTargetAction`.
 */
let NavigationActionHandler = class NavigationActionHandler {
    constructor() {
        this.notificationTimeout = 5000;
    }
    handle(action) {
        if (NavigateAction.is(action)) {
            this.handleNavigateAction(action);
        }
        else if (_glsp_sprotty_1.NavigateToTargetAction.is(action)) {
            this.handleNavigateToTarget(action);
        }
        else if (ProcessNavigationArgumentsAction.is(action)) {
            this.processNavigationArguments(action.args);
        }
        else if (_glsp_sprotty_1.NavigateToExternalTargetAction.is(action)) {
            this.handleNavigateToExternalTarget(action);
        }
    }
    async handleNavigateAction(action) {
        try {
            const editorContextService = await this.editorContextService();
            const editorContext = editorContextService.get(action.args);
            const response = await this.dispatcher.request(_glsp_sprotty_1.RequestNavigationTargetsAction.create({ targetTypeId: action.targetTypeId, editorContext }));
            if (_glsp_sprotty_1.SetNavigationTargetsAction.is(response) && response.targets && response.targets.length === 1) {
                if (response.targets.length > 1) {
                    this.logger.warn(this, 'Processing of multiple targets is not supported yet. ' + 'Only the first is being processed.', response.targets);
                }
                return this.dispatcher.dispatch(_glsp_sprotty_1.NavigateToTargetAction.create(response.targets[0]));
            }
            this.warnAboutFailedNavigation('No valid navigation target found');
        }
        catch (reason) {
            this.logger.error(this, 'Failed to obtain navigation target', reason, action);
        }
    }
    async handleNavigateToTarget(action) {
        try {
            const resolvedElements = await this.resolveElements(action);
            if (this.containsElementIdsOrArguments(resolvedElements)) {
                this.navigateTo(resolvedElements);
                this.handleResolutionArguments(resolvedElements);
                return;
            }
            else {
                this.navigateToExternal(action.target);
                return;
            }
        }
        catch (reason) {
            this.logger.error(this, 'Failed to navigate', reason, action);
        }
    }
    resolveElements(action) {
        return this.resolver.resolve(action.target);
    }
    containsElementIdsOrArguments(target) {
        return target !== undefined && (this.containsElementIds(target.elementIds) || this.containsArguments(target.args));
    }
    containsElementIds(elementIds) {
        return elementIds !== undefined && elementIds.length > 0;
    }
    containsArguments(args) {
        return args !== undefined && args !== undefined && Object.keys(args).length > 0;
    }
    navigateTo(target) {
        const elementIds = target.elementIds;
        if (!this.containsElementIds(elementIds)) {
            return;
        }
        this.dispatcher.dispatchAll([
            _glsp_sprotty_1.SelectAllAction.create(false),
            _glsp_sprotty_1.SelectAction.create({ selectedElementsIDs: elementIds }),
            _glsp_sprotty_1.CenterAction.create(elementIds)
        ]);
    }
    handleResolutionArguments(target) {
        const args = target.args;
        if (!this.containsArguments(args)) {
            return;
        }
        this.dispatcher.dispatch(ProcessNavigationArgumentsAction.create(args));
    }
    navigateToExternal(target) {
        return this.dispatcher.dispatch(_glsp_sprotty_1.NavigateToExternalTargetAction.create(target));
    }
    processNavigationArguments(args) {
        if (args.info && args.info.toString().length > 0) {
            this.notify('INFO', args.info.toString());
        }
        if (args.warning && args.warning.toString().length > 0) {
            this.notify('WARNING', args.warning.toString());
        }
        if (args.error && args.error.toString().length > 0) {
            this.notify('ERROR', args.error.toString());
        }
    }
    async handleNavigateToExternalTarget(action) {
        const registry = await this.actionHandlerRegistryProvider();
        const handlers = registry.get(_glsp_sprotty_1.NavigateToExternalTargetAction.KIND);
        if (handlers.length === 1) {
            // we are the only handler so we know nobody took care of it
            this.warnAboutFailedNavigation('Could not resolve or navigate to target', action.target);
        }
    }
    warnAboutFailedNavigation(msg, target) {
        const message = `${msg}` + (target ? `: '${target.uri}' (arguments: ${JSON.stringify(target.args)})` : '');
        this.logger.warn(this, msg, target);
        this.notify('WARNING', message);
    }
    notify(severity, message) {
        const timeout = this.notificationTimeout;
        this.dispatcher.dispatchAll([
            _glsp_sprotty_1.ServerStatusAction.create(message, { severity, timeout }),
            _glsp_sprotty_1.ServerMessageAction.create(message, { severity, timeout })
        ]);
    }
};
__decorate([
    (0, inversify_1.inject)(_glsp_sprotty_1.TYPES.ILogger),
    __metadata("design:type", Object)
], NavigationActionHandler.prototype, "logger", void 0);
__decorate([
    (0, inversify_1.inject)(_glsp_sprotty_1.TYPES.IActionDispatcher),
    __metadata("design:type", Object)
], NavigationActionHandler.prototype, "dispatcher", void 0);
__decorate([
    (0, inversify_1.inject)(_glsp_sprotty_1.TYPES.ActionHandlerRegistryProvider),
    __metadata("design:type", Function)
], NavigationActionHandler.prototype, "actionHandlerRegistryProvider", void 0);
__decorate([
    (0, inversify_1.inject)(_glsp_sprotty_1.TYPES.IEditorContextServiceProvider),
    __metadata("design:type", Function)
], NavigationActionHandler.prototype, "editorContextService", void 0);
__decorate([
    (0, inversify_1.inject)(navigation_target_resolver_1.NavigationTargetResolver),
    __metadata("design:type", navigation_target_resolver_1.NavigationTargetResolver)
], NavigationActionHandler.prototype, "resolver", void 0);
NavigationActionHandler = __decorate([
    (0, inversify_1.injectable)()
], NavigationActionHandler);
exports.NavigationActionHandler = NavigationActionHandler;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/features/navigation/navigation-target-resolver.js":
/*!*****************************************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/features/navigation/navigation-target-resolver.js ***!
  \*****************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.NavigationTargetResolver = void 0;
/********************************************************************************
 * Copyright (c) 2020-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const _glsp_sprotty_1 = __webpack_require__(/*! ../../glsp-sprotty/index */ "../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/index.js");
/**
 * Resolves `NavigationTargets` to element ids.
 *
 * If the `NavigationTarget` doesn't have element ids itself, this resolver queries the server via a
 * `ResolveNavigationTargetAction` for element ids.
 */
let NavigationTargetResolver = class NavigationTargetResolver {
    async resolve(navigationTarget) {
        const contextService = await this.editorContextService();
        const sourceUri = await contextService.getSourceUri();
        return this.resolveWithSourceUri(sourceUri, navigationTarget);
    }
    async resolveWithSourceUri(sourceUri, target) {
        const targetUri = decodeURIComponent(target.uri);
        if (sourceUri && sourceUri !== targetUri && `file://${sourceUri}` !== targetUri) {
            // different URI, so we can't resolve it locally
            this.logger.info("Source and Target URI are different. Can't resolve locally.", sourceUri, targetUri);
            return undefined;
        }
        if (_glsp_sprotty_1.NavigationTarget.getElementIds(target).length > 0) {
            return _glsp_sprotty_1.SetResolvedNavigationTargetAction.create(_glsp_sprotty_1.NavigationTarget.getElementIds(target));
        }
        const response = await this.requestResolution(target);
        if (_glsp_sprotty_1.SetResolvedNavigationTargetAction.is(response)) {
            return response;
        }
        return undefined;
    }
    requestResolution(target) {
        return this.dispatcher.request(_glsp_sprotty_1.ResolveNavigationTargetAction.create(target));
    }
};
__decorate([
    (0, inversify_1.inject)(_glsp_sprotty_1.TYPES.IEditorContextServiceProvider),
    __metadata("design:type", Function)
], NavigationTargetResolver.prototype, "editorContextService", void 0);
__decorate([
    (0, inversify_1.inject)(_glsp_sprotty_1.TYPES.IActionDispatcher),
    __metadata("design:type", Object)
], NavigationTargetResolver.prototype, "dispatcher", void 0);
__decorate([
    (0, inversify_1.inject)(_glsp_sprotty_1.TYPES.ILogger),
    __metadata("design:type", Object)
], NavigationTargetResolver.prototype, "logger", void 0);
NavigationTargetResolver = __decorate([
    (0, inversify_1.injectable)()
], NavigationTargetResolver);
exports.NavigationTargetResolver = NavigationTargetResolver;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/features/rank/model.js":
/*!**************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/features/rank/model.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2019-2021 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.getRank = exports.isRanked = exports.DEFAULT_RANK = void 0;
exports.DEFAULT_RANK = 0;
function isRanked(arg) {
    return arg !== undefined && arg.rank !== undefined && typeof arg.rank === 'number';
}
exports.isRanked = isRanked;
function getRank(arg) {
    return isRanked(arg) ? arg.rank : exports.DEFAULT_RANK;
}
exports.getRank = getRank;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/features/reconnect/model.js":
/*!*******************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/features/reconnect/model.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SReconnectHandle = exports.createReconnectHandle = exports.isTargetRoutingHandle = exports.isSourceRoutingHandle = exports.removeReconnectHandles = exports.addReconnectHandles = exports.isReconnectHandle = exports.isReconnectable = exports.reconnectFeature = void 0;
/********************************************************************************
 * Copyright (c) 2019-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const _glsp_sprotty_1 = __webpack_require__(/*! ../../glsp-sprotty/index */ "../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/index.js");
exports.reconnectFeature = Symbol('reconnectFeature');
function isReconnectable(element) {
    return element instanceof _glsp_sprotty_1.SRoutableElement && element.hasFeature(exports.reconnectFeature);
}
exports.isReconnectable = isReconnectable;
const ROUTING_HANDLE_SOURCE_INDEX = -2;
function isReconnectHandle(element) {
    return element !== undefined && element instanceof SReconnectHandle;
}
exports.isReconnectHandle = isReconnectHandle;
function addReconnectHandles(element) {
    removeReconnectHandles(element);
    createReconnectHandle(element, 'source', ROUTING_HANDLE_SOURCE_INDEX);
    createReconnectHandle(element, 'target', element.routingPoints.length);
}
exports.addReconnectHandles = addReconnectHandles;
function removeReconnectHandles(element) {
    element.removeAll(child => child instanceof SReconnectHandle);
}
exports.removeReconnectHandles = removeReconnectHandles;
function isSourceRoutingHandle(edge, routingHandle) {
    return routingHandle.pointIndex === ROUTING_HANDLE_SOURCE_INDEX;
}
exports.isSourceRoutingHandle = isSourceRoutingHandle;
function isTargetRoutingHandle(edge, routingHandle) {
    return routingHandle.pointIndex === edge.routingPoints.length;
}
exports.isTargetRoutingHandle = isTargetRoutingHandle;
function createReconnectHandle(edge, kind, routingPointIndex) {
    const handle = new SReconnectHandle();
    handle.kind = kind;
    handle.pointIndex = routingPointIndex;
    handle.type = 'routing-point';
    if (kind === 'target' && edge.id === _glsp_sprotty_1.edgeInProgressID) {
        handle.id = _glsp_sprotty_1.edgeInProgressTargetHandleID;
    }
    edge.add(handle);
    return handle;
}
exports.createReconnectHandle = createReconnectHandle;
class SReconnectHandle extends _glsp_sprotty_1.SRoutingHandle {
    hasFeature(feature) {
        return feature !== _glsp_sprotty_1.selectFeature && super.hasFeature(feature);
    }
}
exports.SReconnectHandle = SReconnectHandle;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/features/save/di.config.js":
/*!******************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/features/save/di.config.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
/********************************************************************************
 * Copyright (c) 2019-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const _glsp_sprotty_1 = __webpack_require__(/*! ../../glsp-sprotty/index */ "../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/index.js");
const save_keylistener_1 = __webpack_require__(/*! ./save-keylistener */ "../../node_modules/@eclipse-glsp/client/lib/features/save/save-keylistener.js");
/**
 * This module is not required the diagram is deployed in Theia with the `GLSPDiagramWidget`
 * but only intended to be used in a standalone deployment of GLSP.
 */
const saveModule = new inversify_1.ContainerModule(bind => {
    (0, _glsp_sprotty_1.bindAsService)(bind, _glsp_sprotty_1.TYPES.KeyListener, save_keylistener_1.SaveModelKeyboardListener);
});
exports["default"] = saveModule;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/features/save/model.js":
/*!**************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/features/save/model.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isSaveable = exports.saveFeature = void 0;
exports.saveFeature = Symbol.for('saveFeature');
function isSaveable(element) {
    return element.hasFeature(exports.saveFeature);
}
exports.isSaveable = isSaveable;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/features/save/save-keylistener.js":
/*!*************************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/features/save/save-keylistener.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SaveModelKeyboardListener = void 0;
/********************************************************************************
 * Copyright (c) 2019-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const _glsp_sprotty_1 = __webpack_require__(/*! ../../glsp-sprotty/index */ "../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/index.js");
class SaveModelKeyboardListener extends _glsp_sprotty_1.KeyListener {
    keyDown(_element, event) {
        if ((0, _glsp_sprotty_1.matchesKeystroke)(event, 'KeyS', 'ctrlCmd')) {
            return [_glsp_sprotty_1.SaveModelAction.create()];
        }
        return [];
    }
}
exports.SaveModelKeyboardListener = SaveModelKeyboardListener;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/features/select/di.config.js":
/*!********************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/features/select/di.config.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
/********************************************************************************
 * Copyright (c) 2019-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const _glsp_sprotty_1 = __webpack_require__(/*! ../../glsp-sprotty/index */ "../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/index.js");
const select_feedback_action_1 = __webpack_require__(/*! ./select-feedback-action */ "../../node_modules/@eclipse-glsp/client/lib/features/select/select-feedback-action.js");
const select_mouse_listener_1 = __webpack_require__(/*! ./select-mouse-listener */ "../../node_modules/@eclipse-glsp/client/lib/features/select/select-mouse-listener.js");
const selection_service_1 = __webpack_require__(/*! ./selection-service */ "../../node_modules/@eclipse-glsp/client/lib/features/select/selection-service.js");
const glspSelectModule = new inversify_1.ContainerModule((bind, _unbind, isBound) => {
    const context = { bind, isBound };
    (0, _glsp_sprotty_1.bindAsService)(context, _glsp_sprotty_1.TYPES.SelectionService, selection_service_1.SelectionService);
    (0, _glsp_sprotty_1.configureCommand)(context, selection_service_1.SelectCommand);
    (0, _glsp_sprotty_1.configureCommand)(context, selection_service_1.SelectAllCommand);
    (0, _glsp_sprotty_1.configureCommand)(context, select_feedback_action_1.SelectFeedbackCommand);
    (0, _glsp_sprotty_1.bindAsService)(context, _glsp_sprotty_1.TYPES.MouseListener, select_mouse_listener_1.RankedSelectMouseListener);
    bind(_glsp_sprotty_1.TYPES.SModelRootListener).toService(selection_service_1.SelectionService);
});
exports["default"] = glspSelectModule;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/features/select/select-feedback-action.js":
/*!*********************************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/features/select/select-feedback-action.js ***!
  \*********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SelectFeedbackCommand = exports.SelectFeedbackAction = void 0;
/********************************************************************************
 * Copyright (c) 2019-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const _glsp_sprotty_1 = __webpack_require__(/*! ../../glsp-sprotty/index */ "../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/index.js");
var SelectFeedbackAction;
(function (SelectFeedbackAction) {
    SelectFeedbackAction.KIND = 'selectFeedback';
    function is(object) {
        return _glsp_sprotty_1.Action.hasKind(object, SelectFeedbackAction.KIND) && (0, _glsp_sprotty_1.hasArrayProp)(object, 'selectedElementsIDs') && (0, _glsp_sprotty_1.hasArrayProp)(object, 'deselectedElementsIDs');
    }
    SelectFeedbackAction.is = is;
    function create(options) {
        return Object.assign(Object.assign({}, _glsp_sprotty_1.SelectAction.create(options)), { kind: SelectFeedbackAction.KIND });
    }
    SelectFeedbackAction.create = create;
    function addSelection(selectedElementsIDs) {
        return Object.assign(Object.assign({}, _glsp_sprotty_1.SelectAction.addSelection(selectedElementsIDs)), { kind: SelectFeedbackAction.KIND });
    }
    SelectFeedbackAction.addSelection = addSelection;
    function removeSelection(deselectedElementsIDs) {
        return Object.assign(Object.assign({}, _glsp_sprotty_1.SelectAction.removeSelection(deselectedElementsIDs)), { kind: SelectFeedbackAction.KIND });
    }
    SelectFeedbackAction.removeSelection = removeSelection;
    function setSelection(selectedElementsIDs) {
        return Object.assign(Object.assign({}, _glsp_sprotty_1.SelectAction.setSelection(selectedElementsIDs)), { kind: SelectFeedbackAction.KIND });
    }
    SelectFeedbackAction.setSelection = setSelection;
})(SelectFeedbackAction = exports.SelectFeedbackAction || (exports.SelectFeedbackAction = {}));
let SelectFeedbackCommand = class SelectFeedbackCommand extends _glsp_sprotty_1.Command {
    constructor(action) {
        super();
        this.action = action;
        this.sprottySelectCommand = new _glsp_sprotty_1.SprottySelectCommand(Object.assign(Object.assign({}, action), { kind: _glsp_sprotty_1.SelectAction.KIND }));
    }
    execute(context) {
        return this.sprottySelectCommand.execute(context);
    }
    undo(context) {
        return this.sprottySelectCommand.undo(context);
    }
    redo(context) {
        return this.sprottySelectCommand.redo(context);
    }
};
SelectFeedbackCommand.KIND = SelectFeedbackAction.KIND;
SelectFeedbackCommand = __decorate([
    (0, inversify_1.injectable)(),
    __param(0, (0, inversify_1.inject)(_glsp_sprotty_1.TYPES.Action)),
    __metadata("design:paramtypes", [Object])
], SelectFeedbackCommand);
exports.SelectFeedbackCommand = SelectFeedbackCommand;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/features/select/select-mouse-listener.js":
/*!********************************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/features/select/select-mouse-listener.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.RankedSelectMouseListener = void 0;
/********************************************************************************
 * Copyright (c) 2019-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const _glsp_sprotty_1 = __webpack_require__(/*! ../../glsp-sprotty/index */ "../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/index.js");
const model_1 = __webpack_require__(/*! ../rank/model */ "../../node_modules/@eclipse-glsp/client/lib/features/rank/model.js");
/**
 * Ranked select mouse listener that is executed before default mouse listeners when using the RankedMouseTool.
 * This ensures that default mouse listeners are working on a model that has selection changes already applied.
 */
class RankedSelectMouseListener extends _glsp_sprotty_1.SelectMouseListener {
    constructor() {
        super(...arguments);
        this.rank = model_1.DEFAULT_RANK - 1; /* we want to be executed before all default mouse listeners */
    }
    mouseDown(target, event) {
        const result = [];
        if (this.buttonHandlerRegistry !== undefined && target instanceof _glsp_sprotty_1.SButton && target.enabled) {
            const buttonHandler = this.buttonHandlerRegistry.get(target.type);
            if (buttonHandler !== undefined) {
                return buttonHandler.buttonPressed(target);
            }
        }
        const selectableTarget = (0, _glsp_sprotty_1.findParentByFeature)(target, _glsp_sprotty_1.isSelectable);
        if (selectableTarget !== undefined || target instanceof _glsp_sprotty_1.SModelRoot) {
            this.hasDragged = false;
            let deselect = [];
            // multi-selection?
            if (!(0, _glsp_sprotty_1.isCtrlOrCmd)(event)) {
                deselect = (0, _glsp_sprotty_1.toArray)(target.root.index
                    .all()
                    .filter(element => (0, _glsp_sprotty_1.isSelectable)(element) &&
                    element.selected &&
                    !(selectableTarget instanceof _glsp_sprotty_1.SRoutingHandle && element === selectableTarget.parent)));
            }
            if (selectableTarget !== undefined) {
                if (!selectableTarget.selected) {
                    this.wasSelected = false;
                    result.push(_glsp_sprotty_1.SelectAction.create({
                        selectedElementsIDs: [selectableTarget.id],
                        deselectedElementsIDs: deselect.map(e => e.id)
                    }));
                    result.push(_glsp_sprotty_1.BringToFrontAction.create([selectableTarget.id]));
                    const routableDeselect = deselect.filter(e => e instanceof _glsp_sprotty_1.SRoutableElement).map(e => e.id);
                    if (selectableTarget instanceof _glsp_sprotty_1.SRoutableElement) {
                        result.push(_glsp_sprotty_1.SwitchEditModeAction.create({
                            elementsToActivate: [selectableTarget.id],
                            elementsToDeactivate: routableDeselect
                        }));
                    }
                    else if (routableDeselect.length > 0) {
                        result.push(_glsp_sprotty_1.SwitchEditModeAction.create({ elementsToDeactivate: routableDeselect }));
                    }
                }
                else if ((0, _glsp_sprotty_1.isCtrlOrCmd)(event)) {
                    this.wasSelected = false;
                    result.push(_glsp_sprotty_1.SelectAction.create({ deselectedElementsIDs: [selectableTarget.id] }));
                    if (selectableTarget instanceof _glsp_sprotty_1.SRoutableElement) {
                        result.push(_glsp_sprotty_1.SwitchEditModeAction.create({ elementsToDeactivate: [selectableTarget.id] }));
                    }
                }
                else {
                    this.wasSelected = true;
                }
            }
            else {
                result.push(_glsp_sprotty_1.SelectAction.create({ deselectedElementsIDs: deselect.map(e => e.id) }));
                const routableDeselect = deselect.filter(e => e instanceof _glsp_sprotty_1.SRoutableElement).map(e => e.id);
                if (routableDeselect.length > 0) {
                    result.push(_glsp_sprotty_1.SwitchEditModeAction.create({ elementsToDeactivate: routableDeselect }));
                }
            }
        }
        return result;
    }
}
exports.RankedSelectMouseListener = RankedSelectMouseListener;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/features/select/selection-service.js":
/*!****************************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/features/select/selection-service.js ***!
  \****************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SelectAllCommand = exports.SelectCommand = exports.SelectionService = void 0;
/********************************************************************************
 * Copyright (c) 2019-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const _glsp_sprotty_1 = __webpack_require__(/*! ../../glsp-sprotty/index */ "../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/index.js");
const smodel_util_1 = __webpack_require__(/*! ../../utils/smodel-util */ "../../node_modules/@eclipse-glsp/client/lib/utils/smodel-util.js");
const select_feedback_action_1 = __webpack_require__(/*! ./select-feedback-action */ "../../node_modules/@eclipse-glsp/client/lib/features/select/select-feedback-action.js");
let SelectionService = class SelectionService {
    constructor(selectionListeners = []) {
        this.selectionListeners = selectionListeners;
        this.selectedElementIDs = new Set();
    }
    register(selectionListener) {
        (0, _glsp_sprotty_1.distinctAdd)(this.selectionListeners, selectionListener);
    }
    deregister(selectionListener) {
        (0, _glsp_sprotty_1.remove)(this.selectionListeners, selectionListener);
    }
    modelRootChanged(root) {
        this.updateSelection(root, [], []);
    }
    updateSelection(root, select, deselect) {
        if (root === undefined && select.length === 0 && deselect.length === 0) {
            return;
        }
        const prevRoot = this.root;
        const prevSelectedElementIDs = new Set(this.selectedElementIDs);
        // update root
        this.root = root;
        // update selected element IDs and collect deselected elements
        // - select all elements that are not deselected at the same time (no-op)
        // - deselect all elements that are not selected at the same time (no-op) but was selected
        const toSelect = [...select].filter(selectId => deselect.indexOf(selectId) === -1);
        const toDeselect = [...deselect].filter(deselectId => select.indexOf(deselectId) === -1 && this.selectedElementIDs.has(deselectId));
        for (const id of toDeselect) {
            this.selectedElementIDs.delete(id);
        }
        for (const id of toSelect) {
            this.selectedElementIDs.add(id);
        }
        const deselectedElementIDs = new Set(toDeselect);
        // see if selected elements still exist in the updated root
        for (const id of this.selectedElementIDs) {
            const element = root.index.getById(id);
            if (element === undefined) {
                this.selectedElementIDs.delete(id);
                if (prevRoot !== undefined && prevRoot.index.getById(id)) {
                    deselectedElementIDs.add(id);
                }
            }
        }
        // only send out changes if there actually are changes, i.e., the root or the selected elements changed
        const selectionChanged = prevSelectedElementIDs.size !== this.selectedElementIDs.size ||
            ![...prevSelectedElementIDs].every(value => this.selectedElementIDs.has(value));
        if (selectionChanged) {
            // aggregate to feedback action handling all elements as only the last feedback is restored
            this.dispatchFeedback([
                select_feedback_action_1.SelectFeedbackAction.create({
                    selectedElementsIDs: [...this.selectedElementIDs],
                    deselectedElementsIDs: [...deselectedElementIDs]
                })
            ]);
        }
        const rootChanged = prevRoot !== root;
        if (rootChanged || selectionChanged) {
            // notify listeners after the feedback action
            this.notifyListeners(this.root, this.selectedElementIDs);
        }
    }
    dispatchFeedback(actions) {
        this.feedbackDispatcher.registerFeedback(this, actions);
    }
    notifyListeners(root, selectedElementIDs) {
        this.selectionListeners.forEach(listener => listener.selectionChanged(root, Array.from(selectedElementIDs)));
    }
    getModelRoot() {
        return this.root;
    }
    getSelectedElements() {
        return (0, smodel_util_1.getElements)(this.root.index, Array.from(this.selectedElementIDs), _glsp_sprotty_1.isSelectable);
    }
    /**
     * QUERY METHODS
     */
    getSelectedElementIDs() {
        return [...this.selectedElementIDs];
    }
    hasSelectedElements() {
        return this.selectedElementIDs.size > 0;
    }
    isSingleSelection() {
        return this.selectedElementIDs.size === 1;
    }
    isMultiSelection() {
        return this.selectedElementIDs.size > 1;
    }
};
__decorate([
    (0, inversify_1.inject)(_glsp_sprotty_1.TYPES.IFeedbackActionDispatcher),
    __metadata("design:type", Object)
], SelectionService.prototype, "feedbackDispatcher", void 0);
__decorate([
    (0, inversify_1.inject)(_glsp_sprotty_1.TYPES.ILogger),
    __metadata("design:type", Object)
], SelectionService.prototype, "logger", void 0);
SelectionService = __decorate([
    (0, inversify_1.injectable)(),
    __param(0, (0, inversify_1.multiInject)(_glsp_sprotty_1.TYPES.SelectionListener)),
    __param(0, (0, inversify_1.optional)()),
    __metadata("design:paramtypes", [Array])
], SelectionService);
exports.SelectionService = SelectionService;
/**
 * Handles a {@link SelectAction} and propagates the new selection to the {@link SelectionService}.
 * Other tools might be selection-sensitive which means {@link SelectAction}s must be processed as fast as possible.
 * Handling the action with a command ensures that the action is processed before the next render tick.
 */
let SelectCommand = class SelectCommand extends _glsp_sprotty_1.Command {
    constructor(action, selectionService) {
        super();
        this.action = action;
        this.selectionService = selectionService;
        this.selected = [];
        this.deselected = [];
    }
    execute(context) {
        const model = context.root;
        const selectionGuard = (element) => element instanceof _glsp_sprotty_1.SChildElement && (0, _glsp_sprotty_1.isSelectable)(element);
        const selectedElements = (0, smodel_util_1.getElements)(model.index, this.action.selectedElementsIDs, selectionGuard);
        const deselectedElements = this.action.deselectAll
            ? this.selectionService.getSelectedElements()
            : (0, smodel_util_1.getElements)(model.index, this.action.deselectedElementsIDs, selectionGuard);
        this.selectionService.updateSelection(model, (0, _glsp_sprotty_1.pluck)(selectedElements, 'id'), (0, _glsp_sprotty_1.pluck)(deselectedElements, 'id'));
        return model;
    }
    // Basically no-op since client-side undo is not supported in GLSP.
    undo(context) {
        return context.root;
    }
    // Basically no-op since client-side redo is not supported in GLSP.
    redo(context) {
        return context.root;
    }
};
SelectCommand.KIND = _glsp_sprotty_1.SprottySelectCommand.KIND;
SelectCommand = __decorate([
    (0, inversify_1.injectable)(),
    __param(0, (0, inversify_1.inject)(_glsp_sprotty_1.TYPES.Action)),
    __param(1, (0, inversify_1.inject)(_glsp_sprotty_1.TYPES.SelectionService)),
    __metadata("design:paramtypes", [Object, SelectionService])
], SelectCommand);
exports.SelectCommand = SelectCommand;
/**
 * Handles a {@link SelectAllAction} and propagates the new selection to the {@link SelectionService}.
 * Other tools might be selection-sensitive which means {@link SelectionAllAction}s must be processed as fast as possible.
 * Handling the action with a command ensures that the action is processed before the next render tick.
 */
let SelectAllCommand = class SelectAllCommand extends _glsp_sprotty_1.Command {
    constructor(action, selectionService) {
        super();
        this.action = action;
        this.selectionService = selectionService;
        this.previousSelection = new Map();
    }
    execute(context) {
        const model = context.root;
        const selectionGuard = (element) => element instanceof _glsp_sprotty_1.SChildElement && (0, _glsp_sprotty_1.isSelectable)(element);
        const selectables = (0, smodel_util_1.getMatchingElements)(model.index, selectionGuard);
        const selectableIds = (0, _glsp_sprotty_1.pluck)(selectables, 'id');
        if (this.action.select) {
            this.selectionService.updateSelection(model, selectableIds, []);
        }
        else {
            this.selectionService.updateSelection(model, [], selectableIds);
        }
        return model;
    }
    // Basically no-op since client-side undo is not supported in GLSP.
    undo(context) {
        return context.root;
    }
    // Basically no-op since client-side redo is not supported in GLSP.
    redo(context) {
        return context.root;
    }
};
SelectAllCommand.KIND = _glsp_sprotty_1.SprottySelectAllCommand.KIND;
SelectAllCommand = __decorate([
    (0, inversify_1.injectable)(),
    __param(0, (0, inversify_1.inject)(_glsp_sprotty_1.TYPES.Action)),
    __param(1, (0, inversify_1.inject)(_glsp_sprotty_1.TYPES.SelectionService)),
    __metadata("design:paramtypes", [Object, SelectionService])
], SelectAllCommand);
exports.SelectAllCommand = SelectAllCommand;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/features/source-model-watcher/di.config.js":
/*!**********************************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/features/source-model-watcher/di.config.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
/********************************************************************************
 * Copyright (c) 2019-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const _glsp_sprotty_1 = __webpack_require__(/*! ../../glsp-sprotty/index */ "../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/index.js");
const source_model_changed_action_handler_1 = __webpack_require__(/*! ./source-model-changed-action-handler */ "../../node_modules/@eclipse-glsp/client/lib/features/source-model-watcher/source-model-changed-action-handler.js");
const sourceModelWatcherModule = new inversify_1.ContainerModule((bind, _unbind, isBound) => {
    (0, _glsp_sprotty_1.configureActionHandler)({ bind, isBound }, _glsp_sprotty_1.SourceModelChangedAction.KIND, source_model_changed_action_handler_1.SourceModelChangedActionHandler);
});
exports["default"] = sourceModelWatcherModule;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/features/source-model-watcher/source-model-changed-action-handler.js":
/*!************************************************************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/features/source-model-watcher/source-model-changed-action-handler.js ***!
  \************************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SourceModelChangedActionHandler = exports.ExternalSourceModelChangedHandler = void 0;
/********************************************************************************
 * Copyright (c) 2020-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const _glsp_sprotty_1 = __webpack_require__(/*! ../../glsp-sprotty/index */ "../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/index.js");
/**
 * An external handler of the source model change event.
 *
 * This allows external applications to react specifically to this event, e.g. by bringing up the diagram,
 * check their dirty state, show a dialog, etc.
 */
let ExternalSourceModelChangedHandler = class ExternalSourceModelChangedHandler {
};
ExternalSourceModelChangedHandler = __decorate([
    (0, inversify_1.injectable)()
], ExternalSourceModelChangedHandler);
exports.ExternalSourceModelChangedHandler = ExternalSourceModelChangedHandler;
let SourceModelChangedActionHandler = class SourceModelChangedActionHandler {
    handle(action) {
        if (_glsp_sprotty_1.SourceModelChangedAction.is(action)) {
            if (this.externalModelSourceChangedHandler) {
                this.externalModelSourceChangedHandler
                    .notifySourceModelChange(action.sourceModelName, this.options)
                    .then(actions => this.dispatcher.dispatchAll(actions));
                return;
            }
            this.showSimpleNotification(action);
        }
    }
    showSimpleNotification(action) {
        const message = `The source model ${action.sourceModelName} has changed. You might want to consider reloading.`;
        const timeout = 0;
        const severity = 'WARNING';
        this.dispatcher.dispatchAll([
            _glsp_sprotty_1.ServerStatusAction.create(message, { severity, timeout }),
            _glsp_sprotty_1.ServerMessageAction.create(message, { severity, timeout })
        ]);
    }
};
__decorate([
    (0, inversify_1.inject)(_glsp_sprotty_1.TYPES.IActionDispatcher),
    __metadata("design:type", Object)
], SourceModelChangedActionHandler.prototype, "dispatcher", void 0);
__decorate([
    (0, inversify_1.inject)(_glsp_sprotty_1.TYPES.ViewerOptions),
    __metadata("design:type", Object)
], SourceModelChangedActionHandler.prototype, "options", void 0);
__decorate([
    (0, inversify_1.inject)(ExternalSourceModelChangedHandler),
    (0, inversify_1.optional)(),
    __metadata("design:type", ExternalSourceModelChangedHandler)
], SourceModelChangedActionHandler.prototype, "externalModelSourceChangedHandler", void 0);
SourceModelChangedActionHandler = __decorate([
    (0, inversify_1.injectable)()
], SourceModelChangedActionHandler);
exports.SourceModelChangedActionHandler = SourceModelChangedActionHandler;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/features/svg-metadata/di.config.js":
/*!**************************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/features/svg-metadata/di.config.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2023 Business Informatics Group (TU Wien) and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const _glsp_sprotty_1 = __webpack_require__(/*! ../../glsp-sprotty/index */ "../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/index.js");
const metadata_placer_1 = __webpack_require__(/*! ./metadata-placer */ "../../node_modules/@eclipse-glsp/client/lib/features/svg-metadata/metadata-placer.js");
const svgMetadataModule = new inversify_1.ContainerModule(bind => {
    bind(metadata_placer_1.MetadataPlacer).toSelf().inSingletonScope();
    bind(_glsp_sprotty_1.TYPES.IVNodePostprocessor).toService(metadata_placer_1.MetadataPlacer);
});
exports["default"] = svgMetadataModule;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/features/svg-metadata/metadata-placer.js":
/*!********************************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/features/svg-metadata/metadata-placer.js ***!
  \********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2023 Business Informatics Group (TU Wien) and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.MetadataPlacer = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const _glsp_sprotty_1 = __webpack_require__(/*! ../../glsp-sprotty/index */ "../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/index.js");
let MetadataPlacer = class MetadataPlacer {
    decorate(vnode, element) {
        if (element instanceof _glsp_sprotty_1.SModelRoot) {
            (0, _glsp_sprotty_1.setAttr)(vnode, 'data-svg-metadata-api', true);
        }
        (0, _glsp_sprotty_1.setAttr)(vnode, 'data-svg-metadata-type', element.type);
        if (element instanceof _glsp_sprotty_1.SChildElement) {
            (0, _glsp_sprotty_1.setAttr)(vnode, 'data-svg-metadata-parent-id', this.domHelper.createUniqueDOMElementId(element.parent));
        }
        if (element instanceof _glsp_sprotty_1.SEdge) {
            if (element.source !== undefined) {
                (0, _glsp_sprotty_1.setAttr)(vnode, 'data-svg-metadata-edge-source-id', this.domHelper.createUniqueDOMElementId(element.source));
            }
            if (element.target !== undefined) {
                (0, _glsp_sprotty_1.setAttr)(vnode, 'data-svg-metadata-edge-target-id', this.domHelper.createUniqueDOMElementId(element.target));
            }
        }
        return vnode;
    }
    postUpdate() {
        // empty
    }
};
__decorate([
    (0, inversify_1.inject)(_glsp_sprotty_1.TYPES.DOMHelper),
    __metadata("design:type", _glsp_sprotty_1.DOMHelper)
], MetadataPlacer.prototype, "domHelper", void 0);
MetadataPlacer = __decorate([
    (0, inversify_1.injectable)()
], MetadataPlacer);
exports.MetadataPlacer = MetadataPlacer;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/features/tool-feedback/change-bounds-tool-feedback.js":
/*!*********************************************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/features/tool-feedback/change-bounds-tool-feedback.js ***!
  \*********************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.FeedbackMoveMouseListener = exports.HideChangeBoundsToolResizeFeedbackCommand = exports.ShowChangeBoundsToolResizeFeedbackCommand = exports.HideChangeBoundsToolResizeFeedbackAction = exports.ShowChangeBoundsToolResizeFeedbackAction = void 0;
/********************************************************************************
 * Copyright (c) 2019-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const _glsp_sprotty_1 = __webpack_require__(/*! ../../glsp-sprotty/index */ "../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/index.js");
const smodel_util_1 = __webpack_require__(/*! ../../utils/smodel-util */ "../../node_modules/@eclipse-glsp/client/lib/utils/smodel-util.js");
const model_1 = __webpack_require__(/*! ../change-bounds/model */ "../../node_modules/@eclipse-glsp/client/lib/features/change-bounds/model.js");
const movement_restrictor_1 = __webpack_require__(/*! ../change-bounds/movement-restrictor */ "../../node_modules/@eclipse-glsp/client/lib/features/change-bounds/movement-restrictor.js");
const css_feedback_1 = __webpack_require__(/*! ../tool-feedback/css-feedback */ "../../node_modules/@eclipse-glsp/client/lib/features/tool-feedback/css-feedback.js");
const model_2 = __webpack_require__(/*! ./model */ "../../node_modules/@eclipse-glsp/client/lib/features/tool-feedback/model.js");
var ShowChangeBoundsToolResizeFeedbackAction;
(function (ShowChangeBoundsToolResizeFeedbackAction) {
    ShowChangeBoundsToolResizeFeedbackAction.KIND = 'showChangeBoundsToolResizeFeedback';
    function is(object) {
        return _glsp_sprotty_1.Action.hasKind(object, ShowChangeBoundsToolResizeFeedbackAction.KIND) && (0, _glsp_sprotty_1.hasStringProp)(object, 'elementId');
    }
    ShowChangeBoundsToolResizeFeedbackAction.is = is;
    function create(elementId) {
        return {
            kind: ShowChangeBoundsToolResizeFeedbackAction.KIND,
            elementId
        };
    }
    ShowChangeBoundsToolResizeFeedbackAction.create = create;
})(ShowChangeBoundsToolResizeFeedbackAction = exports.ShowChangeBoundsToolResizeFeedbackAction || (exports.ShowChangeBoundsToolResizeFeedbackAction = {}));
var HideChangeBoundsToolResizeFeedbackAction;
(function (HideChangeBoundsToolResizeFeedbackAction) {
    HideChangeBoundsToolResizeFeedbackAction.KIND = 'hideChangeBoundsToolResizeFeedback';
    function is(object) {
        return _glsp_sprotty_1.Action.hasKind(object, HideChangeBoundsToolResizeFeedbackAction.KIND);
    }
    HideChangeBoundsToolResizeFeedbackAction.is = is;
    function create() {
        return { kind: HideChangeBoundsToolResizeFeedbackAction.KIND };
    }
    HideChangeBoundsToolResizeFeedbackAction.create = create;
})(HideChangeBoundsToolResizeFeedbackAction = exports.HideChangeBoundsToolResizeFeedbackAction || (exports.HideChangeBoundsToolResizeFeedbackAction = {}));
let ShowChangeBoundsToolResizeFeedbackCommand = class ShowChangeBoundsToolResizeFeedbackCommand extends model_2.FeedbackCommand {
    execute(context) {
        const index = context.root.index;
        (0, smodel_util_1.forEachElement)(index, model_1.isResizable, model_1.removeResizeHandles);
        if (this.action.elementId) {
            const resizeElement = index.getById(this.action.elementId);
            if (resizeElement && (0, model_1.isResizable)(resizeElement)) {
                (0, model_1.addResizeHandles)(resizeElement);
            }
        }
        return context.root;
    }
};
ShowChangeBoundsToolResizeFeedbackCommand.KIND = ShowChangeBoundsToolResizeFeedbackAction.KIND;
__decorate([
    (0, inversify_1.inject)(_glsp_sprotty_1.TYPES.Action),
    __metadata("design:type", Object)
], ShowChangeBoundsToolResizeFeedbackCommand.prototype, "action", void 0);
ShowChangeBoundsToolResizeFeedbackCommand = __decorate([
    (0, inversify_1.injectable)()
], ShowChangeBoundsToolResizeFeedbackCommand);
exports.ShowChangeBoundsToolResizeFeedbackCommand = ShowChangeBoundsToolResizeFeedbackCommand;
let HideChangeBoundsToolResizeFeedbackCommand = class HideChangeBoundsToolResizeFeedbackCommand extends model_2.FeedbackCommand {
    execute(context) {
        const index = context.root.index;
        (0, smodel_util_1.forEachElement)(index, model_1.isResizable, model_1.removeResizeHandles);
        return context.root;
    }
};
HideChangeBoundsToolResizeFeedbackCommand.KIND = HideChangeBoundsToolResizeFeedbackAction.KIND;
__decorate([
    (0, inversify_1.inject)(_glsp_sprotty_1.TYPES.Action),
    __metadata("design:type", Object)
], HideChangeBoundsToolResizeFeedbackCommand.prototype, "action", void 0);
HideChangeBoundsToolResizeFeedbackCommand = __decorate([
    (0, inversify_1.injectable)()
], HideChangeBoundsToolResizeFeedbackCommand);
exports.HideChangeBoundsToolResizeFeedbackCommand = HideChangeBoundsToolResizeFeedbackCommand;
/**
 * This mouse listener provides visual feedback for moving by sending client-side
 * `MoveAction`s while elements are selected and dragged. This will also update
 * their bounds, which is important, as it is not only required for rendering
 * the visual feedback but also the basis for sending the change to the server
 * (see also `tools/MoveTool`).
 */
class FeedbackMoveMouseListener extends _glsp_sprotty_1.MouseListener {
    constructor(tool) {
        super();
        this.tool = tool;
        this.hasDragged = false;
        this.elementId2startPos = new Map();
    }
    mouseDown(target, event) {
        if (event.button === 0 && !(target instanceof model_1.SResizeHandle)) {
            const moveable = (0, _glsp_sprotty_1.findParentByFeature)(target, _glsp_sprotty_1.isMoveable);
            if (moveable !== undefined) {
                this.startDragPosition = { x: event.pageX, y: event.pageY };
            }
            else {
                this.startDragPosition = undefined;
            }
            this.hasDragged = false;
        }
        return [];
    }
    mouseMove(target, event) {
        const result = [];
        if (event.buttons === 0) {
            this.mouseUp(target, event);
        }
        else if (this.startDragPosition) {
            if (this.elementId2startPos.size === 0) {
                this.collectStartPositions(target.root);
            }
            this.hasDragged = true;
            const moveAction = this.getElementMoves(target, event, false);
            if (moveAction) {
                result.push(moveAction);
                result.push((0, css_feedback_1.cursorFeedbackAction)(css_feedback_1.CursorCSS.MOVE));
            }
        }
        return result;
    }
    collectStartPositions(root) {
        const selectedElements = root.index.all().filter(element => (0, _glsp_sprotty_1.isSelectable)(element) && element.selected);
        const elementsSet = new Set(selectedElements);
        selectedElements
            .filter(element => !this.isChildOfSelected(elementsSet, element))
            .forEach(element => {
            if ((0, _glsp_sprotty_1.isMoveable)(element)) {
                this.elementId2startPos.set(element.id, element.position);
            }
        });
    }
    isChildOfSelected(selectedElements, element) {
        while (element instanceof _glsp_sprotty_1.SChildElement) {
            element = element.parent;
            if (selectedElements.has(element)) {
                return true;
            }
        }
        return false;
    }
    getElementMoves(target, event, finished) {
        if (!this.startDragPosition) {
            return undefined;
        }
        const elementMoves = [];
        const viewport = (0, _glsp_sprotty_1.findParentByFeature)(target, _glsp_sprotty_1.isViewport);
        const zoom = viewport ? viewport.zoom : 1;
        const delta = {
            x: (event.pageX - this.startDragPosition.x) / zoom,
            y: (event.pageY - this.startDragPosition.y) / zoom
        };
        this.elementId2startPos.forEach((startPosition, elementId) => {
            const element = target.root.index.getById(elementId);
            if (element) {
                let toPosition = this.snap({
                    x: startPosition.x + delta.x,
                    y: startPosition.y + delta.y
                }, element, !event.shiftKey);
                if ((0, _glsp_sprotty_1.isMoveable)(element)) {
                    toPosition = this.validateMove(startPosition, toPosition, element, finished);
                    elementMoves.push({
                        elementId: element.id,
                        fromPosition: {
                            x: element.position.x,
                            y: element.position.y
                        },
                        toPosition
                    });
                }
            }
        });
        if (elementMoves.length > 0) {
            return _glsp_sprotty_1.MoveAction.create(elementMoves, { animate: false, finished });
        }
        else {
            return undefined;
        }
    }
    validateMove(startPosition, toPosition, element, isFinished) {
        let newPosition = toPosition;
        if (this.tool.movementRestrictor) {
            const valid = this.tool.movementRestrictor.validate(element, toPosition);
            let action;
            if (!valid) {
                action = (0, movement_restrictor_1.createMovementRestrictionFeedback)(element, this.tool.movementRestrictor);
                if (isFinished) {
                    newPosition = startPosition;
                }
            }
            else {
                action = (0, movement_restrictor_1.removeMovementRestrictionFeedback)(element, this.tool.movementRestrictor);
            }
            this.tool.dispatchFeedback([action], this);
        }
        return newPosition;
    }
    snap(position, element, isSnap) {
        if (isSnap && this.tool.snapper) {
            return this.tool.snapper.snap(position, element);
        }
        else {
            return position;
        }
    }
    mouseEnter(target, event) {
        if (target instanceof _glsp_sprotty_1.SModelRoot && event.buttons === 0 && !this.startDragPosition) {
            this.mouseUp(target, event);
        }
        return [];
    }
    mouseUp(target, event) {
        const result = [];
        if (this.startDragPosition) {
            const moveAction = this.getElementMoves(target, event, true);
            if (moveAction) {
                result.push(moveAction);
            }
            if (this.tool.movementRestrictor) {
                this.tool.deregisterFeedback([(0, movement_restrictor_1.removeMovementRestrictionFeedback)(target, this.tool.movementRestrictor)], this);
            }
            result.push((0, css_feedback_1.cursorFeedbackAction)(css_feedback_1.CursorCSS.DEFAULT));
        }
        this.hasDragged = false;
        this.startDragPosition = undefined;
        this.elementId2startPos.clear();
        return result;
    }
    decorate(vnode, _element) {
        return vnode;
    }
}
exports.FeedbackMoveMouseListener = FeedbackMoveMouseListener;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/features/tool-feedback/creation-tool-feedback.js":
/*!****************************************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/features/tool-feedback/creation-tool-feedback.js ***!
  \****************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.removeFeedbackEdge = exports.drawFeedbackEdge = exports.defaultFeedbackEdgeSchema = exports.feedbackEdgeEndId = exports.feedbackEdgeId = exports.FeedbackEdgeEndMovingMouseListener = exports.FeedbackEdgeEnd = exports.RemoveFeedbackEdgeCommand = exports.RemoveFeedbackEdgeAction = exports.DrawFeedbackEdgeCommand = exports.DrawFeedbackEdgeAction = void 0;
/********************************************************************************
 * Copyright (c) 2019-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const _glsp_sprotty_1 = __webpack_require__(/*! ../../glsp-sprotty/index */ "../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/index.js");
const smodel_util_1 = __webpack_require__(/*! ../../utils/smodel-util */ "../../node_modules/@eclipse-glsp/client/lib/utils/smodel-util.js");
const viewpoint_util_1 = __webpack_require__(/*! ../../utils/viewpoint-util */ "../../node_modules/@eclipse-glsp/client/lib/utils/viewpoint-util.js");
const model_1 = __webpack_require__(/*! ./model */ "../../node_modules/@eclipse-glsp/client/lib/features/tool-feedback/model.js");
var DrawFeedbackEdgeAction;
(function (DrawFeedbackEdgeAction) {
    DrawFeedbackEdgeAction.KIND = 'drawFeedbackEdge';
    function is(object) {
        return _glsp_sprotty_1.Action.hasKind(object, DrawFeedbackEdgeAction.KIND);
    }
    DrawFeedbackEdgeAction.is = is;
    function create(options) {
        return Object.assign({ kind: DrawFeedbackEdgeAction.KIND }, options);
    }
    DrawFeedbackEdgeAction.create = create;
})(DrawFeedbackEdgeAction = exports.DrawFeedbackEdgeAction || (exports.DrawFeedbackEdgeAction = {}));
let DrawFeedbackEdgeCommand = class DrawFeedbackEdgeCommand extends model_1.FeedbackCommand {
    constructor(action) {
        super();
        this.action = action;
    }
    execute(context) {
        drawFeedbackEdge(context, this.action.sourceId, this.action.elementTypeId, this.action.edgeSchema);
        return context.root;
    }
};
DrawFeedbackEdgeCommand.KIND = DrawFeedbackEdgeAction.KIND;
DrawFeedbackEdgeCommand = __decorate([
    (0, inversify_1.injectable)(),
    __param(0, (0, inversify_1.inject)(_glsp_sprotty_1.TYPES.Action)),
    __metadata("design:paramtypes", [Object])
], DrawFeedbackEdgeCommand);
exports.DrawFeedbackEdgeCommand = DrawFeedbackEdgeCommand;
var RemoveFeedbackEdgeAction;
(function (RemoveFeedbackEdgeAction) {
    RemoveFeedbackEdgeAction.KIND = 'removeFeedbackEdgeCommand';
    function is(object) {
        return _glsp_sprotty_1.Action.hasKind(object, RemoveFeedbackEdgeAction.KIND);
    }
    RemoveFeedbackEdgeAction.is = is;
    function create() {
        return { kind: RemoveFeedbackEdgeAction.KIND };
    }
    RemoveFeedbackEdgeAction.create = create;
})(RemoveFeedbackEdgeAction = exports.RemoveFeedbackEdgeAction || (exports.RemoveFeedbackEdgeAction = {}));
let RemoveFeedbackEdgeCommand = class RemoveFeedbackEdgeCommand extends model_1.FeedbackCommand {
    execute(context) {
        removeFeedbackEdge(context.root);
        return context.root;
    }
};
RemoveFeedbackEdgeCommand.KIND = RemoveFeedbackEdgeAction.KIND;
RemoveFeedbackEdgeCommand = __decorate([
    (0, inversify_1.injectable)()
], RemoveFeedbackEdgeCommand);
exports.RemoveFeedbackEdgeCommand = RemoveFeedbackEdgeCommand;
class FeedbackEdgeEnd extends _glsp_sprotty_1.SDanglingAnchor {
    constructor(sourceId, elementTypeId, feedbackEdge = undefined, type = FeedbackEdgeEnd.TYPE) {
        super();
        this.sourceId = sourceId;
        this.elementTypeId = elementTypeId;
        this.feedbackEdge = feedbackEdge;
        this.type = type;
    }
}
FeedbackEdgeEnd.TYPE = 'feedback-edge-end';
exports.FeedbackEdgeEnd = FeedbackEdgeEnd;
class FeedbackEdgeEndMovingMouseListener extends _glsp_sprotty_1.MouseListener {
    constructor(anchorRegistry) {
        super();
        this.anchorRegistry = anchorRegistry;
    }
    mouseMove(target, event) {
        const root = target.root;
        const edgeEnd = root.index.getById(feedbackEdgeEndId(root));
        if (!(edgeEnd instanceof FeedbackEdgeEnd) || !edgeEnd.feedbackEdge) {
            return [];
        }
        const edge = edgeEnd.feedbackEdge;
        const position = (0, viewpoint_util_1.getAbsolutePosition)(edgeEnd, event);
        const endAtMousePosition = (0, _glsp_sprotty_1.findChildrenAtPosition)(target.root, position)
            .reverse()
            .find(element => (0, _glsp_sprotty_1.isConnectable)(element) && element.canConnect(edge, 'target'));
        if (endAtMousePosition instanceof _glsp_sprotty_1.SConnectableElement && edge.source && (0, _glsp_sprotty_1.isBoundsAware)(edge.source)) {
            const anchor = this.computeAbsoluteAnchor(endAtMousePosition, _glsp_sprotty_1.Bounds.center((0, viewpoint_util_1.toAbsoluteBounds)(edge.source)));
            if (_glsp_sprotty_1.Point.euclideanDistance(anchor, edgeEnd.position) > 1) {
                return [_glsp_sprotty_1.MoveAction.create([{ elementId: edgeEnd.id, toPosition: anchor }], { animate: false })];
            }
        }
        else {
            return [_glsp_sprotty_1.MoveAction.create([{ elementId: edgeEnd.id, toPosition: position }], { animate: false })];
        }
        return [];
    }
    computeAbsoluteAnchor(element, absoluteReferencePoint, offset) {
        const referencePointInParent = absoluteToParent(element, absoluteReferencePoint);
        const anchorComputer = this.anchorRegistry.get(_glsp_sprotty_1.PolylineEdgeRouter.KIND, element.anchorKind);
        let anchor = anchorComputer.getAnchor(element, referencePointInParent, offset);
        // The anchor is computed in the local coordinate system of the element.
        // If the element is a nested child element we have to add the absolute position of its parent to the anchor.
        if (element.parent !== element.root) {
            const parent = (0, _glsp_sprotty_1.findParentByFeature)(element.parent, _glsp_sprotty_1.isBoundsAware);
            if (parent) {
                const absoluteParentPosition = (0, viewpoint_util_1.toAbsoluteBounds)(parent);
                anchor = _glsp_sprotty_1.Point.add(absoluteParentPosition, anchor);
            }
        }
        return anchor;
    }
}
exports.FeedbackEdgeEndMovingMouseListener = FeedbackEdgeEndMovingMouseListener;
/**
 * Convert a point, specified in absolute coordinates, to a point relative
 * to the parent of the specified child element.
 * @param element the child element
 * @param absolutePoint a point in absolute coordinates
 * @returns the equivalent point, relative to the element's parent coordinates
 */
function absoluteToParent(element, absolutePoint) {
    if ((0, _glsp_sprotty_1.isBoundsAware)(element.parent)) {
        return absoluteToLocal(element.parent, absolutePoint);
    }
    // If the parent is not bounds-aware, assume it's at 0; 0 and proceed
    return absoluteToLocal(element, absolutePoint);
}
/**
 * Convert a point, specified in absolute coordinates, to a point relative
 * to the specified element.
 * @param element the element
 * @param absolutePoint a point in absolute coordinates
 * @returns the equivalent point, relative to the element's coordinates
 */
function absoluteToLocal(element, absolutePoint) {
    const absoluteElementBounds = (0, viewpoint_util_1.toAbsoluteBounds)(element);
    return { x: absolutePoint.x - absoluteElementBounds.x, y: absolutePoint.y - absoluteElementBounds.y };
}
function feedbackEdgeId(root) {
    return root.id + '_feedback_edge';
}
exports.feedbackEdgeId = feedbackEdgeId;
function feedbackEdgeEndId(root) {
    return root.id + '_feedback_anchor';
}
exports.feedbackEdgeEndId = feedbackEdgeEndId;
exports.defaultFeedbackEdgeSchema = {
    cssClasses: ['feedback-edge'],
    opacity: 0.3
};
function drawFeedbackEdge(context, sourceId, elementTypeId, edgeTemplate) {
    const root = context.root;
    const sourceChild = root.index.getById(sourceId);
    if (!sourceChild) {
        return;
    }
    const source = (0, _glsp_sprotty_1.findParentByFeature)(sourceChild, _glsp_sprotty_1.isConnectable);
    if (!source || !(0, _glsp_sprotty_1.isBoundsAware)(source)) {
        return;
    }
    const edgeEnd = new FeedbackEdgeEnd(source.id, elementTypeId);
    edgeEnd.id = feedbackEdgeEndId(root);
    edgeEnd.position = (0, viewpoint_util_1.toAbsolutePosition)(source);
    const edgeSchema = Object.assign(Object.assign({ id: feedbackEdgeId(root), type: elementTypeId, sourceId: source.id, targetId: edgeEnd.id }, exports.defaultFeedbackEdgeSchema), edgeTemplate);
    const feedbackEdge = context.modelFactory.createElement(edgeSchema);
    if ((0, smodel_util_1.isRoutable)(feedbackEdge)) {
        edgeEnd.feedbackEdge = feedbackEdge;
        root.add(edgeEnd);
        root.add(feedbackEdge);
    }
}
exports.drawFeedbackEdge = drawFeedbackEdge;
function removeFeedbackEdge(root) {
    const feedbackEdge = root.index.getById(feedbackEdgeId(root));
    const feedbackEdgeEnd = root.index.getById(feedbackEdgeEndId(root));
    if (feedbackEdge instanceof _glsp_sprotty_1.SChildElement) {
        root.remove(feedbackEdge);
    }
    if (feedbackEdgeEnd instanceof _glsp_sprotty_1.SChildElement) {
        root.remove(feedbackEdgeEnd);
    }
}
exports.removeFeedbackEdge = removeFeedbackEdge;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/features/tool-feedback/css-feedback.js":
/*!******************************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/features/tool-feedback/css-feedback.js ***!
  \******************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.deleteCssClasses = exports.applyCssClasses = exports.cursorFeedbackAction = exports.CursorCSS = exports.ModifyCssFeedbackCommand = exports.ModifyCSSFeedbackAction = void 0;
/********************************************************************************
 * Copyright (c) 2019-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const _glsp_sprotty_1 = __webpack_require__(/*! ../../glsp-sprotty/index */ "../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/index.js");
const smodel_util_1 = __webpack_require__(/*! ../../utils/smodel-util */ "../../node_modules/@eclipse-glsp/client/lib/utils/smodel-util.js");
const model_1 = __webpack_require__(/*! ./model */ "../../node_modules/@eclipse-glsp/client/lib/features/tool-feedback/model.js");
var ModifyCSSFeedbackAction;
(function (ModifyCSSFeedbackAction) {
    ModifyCSSFeedbackAction.KIND = 'modifyCSSFeedback';
    function is(object) {
        return _glsp_sprotty_1.Action.hasKind(object, ModifyCSSFeedbackAction.KIND) && (0, _glsp_sprotty_1.hasArrayProp)(object, 'elementIds');
    }
    ModifyCSSFeedbackAction.is = is;
    function create(options) {
        const { elements } = options, rest = __rest(options, ["elements"]);
        const elementIds = elements ? elements.map(element => (typeof element === 'string' ? element : element.id)) : undefined;
        return Object.assign({ kind: ModifyCSSFeedbackAction.KIND, elementIds }, rest);
    }
    ModifyCSSFeedbackAction.create = create;
})(ModifyCSSFeedbackAction = exports.ModifyCSSFeedbackAction || (exports.ModifyCSSFeedbackAction = {}));
let ModifyCssFeedbackCommand = class ModifyCssFeedbackCommand extends model_1.FeedbackCommand {
    constructor(action) {
        super();
        this.action = action;
    }
    execute(context) {
        const elements = this.action.elementIds ? (0, smodel_util_1.getElements)(context.root.index, this.action.elementIds) : [context.root];
        elements.forEach(e => {
            if (this.action.remove) {
                (0, smodel_util_1.removeCssClasses)(e, this.action.remove);
            }
            if (this.action.add) {
                (0, smodel_util_1.addCssClasses)(e, this.action.add);
            }
        });
        return context.root;
    }
};
ModifyCssFeedbackCommand.KIND = ModifyCSSFeedbackAction.KIND;
ModifyCssFeedbackCommand = __decorate([
    (0, inversify_1.injectable)(),
    __param(0, (0, inversify_1.inject)(_glsp_sprotty_1.TYPES.Action)),
    __metadata("design:paramtypes", [Object])
], ModifyCssFeedbackCommand);
exports.ModifyCssFeedbackCommand = ModifyCssFeedbackCommand;
var CursorCSS;
(function (CursorCSS) {
    CursorCSS["DEFAULT"] = "default-mode";
    CursorCSS["OVERLAP_FORBIDDEN"] = "overlap-forbidden-mode";
    CursorCSS["NODE_CREATION"] = "node-creation-mode";
    CursorCSS["EDGE_CREATION_SOURCE"] = "edge-creation-select-source-mode";
    CursorCSS["EDGE_CREATION_TARGET"] = "edge-creation-select-target-mode";
    CursorCSS["EDGE_RECONNECT"] = "edge-reconnect-select-target-mode";
    CursorCSS["OPERATION_NOT_ALLOWED"] = "edge-modification-not-allowed-mode";
    CursorCSS["ELEMENT_DELETION"] = "element-deletion-mode";
    CursorCSS["RESIZE_NESW"] = "resize-nesw-mode";
    CursorCSS["RESIZE_NWSE"] = "resize-nwse-mode";
    CursorCSS["MOVE"] = "move-mode";
    CursorCSS["MARQUEE"] = "marquee-mode";
})(CursorCSS = exports.CursorCSS || (exports.CursorCSS = {}));
function cursorFeedbackAction(cursorCss) {
    const add = [];
    if (cursorCss) {
        add.push(cursorCss);
    }
    return ModifyCSSFeedbackAction.create({ add, remove: Object.values(CursorCSS) });
}
exports.cursorFeedbackAction = cursorFeedbackAction;
function applyCssClasses(element, ...add) {
    return ModifyCSSFeedbackAction.create({ elements: [element], add });
}
exports.applyCssClasses = applyCssClasses;
function deleteCssClasses(element, ...remove) {
    return ModifyCSSFeedbackAction.create({ elements: [element], remove });
}
exports.deleteCssClasses = deleteCssClasses;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/features/tool-feedback/di.config.js":
/*!***************************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/features/tool-feedback/di.config.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
/********************************************************************************
 * Copyright (c) 2019-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const _glsp_sprotty_1 = __webpack_require__(/*! ../../glsp-sprotty/index */ "../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/index.js");
const model_1 = __webpack_require__(/*! ../change-bounds/model */ "../../node_modules/@eclipse-glsp/client/lib/features/change-bounds/model.js");
const change_bounds_tool_feedback_1 = __webpack_require__(/*! ./change-bounds-tool-feedback */ "../../node_modules/@eclipse-glsp/client/lib/features/tool-feedback/change-bounds-tool-feedback.js");
const creation_tool_feedback_1 = __webpack_require__(/*! ./creation-tool-feedback */ "../../node_modules/@eclipse-glsp/client/lib/features/tool-feedback/creation-tool-feedback.js");
const css_feedback_1 = __webpack_require__(/*! ./css-feedback */ "../../node_modules/@eclipse-glsp/client/lib/features/tool-feedback/css-feedback.js");
const edge_edit_tool_feedback_1 = __webpack_require__(/*! ./edge-edit-tool-feedback */ "../../node_modules/@eclipse-glsp/client/lib/features/tool-feedback/edge-edit-tool-feedback.js");
const feedback_action_dispatcher_1 = __webpack_require__(/*! ./feedback-action-dispatcher */ "../../node_modules/@eclipse-glsp/client/lib/features/tool-feedback/feedback-action-dispatcher.js");
const marquee_tool_feedback_1 = __webpack_require__(/*! ./marquee-tool-feedback */ "../../node_modules/@eclipse-glsp/client/lib/features/tool-feedback/marquee-tool-feedback.js");
const view_1 = __webpack_require__(/*! ./view */ "../../node_modules/@eclipse-glsp/client/lib/features/tool-feedback/view.js");
const toolFeedbackModule = new inversify_1.ContainerModule((bind, _unbind, isBound) => {
    const context = { bind, isBound };
    bind(_glsp_sprotty_1.TYPES.IFeedbackActionDispatcher).to(feedback_action_dispatcher_1.FeedbackActionDispatcher).inSingletonScope();
    (0, _glsp_sprotty_1.configureCommand)(context, css_feedback_1.ModifyCssFeedbackCommand);
    // create node and edge tool feedback
    (0, _glsp_sprotty_1.configureCommand)(context, creation_tool_feedback_1.DrawFeedbackEdgeCommand);
    (0, _glsp_sprotty_1.configureCommand)(context, creation_tool_feedback_1.RemoveFeedbackEdgeCommand);
    (0, _glsp_sprotty_1.configureCommand)(context, marquee_tool_feedback_1.DrawMarqueeCommand);
    (0, _glsp_sprotty_1.configureCommand)(context, marquee_tool_feedback_1.RemoveMarqueeCommand);
    (0, _glsp_sprotty_1.configureView)(context, creation_tool_feedback_1.FeedbackEdgeEnd.TYPE, view_1.FeedbackEdgeEndView);
    // move tool feedback: we use sprotty's MoveCommand as client-side visual feedback
    (0, _glsp_sprotty_1.configureCommand)(context, _glsp_sprotty_1.MoveCommand);
    // resize tool feedback
    (0, _glsp_sprotty_1.configureCommand)(context, change_bounds_tool_feedback_1.ShowChangeBoundsToolResizeFeedbackCommand);
    (0, _glsp_sprotty_1.configureCommand)(context, change_bounds_tool_feedback_1.HideChangeBoundsToolResizeFeedbackCommand);
    (0, _glsp_sprotty_1.configureView)(context, model_1.SResizeHandle.TYPE, view_1.SResizeHandleView);
    // reconnect edge tool feedback
    (0, _glsp_sprotty_1.configureCommand)(context, edge_edit_tool_feedback_1.ShowEdgeReconnectHandlesFeedbackCommand);
    (0, _glsp_sprotty_1.configureCommand)(context, edge_edit_tool_feedback_1.HideEdgeReconnectHandlesFeedbackCommand);
    (0, _glsp_sprotty_1.configureCommand)(context, edge_edit_tool_feedback_1.DrawFeedbackEdgeSourceCommand);
    (0, _glsp_sprotty_1.configureCommand)(context, edge_edit_tool_feedback_1.SwitchRoutingModeCommand);
    (0, _glsp_sprotty_1.bindAsService)(context, _glsp_sprotty_1.TYPES.IVNodePostprocessor, _glsp_sprotty_1.LocationPostprocessor);
    bind(_glsp_sprotty_1.TYPES.HiddenVNodePostprocessor).toService(_glsp_sprotty_1.LocationPostprocessor);
});
exports["default"] = toolFeedbackModule;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/features/tool-feedback/edge-edit-tool-feedback.js":
/*!*****************************************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/features/tool-feedback/edge-edit-tool-feedback.js ***!
  \*****************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.FeedbackEdgeRouteMovingMouseListener = exports.FeedbackEdgeSourceMovingMouseListener = exports.FeedbackEdgeTargetMovingMouseListener = exports.DrawFeedbackEdgeSourceCommand = exports.DrawFeedbackEdgeSourceAction = exports.SwitchRoutingModeCommand = exports.SwitchRoutingModeAction = exports.HideEdgeReconnectHandlesFeedbackCommand = exports.ShowEdgeReconnectHandlesFeedbackCommand = exports.HideEdgeReconnectHandlesFeedbackAction = exports.ShowEdgeReconnectHandlesFeedbackAction = void 0;
/********************************************************************************
 * Copyright (c) 2019-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const _glsp_sprotty_1 = __webpack_require__(/*! ../../glsp-sprotty/index */ "../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/index.js");
const smodel_util_1 = __webpack_require__(/*! ../../utils/smodel-util */ "../../node_modules/@eclipse-glsp/client/lib/utils/smodel-util.js");
const viewpoint_util_1 = __webpack_require__(/*! ../../utils/viewpoint-util */ "../../node_modules/@eclipse-glsp/client/lib/utils/viewpoint-util.js");
const snap_1 = __webpack_require__(/*! ../change-bounds/snap */ "../../node_modules/@eclipse-glsp/client/lib/features/change-bounds/snap.js");
const model_1 = __webpack_require__(/*! ../reconnect/model */ "../../node_modules/@eclipse-glsp/client/lib/features/reconnect/model.js");
const creation_tool_feedback_1 = __webpack_require__(/*! ./creation-tool-feedback */ "../../node_modules/@eclipse-glsp/client/lib/features/tool-feedback/creation-tool-feedback.js");
const model_2 = __webpack_require__(/*! ./model */ "../../node_modules/@eclipse-glsp/client/lib/features/tool-feedback/model.js");
var ShowEdgeReconnectHandlesFeedbackAction;
(function (ShowEdgeReconnectHandlesFeedbackAction) {
    ShowEdgeReconnectHandlesFeedbackAction.KIND = 'showReconnectHandlesFeedback';
    function is(object) {
        return _glsp_sprotty_1.Action.hasKind(object, ShowEdgeReconnectHandlesFeedbackAction.KIND);
    }
    ShowEdgeReconnectHandlesFeedbackAction.is = is;
    function create(elementId) {
        return { kind: ShowEdgeReconnectHandlesFeedbackAction.KIND, elementId };
    }
    ShowEdgeReconnectHandlesFeedbackAction.create = create;
})(ShowEdgeReconnectHandlesFeedbackAction = exports.ShowEdgeReconnectHandlesFeedbackAction || (exports.ShowEdgeReconnectHandlesFeedbackAction = {}));
var HideEdgeReconnectHandlesFeedbackAction;
(function (HideEdgeReconnectHandlesFeedbackAction) {
    HideEdgeReconnectHandlesFeedbackAction.KIND = 'hideReconnectHandlesFeedback';
    function is(object) {
        return _glsp_sprotty_1.Action.hasKind(object, HideEdgeReconnectHandlesFeedbackAction.KIND);
    }
    HideEdgeReconnectHandlesFeedbackAction.is = is;
    function create() {
        return { kind: HideEdgeReconnectHandlesFeedbackAction.KIND };
    }
    HideEdgeReconnectHandlesFeedbackAction.create = create;
})(HideEdgeReconnectHandlesFeedbackAction = exports.HideEdgeReconnectHandlesFeedbackAction || (exports.HideEdgeReconnectHandlesFeedbackAction = {}));
let ShowEdgeReconnectHandlesFeedbackCommand = class ShowEdgeReconnectHandlesFeedbackCommand extends model_2.FeedbackCommand {
    constructor(action) {
        super();
        this.action = action;
    }
    execute(context) {
        const index = context.root.index;
        (0, smodel_util_1.forEachElement)(index, smodel_util_1.isRoutable, model_1.removeReconnectHandles);
        const routableElement = index.getById(this.action.elementId);
        if (routableElement && (0, smodel_util_1.isRoutable)(routableElement)) {
            (0, model_1.addReconnectHandles)(routableElement);
        }
        return context.root;
    }
};
ShowEdgeReconnectHandlesFeedbackCommand.KIND = ShowEdgeReconnectHandlesFeedbackAction.KIND;
ShowEdgeReconnectHandlesFeedbackCommand = __decorate([
    (0, inversify_1.injectable)(),
    __param(0, (0, inversify_1.inject)(_glsp_sprotty_1.TYPES.Action)),
    __metadata("design:paramtypes", [Object])
], ShowEdgeReconnectHandlesFeedbackCommand);
exports.ShowEdgeReconnectHandlesFeedbackCommand = ShowEdgeReconnectHandlesFeedbackCommand;
let HideEdgeReconnectHandlesFeedbackCommand = class HideEdgeReconnectHandlesFeedbackCommand extends model_2.FeedbackCommand {
    constructor(action) {
        super();
        this.action = action;
    }
    execute(context) {
        const index = context.root.index;
        (0, smodel_util_1.forEachElement)(index, smodel_util_1.isRoutable, model_1.removeReconnectHandles);
        return context.root;
    }
};
HideEdgeReconnectHandlesFeedbackCommand.KIND = HideEdgeReconnectHandlesFeedbackAction.KIND;
HideEdgeReconnectHandlesFeedbackCommand = __decorate([
    (0, inversify_1.injectable)(),
    __param(0, (0, inversify_1.inject)(_glsp_sprotty_1.TYPES.Action)),
    __metadata("design:paramtypes", [Object])
], HideEdgeReconnectHandlesFeedbackCommand);
exports.HideEdgeReconnectHandlesFeedbackCommand = HideEdgeReconnectHandlesFeedbackCommand;
var SwitchRoutingModeAction;
(function (SwitchRoutingModeAction) {
    SwitchRoutingModeAction.KIND = 'switchRoutingMode';
    function create(options) {
        return Object.assign(Object.assign({}, _glsp_sprotty_1.SwitchEditModeAction.create(options)), { kind: SwitchRoutingModeAction.KIND });
    }
    SwitchRoutingModeAction.create = create;
})(SwitchRoutingModeAction = exports.SwitchRoutingModeAction || (exports.SwitchRoutingModeAction = {}));
let SwitchRoutingModeCommand = class SwitchRoutingModeCommand extends _glsp_sprotty_1.SwitchEditModeCommand {
    constructor(action) {
        super(Object.assign(Object.assign({}, action), { kind: _glsp_sprotty_1.SwitchEditModeAction.KIND }));
    }
};
SwitchRoutingModeCommand.KIND = SwitchRoutingModeAction.KIND;
SwitchRoutingModeCommand = __decorate([
    (0, inversify_1.injectable)(),
    __param(0, (0, inversify_1.inject)(_glsp_sprotty_1.TYPES.Action)),
    __metadata("design:paramtypes", [Object])
], SwitchRoutingModeCommand);
exports.SwitchRoutingModeCommand = SwitchRoutingModeCommand;
var DrawFeedbackEdgeSourceAction;
(function (DrawFeedbackEdgeSourceAction) {
    DrawFeedbackEdgeSourceAction.KIND = 'drawFeedbackEdgeSource';
    function is(object) {
        return _glsp_sprotty_1.Action.hasKind(object, DrawFeedbackEdgeSourceAction.KIND) && (0, _glsp_sprotty_1.hasStringProp)(object, 'elementTypeId') && (0, _glsp_sprotty_1.hasStringProp)(object, 'targetId');
    }
    DrawFeedbackEdgeSourceAction.is = is;
    function create(options) {
        return Object.assign({ kind: DrawFeedbackEdgeSourceAction.KIND }, options);
    }
    DrawFeedbackEdgeSourceAction.create = create;
})(DrawFeedbackEdgeSourceAction = exports.DrawFeedbackEdgeSourceAction || (exports.DrawFeedbackEdgeSourceAction = {}));
let DrawFeedbackEdgeSourceCommand = class DrawFeedbackEdgeSourceCommand extends model_2.FeedbackCommand {
    constructor(action) {
        super();
        this.action = action;
    }
    execute(context) {
        drawFeedbackEdgeSource(context, this.action.targetId, this.action.elementTypeId);
        return context.root;
    }
};
DrawFeedbackEdgeSourceCommand.KIND = DrawFeedbackEdgeSourceAction.KIND;
DrawFeedbackEdgeSourceCommand = __decorate([
    (0, inversify_1.injectable)(),
    __param(0, (0, inversify_1.inject)(_glsp_sprotty_1.TYPES.Action)),
    __metadata("design:paramtypes", [Object])
], DrawFeedbackEdgeSourceCommand);
exports.DrawFeedbackEdgeSourceCommand = DrawFeedbackEdgeSourceCommand;
/**
 * SOURCE AND TARGET MOUSE MOVE LISTENER
 */
class FeedbackEdgeTargetMovingMouseListener extends creation_tool_feedback_1.FeedbackEdgeEndMovingMouseListener {
    constructor(anchorRegistry) {
        super(anchorRegistry);
        this.anchorRegistry = anchorRegistry;
    }
}
exports.FeedbackEdgeTargetMovingMouseListener = FeedbackEdgeTargetMovingMouseListener;
class FeedbackEdgeSourceMovingMouseListener extends _glsp_sprotty_1.MouseListener {
    constructor(anchorRegistry) {
        super();
        this.anchorRegistry = anchorRegistry;
    }
    mouseMove(target, event) {
        const root = target.root;
        const edgeEnd = root.index.getById((0, creation_tool_feedback_1.feedbackEdgeEndId)(root));
        if (!(edgeEnd instanceof creation_tool_feedback_1.FeedbackEdgeEnd) || !edgeEnd.feedbackEdge) {
            return [];
        }
        const edge = edgeEnd.feedbackEdge;
        const position = (0, viewpoint_util_1.getAbsolutePosition)(edgeEnd, event);
        const endAtMousePosition = (0, _glsp_sprotty_1.findChildrenAtPosition)(target.root, position).find(e => (0, _glsp_sprotty_1.isConnectable)(e) && e.canConnect(edge, 'source'));
        if (endAtMousePosition instanceof _glsp_sprotty_1.SConnectableElement && edge.target && (0, _glsp_sprotty_1.isBoundsAware)(edge.target)) {
            const anchor = this.computeAbsoluteAnchor(endAtMousePosition, _glsp_sprotty_1.Bounds.center(edge.target.bounds));
            if (_glsp_sprotty_1.Point.euclideanDistance(anchor, edgeEnd.position) > 1) {
                return [_glsp_sprotty_1.MoveAction.create([{ elementId: edgeEnd.id, toPosition: anchor }], { animate: false })];
            }
        }
        else {
            return [_glsp_sprotty_1.MoveAction.create([{ elementId: edgeEnd.id, toPosition: position }], { animate: false })];
        }
        return [];
    }
    computeAbsoluteAnchor(element, referencePoint, offset) {
        const anchorComputer = this.anchorRegistry.get(_glsp_sprotty_1.PolylineEdgeRouter.KIND, element.anchorKind);
        let anchor = anchorComputer.getAnchor(element, referencePoint, offset);
        // The anchor is computed in the local coordinate system of the element.
        // If the element is a nested child element we have to add the absolute position of its parent to the anchor.
        if (element.parent !== element.root) {
            const parent = (0, _glsp_sprotty_1.findParentByFeature)(element.parent, _glsp_sprotty_1.isBoundsAware);
            if (parent) {
                const absoluteParentPosition = (0, viewpoint_util_1.toAbsoluteBounds)(parent);
                anchor = _glsp_sprotty_1.Point.add(absoluteParentPosition, anchor);
            }
        }
        return anchor;
    }
}
exports.FeedbackEdgeSourceMovingMouseListener = FeedbackEdgeSourceMovingMouseListener;
class FeedbackEdgeRouteMovingMouseListener extends _glsp_sprotty_1.MouseListener {
    constructor(edgeRouterRegistry, snapper) {
        super();
        this.edgeRouterRegistry = edgeRouterRegistry;
        this.snapper = snapper;
        this.pointPositionUpdater = new snap_1.PointPositionUpdater(snapper);
    }
    mouseDown(target, event) {
        const result = [];
        if (event.button === 0) {
            const routingHandle = (0, _glsp_sprotty_1.findParentByFeature)(target, smodel_util_1.isRoutingHandle);
            if (routingHandle !== undefined) {
                result.push(SwitchRoutingModeAction.create({ elementsToActivate: [target.id] }));
                this.pointPositionUpdater.updateLastDragPosition({ x: event.pageX, y: event.pageY });
            }
            else {
                this.pointPositionUpdater.resetPosition();
            }
        }
        return result;
    }
    mouseMove(target, event) {
        const result = [];
        if (event.buttons === 0) {
            return this.mouseUp(target, event);
        }
        const positionUpdate = this.pointPositionUpdater.updatePosition(target, { x: event.pageX, y: event.pageY }, !event.altKey);
        if (positionUpdate) {
            const moveActions = this.handleMoveOnClient(target, positionUpdate, !event.altKey);
            result.push(...moveActions);
        }
        return result;
    }
    handleMoveOnClient(target, positionUpdate, isSnap) {
        const handleMoves = [];
        target.root.index
            .all()
            .filter(element => (0, _glsp_sprotty_1.isSelected)(element))
            .forEach(element => {
            if ((0, smodel_util_1.isRoutingHandle)(element)) {
                const elementMove = this.toElementMove(element, positionUpdate, isSnap);
                if (elementMove) {
                    handleMoves.push(elementMove);
                }
            }
        });
        if (handleMoves.length > 0) {
            return [_glsp_sprotty_1.MoveAction.create(handleMoves, { animate: false })];
        }
        return [];
    }
    toElementMove(element, positionDelta, isSnap) {
        const point = this.getHandlePosition(element);
        if (point !== undefined) {
            const snappedPoint = this.getSnappedHandlePosition(element, point, isSnap);
            return {
                elementId: element.id,
                fromPosition: point,
                toPosition: {
                    x: snappedPoint.x + positionDelta.x,
                    y: snappedPoint.y + positionDelta.y
                }
            };
        }
        return undefined;
    }
    getSnappedHandlePosition(element, point, isSnap) {
        if (this.snapper && isSnap) {
            return this.snapper.snap(point, element);
        }
        return point;
    }
    getHandlePosition(handle) {
        if (this.edgeRouterRegistry) {
            const parent = handle.parent;
            if (!(0, smodel_util_1.isRoutable)(parent)) {
                return undefined;
            }
            const router = this.edgeRouterRegistry.get(parent.routerKind);
            const route = router.route(parent);
            return router.getHandlePosition(parent, route, handle);
        }
        return undefined;
    }
    mouseUp(_target, _event) {
        this.pointPositionUpdater.resetPosition();
        return [];
    }
    decorate(vnode, _element) {
        return vnode;
    }
}
exports.FeedbackEdgeRouteMovingMouseListener = FeedbackEdgeRouteMovingMouseListener;
/**
 * UTILITY FUNCTIONS
 */
function drawFeedbackEdgeSource(context, targetId, elementTypeId) {
    const root = context.root;
    const targetChild = root.index.getById(targetId);
    if (!targetChild) {
        return;
    }
    const target = (0, _glsp_sprotty_1.findParentByFeature)(targetChild, _glsp_sprotty_1.isConnectable);
    if (!target || !(0, _glsp_sprotty_1.isBoundsAware)(target)) {
        return;
    }
    const edgeEnd = new creation_tool_feedback_1.FeedbackEdgeEnd(target.id, elementTypeId);
    edgeEnd.id = (0, creation_tool_feedback_1.feedbackEdgeEndId)(root);
    edgeEnd.position = { x: target.bounds.x, y: target.bounds.y };
    const feedbackEdgeSchema = {
        type: 'edge',
        id: (0, creation_tool_feedback_1.feedbackEdgeId)(root),
        sourceId: edgeEnd.id,
        targetId: target.id,
        opacity: 0.3
    };
    const feedbackEdge = context.modelFactory.createElement(feedbackEdgeSchema);
    if ((0, smodel_util_1.isRoutable)(feedbackEdge)) {
        edgeEnd.feedbackEdge = feedbackEdge;
        root.add(edgeEnd);
        root.add(feedbackEdge);
    }
}


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/features/tool-feedback/feedback-action-dispatcher.js":
/*!********************************************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/features/tool-feedback/feedback-action-dispatcher.js ***!
  \********************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.FeedbackActionDispatcher = void 0;
/********************************************************************************
 * Copyright (c) 2019-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const _glsp_sprotty_1 = __webpack_require__(/*! ../../glsp-sprotty/index */ "../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/index.js");
let FeedbackActionDispatcher = class FeedbackActionDispatcher {
    constructor() {
        this.feedbackEmitters = new Map();
    }
    registerFeedback(feedbackEmitter, actions) {
        this.feedbackEmitters.set(feedbackEmitter, actions);
        this.dispatch(actions, feedbackEmitter);
    }
    deregisterFeedback(feedbackEmitter, actions) {
        this.feedbackEmitters.delete(feedbackEmitter);
        this.dispatch(actions, feedbackEmitter);
    }
    dispatch(actions, feedbackEmitter) {
        this.actionDispatcher()
            .then(dispatcher => dispatcher.dispatchAll(actions))
            .then(() => this.logger.info(this, `Dispatched feedback actions for ${feedbackEmitter}`))
            .catch(reason => this.logger.error(this, 'Failed to dispatch feedback actions', reason));
    }
    getRegisteredFeedback() {
        const result = [];
        this.feedbackEmitters.forEach((value, key) => result.push(...value));
        return result;
    }
    getRegisteredFeedbackEmitters(action) {
        const result = [];
        this.feedbackEmitters.forEach((value, key) => {
            if (value.find(a => a === action)) {
                result.push(key);
            }
        });
        return result;
    }
};
__decorate([
    (0, inversify_1.inject)(_glsp_sprotty_1.TYPES.IActionDispatcherProvider),
    __metadata("design:type", Function)
], FeedbackActionDispatcher.prototype, "actionDispatcher", void 0);
__decorate([
    (0, inversify_1.inject)(_glsp_sprotty_1.TYPES.ILogger),
    __metadata("design:type", Object)
], FeedbackActionDispatcher.prototype, "logger", void 0);
FeedbackActionDispatcher = __decorate([
    (0, inversify_1.injectable)()
], FeedbackActionDispatcher);
exports.FeedbackActionDispatcher = FeedbackActionDispatcher;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/features/tool-feedback/marquee-tool-feedback.js":
/*!***************************************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/features/tool-feedback/marquee-tool-feedback.js ***!
  \***************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.removeMarquee = exports.drawMarquee = exports.MARQUEE = exports.marqueeId = exports.MarqueeEndMovingMouseListener = exports.RemoveMarqueeCommand = exports.RemoveMarqueeAction = exports.DrawMarqueeCommand = exports.DrawMarqueeAction = void 0;
/********************************************************************************
 * Copyright (c) 2021-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const _glsp_sprotty_1 = __webpack_require__(/*! ../../glsp-sprotty/index */ "../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/index.js");
const model_1 = __webpack_require__(/*! ./model */ "../../node_modules/@eclipse-glsp/client/lib/features/tool-feedback/model.js");
var DrawMarqueeAction;
(function (DrawMarqueeAction) {
    DrawMarqueeAction.KIND = 'drawMarquee';
    function is(object) {
        return _glsp_sprotty_1.Action.hasKind(object, DrawMarqueeAction.KIND) && (0, _glsp_sprotty_1.hasObjectProp)(object, 'startPoint') && (0, _glsp_sprotty_1.hasObjectProp)(object, 'endPoint');
    }
    DrawMarqueeAction.is = is;
    function create(options) {
        return Object.assign({ kind: DrawMarqueeAction.KIND }, options);
    }
    DrawMarqueeAction.create = create;
})(DrawMarqueeAction = exports.DrawMarqueeAction || (exports.DrawMarqueeAction = {}));
let DrawMarqueeCommand = class DrawMarqueeCommand extends model_1.FeedbackCommand {
    constructor(action) {
        super();
        this.action = action;
    }
    execute(context) {
        drawMarquee(context, this.action.startPoint, this.action.endPoint);
        return context.root;
    }
};
DrawMarqueeCommand.KIND = DrawMarqueeAction.KIND;
DrawMarqueeCommand = __decorate([
    (0, inversify_1.injectable)(),
    __param(0, (0, inversify_1.inject)(_glsp_sprotty_1.TYPES.Action)),
    __metadata("design:paramtypes", [Object])
], DrawMarqueeCommand);
exports.DrawMarqueeCommand = DrawMarqueeCommand;
var RemoveMarqueeAction;
(function (RemoveMarqueeAction) {
    RemoveMarqueeAction.KIND = 'removeMarquee';
    function is(object) {
        return _glsp_sprotty_1.Action.hasKind(object, RemoveMarqueeAction.KIND);
    }
    RemoveMarqueeAction.is = is;
    function create() {
        return { kind: RemoveMarqueeAction.KIND };
    }
    RemoveMarqueeAction.create = create;
})(RemoveMarqueeAction = exports.RemoveMarqueeAction || (exports.RemoveMarqueeAction = {}));
let RemoveMarqueeCommand = class RemoveMarqueeCommand extends model_1.FeedbackCommand {
    execute(context) {
        removeMarquee(context.root);
        return context.root;
    }
};
RemoveMarqueeCommand.KIND = RemoveMarqueeAction.KIND;
RemoveMarqueeCommand = __decorate([
    (0, inversify_1.injectable)()
], RemoveMarqueeCommand);
exports.RemoveMarqueeCommand = RemoveMarqueeCommand;
class MarqueeEndMovingMouseListener extends _glsp_sprotty_1.MouseListener {
    constructor(anchorRegistry) {
        super();
        this.anchorRegistry = anchorRegistry;
    }
    mouseMove(target, event) {
        return [];
    }
}
exports.MarqueeEndMovingMouseListener = MarqueeEndMovingMouseListener;
function marqueeId(root) {
    return root.id + '_' + exports.MARQUEE;
}
exports.marqueeId = marqueeId;
exports.MARQUEE = 'marquee';
function drawMarquee(context, startPoint, endPoint) {
    const root = context.root;
    removeMarquee(root);
    const marqueeSchema = {
        type: exports.MARQUEE,
        id: marqueeId(root),
        startPoint: startPoint,
        endPoint: endPoint
    };
    const marquee = context.modelFactory.createElement(marqueeSchema);
    root.add(marquee);
}
exports.drawMarquee = drawMarquee;
function removeMarquee(root) {
    const marquee = root.index.getById(marqueeId(root));
    if (marquee instanceof _glsp_sprotty_1.SChildElement) {
        root.remove(marquee);
    }
}
exports.removeMarquee = removeMarquee;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/features/tool-feedback/model.js":
/*!***********************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/features/tool-feedback/model.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.FeedbackCommand = void 0;
/********************************************************************************
 * Copyright (c) 2019-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const _glsp_sprotty_1 = __webpack_require__(/*! ../../glsp-sprotty/index */ "../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/index.js");
class FeedbackCommand extends _glsp_sprotty_1.Command {
    constructor() {
        super(...arguments);
        // used by the `FeedbackAwareUpdateModelCommand`
        this.priority = 0;
    }
    undo(context) {
        return context.root;
    }
    redo(context) {
        return context.root;
    }
}
exports.FeedbackCommand = FeedbackCommand;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/features/tool-feedback/view.js":
/*!**********************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/features/tool-feedback/view.js ***!
  \**********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SResizeHandleView = exports.FeedbackEdgeEndView = void 0;
/********************************************************************************
 * Copyright (c) 2019-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const _glsp_sprotty_1 = __webpack_require__(/*! ../../glsp-sprotty/index */ "../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/index.js");
const model_1 = __webpack_require__(/*! ../change-bounds/model */ "../../node_modules/@eclipse-glsp/client/lib/features/change-bounds/model.js");
// eslint-disable-next-line @typescript-eslint/no-unused-vars
const JSX = { createElement: _glsp_sprotty_1.svg };
/**
 * This view is used for the invisible end of the feedback edge.
 * A feedback edge is shown as a visual feedback when creating edges.
 */
let FeedbackEdgeEndView = class FeedbackEdgeEndView {
    render(model, context) {
        var _a;
        const position = (_a = model.position) !== null && _a !== void 0 ? _a : _glsp_sprotty_1.Point.ORIGIN;
        return JSX.createElement("g", { x: position.x, y: position.y });
    }
};
FeedbackEdgeEndView = __decorate([
    (0, inversify_1.injectable)()
], FeedbackEdgeEndView);
exports.FeedbackEdgeEndView = FeedbackEdgeEndView;
let SResizeHandleView = class SResizeHandleView {
    render(handle, context) {
        const position = this.getPosition(handle);
        if (position !== undefined) {
            const node = (JSX.createElement("circle", { "class-sprotty-resize-handle": true, "class-mouseover": handle.hoverFeedback, cx: position.x, cy: position.y, r: this.getRadius() }));
            (0, _glsp_sprotty_1.setAttr)(node, 'data-kind', handle.location);
            return node;
        }
        // Fallback: Create an empty group
        return JSX.createElement("g", null);
    }
    getPosition(handle) {
        const parent = handle.parent;
        if ((0, model_1.isResizable)(parent)) {
            if (handle.location === model_1.ResizeHandleLocation.TopLeft) {
                return { x: 0, y: 0 };
            }
            else if (handle.location === model_1.ResizeHandleLocation.TopRight) {
                return { x: parent.bounds.width, y: 0 };
            }
            else if (handle.location === model_1.ResizeHandleLocation.BottomLeft) {
                return { x: 0, y: parent.bounds.height };
            }
            else if (handle.location === model_1.ResizeHandleLocation.BottomRight) {
                return { x: parent.bounds.width, y: parent.bounds.height };
            }
        }
        return undefined;
    }
    getRadius() {
        return 7;
    }
};
SResizeHandleView = __decorate([
    (0, inversify_1.injectable)()
], SResizeHandleView);
exports.SResizeHandleView = SResizeHandleView;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/features/tool-palette/di.config.js":
/*!**************************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/features/tool-palette/di.config.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
/********************************************************************************
 * Copyright (c) 2019-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const _glsp_sprotty_1 = __webpack_require__(/*! ../../glsp-sprotty/index */ "../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/index.js");
__webpack_require__(/*! ../../../css/tool-palette.css */ "../../node_modules/@eclipse-glsp/client/css/tool-palette.css");
const tool_palette_1 = __webpack_require__(/*! ./tool-palette */ "../../node_modules/@eclipse-glsp/client/lib/features/tool-palette/tool-palette.js");
const toolPaletteModule = new inversify_1.ContainerModule((bind, _unbind, isBound, _rebind) => {
    (0, _glsp_sprotty_1.bindAsService)(bind, _glsp_sprotty_1.TYPES.IUIExtension, tool_palette_1.ToolPalette);
    (0, _glsp_sprotty_1.configureActionHandler)({ bind, isBound }, tool_palette_1.EnableToolPaletteAction.KIND, tool_palette_1.ToolPalette);
    (0, _glsp_sprotty_1.configureActionHandler)({ bind, isBound }, _glsp_sprotty_1.EnableDefaultToolsAction.KIND, tool_palette_1.ToolPalette);
});
exports["default"] = toolPaletteModule;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/features/tool-palette/tool-palette.js":
/*!*****************************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/features/tool-palette/tool-palette.js ***!
  \*****************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var ToolPalette_1;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.changeCodiconClass = exports.changeCSSClass = exports.createToolGroup = exports.createIcon = exports.compare = exports.ToolPalette = exports.EnableToolPaletteAction = void 0;
/********************************************************************************
 * Copyright (c) 2019-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const _glsp_sprotty_1 = __webpack_require__(/*! ../../glsp-sprotty/index */ "../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/index.js");
const action_dispatcher_1 = __webpack_require__(/*! ../../base/action-dispatcher */ "../../node_modules/@eclipse-glsp/client/lib/base/action-dispatcher.js");
const editor_context_service_1 = __webpack_require__(/*! ../../base/editor-context-service */ "../../node_modules/@eclipse-glsp/client/lib/base/editor-context-service.js");
const delete_tool_1 = __webpack_require__(/*! ../tools/delete-tool */ "../../node_modules/@eclipse-glsp/client/lib/features/tools/delete-tool.js");
const marquee_mouse_tool_1 = __webpack_require__(/*! ../tools/marquee-mouse-tool */ "../../node_modules/@eclipse-glsp/client/lib/features/tools/marquee-mouse-tool.js");
const CLICKED_CSS_CLASS = 'clicked';
const SEARCH_ICON_ID = 'search';
const PALETTE_ICON_ID = 'symbol-color';
const CHEVRON_DOWN_ICON_ID = 'chevron-right';
const PALETTE_HEIGHT = '500px';
var EnableToolPaletteAction;
(function (EnableToolPaletteAction) {
    EnableToolPaletteAction.KIND = 'enableToolPalette';
    function is(object) {
        return _glsp_sprotty_1.Action.hasKind(object, EnableToolPaletteAction.KIND);
    }
    EnableToolPaletteAction.is = is;
    function create() {
        return { kind: EnableToolPaletteAction.KIND };
    }
    EnableToolPaletteAction.create = create;
})(EnableToolPaletteAction = exports.EnableToolPaletteAction || (exports.EnableToolPaletteAction = {}));
let ToolPalette = ToolPalette_1 = class ToolPalette extends _glsp_sprotty_1.AbstractUIExtension {
    constructor() {
        super(...arguments);
        this.paletteItemsCopy = [];
    }
    id() {
        return ToolPalette_1.ID;
    }
    containerClass() {
        return ToolPalette_1.ID;
    }
    postConstruct() {
        this.editorContext.register(this);
    }
    initialize() {
        if (!this.paletteItems) {
            return false;
        }
        return super.initialize();
    }
    initializeContents(_containerElement) {
        this.createHeader();
        this.createBody();
        this.lastActivebutton = this.defaultToolsButton;
    }
    onBeforeShow(_containerElement, root) {
        this.modelRootId = root.id;
        this.containerElement.style.maxHeight = PALETTE_HEIGHT;
    }
    addMinimizePaletteButton() {
        const baseDiv = document.getElementById(this.options.baseDiv);
        const minPaletteDiv = document.createElement('div');
        minPaletteDiv.classList.add('minimize-palette-button');
        this.containerElement.classList.add('collapsible-palette');
        if (baseDiv) {
            const insertedDiv = baseDiv.insertBefore(minPaletteDiv, baseDiv.firstChild);
            const minimizeIcon = createIcon(CHEVRON_DOWN_ICON_ID);
            this.updateMinimizePaletteButtonTooltip(minPaletteDiv);
            minimizeIcon.onclick = _event => {
                if (this.isPaletteMaximized()) {
                    this.containerElement.style.maxHeight = '0px';
                }
                else {
                    this.containerElement.style.maxHeight = PALETTE_HEIGHT;
                }
                this.updateMinimizePaletteButtonTooltip(minPaletteDiv);
                changeCodiconClass(minimizeIcon, PALETTE_ICON_ID);
                changeCodiconClass(minimizeIcon, CHEVRON_DOWN_ICON_ID);
            };
            insertedDiv.appendChild(minimizeIcon);
        }
    }
    updateMinimizePaletteButtonTooltip(button) {
        if (this.isPaletteMaximized()) {
            button.title = 'Minimize palette';
        }
        else {
            button.title = 'Maximize palette';
        }
    }
    isPaletteMaximized() {
        return this.containerElement && this.containerElement.style.maxHeight !== '0px';
    }
    createBody() {
        const bodyDiv = document.createElement('div');
        bodyDiv.classList.add('palette-body');
        let tabIndex = 0;
        this.paletteItems.sort(compare).forEach(item => {
            if (item.children) {
                const group = createToolGroup(item);
                item.children.sort(compare).forEach(child => group.appendChild(this.createToolButton(child, tabIndex++)));
                bodyDiv.appendChild(group);
            }
            else {
                bodyDiv.appendChild(this.createToolButton(item, tabIndex++));
            }
        });
        if (this.paletteItems.length === 0) {
            const noResultsDiv = document.createElement('div');
            noResultsDiv.innerText = 'No results found.';
            noResultsDiv.classList.add('tool-button');
            bodyDiv.appendChild(noResultsDiv);
        }
        // Remove existing body to refresh filtered entries
        if (this.bodyDiv) {
            this.containerElement.removeChild(this.bodyDiv);
        }
        this.containerElement.appendChild(bodyDiv);
        this.bodyDiv = bodyDiv;
    }
    createHeader() {
        this.addMinimizePaletteButton();
        const headerCompartment = document.createElement('div');
        headerCompartment.classList.add('palette-header');
        headerCompartment.append(this.createHeaderTitle());
        headerCompartment.appendChild(this.createHeaderTools());
        headerCompartment.appendChild((this.searchField = this.createHeaderSearchField()));
        this.containerElement.appendChild(headerCompartment);
    }
    createHeaderTools() {
        const headerTools = document.createElement('div');
        headerTools.classList.add('header-tools');
        this.defaultToolsButton = this.createDefaultToolButton();
        headerTools.appendChild(this.defaultToolsButton);
        const deleteToolButton = this.createMouseDeleteToolButton();
        headerTools.appendChild(deleteToolButton);
        const marqueeToolButton = this.createMarqueeToolButton();
        headerTools.appendChild(marqueeToolButton);
        const validateActionButton = this.createValidateButton();
        headerTools.appendChild(validateActionButton);
        // Create button for Search
        const searchIcon = this.createSearchButton();
        headerTools.appendChild(searchIcon);
        return headerTools;
    }
    createDefaultToolButton() {
        const button = createIcon('inspect');
        button.id = 'btn_default_tools';
        button.title = 'Enable selection tool';
        button.onclick = this.onClickStaticToolButton(this.defaultToolsButton);
        return button;
    }
    createMouseDeleteToolButton() {
        const deleteToolButton = createIcon('chrome-close');
        deleteToolButton.title = 'Enable deletion tool';
        deleteToolButton.onclick = this.onClickStaticToolButton(deleteToolButton, delete_tool_1.MouseDeleteTool.ID);
        return deleteToolButton;
    }
    createMarqueeToolButton() {
        const marqueeToolButton = createIcon('screen-full');
        marqueeToolButton.title = 'Enable marquee tool';
        marqueeToolButton.onclick = this.onClickStaticToolButton(marqueeToolButton, marquee_mouse_tool_1.MarqueeMouseTool.ID);
        return marqueeToolButton;
    }
    createValidateButton() {
        const validateActionButton = createIcon('pass');
        validateActionButton.title = 'Validate model';
        validateActionButton.onclick = _event => {
            const modelIds = [this.modelRootId];
            this.actionDispatcher.dispatch(_glsp_sprotty_1.RequestMarkersAction.create(modelIds, { reason: _glsp_sprotty_1.MarkersReason.BATCH }));
        };
        return validateActionButton;
    }
    createSearchButton() {
        const searchIcon = createIcon(SEARCH_ICON_ID);
        searchIcon.onclick = _ev => {
            const searchField = document.getElementById(this.containerElement.id + '_search_field');
            if (searchField) {
                if (searchField.style.display === 'none') {
                    searchField.style.display = '';
                    searchField.focus();
                }
                else {
                    searchField.style.display = 'none';
                }
            }
        };
        searchIcon.classList.add('search-icon');
        searchIcon.title = 'Filter palette entries';
        return searchIcon;
    }
    createHeaderSearchField() {
        const searchField = document.createElement('input');
        searchField.classList.add('search-input');
        searchField.id = this.containerElement.id + '_search_field';
        searchField.type = 'text';
        searchField.placeholder = ' Search...';
        searchField.style.display = 'none';
        searchField.onkeyup = () => this.requestFilterUpdate(this.searchField.value);
        searchField.onkeydown = ev => this.clearOnEscape(ev);
        return searchField;
    }
    createHeaderTitle() {
        const header = document.createElement('div');
        header.classList.add('header-icon');
        header.appendChild(createIcon(PALETTE_ICON_ID));
        header.insertAdjacentText('beforeend', 'Palette');
        return header;
    }
    createToolButton(item, index) {
        const button = document.createElement('div');
        button.tabIndex = index;
        button.classList.add('tool-button');
        if (item.icon) {
            button.appendChild(createIcon(item.icon));
        }
        button.insertAdjacentText('beforeend', item.label);
        button.onclick = this.onClickCreateToolButton(button, item);
        button.onkeydown = ev => this.clearToolOnEscape(ev);
        return button;
    }
    onClickCreateToolButton(button, item) {
        return (_ev) => {
            if (!this.editorContext.isReadonly) {
                this.actionDispatcher.dispatchAll(item.actions);
                this.changeActiveButton(button);
                button.focus();
            }
        };
    }
    onClickStaticToolButton(button, toolId) {
        return (_ev) => {
            if (!this.editorContext.isReadonly) {
                const action = toolId ? _glsp_sprotty_1.EnableToolsAction.create([toolId]) : _glsp_sprotty_1.EnableDefaultToolsAction.create();
                this.actionDispatcher.dispatch(action);
                this.changeActiveButton(button);
                button.focus();
            }
        };
    }
    changeActiveButton(button) {
        if (this.lastActivebutton) {
            this.lastActivebutton.classList.remove(CLICKED_CSS_CLASS);
        }
        if (button) {
            button.classList.add(CLICKED_CSS_CLASS);
            this.lastActivebutton = button;
        }
        else {
            this.defaultToolsButton.classList.add(CLICKED_CSS_CLASS);
            this.lastActivebutton = this.defaultToolsButton;
        }
    }
    handle(action) {
        if (action.kind === EnableToolPaletteAction.KIND) {
            const requestAction = _glsp_sprotty_1.RequestContextActions.create({
                contextId: ToolPalette_1.ID,
                editorContext: {
                    selectedElementIds: []
                }
            });
            this.actionDispatcher.requestUntil(requestAction).then(response => {
                if (_glsp_sprotty_1.SetContextActions.is(response)) {
                    this.paletteItems = response.actions.map(e => e);
                    this.actionDispatcher.dispatch(_glsp_sprotty_1.SetUIExtensionVisibilityAction.create({ extensionId: ToolPalette_1.ID, visible: !this.editorContext.isReadonly }));
                }
            });
        }
        else if (action.kind === _glsp_sprotty_1.EnableDefaultToolsAction.KIND) {
            this.changeActiveButton();
            this.restoreFocus();
        }
    }
    editModeChanged(_oldValue, _newValue) {
        this.actionDispatcher.dispatch(_glsp_sprotty_1.SetUIExtensionVisibilityAction.create({ extensionId: ToolPalette_1.ID, visible: !this.editorContext.isReadonly }));
    }
    clearOnEscape(event) {
        if ((0, _glsp_sprotty_1.matchesKeystroke)(event, 'Escape')) {
            this.searchField.value = '';
            this.requestFilterUpdate('');
        }
    }
    clearToolOnEscape(event) {
        if ((0, _glsp_sprotty_1.matchesKeystroke)(event, 'Escape')) {
            this.actionDispatcher.dispatch(_glsp_sprotty_1.EnableDefaultToolsAction.create());
        }
    }
    handleSetContextActions(action) {
        this.paletteItems = action.actions.map(e => e);
        this.createBody();
    }
    requestFilterUpdate(filter) {
        // Initialize the copy if it's empty
        if (this.paletteItemsCopy.length === 0) {
            // Creating deep copy
            this.paletteItemsCopy = JSON.parse(JSON.stringify(this.paletteItems));
        }
        // Reset the paletteItems before searching
        this.paletteItems = JSON.parse(JSON.stringify(this.paletteItemsCopy));
        // Filter the entries
        const filteredPaletteItems = [];
        for (const itemGroup of this.paletteItems) {
            if (itemGroup.children) {
                // Fetch the labels according to the filter
                const matchingChildren = itemGroup.children.filter(child => child.label.toLowerCase().includes(filter.toLowerCase()));
                // Add the itemgroup containing the correct entries
                if (matchingChildren.length > 0) {
                    // Clear existing children
                    itemGroup.children.splice(0, itemGroup.children.length);
                    // Push the matching children
                    matchingChildren.forEach(child => itemGroup.children.push(child));
                    filteredPaletteItems.push(itemGroup);
                }
            }
        }
        this.paletteItems = filteredPaletteItems;
        this.createBody();
    }
};
ToolPalette.ID = 'tool-palette';
__decorate([
    (0, inversify_1.inject)(_glsp_sprotty_1.TYPES.IActionDispatcher),
    __metadata("design:type", action_dispatcher_1.GLSPActionDispatcher)
], ToolPalette.prototype, "actionDispatcher", void 0);
__decorate([
    (0, inversify_1.inject)(_glsp_sprotty_1.TYPES.IToolManager),
    __metadata("design:type", Object)
], ToolPalette.prototype, "toolManager", void 0);
__decorate([
    (0, inversify_1.inject)(editor_context_service_1.EditorContextService),
    __metadata("design:type", editor_context_service_1.EditorContextService)
], ToolPalette.prototype, "editorContext", void 0);
__decorate([
    (0, inversify_1.postConstruct)(),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", []),
    __metadata("design:returntype", void 0)
], ToolPalette.prototype, "postConstruct", null);
ToolPalette = ToolPalette_1 = __decorate([
    (0, inversify_1.injectable)()
], ToolPalette);
exports.ToolPalette = ToolPalette;
function compare(a, b) {
    const sortStringBased = a.sortString.localeCompare(b.sortString);
    if (sortStringBased !== 0) {
        return sortStringBased;
    }
    return a.label.localeCompare(b.label);
}
exports.compare = compare;
function createIcon(codiconId) {
    const icon = document.createElement('i');
    icon.classList.add(...(0, _glsp_sprotty_1.codiconCSSClasses)(codiconId));
    return icon;
}
exports.createIcon = createIcon;
function createToolGroup(item) {
    const group = document.createElement('div');
    group.classList.add('tool-group');
    group.id = item.id;
    const header = document.createElement('div');
    header.classList.add('group-header');
    if (item.icon) {
        header.appendChild(createIcon(item.icon));
    }
    header.insertAdjacentText('beforeend', item.label);
    header.ondblclick = _ev => {
        const css = 'collapsed';
        changeCSSClass(group, css);
        Array.from(group.children).forEach(child => changeCSSClass(child, css));
        window.getSelection().removeAllRanges();
    };
    group.appendChild(header);
    return group;
}
exports.createToolGroup = createToolGroup;
function changeCSSClass(element, css) {
    // eslint-disable-next-line chai-friendly/no-unused-expressions
    element.classList.contains(css) ? element.classList.remove(css) : element.classList.add(css);
}
exports.changeCSSClass = changeCSSClass;
function changeCodiconClass(element, codiconId) {
    // eslint-disable-next-line chai-friendly/no-unused-expressions
    element.classList.contains((0, _glsp_sprotty_1.codiconCSSClasses)(codiconId)[1])
        ? element.classList.remove((0, _glsp_sprotty_1.codiconCSSClasses)(codiconId)[1])
        : element.classList.add((0, _glsp_sprotty_1.codiconCSSClasses)(codiconId)[1]);
}
exports.changeCodiconClass = changeCodiconClass;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/features/tools/base-glsp-tool.js":
/*!************************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/features/tools/base-glsp-tool.js ***!
  \************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.BaseGLSPTool = void 0;
/********************************************************************************
 * Copyright (c) 2020-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const _glsp_sprotty_1 = __webpack_require__(/*! ../../glsp-sprotty/index */ "../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/index.js");
const editor_context_service_1 = __webpack_require__(/*! ../../base/editor-context-service */ "../../node_modules/@eclipse-glsp/client/lib/base/editor-context-service.js");
let BaseGLSPTool = class BaseGLSPTool {
    get isEditTool() {
        return true;
    }
    dispatchActions(actions) {
        this.actionDispatcher.dispatchAll(actions);
    }
    dispatchFeedback(actions, feedbackEmitter) {
        this.feedbackDispatcher.registerFeedback(feedbackEmitter !== null && feedbackEmitter !== void 0 ? feedbackEmitter : this, actions);
    }
    deregisterFeedback(actions, feedbackEmitter) {
        this.feedbackDispatcher.deregisterFeedback(feedbackEmitter !== null && feedbackEmitter !== void 0 ? feedbackEmitter : this, actions);
    }
};
__decorate([
    (0, inversify_1.inject)(_glsp_sprotty_1.TYPES.IFeedbackActionDispatcher),
    __metadata("design:type", Object)
], BaseGLSPTool.prototype, "feedbackDispatcher", void 0);
__decorate([
    (0, inversify_1.inject)(_glsp_sprotty_1.TYPES.IActionDispatcher),
    __metadata("design:type", Object)
], BaseGLSPTool.prototype, "actionDispatcher", void 0);
__decorate([
    (0, inversify_1.inject)(_glsp_sprotty_1.TYPES.MouseTool),
    __metadata("design:type", Object)
], BaseGLSPTool.prototype, "mouseTool", void 0);
__decorate([
    (0, inversify_1.inject)(_glsp_sprotty_1.KeyTool),
    __metadata("design:type", _glsp_sprotty_1.KeyTool)
], BaseGLSPTool.prototype, "keyTool", void 0);
__decorate([
    (0, inversify_1.inject)(editor_context_service_1.EditorContextService),
    __metadata("design:type", editor_context_service_1.EditorContextService)
], BaseGLSPTool.prototype, "editorContext", void 0);
BaseGLSPTool = __decorate([
    (0, inversify_1.injectable)()
], BaseGLSPTool);
exports.BaseGLSPTool = BaseGLSPTool;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/features/tools/change-bounds-tool.js":
/*!****************************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/features/tools/change-bounds-tool.js ***!
  \****************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var ChangeBoundsTool_1;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ChangeBoundsListener = exports.ChangeBoundsTool = void 0;
/********************************************************************************
 * Copyright (c) 2019-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const _glsp_sprotty_1 = __webpack_require__(/*! ../../glsp-sprotty/index */ "../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/index.js");
const drag_aware_mouse_listener_1 = __webpack_require__(/*! ../../base/drag-aware-mouse-listener */ "../../node_modules/@eclipse-glsp/client/lib/base/drag-aware-mouse-listener.js");
const layout_utils_1 = __webpack_require__(/*! ../../utils/layout-utils */ "../../node_modules/@eclipse-glsp/client/lib/utils/layout-utils.js");
const smodel_util_1 = __webpack_require__(/*! ../../utils/smodel-util */ "../../node_modules/@eclipse-glsp/client/lib/utils/smodel-util.js");
const model_1 = __webpack_require__(/*! ../change-bounds/model */ "../../node_modules/@eclipse-glsp/client/lib/features/change-bounds/model.js");
const movement_restrictor_1 = __webpack_require__(/*! ../change-bounds/movement-restrictor */ "../../node_modules/@eclipse-glsp/client/lib/features/change-bounds/movement-restrictor.js");
const snap_1 = __webpack_require__(/*! ../change-bounds/snap */ "../../node_modules/@eclipse-glsp/client/lib/features/change-bounds/snap.js");
const selection_service_1 = __webpack_require__(/*! ../select/selection-service */ "../../node_modules/@eclipse-glsp/client/lib/features/select/selection-service.js");
const change_bounds_tool_feedback_1 = __webpack_require__(/*! ../tool-feedback/change-bounds-tool-feedback */ "../../node_modules/@eclipse-glsp/client/lib/features/tool-feedback/change-bounds-tool-feedback.js");
const css_feedback_1 = __webpack_require__(/*! ../tool-feedback/css-feedback */ "../../node_modules/@eclipse-glsp/client/lib/features/tool-feedback/css-feedback.js");
const base_glsp_tool_1 = __webpack_require__(/*! ./base-glsp-tool */ "../../node_modules/@eclipse-glsp/client/lib/features/tools/base-glsp-tool.js");
/**
 * The change bounds tool has the license to move multiple elements or resize a single element by implementing the ChangeBounds operation.
 * In contrast to Sprotty's implementation this tool only sends a `ChangeBoundsOperationAction` when an operation has finished and does not
 * provide client-side live updates to improve performance.
 *
 * | Operation | Client Update    | Server Update
 * +-----------+------------------+----------------------------
 * | Move      | MoveAction       | ChangeBoundsOperationAction
 * | Resize    | SetBoundsAction  | ChangeBoundsOperationAction
 *
 * To provide a visual client updates during move we install the `FeedbackMoveMouseListener` and to provide visual client updates during
 * resize and send the server updates we install the `ChangeBoundsListener`.
 */
let ChangeBoundsTool = ChangeBoundsTool_1 = class ChangeBoundsTool extends base_glsp_tool_1.BaseGLSPTool {
    get id() {
        return ChangeBoundsTool_1.ID;
    }
    enable() {
        // install feedback move mouse listener for client-side move updates
        this.feedbackMoveMouseListener = this.createMoveMouseListener();
        this.mouseTool.register(this.feedbackMoveMouseListener);
        // install change bounds listener for client-side resize updates and server-side updates
        this.changeBoundsListener = this.createChangeBoundsListener();
        this.mouseTool.register(this.changeBoundsListener);
        this.selectionService.register(this.changeBoundsListener);
    }
    createMoveMouseListener() {
        return new change_bounds_tool_feedback_1.FeedbackMoveMouseListener(this);
    }
    createChangeBoundsListener() {
        return new ChangeBoundsListener(this);
    }
    disable() {
        this.mouseTool.deregister(this.changeBoundsListener);
        this.selectionService.deregister(this.changeBoundsListener);
        this.mouseTool.deregister(this.feedbackMoveMouseListener);
        this.deregisterFeedback([], this.feedbackMoveMouseListener);
        this.deregisterFeedback([change_bounds_tool_feedback_1.HideChangeBoundsToolResizeFeedbackAction.create()], this.changeBoundsListener);
    }
};
ChangeBoundsTool.ID = 'glsp.change-bounds-tool';
__decorate([
    (0, inversify_1.inject)(_glsp_sprotty_1.TYPES.SelectionService),
    __metadata("design:type", selection_service_1.SelectionService)
], ChangeBoundsTool.prototype, "selectionService", void 0);
__decorate([
    (0, inversify_1.inject)(_glsp_sprotty_1.EdgeRouterRegistry),
    (0, inversify_1.optional)(),
    __metadata("design:type", _glsp_sprotty_1.EdgeRouterRegistry)
], ChangeBoundsTool.prototype, "edgeRouterRegistry", void 0);
__decorate([
    (0, inversify_1.inject)(_glsp_sprotty_1.TYPES.ISnapper),
    (0, inversify_1.optional)(),
    __metadata("design:type", Object)
], ChangeBoundsTool.prototype, "snapper", void 0);
__decorate([
    (0, inversify_1.inject)(_glsp_sprotty_1.TYPES.IMovementRestrictor),
    (0, inversify_1.optional)(),
    __metadata("design:type", Object)
], ChangeBoundsTool.prototype, "movementRestrictor", void 0);
ChangeBoundsTool = ChangeBoundsTool_1 = __decorate([
    (0, inversify_1.injectable)()
], ChangeBoundsTool);
exports.ChangeBoundsTool = ChangeBoundsTool;
class ChangeBoundsListener extends drag_aware_mouse_listener_1.DragAwareMouseListener {
    constructor(tool) {
        super();
        this.tool = tool;
        this.pointPositionUpdater = new snap_1.PointPositionUpdater(tool.snapper);
    }
    mouseDown(target, event) {
        super.mouseDown(target, event);
        // If another button than the left mouse button was clicked or we are
        // still on the root element we don't need to execute the tool behavior
        if (event.button !== 0 || target instanceof _glsp_sprotty_1.SModelRoot) {
            return [];
        }
        // check if we have a resize handle (only single-selection)
        if (this.activeResizeElement && target instanceof model_1.SResizeHandle) {
            this.activeResizeHandle = target;
        }
        else {
            this.setActiveResizeElement(target);
        }
        if (this.activeResizeElement) {
            this.initPosition(event);
        }
        else {
            this.reset();
        }
        return [];
    }
    mouseMove(target, event) {
        super.mouseMove(target, event);
        if (this.isMouseDrag && this.activeResizeHandle) {
            // rely on the FeedbackMoveMouseListener to update the element bounds of selected elements
            // consider resize handles ourselves
            const actions = [
                (0, css_feedback_1.cursorFeedbackAction)(this.activeResizeHandle.isNwSeResize() ? css_feedback_1.CursorCSS.RESIZE_NWSE : css_feedback_1.CursorCSS.RESIZE_NESW),
                (0, css_feedback_1.applyCssClasses)(this.activeResizeHandle, ChangeBoundsListener.CSS_CLASS_ACTIVE)
            ];
            const positionUpdate = this.pointPositionUpdater.updatePosition(target, { x: event.pageX, y: event.pageY }, !event.altKey);
            if (positionUpdate) {
                const resizeActions = this.handleResizeOnClient(positionUpdate);
                actions.push(...resizeActions);
            }
            return actions;
        }
        return [];
    }
    draggingMouseUp(target, event) {
        if (this.pointPositionUpdater.isLastDragPositionUndefined()) {
            this.resetPosition();
            return [];
        }
        const actions = [];
        if (this.activeResizeHandle) {
            // Resize
            actions.push(...this.handleResize(this.activeResizeHandle));
        }
        else {
            // Move
            actions.push(...this.handleMoveOnServer(target));
        }
        this.resetPosition();
        return actions;
    }
    handleMoveOnServer(target) {
        const operations = [];
        operations.push(...this.handleMoveElementsOnServer(target));
        operations.push(...this.handleMoveRoutingPointsOnServer(target));
        if (operations.length > 0) {
            return [_glsp_sprotty_1.CompoundOperation.create(operations)];
        }
        return operations;
    }
    handleMoveElementsOnServer(target) {
        const result = [];
        const newBounds = [];
        const selectedElements = [];
        (0, smodel_util_1.forEachElement)(target.index, smodel_util_1.isNonRoutableSelectedMovableBoundsAware, element => {
            selectedElements.push(element);
        });
        const selectionSet = new Set(selectedElements);
        selectedElements
            .filter(element => !this.isChildOfSelected(selectionSet, element))
            .map(element => this.createElementAndBounds(element))
            .forEach(bounds => newBounds.push(...bounds));
        if (newBounds.length > 0) {
            result.push(_glsp_sprotty_1.ChangeBoundsOperation.create(newBounds));
        }
        return result;
    }
    isChildOfSelected(selectedElements, element) {
        while (element instanceof _glsp_sprotty_1.SChildElement) {
            element = element.parent;
            if (selectedElements.has(element)) {
                return true;
            }
        }
        return false;
    }
    handleMoveRoutingPointsOnServer(target) {
        const newRoutingPoints = [];
        const routerRegistry = this.tool.edgeRouterRegistry;
        if (routerRegistry) {
            //  If client routing is enabled -> delegate routingpoints of connected edges to server
            (0, smodel_util_1.forEachElement)(target.index, smodel_util_1.isNonRoutableSelectedMovableBoundsAware, element => {
                if (element instanceof _glsp_sprotty_1.SConnectableElement) {
                    element.incomingEdges
                        .map(connectable => (0, smodel_util_1.calcElementAndRoutingPoints)(connectable, routerRegistry))
                        .forEach(ear => newRoutingPoints.push(ear));
                    element.outgoingEdges
                        .map(connectable => (0, smodel_util_1.calcElementAndRoutingPoints)(connectable, routerRegistry))
                        .forEach(ear => newRoutingPoints.push(ear));
                }
            });
        }
        return newRoutingPoints.length > 0 ? [_glsp_sprotty_1.ChangeRoutingPointsOperation.create(newRoutingPoints)] : [];
    }
    handleResize(activeResizeHandle) {
        const actions = [];
        actions.push((0, css_feedback_1.cursorFeedbackAction)(css_feedback_1.CursorCSS.DEFAULT));
        actions.push((0, css_feedback_1.deleteCssClasses)(activeResizeHandle, ChangeBoundsListener.CSS_CLASS_ACTIVE));
        const resizeElement = (0, _glsp_sprotty_1.findParentByFeature)(activeResizeHandle, model_1.isResizable);
        if (this.isActiveResizeElement(resizeElement)) {
            this.createChangeBoundsAction(resizeElement).forEach(action => actions.push(action));
        }
        return actions;
    }
    selectionChanged(root, selectedElements) {
        if (this.activeResizeElement) {
            if (selectedElements.includes(this.activeResizeElement.id)) {
                // our active element is still selected, nothing to do
                return;
            }
            // try to find some other selected element and mark that active
            for (const elementId of selectedElements.reverse()) {
                const element = root.index.getById(elementId);
                if (element && this.setActiveResizeElement(element)) {
                    return;
                }
            }
            this.reset();
        }
    }
    setActiveResizeElement(target) {
        // check if we have a selected, moveable element (multi-selection allowed)
        const moveableElement = (0, _glsp_sprotty_1.findParentByFeature)(target, model_1.isBoundsAwareMoveable);
        if ((0, _glsp_sprotty_1.isSelected)(moveableElement)) {
            // only allow one element to have the element resize handles
            this.activeResizeElement = moveableElement;
            if ((0, model_1.isResizable)(this.activeResizeElement)) {
                this.tool.dispatchFeedback([change_bounds_tool_feedback_1.ShowChangeBoundsToolResizeFeedbackAction.create(this.activeResizeElement.id)], this);
            }
            return true;
        }
        return false;
    }
    isActiveResizeElement(element) {
        return element !== undefined && this.activeResizeElement !== undefined && element.id === this.activeResizeElement.id;
    }
    initPosition(event) {
        this.pointPositionUpdater.updateLastDragPosition({ x: event.pageX, y: event.pageY });
        if (this.activeResizeHandle) {
            const resizeElement = (0, _glsp_sprotty_1.findParentByFeature)(this.activeResizeHandle, model_1.isResizable);
            this.initialBounds = {
                x: resizeElement.bounds.x,
                y: resizeElement.bounds.y,
                width: resizeElement.bounds.width,
                height: resizeElement.bounds.height
            };
        }
    }
    reset() {
        if (this.activeResizeElement && (0, model_1.isResizable)(this.activeResizeElement)) {
            this.tool.dispatchFeedback([change_bounds_tool_feedback_1.HideChangeBoundsToolResizeFeedbackAction.create()], this);
        }
        this.tool.dispatchActions([(0, css_feedback_1.cursorFeedbackAction)(css_feedback_1.CursorCSS.DEFAULT)]);
        this.resetPosition();
    }
    resetPosition() {
        this.activeResizeHandle = undefined;
        this.pointPositionUpdater.resetPosition();
    }
    handleResizeOnClient(positionUpdate) {
        if (!this.activeResizeHandle) {
            return [];
        }
        const resizeElement = (0, _glsp_sprotty_1.findParentByFeature)(this.activeResizeHandle, model_1.isResizable);
        if (this.isActiveResizeElement(resizeElement)) {
            switch (this.activeResizeHandle.location) {
                case model_1.ResizeHandleLocation.TopLeft:
                    return this.handleTopLeftResize(resizeElement, positionUpdate);
                case model_1.ResizeHandleLocation.TopRight:
                    return this.handleTopRightResize(resizeElement, positionUpdate);
                case model_1.ResizeHandleLocation.BottomLeft:
                    return this.handleBottomLeftResize(resizeElement, positionUpdate);
                case model_1.ResizeHandleLocation.BottomRight:
                    return this.handleBottomRightResize(resizeElement, positionUpdate);
            }
        }
        return [];
    }
    handleTopLeftResize(resizeElement, positionUpdate) {
        return this.createSetBoundsAction(resizeElement, resizeElement.bounds.x + positionUpdate.x, resizeElement.bounds.y + positionUpdate.y, resizeElement.bounds.width - positionUpdate.x, resizeElement.bounds.height - positionUpdate.y);
    }
    handleTopRightResize(resizeElement, positionUpdate) {
        return this.createSetBoundsAction(resizeElement, resizeElement.bounds.x, resizeElement.bounds.y + positionUpdate.y, resizeElement.bounds.width + positionUpdate.x, resizeElement.bounds.height - positionUpdate.y);
    }
    handleBottomLeftResize(resizeElement, positionUpdate) {
        return this.createSetBoundsAction(resizeElement, resizeElement.bounds.x + positionUpdate.x, resizeElement.bounds.y, resizeElement.bounds.width - positionUpdate.x, resizeElement.bounds.height + positionUpdate.y);
    }
    handleBottomRightResize(resizeElement, positionUpdate) {
        return this.createSetBoundsAction(resizeElement, resizeElement.bounds.x, resizeElement.bounds.y, resizeElement.bounds.width + positionUpdate.x, resizeElement.bounds.height + positionUpdate.y);
    }
    createChangeBoundsAction(element) {
        if (this.isValidBoundChange(element, element.bounds, element.bounds)) {
            return [_glsp_sprotty_1.ChangeBoundsOperation.create([(0, smodel_util_1.toElementAndBounds)(element)])];
        }
        else if (this.initialBounds) {
            const actions = [];
            if (this.tool.movementRestrictor) {
                actions.push((0, movement_restrictor_1.removeMovementRestrictionFeedback)(element, this.tool.movementRestrictor));
            }
            actions.push(_glsp_sprotty_1.SetBoundsAction.create([{ elementId: element.id, newPosition: this.initialBounds, newSize: this.initialBounds }]));
            return actions;
        }
        return [];
    }
    createElementAndBounds(element) {
        if (this.isValidBoundChange(element, element.bounds, element.bounds)) {
            return [(0, smodel_util_1.toElementAndBounds)(element)];
        }
        return [];
    }
    createSetBoundsAction(element, x, y, width, height) {
        const newPosition = { x, y };
        const newSize = { width, height };
        const result = [];
        if (this.isValidBoundChange(element, newPosition, newSize)) {
            if (this.tool.movementRestrictor) {
                result.push((0, movement_restrictor_1.removeMovementRestrictionFeedback)(element, this.tool.movementRestrictor));
            }
            result.push(_glsp_sprotty_1.SetBoundsAction.create([{ elementId: element.id, newPosition, newSize }]));
        }
        else if (this.isValidSize(element, newSize)) {
            if (this.tool.movementRestrictor) {
                result.push((0, movement_restrictor_1.createMovementRestrictionFeedback)(element, this.tool.movementRestrictor));
            }
            result.push(_glsp_sprotty_1.SetBoundsAction.create([{ elementId: element.id, newPosition, newSize }]));
        }
        return result;
    }
    snap(position, element, isSnap) {
        return isSnap && this.tool.snapper ? this.tool.snapper.snap(position, element) : { x: position.x, y: position.y };
    }
    isValidBoundChange(element, newPosition, newSize) {
        return this.isValidSize(element, newSize) && this.isValidMove(element, newPosition);
    }
    isValidSize(element, size) {
        return (0, layout_utils_1.isValidSize)(element, size);
    }
    isValidMove(element, newPosition) {
        return (0, layout_utils_1.isValidMove)(element, newPosition, this.tool.movementRestrictor);
    }
}
ChangeBoundsListener.CSS_CLASS_ACTIVE = 'active';
exports.ChangeBoundsListener = ChangeBoundsListener;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/features/tools/delete-tool.js":
/*!*********************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/features/tools/delete-tool.js ***!
  \*********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var DelKeyDeleteTool_1, MouseDeleteTool_1;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.DeleteToolMouseListener = exports.MouseDeleteTool = exports.DeleteKeyListener = exports.DelKeyDeleteTool = void 0;
/********************************************************************************
 * Copyright (c) 2019-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const _glsp_sprotty_1 = __webpack_require__(/*! ../../glsp-sprotty/index */ "../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/index.js");
const css_feedback_1 = __webpack_require__(/*! ../tool-feedback/css-feedback */ "../../node_modules/@eclipse-glsp/client/lib/features/tool-feedback/css-feedback.js");
/**
 * Deletes selected elements when hitting the `Del` key.
 */
let DelKeyDeleteTool = DelKeyDeleteTool_1 = class DelKeyDeleteTool {
    constructor() {
        this.isEditTool = true;
        this.deleteKeyListener = new DeleteKeyListener();
    }
    get id() {
        return DelKeyDeleteTool_1.ID;
    }
    enable() {
        this.keytool.register(this.deleteKeyListener);
    }
    disable() {
        this.keytool.deregister(this.deleteKeyListener);
    }
};
DelKeyDeleteTool.ID = 'glsp.delete-keyboard';
__decorate([
    (0, inversify_1.inject)(_glsp_sprotty_1.KeyTool),
    __metadata("design:type", _glsp_sprotty_1.KeyTool)
], DelKeyDeleteTool.prototype, "keytool", void 0);
DelKeyDeleteTool = DelKeyDeleteTool_1 = __decorate([
    (0, inversify_1.injectable)()
], DelKeyDeleteTool);
exports.DelKeyDeleteTool = DelKeyDeleteTool;
let DeleteKeyListener = class DeleteKeyListener extends _glsp_sprotty_1.KeyListener {
    keyDown(element, event) {
        if ((0, _glsp_sprotty_1.matchesKeystroke)(event, 'Delete')) {
            const deleteElementIds = Array.from(element.root.index
                .all()
                .filter(e => (0, _glsp_sprotty_1.isDeletable)(e) && (0, _glsp_sprotty_1.isSelectable)(e) && e.selected)
                .filter(e => e.id !== e.root.id)
                .map(e => e.id));
            if (deleteElementIds.length > 0) {
                return [_glsp_sprotty_1.DeleteElementOperation.create(deleteElementIds)];
            }
        }
        return [];
    }
};
DeleteKeyListener = __decorate([
    (0, inversify_1.injectable)()
], DeleteKeyListener);
exports.DeleteKeyListener = DeleteKeyListener;
/**
 * Deletes selected elements when clicking on them.
 */
let MouseDeleteTool = MouseDeleteTool_1 = class MouseDeleteTool {
    constructor() {
        this.isEditTool = true;
        this.deleteToolMouseListener = new DeleteToolMouseListener();
    }
    get id() {
        return MouseDeleteTool_1.ID;
    }
    enable() {
        this.mouseTool.register(this.deleteToolMouseListener);
        this.feedbackDispatcher.registerFeedback(this, [(0, css_feedback_1.cursorFeedbackAction)(css_feedback_1.CursorCSS.ELEMENT_DELETION)]);
    }
    disable() {
        this.mouseTool.deregister(this.deleteToolMouseListener);
        this.feedbackDispatcher.registerFeedback(this, [(0, css_feedback_1.cursorFeedbackAction)()]);
    }
};
MouseDeleteTool.ID = 'glsp.delete-mouse';
__decorate([
    (0, inversify_1.inject)(_glsp_sprotty_1.TYPES.MouseTool),
    __metadata("design:type", Object)
], MouseDeleteTool.prototype, "mouseTool", void 0);
__decorate([
    (0, inversify_1.inject)(_glsp_sprotty_1.TYPES.IFeedbackActionDispatcher),
    __metadata("design:type", Object)
], MouseDeleteTool.prototype, "feedbackDispatcher", void 0);
MouseDeleteTool = MouseDeleteTool_1 = __decorate([
    (0, inversify_1.injectable)()
], MouseDeleteTool);
exports.MouseDeleteTool = MouseDeleteTool;
let DeleteToolMouseListener = class DeleteToolMouseListener extends _glsp_sprotty_1.MouseListener {
    mouseUp(target, event) {
        const deletableParent = (0, _glsp_sprotty_1.findParentByFeature)(target, _glsp_sprotty_1.isDeletable);
        if (deletableParent === undefined) {
            return [];
        }
        const result = [];
        result.push(_glsp_sprotty_1.DeleteElementOperation.create([deletableParent.id]));
        if (!(0, _glsp_sprotty_1.isCtrlOrCmd)(event)) {
            result.push(_glsp_sprotty_1.EnableDefaultToolsAction.create());
        }
        return result;
    }
};
DeleteToolMouseListener = __decorate([
    (0, inversify_1.injectable)()
], DeleteToolMouseListener);
exports.DeleteToolMouseListener = DeleteToolMouseListener;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/features/tools/di.config.js":
/*!*******************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/features/tools/di.config.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.enableDefaultToolsOnFocusLossModule = exports.configureMarqueeTool = exports.toolsModule = void 0;
/********************************************************************************
 * Copyright (c) 2019-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const _glsp_sprotty_1 = __webpack_require__(/*! ../../glsp-sprotty/index */ "../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/index.js");
const focus_change_action_1 = __webpack_require__(/*! ../../base/actions/focus-change-action */ "../../node_modules/@eclipse-glsp/client/lib/base/actions/focus-change-action.js");
const marquee_tool_feedback_1 = __webpack_require__(/*! ../tool-feedback/marquee-tool-feedback */ "../../node_modules/@eclipse-glsp/client/lib/features/tool-feedback/marquee-tool-feedback.js");
const change_bounds_tool_1 = __webpack_require__(/*! ./change-bounds-tool */ "../../node_modules/@eclipse-glsp/client/lib/features/tools/change-bounds-tool.js");
const delete_tool_1 = __webpack_require__(/*! ./delete-tool */ "../../node_modules/@eclipse-glsp/client/lib/features/tools/delete-tool.js");
const edge_creation_tool_1 = __webpack_require__(/*! ./edge-creation-tool */ "../../node_modules/@eclipse-glsp/client/lib/features/tools/edge-creation-tool.js");
const edge_edit_tool_1 = __webpack_require__(/*! ./edge-edit-tool */ "../../node_modules/@eclipse-glsp/client/lib/features/tools/edge-edit-tool.js");
const enable_default_tools_on_focus_loss_1 = __webpack_require__(/*! ./enable-default-tools-on-focus-loss */ "../../node_modules/@eclipse-glsp/client/lib/features/tools/enable-default-tools-on-focus-loss.js");
const glsp_manhattan_edge_router_1 = __webpack_require__(/*! ./glsp-manhattan-edge-router */ "../../node_modules/@eclipse-glsp/client/lib/features/tools/glsp-manhattan-edge-router.js");
const marquee_mouse_tool_1 = __webpack_require__(/*! ./marquee-mouse-tool */ "../../node_modules/@eclipse-glsp/client/lib/features/tools/marquee-mouse-tool.js");
const marquee_tool_1 = __webpack_require__(/*! ./marquee-tool */ "../../node_modules/@eclipse-glsp/client/lib/features/tools/marquee-tool.js");
const model_1 = __webpack_require__(/*! ./model */ "../../node_modules/@eclipse-glsp/client/lib/features/tools/model.js");
const node_creation_tool_1 = __webpack_require__(/*! ./node-creation-tool */ "../../node_modules/@eclipse-glsp/client/lib/features/tools/node-creation-tool.js");
const view_1 = __webpack_require__(/*! ./view */ "../../node_modules/@eclipse-glsp/client/lib/features/tools/view.js");
/**
 * Registers the default tools of GLSP (node and edge creation, changing bounds, edge editing, deletion)
 * and adds the marquee selection tool.
 */
exports.toolsModule = new inversify_1.ContainerModule((bind, _unbind, isBound, rebind) => {
    const context = { bind, isBound, rebind };
    // Register default tools
    (0, _glsp_sprotty_1.bindAsService)(context, _glsp_sprotty_1.TYPES.IDefaultTool, change_bounds_tool_1.ChangeBoundsTool);
    (0, _glsp_sprotty_1.bindAsService)(context, _glsp_sprotty_1.TYPES.IDefaultTool, edge_edit_tool_1.EdgeEditTool);
    (0, _glsp_sprotty_1.bindAsService)(context, _glsp_sprotty_1.TYPES.IDefaultTool, delete_tool_1.DelKeyDeleteTool);
    // Register  tools
    (0, _glsp_sprotty_1.bindAsService)(context, _glsp_sprotty_1.TYPES.ITool, delete_tool_1.MouseDeleteTool);
    (0, _glsp_sprotty_1.bindAsService)(context, _glsp_sprotty_1.TYPES.ITool, node_creation_tool_1.NodeCreationTool);
    (0, _glsp_sprotty_1.bindAsService)(context, _glsp_sprotty_1.TYPES.ITool, edge_creation_tool_1.EdgeCreationTool);
    configureMarqueeTool(context);
    (0, _glsp_sprotty_1.configureActionHandler)(context, _glsp_sprotty_1.TriggerNodeCreationAction.KIND, node_creation_tool_1.NodeCreationTool);
    (0, _glsp_sprotty_1.configureActionHandler)(context, _glsp_sprotty_1.TriggerEdgeCreationAction.KIND, edge_creation_tool_1.EdgeCreationTool);
    bind(glsp_manhattan_edge_router_1.GLSPManhattanEdgeRouter).toSelf().inSingletonScope();
    (0, _glsp_sprotty_1.bindOrRebind)(context, _glsp_sprotty_1.ManhattanEdgeRouter).toService(glsp_manhattan_edge_router_1.GLSPManhattanEdgeRouter);
});
function configureMarqueeTool(context) {
    (0, _glsp_sprotty_1.configureModelElement)(context, marquee_tool_feedback_1.MARQUEE, model_1.MarqueeNode, view_1.MarqueeView);
    (0, _glsp_sprotty_1.bindAsService)(context, _glsp_sprotty_1.TYPES.IDefaultTool, marquee_tool_1.MarqueeTool);
    (0, _glsp_sprotty_1.bindAsService)(context, _glsp_sprotty_1.TYPES.ITool, marquee_mouse_tool_1.MarqueeMouseTool);
}
exports.configureMarqueeTool = configureMarqueeTool;
/**
 * Enables the default tools in the tool manager if the diagram looses focus.
 */
exports.enableDefaultToolsOnFocusLossModule = new inversify_1.ContainerModule((bind, _unbind, isBound) => {
    (0, _glsp_sprotty_1.configureActionHandler)({ bind, isBound }, focus_change_action_1.FocusStateChangedAction.KIND, enable_default_tools_on_focus_loss_1.EnableDefaultToolsOnFocusLossHandler);
});


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/features/tools/edge-creation-tool.js":
/*!****************************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/features/tools/edge-creation-tool.js ***!
  \****************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var EdgeCreationTool_1;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.EdgeCreationToolMouseListener = exports.EdgeCreationTool = void 0;
/********************************************************************************
 * Copyright (c) 2019-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const _glsp_sprotty_1 = __webpack_require__(/*! ../../glsp-sprotty/index */ "../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/index.js");
const drag_aware_mouse_listener_1 = __webpack_require__(/*! ../../base/drag-aware-mouse-listener */ "../../node_modules/@eclipse-glsp/client/lib/base/drag-aware-mouse-listener.js");
const creation_tool_feedback_1 = __webpack_require__(/*! ../tool-feedback/creation-tool-feedback */ "../../node_modules/@eclipse-glsp/client/lib/features/tool-feedback/creation-tool-feedback.js");
const css_feedback_1 = __webpack_require__(/*! ../tool-feedback/css-feedback */ "../../node_modules/@eclipse-glsp/client/lib/features/tool-feedback/css-feedback.js");
const base_glsp_tool_1 = __webpack_require__(/*! ./base-glsp-tool */ "../../node_modules/@eclipse-glsp/client/lib/features/tools/base-glsp-tool.js");
/**
 * Tool to create connections in a Diagram, by selecting a source and target node.
 */
let EdgeCreationTool = EdgeCreationTool_1 = class EdgeCreationTool extends base_glsp_tool_1.BaseGLSPTool {
    get id() {
        return EdgeCreationTool_1.ID;
    }
    enable() {
        if (this.triggerAction === undefined) {
            throw new TypeError(`Could not enable tool ${this.id}.The triggerAction cannot be undefined.`);
        }
        this.creationToolMouseListener = new EdgeCreationToolMouseListener(this.triggerAction, this);
        this.mouseTool.register(this.creationToolMouseListener);
        this.feedbackEndMovingMouseListener = new creation_tool_feedback_1.FeedbackEdgeEndMovingMouseListener(this.anchorRegistry);
        this.mouseTool.register(this.feedbackEndMovingMouseListener);
        this.dispatchFeedback([(0, css_feedback_1.cursorFeedbackAction)(css_feedback_1.CursorCSS.OPERATION_NOT_ALLOWED)]);
    }
    disable() {
        this.mouseTool.deregister(this.creationToolMouseListener);
        this.mouseTool.deregister(this.feedbackEndMovingMouseListener);
        this.deregisterFeedback([creation_tool_feedback_1.RemoveFeedbackEdgeAction.create(), (0, css_feedback_1.cursorFeedbackAction)()]);
    }
    handle(action) {
        if (_glsp_sprotty_1.TriggerEdgeCreationAction.is(action)) {
            this.triggerAction = action;
            return _glsp_sprotty_1.EnableToolsAction.create([this.id]);
        }
    }
};
EdgeCreationTool.ID = 'tool_create_edge';
__decorate([
    (0, inversify_1.inject)(_glsp_sprotty_1.AnchorComputerRegistry),
    __metadata("design:type", _glsp_sprotty_1.AnchorComputerRegistry)
], EdgeCreationTool.prototype, "anchorRegistry", void 0);
EdgeCreationTool = EdgeCreationTool_1 = __decorate([
    (0, inversify_1.injectable)()
], EdgeCreationTool);
exports.EdgeCreationTool = EdgeCreationTool;
let EdgeCreationToolMouseListener = class EdgeCreationToolMouseListener extends drag_aware_mouse_listener_1.DragAwareMouseListener {
    constructor(triggerAction, tool) {
        super();
        this.triggerAction = triggerAction;
        this.tool = tool;
        this.allowedTarget = false;
        this.proxyEdge = new _glsp_sprotty_1.SEdge();
        this.proxyEdge.type = triggerAction.elementTypeId;
    }
    reinitialize() {
        this.source = undefined;
        this.target = undefined;
        this.currentTarget = undefined;
        this.allowedTarget = false;
        this.tool.dispatchFeedback([creation_tool_feedback_1.RemoveFeedbackEdgeAction.create()]);
    }
    nonDraggingMouseUp(_element, event) {
        const result = [];
        if (event.button === 0) {
            if (!this.isSourceSelected()) {
                if (this.currentTarget && this.allowedTarget) {
                    this.source = this.currentTarget.id;
                    this.tool.dispatchFeedback([
                        creation_tool_feedback_1.DrawFeedbackEdgeAction.create({ elementTypeId: this.triggerAction.elementTypeId, sourceId: this.source })
                    ]);
                }
            }
            else {
                if (this.currentTarget && this.allowedTarget) {
                    this.target = this.currentTarget.id;
                }
            }
            if (this.source && this.target) {
                result.push(_glsp_sprotty_1.CreateEdgeOperation.create({
                    elementTypeId: this.triggerAction.elementTypeId,
                    sourceElementId: this.source,
                    targetElementId: this.target,
                    args: this.triggerAction.args
                }));
                if (!(0, _glsp_sprotty_1.isCtrlOrCmd)(event)) {
                    result.push(_glsp_sprotty_1.EnableDefaultToolsAction.create());
                }
                else {
                    this.reinitialize();
                }
            }
        }
        else if (event.button === 2) {
            result.push(_glsp_sprotty_1.EnableDefaultToolsAction.create());
        }
        return result;
    }
    isSourceSelected() {
        return this.source !== undefined;
    }
    isTargetSelected() {
        return this.target !== undefined;
    }
    mouseOver(target, event) {
        const newCurrentTarget = (0, _glsp_sprotty_1.findParentByFeature)(target, _glsp_sprotty_1.isConnectable);
        if (newCurrentTarget !== this.currentTarget) {
            this.currentTarget = newCurrentTarget;
            if (this.currentTarget) {
                if (!this.isSourceSelected()) {
                    this.allowedTarget = this.isAllowedSource(newCurrentTarget);
                }
                else if (!this.isTargetSelected()) {
                    this.allowedTarget = this.isAllowedTarget(newCurrentTarget);
                }
                if (this.allowedTarget) {
                    const action = !this.isSourceSelected()
                        ? (0, css_feedback_1.cursorFeedbackAction)(css_feedback_1.CursorCSS.EDGE_CREATION_SOURCE)
                        : (0, css_feedback_1.cursorFeedbackAction)(css_feedback_1.CursorCSS.EDGE_CREATION_TARGET);
                    return [action];
                }
            }
            return [(0, css_feedback_1.cursorFeedbackAction)(css_feedback_1.CursorCSS.OPERATION_NOT_ALLOWED)];
        }
        return [];
    }
    isAllowedSource(element) {
        return element !== undefined && (0, _glsp_sprotty_1.isConnectable)(element) && element.canConnect(this.proxyEdge, 'source');
    }
    isAllowedTarget(element) {
        return element !== undefined && (0, _glsp_sprotty_1.isConnectable)(element) && element.canConnect(this.proxyEdge, 'target');
    }
};
EdgeCreationToolMouseListener = __decorate([
    (0, inversify_1.injectable)(),
    __metadata("design:paramtypes", [Object, EdgeCreationTool])
], EdgeCreationToolMouseListener);
exports.EdgeCreationToolMouseListener = EdgeCreationToolMouseListener;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/features/tools/edge-edit-tool.js":
/*!************************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/features/tools/edge-edit-tool.js ***!
  \************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var EdgeEditTool_1;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.EdgeEditTool = void 0;
/********************************************************************************
 * Copyright (c) 2019-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const _glsp_sprotty_1 = __webpack_require__(/*! ../../glsp-sprotty/index */ "../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/index.js");
const drag_aware_mouse_listener_1 = __webpack_require__(/*! ../../base/drag-aware-mouse-listener */ "../../node_modules/@eclipse-glsp/client/lib/base/drag-aware-mouse-listener.js");
const smodel_util_1 = __webpack_require__(/*! ../../utils/smodel-util */ "../../node_modules/@eclipse-glsp/client/lib/utils/smodel-util.js");
const model_1 = __webpack_require__(/*! ../reconnect/model */ "../../node_modules/@eclipse-glsp/client/lib/features/reconnect/model.js");
const selection_service_1 = __webpack_require__(/*! ../select/selection-service */ "../../node_modules/@eclipse-glsp/client/lib/features/select/selection-service.js");
const creation_tool_feedback_1 = __webpack_require__(/*! ../tool-feedback/creation-tool-feedback */ "../../node_modules/@eclipse-glsp/client/lib/features/tool-feedback/creation-tool-feedback.js");
const css_feedback_1 = __webpack_require__(/*! ../tool-feedback/css-feedback */ "../../node_modules/@eclipse-glsp/client/lib/features/tool-feedback/css-feedback.js");
const edge_edit_tool_feedback_1 = __webpack_require__(/*! ../tool-feedback/edge-edit-tool-feedback */ "../../node_modules/@eclipse-glsp/client/lib/features/tool-feedback/edge-edit-tool-feedback.js");
const base_glsp_tool_1 = __webpack_require__(/*! ./base-glsp-tool */ "../../node_modules/@eclipse-glsp/client/lib/features/tools/base-glsp-tool.js");
let EdgeEditTool = EdgeEditTool_1 = class EdgeEditTool extends base_glsp_tool_1.BaseGLSPTool {
    get id() {
        return EdgeEditTool_1.ID;
    }
    enable() {
        this.edgeEditListener = new EdgeEditListener(this);
        this.mouseTool.register(this.edgeEditListener);
        this.selectionService.register(this.edgeEditListener);
        // install feedback move mouse listener for client-side move updates
        this.feedbackEdgeSourceMovingListener = new edge_edit_tool_feedback_1.FeedbackEdgeSourceMovingMouseListener(this.anchorRegistry);
        this.feedbackEdgeTargetMovingListener = new edge_edit_tool_feedback_1.FeedbackEdgeTargetMovingMouseListener(this.anchorRegistry);
        this.feedbackMovingListener = new edge_edit_tool_feedback_1.FeedbackEdgeRouteMovingMouseListener(this.edgeRouterRegistry, this.snapper);
    }
    registerFeedbackListeners() {
        this.mouseTool.register(this.feedbackMovingListener);
        this.mouseTool.register(this.feedbackEdgeSourceMovingListener);
        this.mouseTool.register(this.feedbackEdgeTargetMovingListener);
    }
    deregisterFeedbackListeners() {
        this.mouseTool.deregister(this.feedbackEdgeSourceMovingListener);
        this.mouseTool.deregister(this.feedbackEdgeTargetMovingListener);
        this.mouseTool.deregister(this.feedbackMovingListener);
    }
    disable() {
        this.edgeEditListener.reset();
        this.selectionService.deregister(this.edgeEditListener);
        this.deregisterFeedbackListeners();
        this.mouseTool.deregister(this.edgeEditListener);
    }
};
EdgeEditTool.ID = 'glsp.edge-edit-tool';
__decorate([
    (0, inversify_1.inject)(_glsp_sprotty_1.TYPES.SelectionService),
    __metadata("design:type", selection_service_1.SelectionService)
], EdgeEditTool.prototype, "selectionService", void 0);
__decorate([
    (0, inversify_1.inject)(_glsp_sprotty_1.AnchorComputerRegistry),
    __metadata("design:type", _glsp_sprotty_1.AnchorComputerRegistry)
], EdgeEditTool.prototype, "anchorRegistry", void 0);
__decorate([
    (0, inversify_1.inject)(_glsp_sprotty_1.EdgeRouterRegistry),
    (0, inversify_1.optional)(),
    __metadata("design:type", _glsp_sprotty_1.EdgeRouterRegistry)
], EdgeEditTool.prototype, "edgeRouterRegistry", void 0);
__decorate([
    (0, inversify_1.inject)(_glsp_sprotty_1.TYPES.ISnapper),
    (0, inversify_1.optional)(),
    __metadata("design:type", Object)
], EdgeEditTool.prototype, "snapper", void 0);
EdgeEditTool = EdgeEditTool_1 = __decorate([
    (0, inversify_1.injectable)()
], EdgeEditTool);
exports.EdgeEditTool = EdgeEditTool;
class EdgeEditListener extends drag_aware_mouse_listener_1.DragAwareMouseListener {
    constructor(tool) {
        super();
        this.tool = tool;
    }
    isValidEdge(edge) {
        return edge !== undefined && edge.id !== (0, creation_tool_feedback_1.feedbackEdgeId)(edge.root) && (0, _glsp_sprotty_1.isSelected)(edge);
    }
    setEdgeSelected(edge) {
        if (this.edge && this.edge.id !== edge.id) {
            // reset from a previously selected edge
            this.reset();
        }
        this.edge = edge;
        // note: order is important here as we want the reconnect handles to cover the routing handles
        const feedbackActions = [];
        if ((0, _glsp_sprotty_1.canEditRouting)(edge)) {
            feedbackActions.push(edge_edit_tool_feedback_1.SwitchRoutingModeAction.create({ elementsToActivate: [this.edge.id] }));
        }
        if ((0, model_1.isReconnectable)(edge)) {
            feedbackActions.push(edge_edit_tool_feedback_1.ShowEdgeReconnectHandlesFeedbackAction.create(this.edge.id));
        }
        this.tool.dispatchFeedback(feedbackActions);
    }
    isEdgeSelected() {
        return this.edge !== undefined && (0, _glsp_sprotty_1.isSelected)(this.edge);
    }
    setReconnectHandleSelected(edge, reconnectHandle) {
        if (this.edge && this.edge.target && this.edge.source) {
            if ((0, model_1.isSourceRoutingHandle)(edge, reconnectHandle)) {
                this.tool.dispatchFeedback([
                    edge_edit_tool_feedback_1.HideEdgeReconnectHandlesFeedbackAction.create(),
                    (0, css_feedback_1.cursorFeedbackAction)(css_feedback_1.CursorCSS.EDGE_RECONNECT),
                    edge_edit_tool_feedback_1.DrawFeedbackEdgeSourceAction.create({ elementTypeId: this.edge.type, targetId: this.edge.targetId })
                ]);
                this.reconnectMode = 'NEW_SOURCE';
            }
            else if ((0, model_1.isTargetRoutingHandle)(edge, reconnectHandle)) {
                this.tool.dispatchFeedback([
                    edge_edit_tool_feedback_1.HideEdgeReconnectHandlesFeedbackAction.create(),
                    (0, css_feedback_1.cursorFeedbackAction)(css_feedback_1.CursorCSS.EDGE_CREATION_TARGET),
                    creation_tool_feedback_1.DrawFeedbackEdgeAction.create({ elementTypeId: this.edge.type, sourceId: this.edge.sourceId })
                ]);
                this.reconnectMode = 'NEW_TARGET';
            }
        }
    }
    isReconnecting() {
        return this.reconnectMode !== undefined;
    }
    isReconnectingNewSource() {
        return this.reconnectMode === 'NEW_SOURCE';
    }
    setRoutingHandleSelected(edge, routingHandle) {
        if (this.edge && this.edge.target && this.edge.source) {
            this.routingHandle = routingHandle;
        }
    }
    requiresReconnect(sourceId, targetId) {
        return this.edge !== undefined && (this.edge.sourceId !== sourceId || this.edge.targetId !== targetId);
    }
    setNewConnectable(connectable) {
        this.newConnectable = connectable;
    }
    isReadyToReconnect() {
        return this.edge && this.isReconnecting() && this.newConnectable !== undefined;
    }
    isReadyToReroute() {
        return this.routingHandle !== undefined;
    }
    mouseDown(target, event) {
        const result = super.mouseDown(target, event);
        if (event.button === 0) {
            const reconnectHandle = (0, _glsp_sprotty_1.findParentByFeature)(target, model_1.isReconnectHandle);
            const routingHandle = !reconnectHandle ? (0, _glsp_sprotty_1.findParentByFeature)(target, smodel_util_1.isRoutingHandle) : undefined;
            const edge = (0, _glsp_sprotty_1.findParentByFeature)(target, smodel_util_1.isRoutable);
            if (this.isEdgeSelected() && edge && reconnectHandle) {
                // PHASE 2 Reconnect: Select reconnect handle on selected edge
                this.setReconnectHandleSelected(edge, reconnectHandle);
            }
            else if (this.isEdgeSelected() && edge && routingHandle) {
                // PHASE 2 Reroute: Select routing handle on selected edge
                this.setRoutingHandleSelected(edge, routingHandle);
            }
            else if (this.isValidEdge(edge)) {
                // PHASE 1: Select edge
                this.tool.registerFeedbackListeners();
                this.setEdgeSelected(edge);
            }
        }
        else if (event.button === 2) {
            this.reset();
        }
        return result;
    }
    mouseMove(target, event) {
        const result = super.mouseMove(target, event);
        if (this.isMouseDrag) {
            // reset any selected connectables when we are dragging, maybe the user is just panning
            this.setNewConnectable(undefined);
        }
        return result;
    }
    mouseUp(target, event) {
        const result = super.mouseUp(target, event);
        if (!this.isReadyToReconnect() && !this.isReadyToReroute()) {
            return result;
        }
        if (this.edge && this.newConnectable) {
            const sourceElementId = this.isReconnectingNewSource() ? this.newConnectable.id : this.edge.sourceId;
            const targetElementId = this.isReconnectingNewSource() ? this.edge.targetId : this.newConnectable.id;
            if (this.requiresReconnect(sourceElementId, targetElementId)) {
                result.push(_glsp_sprotty_1.ReconnectEdgeOperation.create({ edgeElementId: this.edge.id, sourceElementId, targetElementId }));
            }
            this.reset();
        }
        else if (this.edge && this.routingHandle) {
            // we need to re-retrieve the edge as it might have changed due to a server update since we do not reset the state between
            // reroute actions
            const latestEdge = target.index.getById(this.edge.id);
            if (latestEdge && (0, smodel_util_1.isRoutable)(latestEdge)) {
                const newRoutingPoints = (0, smodel_util_1.calcElementAndRoutingPoints)(latestEdge, this.tool.edgeRouterRegistry);
                result.push(_glsp_sprotty_1.ChangeRoutingPointsOperation.create([newRoutingPoints]));
                this.routingHandle = undefined;
            }
        }
        return result;
    }
    mouseOver(target, _event) {
        if (this.edge && this.isReconnecting()) {
            const currentTarget = (0, _glsp_sprotty_1.findParentByFeature)(target, _glsp_sprotty_1.isConnectable);
            if (!this.newConnectable || currentTarget !== this.newConnectable) {
                this.setNewConnectable(currentTarget);
                if (currentTarget) {
                    if ((this.reconnectMode === 'NEW_SOURCE' && currentTarget.canConnect(this.edge, 'source')) ||
                        (this.reconnectMode === 'NEW_TARGET' && currentTarget.canConnect(this.edge, 'target'))) {
                        this.tool.dispatchFeedback([(0, css_feedback_1.cursorFeedbackAction)(css_feedback_1.CursorCSS.EDGE_RECONNECT)]);
                        return [];
                    }
                }
                this.tool.dispatchFeedback([(0, css_feedback_1.cursorFeedbackAction)(css_feedback_1.CursorCSS.OPERATION_NOT_ALLOWED)]);
            }
        }
        return [];
    }
    selectionChanged(root, selectedElements) {
        if (this.edge) {
            if (selectedElements.indexOf(this.edge.id) > -1) {
                // our active edge is still selected, nothing to do
                return;
            }
            if (this.isReconnecting()) {
                // we are reconnecting, so we may have clicked on a potential target
                return;
            }
            // try to find some other selected element and mark that active
            for (const elementId of selectedElements.reverse()) {
                const element = root.index.getById(elementId);
                if (element) {
                    const edge = (0, _glsp_sprotty_1.findParentByFeature)(element, smodel_util_1.isRoutable);
                    if (this.isValidEdge(edge)) {
                        // PHASE 1: Select edge
                        this.setEdgeSelected(edge);
                        return;
                    }
                }
            }
            this.reset();
        }
    }
    reset() {
        this.resetFeedback();
        this.resetData();
    }
    resetData() {
        this.edge = undefined;
        this.reconnectMode = undefined;
        this.newConnectable = undefined;
        this.routingHandle = undefined;
    }
    resetFeedback() {
        const result = [];
        if (this.edge) {
            result.push(edge_edit_tool_feedback_1.SwitchRoutingModeAction.create({ elementsToDeactivate: [this.edge.id] }));
        }
        result.push(...[edge_edit_tool_feedback_1.HideEdgeReconnectHandlesFeedbackAction.create(), (0, css_feedback_1.cursorFeedbackAction)(), creation_tool_feedback_1.RemoveFeedbackEdgeAction.create()]);
        this.tool.deregisterFeedback(result);
        this.tool.deregisterFeedbackListeners();
    }
}


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/features/tools/enable-default-tools-on-focus-loss.js":
/*!********************************************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/features/tools/enable-default-tools-on-focus-loss.js ***!
  \********************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.EnableDefaultToolsOnFocusLossHandler = void 0;
/********************************************************************************
 * Copyright (c) 2022-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const _glsp_sprotty_1 = __webpack_require__(/*! ../../glsp-sprotty/index */ "../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/index.js");
const focus_change_action_1 = __webpack_require__(/*! ../../base/actions/focus-change-action */ "../../node_modules/@eclipse-glsp/client/lib/base/actions/focus-change-action.js");
/**
 * Action handler that enables the default tools when the diagram lost focus.
 * @see FocusTracker
 * @see FocusStateChangedAction
 */
let EnableDefaultToolsOnFocusLossHandler = class EnableDefaultToolsOnFocusLossHandler {
    handle(action) {
        if (focus_change_action_1.FocusStateChangedAction.is(action) && !action.hasFocus) {
            return _glsp_sprotty_1.EnableDefaultToolsAction.create();
        }
    }
};
EnableDefaultToolsOnFocusLossHandler = __decorate([
    (0, inversify_1.injectable)()
], EnableDefaultToolsOnFocusLossHandler);
exports.EnableDefaultToolsOnFocusLossHandler = EnableDefaultToolsOnFocusLossHandler;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/features/tools/glsp-manhattan-edge-router.js":
/*!************************************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/features/tools/glsp-manhattan-edge-router.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2022-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.GLSPManhattanEdgeRouter = void 0;
const _glsp_sprotty_1 = __webpack_require__(/*! ../../glsp-sprotty/index */ "../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/index.js");
class GLSPManhattanEdgeRouter extends _glsp_sprotty_1.ManhattanEdgeRouter {
    applyInnerHandleMoves(edge, moves) {
        const route = this.route(edge);
        const routingPoints = edge.routingPoints;
        const minimalPointDistance = this.getOptions(edge).minimalPointDistance;
        moves.forEach(move => {
            const handle = move.handle;
            const index = handle.pointIndex;
            const correctedX = this.correctX(routingPoints, index, move.toPosition.x, minimalPointDistance);
            const correctedY = this.correctY(routingPoints, index, move.toPosition.y, minimalPointDistance);
            switch (handle.kind) {
                case 'manhattan-50%':
                    if (index < 0) {
                        if (routingPoints.length === 0) {
                            routingPoints.push({ x: correctedX, y: correctedY });
                            move.handle.pointIndex = 0;
                        }
                        else if ((0, _glsp_sprotty_1.almostEquals)(route[0].x, route[1].x)) {
                            this.alignX(routingPoints, 0, correctedX);
                        }
                        else {
                            this.alignY(routingPoints, 0, correctedY);
                        }
                    }
                    else if (index < routingPoints.length - 1) {
                        if ((0, _glsp_sprotty_1.almostEquals)(routingPoints[index].x, routingPoints[index + 1].x)) {
                            this.alignX(routingPoints, index, correctedX);
                            this.alignX(routingPoints, index + 1, correctedX);
                        }
                        else {
                            this.alignY(routingPoints, index, correctedY);
                            this.alignY(routingPoints, index + 1, correctedY);
                        }
                    }
                    else {
                        if ((0, _glsp_sprotty_1.almostEquals)(route[route.length - 2].x, route[route.length - 1].x)) {
                            this.alignX(routingPoints, routingPoints.length - 1, correctedX);
                        }
                        else {
                            this.alignY(routingPoints, routingPoints.length - 1, correctedY);
                        }
                    }
                    break;
            }
        });
    }
}
exports.GLSPManhattanEdgeRouter = GLSPManhattanEdgeRouter;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/features/tools/marquee-behavior.js":
/*!**************************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/features/tools/marquee-behavior.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2021-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.MarqueeUtil = void 0;
const _glsp_sprotty_1 = __webpack_require__(/*! ../../glsp-sprotty/index */ "../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/index.js");
const marquee_tool_feedback_1 = __webpack_require__(/*! ../tool-feedback/marquee-tool-feedback */ "../../node_modules/@eclipse-glsp/client/lib/features/tool-feedback/marquee-tool-feedback.js");
class MarqueeUtil {
    constructor(marqueeBehavior) {
        if (marqueeBehavior) {
            this.marqueeBehavior = marqueeBehavior;
        }
        else {
            this.marqueeBehavior = { entireElement: false, entireEdge: false };
        }
    }
    updateStartPoint(position) {
        this.startPoint = position;
    }
    updateCurrentPoint(position) {
        this.currentPoint = position;
    }
    drawMarqueeAction() {
        return marquee_tool_feedback_1.DrawMarqueeAction.create({ startPoint: this.startPoint, endPoint: this.currentPoint });
    }
    isEdgePathMarked(path) {
        if (!path) {
            return false;
        }
        const points = path
            .split(/M|L/)
            .filter(p => p)
            .map(p => {
            const coord = p.split(',');
            return { x: parseInt(coord[0], 10), y: parseInt(coord[1], 10) };
        });
        return this.isEdgeMarked(points);
    }
    isEdgeMarked(points) {
        return this.marqueeBehavior.entireEdge ? this.isEntireEdgeMarked(points) : this.isPartOfEdgeMarked(points);
    }
    isNodeMarked(elementBounds) {
        const horizontallyIn = this.startPoint.x < this.currentPoint.x
            ? this.isElementBetweenXAxis(elementBounds, this.startPoint.x, this.currentPoint.x)
            : this.isElementBetweenXAxis(elementBounds, this.currentPoint.x, this.startPoint.x);
        const verticallyIn = this.startPoint.y < this.currentPoint.y
            ? this.isElementBetweenYAxis(elementBounds, this.startPoint.y, this.currentPoint.y)
            : this.isElementBetweenYAxis(elementBounds, this.currentPoint.y, this.startPoint.y);
        return horizontallyIn && verticallyIn;
    }
    isEntireEdgeMarked(points) {
        for (let i = 0; i < points.length; i++) {
            if (!this.pointInRect(points[i])) {
                return false;
            }
        }
        return true;
    }
    isPartOfEdgeMarked(points) {
        for (let i = 0; i < points.length - 1; i++) {
            if (this.isLineMarked(points[i], points[i + 1])) {
                return true;
            }
        }
        return false;
    }
    isLineMarked(point1, point2) {
        const line = new _glsp_sprotty_1.PointToPointLine(point1, point2);
        return (this.pointInRect(point1) ||
            this.pointInRect(point2) ||
            this.lineIntersect(line, this.startPoint, { x: this.startPoint.x, y: this.currentPoint.y }) ||
            this.lineIntersect(line, this.startPoint, { x: this.currentPoint.x, y: this.startPoint.y }) ||
            this.lineIntersect(line, { x: this.currentPoint.x, y: this.startPoint.y }, this.currentPoint) ||
            this.lineIntersect(line, { x: this.startPoint.x, y: this.currentPoint.y }, this.currentPoint));
    }
    lineIntersect(line, p1, p2) {
        return line.intersection(new _glsp_sprotty_1.PointToPointLine(p1, p2)) !== undefined;
    }
    pointInRect(point) {
        const boolX = this.startPoint.x <= this.currentPoint.x
            ? this.isBetween(point.x, this.startPoint.x, this.currentPoint.x)
            : this.isBetween(point.x, this.currentPoint.x, this.startPoint.x);
        const boolY = this.startPoint.y <= this.currentPoint.y
            ? this.isBetween(point.y, this.startPoint.y, this.currentPoint.y)
            : this.isBetween(point.y, this.currentPoint.y, this.startPoint.y);
        return boolX && boolY;
    }
    isElementBetweenXAxis(elementBounds, marqueeLeft, marqueeRight) {
        const leftEdge = this.isBetween(elementBounds.x, marqueeLeft, marqueeRight);
        const rightEdge = this.isBetween(elementBounds.x + elementBounds.width, marqueeLeft, marqueeRight);
        if (this.marqueeBehavior.entireElement) {
            return leftEdge && rightEdge;
        }
        return (leftEdge ||
            rightEdge ||
            this.isBetween(marqueeLeft, elementBounds.x, elementBounds.x + elementBounds.width) ||
            this.isBetween(marqueeRight, elementBounds.x, elementBounds.x + elementBounds.width));
    }
    isElementBetweenYAxis(elementBounds, marqueeTop, marqueeBottom) {
        const topEdge = this.isBetween(elementBounds.y, marqueeTop, marqueeBottom);
        const bottomEdge = this.isBetween(elementBounds.y + elementBounds.height, marqueeTop, marqueeBottom);
        if (this.marqueeBehavior.entireElement) {
            return topEdge && bottomEdge;
        }
        return (topEdge ||
            bottomEdge ||
            this.isBetween(marqueeTop, elementBounds.y, elementBounds.y + elementBounds.height) ||
            this.isBetween(marqueeBottom, elementBounds.y, elementBounds.y + elementBounds.height));
    }
    isBetween(x, lower, upper) {
        return lower <= x && x <= upper;
    }
}
exports.MarqueeUtil = MarqueeUtil;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/features/tools/marquee-mouse-tool.js":
/*!****************************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/features/tools/marquee-mouse-tool.js ***!
  \****************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var MarqueeMouseTool_1;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ShiftKeyListener = exports.MarqueeMouseListener = exports.MarqueeMouseTool = void 0;
/********************************************************************************
 * Copyright (c) 2021-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const _glsp_sprotty_1 = __webpack_require__(/*! ../../glsp-sprotty/index */ "../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/index.js");
const drag_aware_mouse_listener_1 = __webpack_require__(/*! ../../base/drag-aware-mouse-listener */ "../../node_modules/@eclipse-glsp/client/lib/base/drag-aware-mouse-listener.js");
const viewpoint_util_1 = __webpack_require__(/*! ../../utils/viewpoint-util */ "../../node_modules/@eclipse-glsp/client/lib/utils/viewpoint-util.js");
const css_feedback_1 = __webpack_require__(/*! ../tool-feedback/css-feedback */ "../../node_modules/@eclipse-glsp/client/lib/features/tool-feedback/css-feedback.js");
const marquee_tool_feedback_1 = __webpack_require__(/*! ../tool-feedback/marquee-tool-feedback */ "../../node_modules/@eclipse-glsp/client/lib/features/tool-feedback/marquee-tool-feedback.js");
const base_glsp_tool_1 = __webpack_require__(/*! ./base-glsp-tool */ "../../node_modules/@eclipse-glsp/client/lib/features/tools/base-glsp-tool.js");
const marquee_behavior_1 = __webpack_require__(/*! ./marquee-behavior */ "../../node_modules/@eclipse-glsp/client/lib/features/tools/marquee-behavior.js");
let MarqueeMouseTool = MarqueeMouseTool_1 = class MarqueeMouseTool extends base_glsp_tool_1.BaseGLSPTool {
    constructor() {
        super(...arguments);
        this.shiftKeyListener = new ShiftKeyListener();
    }
    get id() {
        return MarqueeMouseTool_1.ID;
    }
    enable() {
        this.marqueeMouseListener = new MarqueeMouseListener(this.domHelper, this.editorContext.modelRoot, this.marqueeBehavior);
        this.mouseTool.register(this.marqueeMouseListener);
        this.keyTool.register(this.shiftKeyListener);
        this.dispatchFeedback([(0, css_feedback_1.cursorFeedbackAction)(css_feedback_1.CursorCSS.MARQUEE)]);
    }
    disable() {
        this.mouseTool.deregister(this.marqueeMouseListener);
        this.keyTool.deregister(this.shiftKeyListener);
        this.deregisterFeedback([(0, css_feedback_1.cursorFeedbackAction)()]);
    }
};
MarqueeMouseTool.ID = 'glsp.marquee-mouse-tool';
__decorate([
    (0, inversify_1.inject)(_glsp_sprotty_1.TYPES.DOMHelper),
    __metadata("design:type", _glsp_sprotty_1.DOMHelper)
], MarqueeMouseTool.prototype, "domHelper", void 0);
__decorate([
    (0, inversify_1.inject)(_glsp_sprotty_1.TYPES.IMarqueeBehavior),
    (0, inversify_1.optional)(),
    __metadata("design:type", Object)
], MarqueeMouseTool.prototype, "marqueeBehavior", void 0);
MarqueeMouseTool = MarqueeMouseTool_1 = __decorate([
    (0, inversify_1.injectable)()
], MarqueeMouseTool);
exports.MarqueeMouseTool = MarqueeMouseTool;
class MarqueeMouseListener extends drag_aware_mouse_listener_1.DragAwareMouseListener {
    constructor(domHelper, root, marqueeBehavior) {
        super();
        this.isActive = false;
        this.domHelper = domHelper;
        this.marqueeUtil = new marquee_behavior_1.MarqueeUtil(marqueeBehavior);
        this.nodes = Array.from(root.index
            .all()
            .map(e => e)
            .filter(e => (0, _glsp_sprotty_1.isSelectable)(e))
            .filter(e => e instanceof _glsp_sprotty_1.SNode));
        const sEdges = Array.from(root.index
            .all()
            .filter(e => e instanceof _glsp_sprotty_1.SEdge)
            .filter(e => (0, _glsp_sprotty_1.isSelectable)(e))
            .map(e => e.id));
        this.edges = Array.from(document.querySelectorAll('g')).filter(e => sEdges.includes(this.domHelper.findSModelIdByDOMElement(e)));
    }
    mouseDown(target, event) {
        this.isActive = true;
        this.marqueeUtil.updateStartPoint((0, viewpoint_util_1.getAbsolutePosition)(target, event));
        if (event.ctrlKey) {
            this.previouslySelected = Array.from(target.root.index
                .all()
                .map(e => e)
                .filter(e => (0, _glsp_sprotty_1.isSelected)(e))
                .map(e => e.id));
        }
        return [];
    }
    mouseMove(target, event) {
        this.marqueeUtil.updateCurrentPoint((0, viewpoint_util_1.getAbsolutePosition)(target, event));
        if (this.isActive) {
            const nodeIdsSelected = this.nodes.filter(e => this.marqueeUtil.isNodeMarked((0, viewpoint_util_1.toAbsoluteBounds)(e))).map(e => e.id);
            const edgeIdsSelected = this.edges.filter(e => this.isEdgeMarked(e)).map(e => this.domHelper.findSModelIdByDOMElement(e));
            const selected = nodeIdsSelected.concat(edgeIdsSelected);
            return [_glsp_sprotty_1.SelectAction.setSelection(selected.concat(this.previouslySelected)), this.marqueeUtil.drawMarqueeAction()];
        }
        return [];
    }
    mouseUp(target, event) {
        this.isActive = false;
        if (event.shiftKey) {
            return [marquee_tool_feedback_1.RemoveMarqueeAction.create()];
        }
        return [marquee_tool_feedback_1.RemoveMarqueeAction.create(), _glsp_sprotty_1.EnableDefaultToolsAction.create()];
    }
    isEdgeMarked(element) {
        if (!element.getAttribute('transform')) {
            if (element.children[0]) {
                const path = element.children[0].getAttribute('d');
                return this.marqueeUtil.isEdgePathMarked(path);
            }
        }
        return false;
    }
}
exports.MarqueeMouseListener = MarqueeMouseListener;
let ShiftKeyListener = class ShiftKeyListener extends _glsp_sprotty_1.KeyListener {
    keyUp(element, event) {
        if (event.shiftKey) {
            return [];
        }
        return [marquee_tool_feedback_1.RemoveMarqueeAction.create(), _glsp_sprotty_1.EnableDefaultToolsAction.create()];
    }
};
ShiftKeyListener = __decorate([
    (0, inversify_1.injectable)()
], ShiftKeyListener);
exports.ShiftKeyListener = ShiftKeyListener;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/features/tools/marquee-tool.js":
/*!**********************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/features/tools/marquee-tool.js ***!
  \**********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var MarqueeTool_1;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.MarqueeKeyListener = exports.MarqueeTool = void 0;
/********************************************************************************
 * Copyright (c) 2021-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const _glsp_sprotty_1 = __webpack_require__(/*! ../../glsp-sprotty/index */ "../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/index.js");
const base_glsp_tool_1 = __webpack_require__(/*! ../tools/base-glsp-tool */ "../../node_modules/@eclipse-glsp/client/lib/features/tools/base-glsp-tool.js");
const marquee_mouse_tool_1 = __webpack_require__(/*! ./marquee-mouse-tool */ "../../node_modules/@eclipse-glsp/client/lib/features/tools/marquee-mouse-tool.js");
let MarqueeTool = MarqueeTool_1 = class MarqueeTool extends base_glsp_tool_1.BaseGLSPTool {
    constructor() {
        super(...arguments);
        this.marqueeKeyListener = new MarqueeKeyListener();
    }
    get id() {
        return MarqueeTool_1.ID;
    }
    enable() {
        this.keyTool.register(this.marqueeKeyListener);
    }
    disable() {
        this.keyTool.deregister(this.marqueeKeyListener);
    }
};
MarqueeTool.ID = 'glsp.marquee-tool';
__decorate([
    (0, inversify_1.inject)(_glsp_sprotty_1.KeyTool),
    __metadata("design:type", _glsp_sprotty_1.KeyTool)
], MarqueeTool.prototype, "keytool", void 0);
MarqueeTool = MarqueeTool_1 = __decorate([
    (0, inversify_1.injectable)()
], MarqueeTool);
exports.MarqueeTool = MarqueeTool;
let MarqueeKeyListener = class MarqueeKeyListener extends _glsp_sprotty_1.KeyListener {
    keyDown(element, event) {
        if (event.shiftKey) {
            return [_glsp_sprotty_1.EnableToolsAction.create([marquee_mouse_tool_1.MarqueeMouseTool.ID])];
        }
        return [];
    }
};
MarqueeKeyListener = __decorate([
    (0, inversify_1.injectable)()
], MarqueeKeyListener);
exports.MarqueeKeyListener = MarqueeKeyListener;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/features/tools/model.js":
/*!***************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/features/tools/model.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.MarqueeNode = void 0;
/********************************************************************************
 * Copyright (c) 2021-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const _glsp_sprotty_1 = __webpack_require__(/*! ../../glsp-sprotty/index */ "../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/index.js");
class MarqueeNode extends _glsp_sprotty_1.RectangularNode {
}
MarqueeNode.DEFAULT_FEATURES = [_glsp_sprotty_1.boundsFeature];
exports.MarqueeNode = MarqueeNode;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/features/tools/node-creation-tool.js":
/*!****************************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/features/tools/node-creation-tool.js ***!
  \****************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var NodeCreationTool_1;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.NodeCreationToolMouseListener = exports.NodeCreationTool = void 0;
/********************************************************************************
 * Copyright (c) 2020-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const _glsp_sprotty_1 = __webpack_require__(/*! ../../glsp-sprotty/index */ "../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/index.js");
const drag_aware_mouse_listener_1 = __webpack_require__(/*! ../../base/drag-aware-mouse-listener */ "../../node_modules/@eclipse-glsp/client/lib/base/drag-aware-mouse-listener.js");
const viewpoint_util_1 = __webpack_require__(/*! ../../utils/viewpoint-util */ "../../node_modules/@eclipse-glsp/client/lib/utils/viewpoint-util.js");
const model_1 = __webpack_require__(/*! ../hints/model */ "../../node_modules/@eclipse-glsp/client/lib/features/hints/model.js");
const css_feedback_1 = __webpack_require__(/*! ../tool-feedback/css-feedback */ "../../node_modules/@eclipse-glsp/client/lib/features/tool-feedback/css-feedback.js");
const base_glsp_tool_1 = __webpack_require__(/*! ./base-glsp-tool */ "../../node_modules/@eclipse-glsp/client/lib/features/tools/base-glsp-tool.js");
let NodeCreationTool = NodeCreationTool_1 = class NodeCreationTool extends base_glsp_tool_1.BaseGLSPTool {
    get id() {
        return NodeCreationTool_1.ID;
    }
    enable() {
        if (this.triggerAction === undefined) {
            throw new TypeError(`Could not enable tool ${this.id}.The triggerAction cannot be undefined.`);
        }
        this.creationToolMouseListener = new NodeCreationToolMouseListener(this.triggerAction, this);
        this.mouseTool.register(this.creationToolMouseListener);
        this.dispatchFeedback([(0, css_feedback_1.cursorFeedbackAction)(css_feedback_1.CursorCSS.NODE_CREATION)]);
    }
    disable() {
        this.mouseTool.deregister(this.creationToolMouseListener);
        this.deregisterFeedback([(0, css_feedback_1.cursorFeedbackAction)()]);
    }
    handle(action) {
        if (_glsp_sprotty_1.TriggerNodeCreationAction.is(action)) {
            this.triggerAction = action;
            return _glsp_sprotty_1.EnableToolsAction.create([this.id]);
        }
    }
};
NodeCreationTool.ID = 'tool_create_node';
__decorate([
    (0, inversify_1.inject)(_glsp_sprotty_1.TYPES.ISnapper),
    (0, inversify_1.optional)(),
    __metadata("design:type", Object)
], NodeCreationTool.prototype, "snapper", void 0);
NodeCreationTool = NodeCreationTool_1 = __decorate([
    (0, inversify_1.injectable)()
], NodeCreationTool);
exports.NodeCreationTool = NodeCreationTool;
let NodeCreationToolMouseListener = class NodeCreationToolMouseListener extends drag_aware_mouse_listener_1.DragAwareMouseListener {
    constructor(triggerAction, tool) {
        super();
        this.triggerAction = triggerAction;
        this.tool = tool;
    }
    creationAllowed(elementTypeId) {
        return this.container && this.container.isContainableElement(elementTypeId);
    }
    get elementTypeId() {
        return this.triggerAction.elementTypeId;
    }
    nonDraggingMouseUp(target, event) {
        const result = [];
        if (this.creationAllowed(this.elementTypeId)) {
            const containerId = this.container ? this.container.id : undefined;
            let location = (0, viewpoint_util_1.getAbsolutePosition)(target, event);
            if (this.tool.snapper) {
                // Create a 0-bounds proxy element for snapping
                const elementProxy = new _glsp_sprotty_1.SNode();
                elementProxy.size = { width: 0, height: 0 };
                location = this.tool.snapper.snap(location, elementProxy);
            }
            result.push(_glsp_sprotty_1.CreateNodeOperation.create(this.elementTypeId, { location, containerId, args: this.triggerAction.args }));
            if (!(0, _glsp_sprotty_1.isCtrlOrCmd)(event)) {
                result.push(_glsp_sprotty_1.EnableDefaultToolsAction.create());
            }
        }
        return result;
    }
    mouseOver(target, event) {
        const currentContainer = (0, _glsp_sprotty_1.findParentByFeature)(target, model_1.isContainable);
        if (!this.container || currentContainer !== this.container) {
            this.container = currentContainer;
            const feedback = this.creationAllowed(this.elementTypeId)
                ? (0, css_feedback_1.cursorFeedbackAction)(css_feedback_1.CursorCSS.NODE_CREATION)
                : (0, css_feedback_1.cursorFeedbackAction)(css_feedback_1.CursorCSS.OPERATION_NOT_ALLOWED);
            this.tool.dispatchFeedback([feedback]);
        }
        return [];
    }
};
NodeCreationToolMouseListener = __decorate([
    (0, inversify_1.injectable)(),
    __metadata("design:paramtypes", [Object, NodeCreationTool])
], NodeCreationToolMouseListener);
exports.NodeCreationToolMouseListener = NodeCreationToolMouseListener;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/features/tools/view.js":
/*!**************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/features/tools/view.js ***!
  \**************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.MarqueeView = void 0;
/********************************************************************************
 * Copyright (c) 2021-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const _glsp_sprotty_1 = __webpack_require__(/*! ../../glsp-sprotty/index */ "../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/index.js");
// eslint-disable-next-line @typescript-eslint/no-unused-vars
const JSX = { createElement: _glsp_sprotty_1.svg };
let MarqueeView = class MarqueeView extends _glsp_sprotty_1.RectangularNodeView {
    render(node, context) {
        const graph = (JSX.createElement("g", null,
            JSX.createElement("rect", { "class-sprotty-node": true, "class-marquee": true, x: node.startPoint.x - node.endPoint.x <= 0 ? node.startPoint.x : node.endPoint.x, y: node.startPoint.y - node.endPoint.y <= 0 ? node.startPoint.y : node.endPoint.y, rx: 0, ry: 0, width: Math.abs(node.startPoint.x - node.endPoint.x), height: Math.abs(node.startPoint.y - node.endPoint.y) })));
        return graph;
    }
};
MarqueeView = __decorate([
    (0, inversify_1.injectable)()
], MarqueeView);
exports.MarqueeView = MarqueeView;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/features/validation/di.config.js":
/*!************************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/features/validation/di.config.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.markerNavigatorContextMenuModule = exports.markerNavigatorModule = exports.validationModule = void 0;
/********************************************************************************
 * Copyright (c) 2019-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const _glsp_sprotty_1 = __webpack_require__(/*! ../../glsp-sprotty/index */ "../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/index.js");
const marker_navigator_1 = __webpack_require__(/*! ./marker-navigator */ "../../node_modules/@eclipse-glsp/client/lib/features/validation/marker-navigator.js");
const validate_1 = __webpack_require__(/*! ./validate */ "../../node_modules/@eclipse-glsp/client/lib/features/validation/validate.js");
exports.validationModule = new inversify_1.ContainerModule((bind, _unbind, isBound) => {
    const context = { bind, isBound };
    (0, _glsp_sprotty_1.configureActionHandler)(context, _glsp_sprotty_1.SetMarkersAction.KIND, validate_1.SetMarkersActionHandler);
    (0, _glsp_sprotty_1.configureCommand)(context, validate_1.ApplyMarkersCommand);
    (0, _glsp_sprotty_1.configureCommand)(context, validate_1.DeleteMarkersCommand);
    bind(validate_1.ValidationFeedbackEmitter).toSelf().inSingletonScope();
});
exports.markerNavigatorModule = new inversify_1.ContainerModule((bind, _unbind, isBound) => {
    bind(marker_navigator_1.SModelElementComparator).to(marker_navigator_1.LeftToRightTopToBottomComparator).inSingletonScope();
    bind(marker_navigator_1.MarkerNavigator).toSelf().inSingletonScope();
    (0, _glsp_sprotty_1.configureActionHandler)({ bind, isBound }, marker_navigator_1.NavigateToMarkerAction.KIND, marker_navigator_1.NavigateToMarkerActionHandler);
});
/**
 * This module is not required if the diagram is deployed in Theia but only intended to be used
 * in a standalone deployment of GLSP. If the GLSP diagram is in Theia use the Theia-native
 * `registerMarkerNavigationCommands()` in `glsp-theia-integration` instead.
 */
exports.markerNavigatorContextMenuModule = new inversify_1.ContainerModule(bind => {
    (0, _glsp_sprotty_1.bindAsService)(bind, _glsp_sprotty_1.TYPES.IContextMenuProvider, marker_navigator_1.MarkerNavigatorContextMenuItemProvider);
    (0, _glsp_sprotty_1.bindAsService)(bind, _glsp_sprotty_1.TYPES.KeyListener, marker_navigator_1.MarkerNavigatorKeyListener);
});


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/features/validation/issue-marker.js":
/*!***************************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/features/validation/issue-marker.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.getSeverity = exports.createSIssue = exports.getSIssueMarker = exports.getOrCreateSIssueMarker = exports.GIssueMarker = void 0;
/********************************************************************************
 * Copyright (c) 2019-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const _glsp_sprotty_1 = __webpack_require__(/*! ../../glsp-sprotty/index */ "../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/index.js");
class GIssueMarker extends _glsp_sprotty_1.SIssueMarker {
    constructor() {
        super();
        this.issues = [];
        this.type = 'marker';
        this.features = new Set(_glsp_sprotty_1.SDecoration.DEFAULT_FEATURES);
    }
    computeProjectionCssClasses() {
        const severityCss = getSeverity(this);
        this.projectionCssClasses = ['sprotty-issue', 'sprotty-' + severityCss];
    }
}
exports.GIssueMarker = GIssueMarker;
/**
 * Retrieves the `SIssueMarker` contained by the provided model element as
 * direct child or a newly instantiated `SIssueMarker` if no child
 * `SIssueMarker` exists.
 * @param modelElement for which the `SIssueMarker` should be retrieved or created.
 * @returns the child `SIssueMarker` or a new `SIssueMarker` if no such child exists.
 */
function getOrCreateSIssueMarker(modelElement) {
    let issueMarker;
    issueMarker = getSIssueMarker(modelElement);
    if (issueMarker === undefined) {
        issueMarker = new GIssueMarker();
        if ((0, _glsp_sprotty_1.isBoundsAware)(modelElement)) {
            issueMarker.projectedBounds = modelElement.parentToLocal(modelElement.bounds);
        }
        modelElement.add(issueMarker);
    }
    return issueMarker;
}
exports.getOrCreateSIssueMarker = getOrCreateSIssueMarker;
/**
 * Retrieves the `SIssueMarker` contained by the provided model element as
 * direct child or `undefined` if such an `SIssueMarker` does not exist.
 * @param modelElement for which the `SIssueMarker` should be retrieved.
 * @returns the child `SIssueMarker` or `undefined` if no such child exists.
 */
function getSIssueMarker(modelElement) {
    let issueMarker;
    for (const child of modelElement.children) {
        if (child instanceof GIssueMarker) {
            issueMarker = child;
        }
    }
    return issueMarker;
}
exports.getSIssueMarker = getSIssueMarker;
/**
 * Creates an `SIssue` with `severity` and `message` set according to
 * the `kind` and `description` of the provided `Marker`.
 * @param marker `Marker` for that an `SIssue` should be created.
 * @returns the created `SIssue`.
 */
function createSIssue(marker, parent) {
    const issue = new _glsp_sprotty_1.SIssue();
    issue.message = marker.description;
    switch (marker.kind) {
        case _glsp_sprotty_1.MarkerKind.ERROR: {
            issue.severity = 'error';
            break;
        }
        case _glsp_sprotty_1.MarkerKind.INFO: {
            issue.severity = 'info';
            break;
        }
        case _glsp_sprotty_1.MarkerKind.WARNING: {
            issue.severity = 'warning';
            break;
        }
    }
    return issue;
}
exports.createSIssue = createSIssue;
function getSeverity(marker) {
    let currentSeverity = 'info';
    for (const severity of marker.issues.map(s => s.severity)) {
        if (severity === 'error') {
            return severity;
        }
        if (severity === 'warning' && currentSeverity === 'info') {
            currentSeverity = severity;
        }
    }
    return currentSeverity;
}
exports.getSeverity = getSeverity;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/features/validation/marker-navigator.js":
/*!*******************************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/features/validation/marker-navigator.js ***!
  \*******************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.MarkerNavigatorKeyListener = exports.MarkerNavigatorContextMenuItemProvider = exports.NavigateToMarkerActionHandler = exports.MarkerNavigator = exports.LeftToRightTopToBottomComparator = exports.SModelElementComparator = exports.NavigateToMarkerAction = void 0;
/********************************************************************************
 * Copyright (c) 2020-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const _glsp_sprotty_1 = __webpack_require__(/*! ../../glsp-sprotty/index */ "../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/index.js");
const marker_1 = __webpack_require__(/*! ../../utils/marker */ "../../node_modules/@eclipse-glsp/client/lib/utils/marker.js");
const smodel_util_1 = __webpack_require__(/*! ../../utils/smodel-util */ "../../node_modules/@eclipse-glsp/client/lib/utils/smodel-util.js");
const selection_service_1 = __webpack_require__(/*! ../select/selection-service */ "../../node_modules/@eclipse-glsp/client/lib/features/select/selection-service.js");
var NavigateToMarkerAction;
(function (NavigateToMarkerAction) {
    NavigateToMarkerAction.KIND = 'navigateToMarker';
    function is(object) {
        return _glsp_sprotty_1.Action.hasKind(object, NavigateToMarkerAction.KIND) && (0, _glsp_sprotty_1.hasStringProp)(object, 'direction') && (0, _glsp_sprotty_1.hasArrayProp)(object, 'severities');
    }
    NavigateToMarkerAction.is = is;
    function create(options) {
        return Object.assign({ kind: NavigateToMarkerAction.KIND, direction: 'next', severities: MarkerNavigator.ALL_SEVERITIES }, options);
    }
    NavigateToMarkerAction.create = create;
})(NavigateToMarkerAction = exports.NavigateToMarkerAction || (exports.NavigateToMarkerAction = {}));
class SModelElementComparator {
    compare(_one, _other) {
        return 0;
    }
}
exports.SModelElementComparator = SModelElementComparator;
/** Specifies the order of two selectable and bounds-aware elements left-to-right and top-to-bottom. */
let LeftToRightTopToBottomComparator = class LeftToRightTopToBottomComparator {
    compare(one, other) {
        const boundsOne = (0, _glsp_sprotty_1.findParentByFeature)(one, smodel_util_1.isSelectableAndBoundsAware);
        const boundsOther = (0, _glsp_sprotty_1.findParentByFeature)(other, smodel_util_1.isSelectableAndBoundsAware);
        if (boundsOne && boundsOther) {
            if (boundsOne.bounds.y !== boundsOther.bounds.y) {
                return boundsOne.bounds.y - boundsOther.bounds.y;
            }
            if (boundsOne.bounds.x !== boundsOther.bounds.x) {
                return boundsOne.bounds.x - boundsOther.bounds.x;
            }
        }
        return 0;
    }
};
LeftToRightTopToBottomComparator = __decorate([
    (0, inversify_1.injectable)()
], LeftToRightTopToBottomComparator);
exports.LeftToRightTopToBottomComparator = LeftToRightTopToBottomComparator;
/**
 * Specifies the next/previous marker in a graph model.
 *
 * This navigator uses a `MarkerComparator` to determine the order of markers. It can also return next/previous
 */
let MarkerNavigator = class MarkerNavigator {
    next(root, current, predicate = marker_1.MarkerPredicates.ALL) {
        const markers = this.getMarkers(root, predicate);
        if (current === undefined) {
            return markers.length > 0 ? markers[0] : undefined;
        }
        return markers[this.getNextIndex(current, markers) % markers.length];
    }
    previous(root, current, predicate = marker_1.MarkerPredicates.ALL) {
        const markers = this.getMarkers(root, predicate);
        if (current === undefined) {
            return markers.length > 0 ? markers[0] : undefined;
        }
        return markers[this.getPreviousIndex(current, markers) % markers.length];
    }
    getMarkers(root, predicate) {
        const markers = (0, marker_1.collectIssueMarkers)(root);
        return markers.filter(predicate).sort(this.markerComparator.compare);
    }
    getNextIndex(current, markers) {
        for (let index = 0; index < markers.length; index++) {
            if (this.markerComparator.compare(markers[index], current) > 0) {
                return index;
            }
        }
        return 0;
    }
    getPreviousIndex(current, markers) {
        for (let index = markers.length - 1; index >= 0; index--) {
            if (this.markerComparator.compare(markers[index], current) < 0) {
                return index;
            }
        }
        return markers.length - 1;
    }
};
MarkerNavigator.ALL_SEVERITIES = ['error', 'warning', 'info'];
__decorate([
    (0, inversify_1.inject)(SModelElementComparator),
    __metadata("design:type", SModelElementComparator)
], MarkerNavigator.prototype, "markerComparator", void 0);
MarkerNavigator = __decorate([
    (0, inversify_1.injectable)()
], MarkerNavigator);
exports.MarkerNavigator = MarkerNavigator;
let NavigateToMarkerActionHandler = class NavigateToMarkerActionHandler {
    handle(action) {
        const selected = this.getSelectedElements(action);
        const target = this.getTarget(action, selected);
        const selectableTarget = target ? (0, _glsp_sprotty_1.findParentByFeature)(target, _glsp_sprotty_1.isSelectable) : undefined;
        if (selectableTarget) {
            const deselectedElementsIDs = selected.map(e => e.id).filter(id => id !== selectableTarget.id);
            this.actionDispatcher.dispatch(_glsp_sprotty_1.SelectAction.create({ selectedElementsIDs: [selectableTarget.id], deselectedElementsIDs }));
            this.actionDispatcher.dispatch(_glsp_sprotty_1.CenterAction.create([selectableTarget.id]));
        }
    }
    getSelectedElements(action) {
        if (action.selectedElementIds && action.selectedElementIds.length > 0) {
            return (0, smodel_util_1.getElements)(this.selectionService.getModelRoot().index, action.selectedElementIds, _glsp_sprotty_1.isSelectable);
        }
        return this.selectionService.getSelectedElements();
    }
    getTarget(action, selected) {
        const root = this.selectionService.getModelRoot();
        const target = selected.sort(this.markerComparator.compare).find(_glsp_sprotty_1.isBoundsAware);
        if (action.direction === 'previous') {
            return this.markerNavigator.previous(root, target, marker => this.matchesSeverities(action, marker));
        }
        else {
            return this.markerNavigator.next(root, target, marker => this.matchesSeverities(action, marker));
        }
    }
    matchesSeverities(action, marker) {
        return marker.issues.find(issue => action.severities.includes(issue.severity)) !== undefined;
    }
};
__decorate([
    (0, inversify_1.inject)(SModelElementComparator),
    __metadata("design:type", SModelElementComparator)
], NavigateToMarkerActionHandler.prototype, "markerComparator", void 0);
__decorate([
    (0, inversify_1.inject)(MarkerNavigator),
    __metadata("design:type", MarkerNavigator)
], NavigateToMarkerActionHandler.prototype, "markerNavigator", void 0);
__decorate([
    (0, inversify_1.inject)(_glsp_sprotty_1.TYPES.SelectionService),
    __metadata("design:type", selection_service_1.SelectionService)
], NavigateToMarkerActionHandler.prototype, "selectionService", void 0);
__decorate([
    (0, inversify_1.inject)(_glsp_sprotty_1.TYPES.IActionDispatcher),
    __metadata("design:type", _glsp_sprotty_1.ActionDispatcher)
], NavigateToMarkerActionHandler.prototype, "actionDispatcher", void 0);
NavigateToMarkerActionHandler = __decorate([
    (0, inversify_1.injectable)()
], NavigateToMarkerActionHandler);
exports.NavigateToMarkerActionHandler = NavigateToMarkerActionHandler;
let MarkerNavigatorContextMenuItemProvider = class MarkerNavigatorContextMenuItemProvider {
    getItems(root, lastMousePosition) {
        const selectedElementIds = Array.from(this.selectionService.getSelectedElementIDs());
        const hasMarkers = (0, marker_1.collectIssueMarkers)(root).length > 0;
        return Promise.resolve([
            {
                id: 'navigate',
                label: 'Go to',
                group: 'navigate',
                actions: [],
                children: [
                    {
                        id: 'next-marker',
                        label: 'Next marker',
                        group: 'marker',
                        actions: [NavigateToMarkerAction.create({ direction: 'next', selectedElementIds })],
                        isEnabled: () => hasMarkers
                    },
                    {
                        id: 'previous-marker',
                        label: 'Previous marker',
                        group: 'marker',
                        actions: [NavigateToMarkerAction.create({ direction: 'previous', selectedElementIds })],
                        isEnabled: () => hasMarkers
                    }
                ]
            }
        ]);
    }
};
__decorate([
    (0, inversify_1.inject)(_glsp_sprotty_1.TYPES.SelectionService),
    __metadata("design:type", selection_service_1.SelectionService)
], MarkerNavigatorContextMenuItemProvider.prototype, "selectionService", void 0);
MarkerNavigatorContextMenuItemProvider = __decorate([
    (0, inversify_1.injectable)()
], MarkerNavigatorContextMenuItemProvider);
exports.MarkerNavigatorContextMenuItemProvider = MarkerNavigatorContextMenuItemProvider;
let MarkerNavigatorKeyListener = class MarkerNavigatorKeyListener extends _glsp_sprotty_1.KeyListener {
    keyDown(_element, event) {
        if ((0, _glsp_sprotty_1.matchesKeystroke)(event, 'Period', 'ctrl')) {
            return [NavigateToMarkerAction.create({ direction: 'next' })];
        }
        else if ((0, _glsp_sprotty_1.matchesKeystroke)(event, 'Comma', 'ctrl')) {
            return [NavigateToMarkerAction.create({ direction: 'previous' })];
        }
        return [];
    }
};
MarkerNavigatorKeyListener = __decorate([
    (0, inversify_1.injectable)()
], MarkerNavigatorKeyListener);
exports.MarkerNavigatorKeyListener = MarkerNavigatorKeyListener;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/features/validation/validate.js":
/*!***********************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/features/validation/validate.js ***!
  \***********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.DeleteMarkersCommand = exports.ApplyMarkersCommand = exports.ApplyMarkersAction = exports.SetMarkersActionHandler = exports.ExternalMarkerManager = exports.ValidationFeedbackEmitter = void 0;
/********************************************************************************
 * Copyright (c) 2019-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const _glsp_sprotty_1 = __webpack_require__(/*! ../../glsp-sprotty/index */ "../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/index.js");
const editor_context_service_1 = __webpack_require__(/*! ../../base/editor-context-service */ "../../node_modules/@eclipse-glsp/client/lib/base/editor-context-service.js");
const smodel_util_1 = __webpack_require__(/*! ../../utils/smodel-util */ "../../node_modules/@eclipse-glsp/client/lib/utils/smodel-util.js");
const model_1 = __webpack_require__(/*! ../tool-feedback/model */ "../../node_modules/@eclipse-glsp/client/lib/features/tool-feedback/model.js");
const issue_marker_1 = __webpack_require__(/*! ./issue-marker */ "../../node_modules/@eclipse-glsp/client/lib/features/validation/issue-marker.js");
/**
 * Feedback emitter sending actions for visualizing model validation feedback and
 * re-establishing this feedback visualization after the model has been updated.
 */
let ValidationFeedbackEmitter = class ValidationFeedbackEmitter {
    constructor() {
        this.registeredFeedbackByReason = new Map();
    }
    /**
     * Register the action that should be emitted for visualizing validation feedback.
     * @param action the action that should be emitted when the model is updated and that will visualize the model validation feedback.
     * @param reason the reason for this validation feedback.
     */
    registerValidationFeedbackAction(action, reason = '') {
        // De-register feedback and clear existing markers with the same reason
        const previousFeedbackWithSameReason = this.registeredFeedbackByReason.get(reason);
        if (previousFeedbackWithSameReason) {
            this.feedbackActionDispatcher.deregisterFeedback(this, [previousFeedbackWithSameReason]);
            const deleteMarkersAction = _glsp_sprotty_1.DeleteMarkersAction.create(previousFeedbackWithSameReason.markers);
            this.actionDispatcher().then(dispatcher => dispatcher.dispatch(deleteMarkersAction));
        }
        // Register new action responsible for applying markers and re-applying them when the model is updated
        this.registeredFeedbackByReason.set(reason, action);
        this.feedbackActionDispatcher.registerFeedback(this, [...this.registeredFeedbackByReason.values()]);
    }
};
__decorate([
    (0, inversify_1.inject)(_glsp_sprotty_1.TYPES.IFeedbackActionDispatcher),
    __metadata("design:type", Object)
], ValidationFeedbackEmitter.prototype, "feedbackActionDispatcher", void 0);
__decorate([
    (0, inversify_1.inject)(_glsp_sprotty_1.TYPES.IActionDispatcherProvider),
    __metadata("design:type", Function)
], ValidationFeedbackEmitter.prototype, "actionDispatcher", void 0);
ValidationFeedbackEmitter = __decorate([
    (0, inversify_1.injectable)()
], ValidationFeedbackEmitter);
exports.ValidationFeedbackEmitter = ValidationFeedbackEmitter;
/**
 * Manages current markers for the outside of the GLSP.
 *
 * Typically this is rebound by the surrounding tool, e.g. Theia, to be aware of
 * and propagate current markers.
 */
let ExternalMarkerManager = class ExternalMarkerManager {
    connect(actionDispatcher) {
        this.actionDispatcher = actionDispatcher;
    }
    removeMarkers(markers) {
        if (this.actionDispatcher) {
            this.actionDispatcher.dispatch(_glsp_sprotty_1.DeleteMarkersAction.create(markers));
        }
    }
};
ExternalMarkerManager = __decorate([
    (0, inversify_1.injectable)()
], ExternalMarkerManager);
exports.ExternalMarkerManager = ExternalMarkerManager;
let SetMarkersActionHandler = class SetMarkersActionHandler {
    handle(action) {
        const markers = action.markers;
        this.setMarkers(markers, action.reason);
    }
    async setMarkers(markers, reason) {
        var _a;
        const uri = await this.editorContextService.getSourceUri();
        (_a = this.externalMarkerManager) === null || _a === void 0 ? void 0 : _a.setMarkers(markers, reason, uri);
        const applyMarkersAction = ApplyMarkersAction.create(markers);
        this.validationFeedbackEmitter.registerValidationFeedbackAction(applyMarkersAction, reason);
    }
};
__decorate([
    (0, inversify_1.inject)(ValidationFeedbackEmitter),
    __metadata("design:type", ValidationFeedbackEmitter)
], SetMarkersActionHandler.prototype, "validationFeedbackEmitter", void 0);
__decorate([
    (0, inversify_1.inject)(ExternalMarkerManager),
    (0, inversify_1.optional)(),
    __metadata("design:type", ExternalMarkerManager)
], SetMarkersActionHandler.prototype, "externalMarkerManager", void 0);
__decorate([
    (0, inversify_1.inject)(editor_context_service_1.EditorContextService),
    __metadata("design:type", editor_context_service_1.EditorContextService)
], SetMarkersActionHandler.prototype, "editorContextService", void 0);
SetMarkersActionHandler = __decorate([
    (0, inversify_1.injectable)()
], SetMarkersActionHandler);
exports.SetMarkersActionHandler = SetMarkersActionHandler;
var ApplyMarkersAction;
(function (ApplyMarkersAction) {
    ApplyMarkersAction.KIND = 'applyMarkers';
    function is(object) {
        return _glsp_sprotty_1.Action.hasKind(object, ApplyMarkersAction.KIND) && (0, _glsp_sprotty_1.hasArrayProp)(object, 'markers');
    }
    ApplyMarkersAction.is = is;
    function create(markers) {
        return {
            kind: ApplyMarkersAction.KIND,
            markers
        };
    }
    ApplyMarkersAction.create = create;
})(ApplyMarkersAction = exports.ApplyMarkersAction || (exports.ApplyMarkersAction = {}));
/**
 * Handles {@link ApplyMarkersAction}s by creating the corresponding {@link SIssueMarker}s and
 * adding them to the graphical model.
 */
let ApplyMarkersCommand = class ApplyMarkersCommand extends model_1.FeedbackCommand {
    constructor(action) {
        super();
        this.action = action;
    }
    execute(context) {
        this.action.markers.forEach(marker => {
            const modelElement = context.root.index.getById(marker.elementId);
            if (modelElement instanceof _glsp_sprotty_1.SParentElement) {
                const issueMarker = (0, issue_marker_1.getOrCreateSIssueMarker)(modelElement);
                const issue = (0, issue_marker_1.createSIssue)(marker);
                issueMarker.issues.push(issue);
                if (issueMarker instanceof issue_marker_1.GIssueMarker) {
                    issueMarker.computeProjectionCssClasses();
                }
                addMaxSeverityCSSClassToIssueParent(modelElement, issueMarker);
            }
        });
        return context.root;
    }
};
ApplyMarkersCommand.KIND = ApplyMarkersAction.KIND;
ApplyMarkersCommand = __decorate([
    (0, inversify_1.injectable)(),
    __param(0, (0, inversify_1.inject)(_glsp_sprotty_1.TYPES.Action)),
    __metadata("design:paramtypes", [Object])
], ApplyMarkersCommand);
exports.ApplyMarkersCommand = ApplyMarkersCommand;
function addMaxSeverityCSSClassToIssueParent(modelElement, issueMarker) {
    const maxSeverityCSSClass = (0, issue_marker_1.getSeverity)(issueMarker);
    if (!modelElement.cssClasses) {
        modelElement.cssClasses = [maxSeverityCSSClass];
    }
    else {
        modelElement.cssClasses = modelElement.cssClasses.filter((value) => !value.match('info|warning|error'));
        modelElement.cssClasses.push(maxSeverityCSSClass);
    }
}
function removeCSSClassFromIssueParent(modelElement, issueMarker) {
    const severity = (0, issue_marker_1.getSeverity)(issueMarker);
    (0, smodel_util_1.removeCssClasses)(modelElement, [severity]);
}
/**
 * Command for handling `DeleteMarkersAction`
 */
let DeleteMarkersCommand = class DeleteMarkersCommand extends model_1.FeedbackCommand {
    constructor(action) {
        super();
        this.action = action;
    }
    execute(context) {
        this.action.markers.forEach(marker => {
            const modelElement = context.root.index.getById(marker.elementId);
            if (modelElement instanceof _glsp_sprotty_1.SParentElement) {
                const issueMarker = (0, issue_marker_1.getSIssueMarker)(modelElement);
                if (issueMarker) {
                    removeCSSClassFromIssueParent(modelElement, issueMarker);
                    for (let index = 0; index < issueMarker.issues.length; ++index) {
                        const issue = issueMarker.issues[index];
                        if (issue.message === marker.description) {
                            issueMarker.issues.splice(index--, 1);
                        }
                    }
                    if (issueMarker.issues.length === 0) {
                        modelElement.remove(issueMarker);
                    }
                    else {
                        addMaxSeverityCSSClassToIssueParent(modelElement, issueMarker);
                    }
                }
            }
        });
        return context.root;
    }
};
DeleteMarkersCommand.KIND = _glsp_sprotty_1.DeleteMarkersAction.KIND;
DeleteMarkersCommand = __decorate([
    (0, inversify_1.injectable)(),
    __param(0, (0, inversify_1.inject)(_glsp_sprotty_1.TYPES.Action)),
    __metadata("design:paramtypes", [Object])
], DeleteMarkersCommand);
exports.DeleteMarkersCommand = DeleteMarkersCommand;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/features/viewport/di.config.js":
/*!**********************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/features/viewport/di.config.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
/********************************************************************************
 * Copyright (c) 2021-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const _glsp_sprotty_1 = __webpack_require__(/*! ../../glsp-sprotty/index */ "../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/index.js");
const glsp_scroll_mouse_listener_1 = __webpack_require__(/*! ./glsp-scroll-mouse-listener */ "../../node_modules/@eclipse-glsp/client/lib/features/viewport/glsp-scroll-mouse-listener.js");
const glspViewportModule = new inversify_1.ContainerModule((bind, _unbind, isBound) => {
    const context = { bind, isBound };
    (0, _glsp_sprotty_1.configureCommand)(context, _glsp_sprotty_1.CenterCommand);
    (0, _glsp_sprotty_1.configureCommand)(context, _glsp_sprotty_1.FitToScreenCommand);
    (0, _glsp_sprotty_1.configureCommand)(context, _glsp_sprotty_1.GetViewportCommand);
    (0, _glsp_sprotty_1.configureCommand)(context, _glsp_sprotty_1.SetViewportCommand);
    (0, _glsp_sprotty_1.bindAsService)(context, _glsp_sprotty_1.TYPES.KeyListener, _glsp_sprotty_1.CenterKeyboardListener);
    (0, _glsp_sprotty_1.bindAsService)(context, _glsp_sprotty_1.TYPES.MouseListener, _glsp_sprotty_1.ZoomMouseListener);
    (0, _glsp_sprotty_1.bindAsService)(context, _glsp_sprotty_1.TYPES.MouseListener, glsp_scroll_mouse_listener_1.GLSPScrollMouseListener);
    (0, _glsp_sprotty_1.configureActionHandler)(context, _glsp_sprotty_1.EnableToolsAction.KIND, glsp_scroll_mouse_listener_1.GLSPScrollMouseListener);
    (0, _glsp_sprotty_1.configureActionHandler)(context, _glsp_sprotty_1.EnableDefaultToolsAction.KIND, glsp_scroll_mouse_listener_1.GLSPScrollMouseListener);
});
exports["default"] = glspViewportModule;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/features/viewport/glsp-scroll-mouse-listener.js":
/*!***************************************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/features/viewport/glsp-scroll-mouse-listener.js ***!
  \***************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.GLSPScrollMouseListener = void 0;
/********************************************************************************
 * Copyright (c) 2021-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const _glsp_sprotty_1 = __webpack_require__(/*! ../../glsp-sprotty/index */ "../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/index.js");
const marquee_mouse_tool_1 = __webpack_require__(/*! ../tools/marquee-mouse-tool */ "../../node_modules/@eclipse-glsp/client/lib/features/tools/marquee-mouse-tool.js");
let GLSPScrollMouseListener = class GLSPScrollMouseListener extends _glsp_sprotty_1.ScrollMouseListener {
    constructor() {
        super(...arguments);
        this.preventScrolling = false;
    }
    handle(action) {
        if (action.kind === _glsp_sprotty_1.EnableToolsAction.KIND) {
            if (action.toolIds.includes(marquee_mouse_tool_1.MarqueeMouseTool.ID)) {
                this.preventScrolling = true;
            }
        }
        else if (action.kind === _glsp_sprotty_1.EnableDefaultToolsAction.KIND) {
            this.preventScrolling = false;
        }
    }
    mouseDown(target, event) {
        if (this.preventScrolling) {
            return [];
        }
        return super.mouseDown(target, event);
    }
};
GLSPScrollMouseListener = __decorate([
    (0, inversify_1.injectable)()
], GLSPScrollMouseListener);
exports.GLSPScrollMouseListener = GLSPScrollMouseListener;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/augmented-actions.js":
/*!*************************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/augmented-actions.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.EnableToolsAction = exports.EnableDefaultToolsAction = void 0;
/********************************************************************************
 * Copyright (c) 2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
/* eslint-disable @typescript-eslint/no-shadow */
/* eslint-disable-next-line no-restricted-imports*/
const protocol_1 = __webpack_require__(/*! @eclipse-glsp/protocol */ "../../node_modules/@eclipse-glsp/protocol/lib/index.js");
const actions_1 = __webpack_require__(/*! sprotty-protocol/lib/actions */ "../../node_modules/sprotty-protocol/lib/actions.js");
const tool_1 = __webpack_require__(/*! sprotty/lib/base/tool-manager/tool */ "../../node_modules/sprotty/lib/base/tool-manager/tool.js");
Object.defineProperty(exports, "EnableDefaultToolsAction", ({ enumerable: true, get: function () { return tool_1.EnableDefaultToolsAction; } }));
Object.defineProperty(exports, "EnableToolsAction", ({ enumerable: true, get: function () { return tool_1.EnableToolsAction; } }));
actions_1.SetBoundsAction.is = (object) => protocol_1.Action.hasKind(object, actions_1.SetBoundsAction.KIND) && (0, protocol_1.hasArrayProp)(object, 'bounds');
tool_1.EnableDefaultToolsAction.is = (object) => protocol_1.Action.hasKind(object, tool_1.EnableDefaultToolsAction.KIND);
tool_1.EnableToolsAction.is = (object) => protocol_1.Action.hasKind(object, tool_1.EnableToolsAction.KIND) && (0, protocol_1.hasArrayProp)(object, 'toolIds');


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/index.js":
/*!*************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/index.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2022-2023 STMicroelectronics and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
/**
 * Sprotty still keeps the old class based action definitions as deprecated API.
 * This causes name clashes with the GLSP protocol actions when reexport sprotty.
 * The deprecated definitions are planned to be removed with Sprotty 1.0.0.
 * Until then we have to manually reexport the sprotty main index and exclude the clashing types.
 */
/* eslint-disable no-restricted-imports */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.HoverFeedbackCommand = exports.ClosePopupActionHandler = exports.AbstractHoverMouseListener = exports.SvgExporter = exports.ExportSvgAction = exports.RequestExportSvgAction = exports.ExportSvgPostprocessor = exports.ExportSvgKeyListener = exports.ExportSvgCommand = exports.configureButtonHandler = exports.ButtonHandlerRegistry = exports.layoutableChildFeature = exports.layoutContainerFeature = exports.isSizeable = exports.isLayoutableChild = exports.isLayoutContainer = exports.isBoundsAware = exports.isAlignable = exports.getAbsoluteClientBounds = exports.getAbsoluteBounds = exports.findChildrenAtPosition = exports.boundsFeature = exports.alignFeature = exports.SShapeElement = exports.SetBoundsCommand = exports.RequestBoundsCommand = exports.translatePoint = exports.translateBounds = exports.registerModelElement = exports.findParentByFeature = exports.findParent = exports.containsSome = exports.isParent = exports.createRandomId = exports.SParentElement = exports.SModelRoot = exports.SModelElement = exports.SChildElement = exports.ModelIndexImpl = exports.SetModelCommand = exports.ViewportResult = exports.SetBoundsAction = exports.SelectionResult = exports.MoveAction = exports.HoverFeedbackAction = exports.GetViewportAction = exports.GetSelectionAction = exports.CollapseExpandAllAction = exports.CollapseExpandAction = exports.BringToFrontAction = void 0;
exports.RectangularPort = exports.RectangularNode = exports.PreRenderedElement = exports.HtmlRoot = exports.ForeignObjectElement = exports.DiamondNode = exports.CircularPort = exports.CircularNode = exports.SPort = exports.SNode = exports.SLabel = exports.SGraphIndex = exports.SGraph = exports.SEdge = exports.SCompartment = exports.BringToFrontCommand = exports.ViewportAnimation = exports.SetViewportCommand = exports.GetViewportCommand = exports.FitToScreenCommand = exports.CenterKeyboardListener = exports.CenterCommand = exports.BoundsAwareViewportCommand = exports.UpdateModelCommand = exports.UndoRedoKeyListener = exports.SprottySelectCommand = exports.SprottySelectAllCommand = exports.SelectMouseListener = exports.SelectKeyboardListener = exports.GetSelectionCommand = exports.isConnectable = exports.getRouteBounds = exports.getAbsoluteRouteBounds = exports.edgeInProgressTargetHandleID = exports.edgeInProgressID = exports.connectableFeature = exports.SRoutingHandle = exports.SRoutableElement = exports.SDanglingAnchor = exports.SConnectableElement = exports.MoveMouseListener = exports.MoveCommand = exports.MoveAnimation = exports.MorphEdgesAnimation = exports.LocationPostprocessor = exports.PopupPositionUpdater = exports.SetPopupModelCommand = exports.PopupHoverMouseListener = exports.HoverMouseListener = exports.HoverKeyListener = void 0;
exports.zorderModule = exports.viewportModule = exports.updateModule = exports.undoRedoModule = exports.selectModule = exports.routingModule = exports.openModule = exports.moveModule = exports.modelSourceModule = exports.hoverModule = exports.graphModule = exports.fadeModule = exports.exportModule = exports.expandModule = exports.edgeLayoutModule = exports.edgeIntersectionModule = exports.defaultModule = exports.decorationModule = exports.contextMenuModule = exports.commandPaletteModule = exports.buttonModule = exports.boundsModule = exports.intersection = exports.PointToPointLine = exports.Diamond = exports.DiagramServerProxy = exports.ShapedPreRenderedElement = void 0;
/**
 * @eclipse-glsp/protocol
 */
__exportStar(__webpack_require__(/*! @eclipse-glsp/protocol */ "../../node_modules/@eclipse-glsp/protocol/lib/index.js"), exports);
/*
 * sprotty-protocol
 */
var actions_1 = __webpack_require__(/*! sprotty-protocol/lib/actions */ "../../node_modules/sprotty-protocol/lib/actions.js");
Object.defineProperty(exports, "BringToFrontAction", ({ enumerable: true, get: function () { return actions_1.BringToFrontAction; } }));
Object.defineProperty(exports, "CollapseExpandAction", ({ enumerable: true, get: function () { return actions_1.CollapseExpandAction; } }));
Object.defineProperty(exports, "CollapseExpandAllAction", ({ enumerable: true, get: function () { return actions_1.CollapseExpandAllAction; } }));
Object.defineProperty(exports, "GetSelectionAction", ({ enumerable: true, get: function () { return actions_1.GetSelectionAction; } }));
Object.defineProperty(exports, "GetViewportAction", ({ enumerable: true, get: function () { return actions_1.GetViewportAction; } }));
Object.defineProperty(exports, "HoverFeedbackAction", ({ enumerable: true, get: function () { return actions_1.HoverFeedbackAction; } }));
Object.defineProperty(exports, "MoveAction", ({ enumerable: true, get: function () { return actions_1.MoveAction; } }));
Object.defineProperty(exports, "SelectionResult", ({ enumerable: true, get: function () { return actions_1.SelectionResult; } }));
Object.defineProperty(exports, "SetBoundsAction", ({ enumerable: true, get: function () { return actions_1.SetBoundsAction; } }));
Object.defineProperty(exports, "ViewportResult", ({ enumerable: true, get: function () { return actions_1.ViewportResult; } }));
/*
 * sprotty
 */
// ------------------ Base ------------------
__exportStar(__webpack_require__(/*! sprotty/lib/base/actions/action-dispatcher */ "../../node_modules/sprotty/lib/base/actions/action-dispatcher.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/base/actions/action-handler */ "../../node_modules/sprotty/lib/base/actions/action-handler.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/base/actions/diagram-locker */ "../../node_modules/sprotty/lib/base/actions/diagram-locker.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/base/animations/animation */ "../../node_modules/sprotty/lib/base/animations/animation.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/base/animations/animation-frame-syncer */ "../../node_modules/sprotty/lib/base/animations/animation-frame-syncer.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/base/animations/easing */ "../../node_modules/sprotty/lib/base/animations/easing.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/base/commands/command */ "../../node_modules/sprotty/lib/base/commands/command.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/base/commands/command-registration */ "../../node_modules/sprotty/lib/base/commands/command-registration.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/base/commands/command-stack */ "../../node_modules/sprotty/lib/base/commands/command-stack.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/base/commands/command-stack-options */ "../../node_modules/sprotty/lib/base/commands/command-stack-options.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/base/features/initialize-canvas */ "../../node_modules/sprotty/lib/base/features/initialize-canvas.js"), exports);
var set_model_1 = __webpack_require__(/*! sprotty/lib/base/features/set-model */ "../../node_modules/sprotty/lib/base/features/set-model.js");
Object.defineProperty(exports, "SetModelCommand", ({ enumerable: true, get: function () { return set_model_1.SetModelCommand; } }));
var smodel_1 = __webpack_require__(/*! sprotty/lib/base/model/smodel */ "../../node_modules/sprotty/lib/base/model/smodel.js");
Object.defineProperty(exports, "ModelIndexImpl", ({ enumerable: true, get: function () { return smodel_1.ModelIndexImpl; } }));
Object.defineProperty(exports, "SChildElement", ({ enumerable: true, get: function () { return smodel_1.SChildElementImpl; } }));
Object.defineProperty(exports, "SModelElement", ({ enumerable: true, get: function () { return smodel_1.SModelElementImpl; } }));
Object.defineProperty(exports, "SModelRoot", ({ enumerable: true, get: function () { return smodel_1.SModelRootImpl; } }));
Object.defineProperty(exports, "SParentElement", ({ enumerable: true, get: function () { return smodel_1.SParentElementImpl; } }));
Object.defineProperty(exports, "createRandomId", ({ enumerable: true, get: function () { return smodel_1.createRandomId; } }));
Object.defineProperty(exports, "isParent", ({ enumerable: true, get: function () { return smodel_1.isParent; } }));
__exportStar(__webpack_require__(/*! sprotty/lib/base/model/smodel-extension */ "../../node_modules/sprotty/lib/base/model/smodel-extension.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/base/model/smodel-factory */ "../../node_modules/sprotty/lib/base/model/smodel-factory.js"), exports);
var smodel_utils_1 = __webpack_require__(/*! sprotty/lib/base/model/smodel-utils */ "../../node_modules/sprotty/lib/base/model/smodel-utils.js");
Object.defineProperty(exports, "containsSome", ({ enumerable: true, get: function () { return smodel_utils_1.containsSome; } }));
Object.defineProperty(exports, "findParent", ({ enumerable: true, get: function () { return smodel_utils_1.findParent; } }));
Object.defineProperty(exports, "findParentByFeature", ({ enumerable: true, get: function () { return smodel_utils_1.findParentByFeature; } }));
Object.defineProperty(exports, "registerModelElement", ({ enumerable: true, get: function () { return smodel_utils_1.registerModelElement; } }));
Object.defineProperty(exports, "translateBounds", ({ enumerable: true, get: function () { return smodel_utils_1.translateBounds; } }));
Object.defineProperty(exports, "translatePoint", ({ enumerable: true, get: function () { return smodel_utils_1.translatePoint; } }));
__exportStar(__webpack_require__(/*! sprotty/lib/base/tool-manager/tool */ "../../node_modules/sprotty/lib/base/tool-manager/tool.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/base/tool-manager/tool-manager */ "../../node_modules/sprotty/lib/base/tool-manager/tool-manager.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/base/ui-extensions/ui-extension */ "../../node_modules/sprotty/lib/base/ui-extensions/ui-extension.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/base/ui-extensions/ui-extension-registry */ "../../node_modules/sprotty/lib/base/ui-extensions/ui-extension-registry.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/base/views/dom-helper */ "../../node_modules/sprotty/lib/base/views/dom-helper.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/base/views/key-tool */ "../../node_modules/sprotty/lib/base/views/key-tool.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/base/views/mouse-tool */ "../../node_modules/sprotty/lib/base/views/mouse-tool.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/base/views/thunk-view */ "../../node_modules/sprotty/lib/base/views/thunk-view.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/base/views/view */ "../../node_modules/sprotty/lib/base/views/view.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/base/views/viewer */ "../../node_modules/sprotty/lib/base/views/viewer.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/base/views/viewer-cache */ "../../node_modules/sprotty/lib/base/views/viewer-cache.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/base/views/viewer-options */ "../../node_modules/sprotty/lib/base/views/viewer-options.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/base/views/vnode-postprocessor */ "../../node_modules/sprotty/lib/base/views/vnode-postprocessor.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/base/views/vnode-utils */ "../../node_modules/sprotty/lib/base/views/vnode-utils.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/features/bounds/abstract-layout */ "../../node_modules/sprotty/lib/features/bounds/abstract-layout.js"), exports);
// ------------------ Features ------------------
var bounds_manipulation_1 = __webpack_require__(/*! sprotty/lib/features/bounds/bounds-manipulation */ "../../node_modules/sprotty/lib/features/bounds/bounds-manipulation.js");
Object.defineProperty(exports, "RequestBoundsCommand", ({ enumerable: true, get: function () { return bounds_manipulation_1.RequestBoundsCommand; } }));
Object.defineProperty(exports, "SetBoundsCommand", ({ enumerable: true, get: function () { return bounds_manipulation_1.SetBoundsCommand; } }));
__exportStar(__webpack_require__(/*! sprotty/lib/features/bounds/hbox-layout */ "../../node_modules/sprotty/lib/features/bounds/hbox-layout.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/features/bounds/hidden-bounds-updater */ "../../node_modules/sprotty/lib/features/bounds/hidden-bounds-updater.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/features/bounds/layout */ "../../node_modules/sprotty/lib/features/bounds/layout.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/features/bounds/layout-options */ "../../node_modules/sprotty/lib/features/bounds/layout-options.js"), exports);
var model_1 = __webpack_require__(/*! sprotty/lib/features/bounds/model */ "../../node_modules/sprotty/lib/features/bounds/model.js");
Object.defineProperty(exports, "SShapeElement", ({ enumerable: true, get: function () { return model_1.SShapeElementImpl; } }));
Object.defineProperty(exports, "alignFeature", ({ enumerable: true, get: function () { return model_1.alignFeature; } }));
Object.defineProperty(exports, "boundsFeature", ({ enumerable: true, get: function () { return model_1.boundsFeature; } }));
Object.defineProperty(exports, "findChildrenAtPosition", ({ enumerable: true, get: function () { return model_1.findChildrenAtPosition; } }));
Object.defineProperty(exports, "getAbsoluteBounds", ({ enumerable: true, get: function () { return model_1.getAbsoluteBounds; } }));
Object.defineProperty(exports, "getAbsoluteClientBounds", ({ enumerable: true, get: function () { return model_1.getAbsoluteClientBounds; } }));
Object.defineProperty(exports, "isAlignable", ({ enumerable: true, get: function () { return model_1.isAlignable; } }));
Object.defineProperty(exports, "isBoundsAware", ({ enumerable: true, get: function () { return model_1.isBoundsAware; } }));
Object.defineProperty(exports, "isLayoutContainer", ({ enumerable: true, get: function () { return model_1.isLayoutContainer; } }));
Object.defineProperty(exports, "isLayoutableChild", ({ enumerable: true, get: function () { return model_1.isLayoutableChild; } }));
Object.defineProperty(exports, "isSizeable", ({ enumerable: true, get: function () { return model_1.isSizeable; } }));
Object.defineProperty(exports, "layoutContainerFeature", ({ enumerable: true, get: function () { return model_1.layoutContainerFeature; } }));
Object.defineProperty(exports, "layoutableChildFeature", ({ enumerable: true, get: function () { return model_1.layoutableChildFeature; } }));
__exportStar(__webpack_require__(/*! sprotty/lib/features/bounds/stack-layout */ "../../node_modules/sprotty/lib/features/bounds/stack-layout.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/features/bounds/vbox-layout */ "../../node_modules/sprotty/lib/features/bounds/vbox-layout.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/features/bounds/views */ "../../node_modules/sprotty/lib/features/bounds/views.js"), exports);
var button_handler_1 = __webpack_require__(/*! sprotty/lib/features/button/button-handler */ "../../node_modules/sprotty/lib/features/button/button-handler.js");
Object.defineProperty(exports, "ButtonHandlerRegistry", ({ enumerable: true, get: function () { return button_handler_1.ButtonHandlerRegistry; } }));
Object.defineProperty(exports, "configureButtonHandler", ({ enumerable: true, get: function () { return button_handler_1.configureButtonHandler; } }));
__exportStar(__webpack_require__(/*! sprotty/lib/features/button/model */ "../../node_modules/sprotty/lib/features/button/model.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/features/command-palette/action-providers */ "../../node_modules/sprotty/lib/features/command-palette/action-providers.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/features/command-palette/command-palette */ "../../node_modules/sprotty/lib/features/command-palette/command-palette.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/features/context-menu/menu-providers */ "../../node_modules/sprotty/lib/features/context-menu/menu-providers.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/features/context-menu/mouse-listener */ "../../node_modules/sprotty/lib/features/context-menu/mouse-listener.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/features/decoration/decoration-placer */ "../../node_modules/sprotty/lib/features/decoration/decoration-placer.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/features/decoration/model */ "../../node_modules/sprotty/lib/features/decoration/model.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/features/decoration/views */ "../../node_modules/sprotty/lib/features/decoration/views.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/features/edge-intersection/intersection-finder */ "../../node_modules/sprotty/lib/features/edge-intersection/intersection-finder.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/features/edge-intersection/sweepline */ "../../node_modules/sprotty/lib/features/edge-intersection/sweepline.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/features/edge-layout/di.config */ "../../node_modules/sprotty/lib/features/edge-layout/di.config.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/features/edge-layout/edge-layout */ "../../node_modules/sprotty/lib/features/edge-layout/edge-layout.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/features/edge-layout/model */ "../../node_modules/sprotty/lib/features/edge-layout/model.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/features/edit/create */ "../../node_modules/sprotty/lib/features/edit/create.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/features/edit/create-on-drag */ "../../node_modules/sprotty/lib/features/edit/create-on-drag.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/features/edit/delete */ "../../node_modules/sprotty/lib/features/edit/delete.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/features/edit/di.config */ "../../node_modules/sprotty/lib/features/edit/di.config.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/features/edit/edit-label */ "../../node_modules/sprotty/lib/features/edit/edit-label.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/features/edit/edit-label-ui */ "../../node_modules/sprotty/lib/features/edit/edit-label-ui.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/features/edit/edit-routing */ "../../node_modules/sprotty/lib/features/edit/edit-routing.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/features/edit/model */ "../../node_modules/sprotty/lib/features/edit/model.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/features/edit/reconnect */ "../../node_modules/sprotty/lib/features/edit/reconnect.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/features/expand/expand */ "../../node_modules/sprotty/lib/features/expand/expand.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/features/expand/model */ "../../node_modules/sprotty/lib/features/expand/model.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/features/expand/views */ "../../node_modules/sprotty/lib/features/expand/views.js"), exports);
var export_1 = __webpack_require__(/*! sprotty/lib/features/export/export */ "../../node_modules/sprotty/lib/features/export/export.js");
Object.defineProperty(exports, "ExportSvgCommand", ({ enumerable: true, get: function () { return export_1.ExportSvgCommand; } }));
Object.defineProperty(exports, "ExportSvgKeyListener", ({ enumerable: true, get: function () { return export_1.ExportSvgKeyListener; } }));
Object.defineProperty(exports, "ExportSvgPostprocessor", ({ enumerable: true, get: function () { return export_1.ExportSvgPostprocessor; } }));
Object.defineProperty(exports, "RequestExportSvgAction", ({ enumerable: true, get: function () { return export_1.RequestExportSvgAction; } }));
__exportStar(__webpack_require__(/*! sprotty/lib/features/export/model */ "../../node_modules/sprotty/lib/features/export/model.js"), exports);
var svg_exporter_1 = __webpack_require__(/*! sprotty/lib/features/export/svg-exporter */ "../../node_modules/sprotty/lib/features/export/svg-exporter.js");
Object.defineProperty(exports, "ExportSvgAction", ({ enumerable: true, get: function () { return svg_exporter_1.ExportSvgAction; } }));
Object.defineProperty(exports, "SvgExporter", ({ enumerable: true, get: function () { return svg_exporter_1.SvgExporter; } }));
__exportStar(__webpack_require__(/*! sprotty/lib/features/fade/fade */ "../../node_modules/sprotty/lib/features/fade/fade.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/features/fade/model */ "../../node_modules/sprotty/lib/features/fade/model.js"), exports);
var hover_1 = __webpack_require__(/*! sprotty/lib/features/hover/hover */ "../../node_modules/sprotty/lib/features/hover/hover.js");
Object.defineProperty(exports, "AbstractHoverMouseListener", ({ enumerable: true, get: function () { return hover_1.AbstractHoverMouseListener; } }));
Object.defineProperty(exports, "ClosePopupActionHandler", ({ enumerable: true, get: function () { return hover_1.ClosePopupActionHandler; } }));
Object.defineProperty(exports, "HoverFeedbackCommand", ({ enumerable: true, get: function () { return hover_1.HoverFeedbackCommand; } }));
Object.defineProperty(exports, "HoverKeyListener", ({ enumerable: true, get: function () { return hover_1.HoverKeyListener; } }));
Object.defineProperty(exports, "HoverMouseListener", ({ enumerable: true, get: function () { return hover_1.HoverMouseListener; } }));
Object.defineProperty(exports, "PopupHoverMouseListener", ({ enumerable: true, get: function () { return hover_1.PopupHoverMouseListener; } }));
Object.defineProperty(exports, "SetPopupModelCommand", ({ enumerable: true, get: function () { return hover_1.SetPopupModelCommand; } }));
__exportStar(__webpack_require__(/*! sprotty/lib/features/hover/model */ "../../node_modules/sprotty/lib/features/hover/model.js"), exports);
var popup_position_updater_1 = __webpack_require__(/*! sprotty/lib/features/hover/popup-position-updater */ "../../node_modules/sprotty/lib/features/hover/popup-position-updater.js");
Object.defineProperty(exports, "PopupPositionUpdater", ({ enumerable: true, get: function () { return popup_position_updater_1.PopupPositionUpdater; } }));
__exportStar(__webpack_require__(/*! sprotty/lib/features/move/model */ "../../node_modules/sprotty/lib/features/move/model.js"), exports);
var move_1 = __webpack_require__(/*! sprotty/lib/features/move/move */ "../../node_modules/sprotty/lib/features/move/move.js");
Object.defineProperty(exports, "LocationPostprocessor", ({ enumerable: true, get: function () { return move_1.LocationPostprocessor; } }));
Object.defineProperty(exports, "MorphEdgesAnimation", ({ enumerable: true, get: function () { return move_1.MorphEdgesAnimation; } }));
Object.defineProperty(exports, "MoveAnimation", ({ enumerable: true, get: function () { return move_1.MoveAnimation; } }));
Object.defineProperty(exports, "MoveCommand", ({ enumerable: true, get: function () { return move_1.MoveCommand; } }));
Object.defineProperty(exports, "MoveMouseListener", ({ enumerable: true, get: function () { return move_1.MoveMouseListener; } }));
__exportStar(__webpack_require__(/*! sprotty/lib/features/move/snap */ "../../node_modules/sprotty/lib/features/move/snap.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/features/nameable/model */ "../../node_modules/sprotty/lib/features/nameable/model.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/features/open/model */ "../../node_modules/sprotty/lib/features/open/model.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/features/open/open */ "../../node_modules/sprotty/lib/features/open/open.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/features/projection/model */ "../../node_modules/sprotty/lib/features/projection/model.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/features/projection/views */ "../../node_modules/sprotty/lib/features/projection/views.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/features/routing/abstract-edge-router */ "../../node_modules/sprotty/lib/features/routing/abstract-edge-router.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/features/routing/anchor */ "../../node_modules/sprotty/lib/features/routing/anchor.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/features/routing/bezier-anchors */ "../../node_modules/sprotty/lib/features/routing/bezier-anchors.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/features/routing/bezier-edge-router */ "../../node_modules/sprotty/lib/features/routing/bezier-edge-router.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/features/routing/manhattan-anchors */ "../../node_modules/sprotty/lib/features/routing/manhattan-anchors.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/features/routing/manhattan-edge-router */ "../../node_modules/sprotty/lib/features/routing/manhattan-edge-router.js"), exports);
var model_2 = __webpack_require__(/*! sprotty/lib/features/routing/model */ "../../node_modules/sprotty/lib/features/routing/model.js");
Object.defineProperty(exports, "SConnectableElement", ({ enumerable: true, get: function () { return model_2.SConnectableElementImpl; } }));
Object.defineProperty(exports, "SDanglingAnchor", ({ enumerable: true, get: function () { return model_2.SDanglingAnchorImpl; } }));
Object.defineProperty(exports, "SRoutableElement", ({ enumerable: true, get: function () { return model_2.SRoutableElementImpl; } }));
Object.defineProperty(exports, "SRoutingHandle", ({ enumerable: true, get: function () { return model_2.SRoutingHandleImpl; } }));
Object.defineProperty(exports, "connectableFeature", ({ enumerable: true, get: function () { return model_2.connectableFeature; } }));
Object.defineProperty(exports, "edgeInProgressID", ({ enumerable: true, get: function () { return model_2.edgeInProgressID; } }));
Object.defineProperty(exports, "edgeInProgressTargetHandleID", ({ enumerable: true, get: function () { return model_2.edgeInProgressTargetHandleID; } }));
Object.defineProperty(exports, "getAbsoluteRouteBounds", ({ enumerable: true, get: function () { return model_2.getAbsoluteRouteBounds; } }));
Object.defineProperty(exports, "getRouteBounds", ({ enumerable: true, get: function () { return model_2.getRouteBounds; } }));
Object.defineProperty(exports, "isConnectable", ({ enumerable: true, get: function () { return model_2.isConnectable; } }));
__exportStar(__webpack_require__(/*! sprotty/lib/features/routing/polyline-anchors */ "../../node_modules/sprotty/lib/features/routing/polyline-anchors.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/features/routing/polyline-edge-router */ "../../node_modules/sprotty/lib/features/routing/polyline-edge-router.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/features/routing/routing */ "../../node_modules/sprotty/lib/features/routing/routing.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/features/routing/views */ "../../node_modules/sprotty/lib/features/routing/views.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/features/select/model */ "../../node_modules/sprotty/lib/features/select/model.js"), exports);
var select_1 = __webpack_require__(/*! sprotty/lib/features/select/select */ "../../node_modules/sprotty/lib/features/select/select.js");
Object.defineProperty(exports, "GetSelectionCommand", ({ enumerable: true, get: function () { return select_1.GetSelectionCommand; } }));
Object.defineProperty(exports, "SelectKeyboardListener", ({ enumerable: true, get: function () { return select_1.SelectKeyboardListener; } }));
Object.defineProperty(exports, "SelectMouseListener", ({ enumerable: true, get: function () { return select_1.SelectMouseListener; } }));
Object.defineProperty(exports, "SprottySelectAllCommand", ({ enumerable: true, get: function () { return select_1.SelectAllCommand; } }));
Object.defineProperty(exports, "SprottySelectCommand", ({ enumerable: true, get: function () { return select_1.SelectCommand; } }));
var undo_redo_1 = __webpack_require__(/*! sprotty/lib/features/undo-redo/undo-redo */ "../../node_modules/sprotty/lib/features/undo-redo/undo-redo.js");
Object.defineProperty(exports, "UndoRedoKeyListener", ({ enumerable: true, get: function () { return undo_redo_1.UndoRedoKeyListener; } }));
__exportStar(__webpack_require__(/*! sprotty/lib/features/update/model-matching */ "../../node_modules/sprotty/lib/features/update/model-matching.js"), exports);
var update_model_1 = __webpack_require__(/*! sprotty/lib/features/update/update-model */ "../../node_modules/sprotty/lib/features/update/update-model.js");
Object.defineProperty(exports, "UpdateModelCommand", ({ enumerable: true, get: function () { return update_model_1.UpdateModelCommand; } }));
var center_fit_1 = __webpack_require__(/*! sprotty/lib/features/viewport/center-fit */ "../../node_modules/sprotty/lib/features/viewport/center-fit.js");
Object.defineProperty(exports, "BoundsAwareViewportCommand", ({ enumerable: true, get: function () { return center_fit_1.BoundsAwareViewportCommand; } }));
Object.defineProperty(exports, "CenterCommand", ({ enumerable: true, get: function () { return center_fit_1.CenterCommand; } }));
Object.defineProperty(exports, "CenterKeyboardListener", ({ enumerable: true, get: function () { return center_fit_1.CenterKeyboardListener; } }));
Object.defineProperty(exports, "FitToScreenCommand", ({ enumerable: true, get: function () { return center_fit_1.FitToScreenCommand; } }));
__exportStar(__webpack_require__(/*! sprotty/lib/features/viewport/model */ "../../node_modules/sprotty/lib/features/viewport/model.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/features/viewport/scroll */ "../../node_modules/sprotty/lib/features/viewport/scroll.js"), exports);
var viewport_1 = __webpack_require__(/*! sprotty/lib/features/viewport/viewport */ "../../node_modules/sprotty/lib/features/viewport/viewport.js");
Object.defineProperty(exports, "GetViewportCommand", ({ enumerable: true, get: function () { return viewport_1.GetViewportCommand; } }));
Object.defineProperty(exports, "SetViewportCommand", ({ enumerable: true, get: function () { return viewport_1.SetViewportCommand; } }));
Object.defineProperty(exports, "ViewportAnimation", ({ enumerable: true, get: function () { return viewport_1.ViewportAnimation; } }));
__exportStar(__webpack_require__(/*! sprotty/lib/features/viewport/viewport-root */ "../../node_modules/sprotty/lib/features/viewport/viewport-root.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/features/viewport/zoom */ "../../node_modules/sprotty/lib/features/viewport/zoom.js"), exports);
var zorder_1 = __webpack_require__(/*! sprotty/lib/features/zorder/zorder */ "../../node_modules/sprotty/lib/features/zorder/zorder.js");
Object.defineProperty(exports, "BringToFrontCommand", ({ enumerable: true, get: function () { return zorder_1.BringToFrontCommand; } }));
var sgraph_1 = __webpack_require__(/*! sprotty/lib/graph/sgraph */ "../../node_modules/sprotty/lib/graph/sgraph.js");
Object.defineProperty(exports, "SCompartment", ({ enumerable: true, get: function () { return sgraph_1.SCompartmentImpl; } }));
Object.defineProperty(exports, "SEdge", ({ enumerable: true, get: function () { return sgraph_1.SEdgeImpl; } }));
Object.defineProperty(exports, "SGraph", ({ enumerable: true, get: function () { return sgraph_1.SGraphImpl; } }));
Object.defineProperty(exports, "SGraphIndex", ({ enumerable: true, get: function () { return sgraph_1.SGraphIndex; } }));
Object.defineProperty(exports, "SLabel", ({ enumerable: true, get: function () { return sgraph_1.SLabelImpl; } }));
Object.defineProperty(exports, "SNode", ({ enumerable: true, get: function () { return sgraph_1.SNodeImpl; } }));
Object.defineProperty(exports, "SPort", ({ enumerable: true, get: function () { return sgraph_1.SPortImpl; } }));
__exportStar(__webpack_require__(/*! sprotty/lib/lib/virtualize */ "../../node_modules/sprotty/lib/lib/virtualize.js"), exports);
// ------------------ Graph ------------------
__exportStar(__webpack_require__(/*! sprotty/lib/graph/sgraph-factory */ "../../node_modules/sprotty/lib/graph/sgraph-factory.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/graph/views */ "../../node_modules/sprotty/lib/graph/views.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/lib/generic-views */ "../../node_modules/sprotty/lib/lib/generic-views.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/lib/html-views */ "../../node_modules/sprotty/lib/lib/html-views.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/lib/jsx */ "../../node_modules/sprotty/lib/lib/jsx.js"), exports);
var model_3 = __webpack_require__(/*! sprotty/lib/lib/model */ "../../node_modules/sprotty/lib/lib/model.js");
Object.defineProperty(exports, "CircularNode", ({ enumerable: true, get: function () { return model_3.CircularNode; } }));
Object.defineProperty(exports, "CircularPort", ({ enumerable: true, get: function () { return model_3.CircularPort; } }));
Object.defineProperty(exports, "DiamondNode", ({ enumerable: true, get: function () { return model_3.DiamondNode; } }));
Object.defineProperty(exports, "ForeignObjectElement", ({ enumerable: true, get: function () { return model_3.ForeignObjectElementImpl; } }));
Object.defineProperty(exports, "HtmlRoot", ({ enumerable: true, get: function () { return model_3.HtmlRootImpl; } }));
Object.defineProperty(exports, "PreRenderedElement", ({ enumerable: true, get: function () { return model_3.PreRenderedElementImpl; } }));
Object.defineProperty(exports, "RectangularNode", ({ enumerable: true, get: function () { return model_3.RectangularNode; } }));
Object.defineProperty(exports, "RectangularPort", ({ enumerable: true, get: function () { return model_3.RectangularPort; } }));
Object.defineProperty(exports, "ShapedPreRenderedElement", ({ enumerable: true, get: function () { return model_3.ShapedPreRenderedElementImpl; } }));
// ------------------ Library ------------------
__exportStar(__webpack_require__(/*! sprotty/lib/lib/modules */ "../../node_modules/sprotty/lib/lib/modules.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/lib/svg-views */ "../../node_modules/sprotty/lib/lib/svg-views.js"), exports);
// ------------------ Model Source ------------------
__exportStar(__webpack_require__(/*! sprotty/lib/model-source/commit-model */ "../../node_modules/sprotty/lib/model-source/commit-model.js"), exports);
var diagram_server_1 = __webpack_require__(/*! sprotty/lib/model-source/diagram-server */ "../../node_modules/sprotty/lib/model-source/diagram-server.js");
Object.defineProperty(exports, "DiagramServerProxy", ({ enumerable: true, get: function () { return diagram_server_1.DiagramServerProxy; } }));
__exportStar(__webpack_require__(/*! sprotty/lib/model-source/local-model-source */ "../../node_modules/sprotty/lib/model-source/local-model-source.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/model-source/logging */ "../../node_modules/sprotty/lib/model-source/logging.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/model-source/model-source */ "../../node_modules/sprotty/lib/model-source/model-source.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/model-source/websocket */ "../../node_modules/sprotty/lib/model-source/websocket.js"), exports);
// ------------------ Utilities ------------------
__exportStar(__webpack_require__(/*! sprotty/lib/utils/browser */ "../../node_modules/sprotty/lib/utils/browser.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/utils/codicon */ "../../node_modules/sprotty/lib/utils/codicon.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/utils/color */ "../../node_modules/sprotty/lib/utils/color.js"), exports);
var geometry_1 = __webpack_require__(/*! sprotty/lib/utils/geometry */ "../../node_modules/sprotty/lib/utils/geometry.js");
Object.defineProperty(exports, "Diamond", ({ enumerable: true, get: function () { return geometry_1.Diamond; } }));
Object.defineProperty(exports, "PointToPointLine", ({ enumerable: true, get: function () { return geometry_1.PointToPointLine; } }));
Object.defineProperty(exports, "intersection", ({ enumerable: true, get: function () { return geometry_1.intersection; } }));
__exportStar(__webpack_require__(/*! sprotty/lib/utils/inversify */ "../../node_modules/sprotty/lib/utils/inversify.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/utils/iterable */ "../../node_modules/sprotty/lib/utils/iterable.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/utils/keyboard */ "../../node_modules/sprotty/lib/utils/keyboard.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/utils/logging */ "../../node_modules/sprotty/lib/utils/logging.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/utils/registry */ "../../node_modules/sprotty/lib/utils/registry.js"), exports);
/**
 * Misc glsp adaptions/augmentations
 */
__exportStar(__webpack_require__(/*! ./augmented-actions */ "../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/augmented-actions.js"), exports);
__exportStar(__webpack_require__(/*! ./types */ "../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/types.js"), exports);
const di_config_1 = __webpack_require__(/*! sprotty/lib/base/di.config */ "../../node_modules/sprotty/lib/base/di.config.js");
exports.defaultModule = di_config_1.default;
const di_config_2 = __webpack_require__(/*! sprotty/lib/features/bounds/di.config */ "../../node_modules/sprotty/lib/features/bounds/di.config.js");
exports.boundsModule = di_config_2.default;
const di_config_3 = __webpack_require__(/*! sprotty/lib/features/button/di.config */ "../../node_modules/sprotty/lib/features/button/di.config.js");
exports.buttonModule = di_config_3.default;
const di_config_4 = __webpack_require__(/*! sprotty/lib/features/command-palette/di.config */ "../../node_modules/sprotty/lib/features/command-palette/di.config.js");
exports.commandPaletteModule = di_config_4.default;
const di_config_5 = __webpack_require__(/*! sprotty/lib/features/context-menu/di.config */ "../../node_modules/sprotty/lib/features/context-menu/di.config.js");
exports.contextMenuModule = di_config_5.default;
const di_config_6 = __webpack_require__(/*! sprotty/lib/features/decoration/di.config */ "../../node_modules/sprotty/lib/features/decoration/di.config.js");
exports.decorationModule = di_config_6.default;
const di_config_7 = __webpack_require__(/*! sprotty/lib/features/edge-intersection/di.config */ "../../node_modules/sprotty/lib/features/edge-intersection/di.config.js");
exports.edgeIntersectionModule = di_config_7.default;
const di_config_8 = __webpack_require__(/*! sprotty/lib/features/edge-layout/di.config */ "../../node_modules/sprotty/lib/features/edge-layout/di.config.js");
exports.edgeLayoutModule = di_config_8.default;
const di_config_9 = __webpack_require__(/*! sprotty/lib/features/expand/di.config */ "../../node_modules/sprotty/lib/features/expand/di.config.js");
exports.expandModule = di_config_9.default;
const di_config_10 = __webpack_require__(/*! sprotty/lib/features/export/di.config */ "../../node_modules/sprotty/lib/features/export/di.config.js");
exports.exportModule = di_config_10.default;
const di_config_11 = __webpack_require__(/*! sprotty/lib/features/fade/di.config */ "../../node_modules/sprotty/lib/features/fade/di.config.js");
exports.fadeModule = di_config_11.default;
const di_config_12 = __webpack_require__(/*! sprotty/lib/features/hover/di.config */ "../../node_modules/sprotty/lib/features/hover/di.config.js");
exports.hoverModule = di_config_12.default;
const di_config_13 = __webpack_require__(/*! sprotty/lib/features/move/di.config */ "../../node_modules/sprotty/lib/features/move/di.config.js");
exports.moveModule = di_config_13.default;
const di_config_14 = __webpack_require__(/*! sprotty/lib/features/open/di.config */ "../../node_modules/sprotty/lib/features/open/di.config.js");
exports.openModule = di_config_14.default;
const di_config_15 = __webpack_require__(/*! sprotty/lib/features/routing/di.config */ "../../node_modules/sprotty/lib/features/routing/di.config.js");
exports.routingModule = di_config_15.default;
const di_config_16 = __webpack_require__(/*! sprotty/lib/features/select/di.config */ "../../node_modules/sprotty/lib/features/select/di.config.js");
exports.selectModule = di_config_16.default;
const di_config_17 = __webpack_require__(/*! sprotty/lib/features/undo-redo/di.config */ "../../node_modules/sprotty/lib/features/undo-redo/di.config.js");
exports.undoRedoModule = di_config_17.default;
const di_config_18 = __webpack_require__(/*! sprotty/lib/features/update/di.config */ "../../node_modules/sprotty/lib/features/update/di.config.js");
exports.updateModule = di_config_18.default;
const di_config_19 = __webpack_require__(/*! sprotty/lib/features/viewport/di.config */ "../../node_modules/sprotty/lib/features/viewport/di.config.js");
exports.viewportModule = di_config_19.default;
const di_config_20 = __webpack_require__(/*! sprotty/lib/features/zorder/di.config */ "../../node_modules/sprotty/lib/features/zorder/di.config.js");
exports.zorderModule = di_config_20.default;
const di_config_21 = __webpack_require__(/*! sprotty/lib/graph/di.config */ "../../node_modules/sprotty/lib/graph/di.config.js");
exports.graphModule = di_config_21.default;
const di_config_22 = __webpack_require__(/*! sprotty/lib/model-source/di.config */ "../../node_modules/sprotty/lib/model-source/di.config.js");
exports.modelSourceModule = di_config_22.default;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/types.js":
/*!*************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/types.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.GLSP_TYPES = exports.TYPES = void 0;
/********************************************************************************
 * Copyright (c) 2019-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
// eslint-disable-next-line no-restricted-imports
const sprotty_1 = __webpack_require__(/*! sprotty */ "../../node_modules/sprotty/lib/index.js");
/**
 * Reexport of the TYPES namespace of sprotty augments with additional GLSP specific service
 * identifiers.
 */
exports.TYPES = Object.assign(Object.assign({}, sprotty_1.TYPES), { IAsyncClipboardService: Symbol('IAsyncClipboardService'), IEditorContextServiceProvider: Symbol('IEditorContextProvider'), IFeedbackActionDispatcher: Symbol('IFeedbackActionDispatcher'), IToolFactory: Symbol('Factory<Tool>'), ITypeHintProvider: Symbol('ITypeHintProvider'), IMovementRestrictor: Symbol('IMovementRestrictor'), SelectionService: Symbol('SelectionService'), SelectionListener: Symbol('SelectionListener'), SModelRootListener: Symbol('SModelRootListener'), MouseTool: Symbol('MouseTool'), IContextMenuProvider: Symbol('IContextMenuProvider'), ICopyPasteHandler: Symbol('ICopyPasteHandler'), ITool: Symbol('ITool'), IDefaultTool: Symbol('IDefaultTool'), IEditModeListener: Symbol('IEditModeListener'), IMarqueeBehavior: Symbol('IMarqueeBehavior') });
/**
 * Keep a reexport under the old deprecated namespace to avoid hard API breaks.
 * This gives adopters a grace period but all deprecated API will be removed before the 1.0.0 release.
 * @deprecated Please use `TYPES` from `@eclipse-glsp/client` instead
 */
exports.GLSP_TYPES = exports.TYPES;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/index.js":
/*!************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/index.js ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.glspMoveZoomModule = exports.glspViewKeyToolsModule = exports.glspAccessibilityModule = exports.glspSearchPaletteModule = exports.glspResizeKeyModule = exports.svgMetadataModule = exports.glspViewportModule = exports.markerNavigatorContextMenuModule = exports.sourceModelWatcherModule = exports.glspDecorationModule = exports.markerNavigatorModule = exports.navigationModule = exports.enableDefaultToolsOnFocusLossModule = exports.toolsModule = exports.glspHoverModule = exports.glspEditLabelModule = exports.layoutModule = exports.glspMouseToolModule = exports.glspSelectModule = exports.copyPasteContextMenuModule = exports.glspServerCopyPasteModule = exports.glspContextMenuModule = exports.glspCommandPaletteModule = exports.modelHintsModule = exports.defaultGLSPModule = exports.toolFeedbackModule = exports.paletteModule = exports.saveModule = exports.validationModule = exports.configureMarqueeTool = exports.configureServerActions = void 0;
/********************************************************************************
 * Copyright (c) 2019-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const di_config_1 = __webpack_require__(/*! ./base/di.config */ "../../node_modules/@eclipse-glsp/client/lib/base/di.config.js");
exports.defaultGLSPModule = di_config_1.default;
const di_config_2 = __webpack_require__(/*! ./features/accessibility/di.config */ "../../node_modules/@eclipse-glsp/client/lib/features/accessibility/di.config.js");
Object.defineProperty(exports, "glspAccessibilityModule", ({ enumerable: true, get: function () { return di_config_2.glspAccessibilityModule; } }));
const di_config_3 = __webpack_require__(/*! ./features/accessibility/move-zoom/di.config */ "../../node_modules/@eclipse-glsp/client/lib/features/accessibility/move-zoom/di.config.js");
Object.defineProperty(exports, "glspMoveZoomModule", ({ enumerable: true, get: function () { return di_config_3.glspMoveZoomModule; } }));
const di_config_4 = __webpack_require__(/*! ./features/accessibility/resize-key-tool/di.config */ "../../node_modules/@eclipse-glsp/client/lib/features/accessibility/resize-key-tool/di.config.js");
Object.defineProperty(exports, "glspResizeKeyModule", ({ enumerable: true, get: function () { return di_config_4.glspResizeKeyModule; } }));
const di_config_5 = __webpack_require__(/*! ./features/accessibility/search/di.config */ "../../node_modules/@eclipse-glsp/client/lib/features/accessibility/search/di.config.js");
Object.defineProperty(exports, "glspSearchPaletteModule", ({ enumerable: true, get: function () { return di_config_5.glspSearchPaletteModule; } }));
const di_config_6 = __webpack_require__(/*! ./features/accessibility/view-key-tools/di.config */ "../../node_modules/@eclipse-glsp/client/lib/features/accessibility/view-key-tools/di.config.js");
Object.defineProperty(exports, "glspViewKeyToolsModule", ({ enumerable: true, get: function () { return di_config_6.glspViewKeyToolsModule; } }));
const di_config_7 = __webpack_require__(/*! ./features/command-palette/di.config */ "../../node_modules/@eclipse-glsp/client/lib/features/command-palette/di.config.js");
exports.glspCommandPaletteModule = di_config_7.default;
const di_config_8 = __webpack_require__(/*! ./features/context-menu/di.config */ "../../node_modules/@eclipse-glsp/client/lib/features/context-menu/di.config.js");
exports.glspContextMenuModule = di_config_8.default;
const di_config_9 = __webpack_require__(/*! ./features/copy-paste/di.config */ "../../node_modules/@eclipse-glsp/client/lib/features/copy-paste/di.config.js");
Object.defineProperty(exports, "copyPasteContextMenuModule", ({ enumerable: true, get: function () { return di_config_9.copyPasteContextMenuModule; } }));
Object.defineProperty(exports, "glspServerCopyPasteModule", ({ enumerable: true, get: function () { return di_config_9.glspServerCopyPasteModule; } }));
const di_config_10 = __webpack_require__(/*! ./features/decoration/di.config */ "../../node_modules/@eclipse-glsp/client/lib/features/decoration/di.config.js");
exports.glspDecorationModule = di_config_10.default;
const di_config_11 = __webpack_require__(/*! ./features/edit-label/di.config */ "../../node_modules/@eclipse-glsp/client/lib/features/edit-label/di.config.js");
exports.glspEditLabelModule = di_config_11.default;
const di_config_12 = __webpack_require__(/*! ./features/hints/di.config */ "../../node_modules/@eclipse-glsp/client/lib/features/hints/di.config.js");
exports.modelHintsModule = di_config_12.default;
const di_config_13 = __webpack_require__(/*! ./features/hover/di.config */ "../../node_modules/@eclipse-glsp/client/lib/features/hover/di.config.js");
exports.glspHoverModule = di_config_13.default;
const di_config_14 = __webpack_require__(/*! ./features/layout/di.config */ "../../node_modules/@eclipse-glsp/client/lib/features/layout/di.config.js");
exports.layoutModule = di_config_14.default;
const di_config_15 = __webpack_require__(/*! ./features/mouse-tool/di.config */ "../../node_modules/@eclipse-glsp/client/lib/features/mouse-tool/di.config.js");
exports.glspMouseToolModule = di_config_15.default;
const di_config_16 = __webpack_require__(/*! ./features/navigation/di.config */ "../../node_modules/@eclipse-glsp/client/lib/features/navigation/di.config.js");
exports.navigationModule = di_config_16.default;
const di_config_17 = __webpack_require__(/*! ./features/save/di.config */ "../../node_modules/@eclipse-glsp/client/lib/features/save/di.config.js");
exports.saveModule = di_config_17.default;
const di_config_18 = __webpack_require__(/*! ./features/select/di.config */ "../../node_modules/@eclipse-glsp/client/lib/features/select/di.config.js");
exports.glspSelectModule = di_config_18.default;
const di_config_19 = __webpack_require__(/*! ./features/source-model-watcher/di.config */ "../../node_modules/@eclipse-glsp/client/lib/features/source-model-watcher/di.config.js");
exports.sourceModelWatcherModule = di_config_19.default;
const di_config_20 = __webpack_require__(/*! ./features/svg-metadata/di.config */ "../../node_modules/@eclipse-glsp/client/lib/features/svg-metadata/di.config.js");
exports.svgMetadataModule = di_config_20.default;
const di_config_21 = __webpack_require__(/*! ./features/tool-feedback/di.config */ "../../node_modules/@eclipse-glsp/client/lib/features/tool-feedback/di.config.js");
exports.toolFeedbackModule = di_config_21.default;
const di_config_22 = __webpack_require__(/*! ./features/tool-palette/di.config */ "../../node_modules/@eclipse-glsp/client/lib/features/tool-palette/di.config.js");
exports.paletteModule = di_config_22.default;
const di_config_23 = __webpack_require__(/*! ./features/tools/di.config */ "../../node_modules/@eclipse-glsp/client/lib/features/tools/di.config.js");
Object.defineProperty(exports, "enableDefaultToolsOnFocusLossModule", ({ enumerable: true, get: function () { return di_config_23.enableDefaultToolsOnFocusLossModule; } }));
Object.defineProperty(exports, "toolsModule", ({ enumerable: true, get: function () { return di_config_23.toolsModule; } }));
const di_config_24 = __webpack_require__(/*! ./features/validation/di.config */ "../../node_modules/@eclipse-glsp/client/lib/features/validation/di.config.js");
Object.defineProperty(exports, "markerNavigatorContextMenuModule", ({ enumerable: true, get: function () { return di_config_24.markerNavigatorContextMenuModule; } }));
Object.defineProperty(exports, "markerNavigatorModule", ({ enumerable: true, get: function () { return di_config_24.markerNavigatorModule; } }));
Object.defineProperty(exports, "validationModule", ({ enumerable: true, get: function () { return di_config_24.validationModule; } }));
const di_config_25 = __webpack_require__(/*! ./features/viewport/di.config */ "../../node_modules/@eclipse-glsp/client/lib/features/viewport/di.config.js");
exports.glspViewportModule = di_config_25.default;
// ------------------ Base ------------------
__exportStar(__webpack_require__(/*! ./base/action-dispatcher */ "../../node_modules/@eclipse-glsp/client/lib/base/action-dispatcher.js"), exports);
__exportStar(__webpack_require__(/*! ./base/actions/focus-change-action */ "../../node_modules/@eclipse-glsp/client/lib/base/actions/focus-change-action.js"), exports);
__exportStar(__webpack_require__(/*! ./base/argumentable */ "../../node_modules/@eclipse-glsp/client/lib/base/argumentable.js"), exports);
__exportStar(__webpack_require__(/*! ./base/auto-complete/auto-complete-actions */ "../../node_modules/@eclipse-glsp/client/lib/base/auto-complete/auto-complete-actions.js"), exports);
__exportStar(__webpack_require__(/*! ./base/auto-complete/auto-complete-widget */ "../../node_modules/@eclipse-glsp/client/lib/base/auto-complete/auto-complete-widget.js"), exports);
__exportStar(__webpack_require__(/*! ./base/auto-complete/validation-decorator */ "../../node_modules/@eclipse-glsp/client/lib/base/auto-complete/validation-decorator.js"), exports);
__exportStar(__webpack_require__(/*! ./base/command-stack */ "../../node_modules/@eclipse-glsp/client/lib/base/command-stack.js"), exports);
__exportStar(__webpack_require__(/*! ./base/container-modules */ "../../node_modules/@eclipse-glsp/client/lib/base/container-modules.js"), exports);
var di_config_26 = __webpack_require__(/*! ./base/di.config */ "../../node_modules/@eclipse-glsp/client/lib/base/di.config.js");
Object.defineProperty(exports, "configureServerActions", ({ enumerable: true, get: function () { return di_config_26.configureServerActions; } }));
__exportStar(__webpack_require__(/*! ./base/drag-aware-mouse-listener */ "../../node_modules/@eclipse-glsp/client/lib/base/drag-aware-mouse-listener.js"), exports);
__exportStar(__webpack_require__(/*! ./base/editor-context-service */ "../../node_modules/@eclipse-glsp/client/lib/base/editor-context-service.js"), exports);
__exportStar(__webpack_require__(/*! ./base/focus-tracker */ "../../node_modules/@eclipse-glsp/client/lib/base/focus-tracker.js"), exports);
__exportStar(__webpack_require__(/*! ./base/model-initialization-constraint */ "../../node_modules/@eclipse-glsp/client/lib/base/model-initialization-constraint.js"), exports);
__exportStar(__webpack_require__(/*! ./base/model/model-registry */ "../../node_modules/@eclipse-glsp/client/lib/base/model/model-registry.js"), exports);
__exportStar(__webpack_require__(/*! ./base/model/update-model-command */ "../../node_modules/@eclipse-glsp/client/lib/base/model/update-model-command.js"), exports);
__exportStar(__webpack_require__(/*! ./base/selection-clearing-mouse-listener */ "../../node_modules/@eclipse-glsp/client/lib/base/selection-clearing-mouse-listener.js"), exports);
__exportStar(__webpack_require__(/*! ./base/source-uri-aware */ "../../node_modules/@eclipse-glsp/client/lib/base/source-uri-aware.js"), exports);
__exportStar(__webpack_require__(/*! ./base/tool-manager/glsp-tool-manager */ "../../node_modules/@eclipse-glsp/client/lib/base/tool-manager/glsp-tool-manager.js"), exports);
__exportStar(__webpack_require__(/*! ./base/view/view-registry */ "../../node_modules/@eclipse-glsp/client/lib/base/view/view-registry.js"), exports);
__exportStar(__webpack_require__(/*! ./features/accessibility/resize-key-tool/resize-key-tool */ "../../node_modules/@eclipse-glsp/client/lib/features/accessibility/resize-key-tool/resize-key-tool.js"), exports);
__exportStar(__webpack_require__(/*! ./features/accessibility/view-key-tools/deselect-key-tool */ "../../node_modules/@eclipse-glsp/client/lib/features/accessibility/view-key-tools/deselect-key-tool.js"), exports);
__exportStar(__webpack_require__(/*! ./features/accessibility/view-key-tools/movement-key-tool */ "../../node_modules/@eclipse-glsp/client/lib/features/accessibility/view-key-tools/movement-key-tool.js"), exports);
__exportStar(__webpack_require__(/*! ./features/accessibility/view-key-tools/zoom-key-tool */ "../../node_modules/@eclipse-glsp/client/lib/features/accessibility/view-key-tools/zoom-key-tool.js"), exports);
//
// ------------------ Features ------------------
__exportStar(__webpack_require__(/*! ./features/bounds/freeform-layout */ "../../node_modules/@eclipse-glsp/client/lib/features/bounds/freeform-layout.js"), exports);
__exportStar(__webpack_require__(/*! ./features/bounds/glsp-hidden-bounds-updater */ "../../node_modules/@eclipse-glsp/client/lib/features/bounds/glsp-hidden-bounds-updater.js"), exports);
__exportStar(__webpack_require__(/*! ./features/bounds/hbox-layout */ "../../node_modules/@eclipse-glsp/client/lib/features/bounds/hbox-layout.js"), exports);
__exportStar(__webpack_require__(/*! ./features/bounds/layouter */ "../../node_modules/@eclipse-glsp/client/lib/features/bounds/layouter.js"), exports);
__exportStar(__webpack_require__(/*! ./features/bounds/vbox-layout */ "../../node_modules/@eclipse-glsp/client/lib/features/bounds/vbox-layout.js"), exports);
__exportStar(__webpack_require__(/*! ./features/change-bounds/model */ "../../node_modules/@eclipse-glsp/client/lib/features/change-bounds/model.js"), exports);
__exportStar(__webpack_require__(/*! ./features/change-bounds/movement-restrictor */ "../../node_modules/@eclipse-glsp/client/lib/features/change-bounds/movement-restrictor.js"), exports);
__exportStar(__webpack_require__(/*! ./features/change-bounds/snap */ "../../node_modules/@eclipse-glsp/client/lib/features/change-bounds/snap.js"), exports);
__exportStar(__webpack_require__(/*! ./features/command-palette/command-palette-tool */ "../../node_modules/@eclipse-glsp/client/lib/features/command-palette/command-palette-tool.js"), exports);
__exportStar(__webpack_require__(/*! ./features/command-palette/server-command-palette-provider */ "../../node_modules/@eclipse-glsp/client/lib/features/command-palette/server-command-palette-provider.js"), exports);
__exportStar(__webpack_require__(/*! ./features/context-menu/delete-element-context-menu */ "../../node_modules/@eclipse-glsp/client/lib/features/context-menu/delete-element-context-menu.js"), exports);
__exportStar(__webpack_require__(/*! ./features/context-menu/selection-service-aware-context-menu-mouse-listener */ "../../node_modules/@eclipse-glsp/client/lib/features/context-menu/selection-service-aware-context-menu-mouse-listener.js"), exports);
__exportStar(__webpack_require__(/*! ./features/context-menu/server-context-menu-provider */ "../../node_modules/@eclipse-glsp/client/lib/features/context-menu/server-context-menu-provider.js"), exports);
__exportStar(__webpack_require__(/*! ./features/copy-paste/copy-paste-context-menu */ "../../node_modules/@eclipse-glsp/client/lib/features/copy-paste/copy-paste-context-menu.js"), exports);
__exportStar(__webpack_require__(/*! ./features/copy-paste/copy-paste-handler */ "../../node_modules/@eclipse-glsp/client/lib/features/copy-paste/copy-paste-handler.js"), exports);
__exportStar(__webpack_require__(/*! ./features/decoration/decoration-placer */ "../../node_modules/@eclipse-glsp/client/lib/features/decoration/decoration-placer.js"), exports);
__exportStar(__webpack_require__(/*! ./features/edit-label/edit-label-tool */ "../../node_modules/@eclipse-glsp/client/lib/features/edit-label/edit-label-tool.js"), exports);
__exportStar(__webpack_require__(/*! ./features/edit-label/edit-label-validator */ "../../node_modules/@eclipse-glsp/client/lib/features/edit-label/edit-label-validator.js"), exports);
__exportStar(__webpack_require__(/*! ./features/export/glsp-svg-exporter */ "../../node_modules/@eclipse-glsp/client/lib/features/export/glsp-svg-exporter.js"), exports);
__exportStar(__webpack_require__(/*! ./features/hints/model */ "../../node_modules/@eclipse-glsp/client/lib/features/hints/model.js"), exports);
__exportStar(__webpack_require__(/*! ./features/hints/type-hints */ "../../node_modules/@eclipse-glsp/client/lib/features/hints/type-hints.js"), exports);
__exportStar(__webpack_require__(/*! ./features/hover/hover */ "../../node_modules/@eclipse-glsp/client/lib/features/hover/hover.js"), exports);
__exportStar(__webpack_require__(/*! ./features/layout/layout-elements-action */ "../../node_modules/@eclipse-glsp/client/lib/features/layout/layout-elements-action.js"), exports);
__exportStar(__webpack_require__(/*! ./features/mouse-tool/mouse-tool */ "../../node_modules/@eclipse-glsp/client/lib/features/mouse-tool/mouse-tool.js"), exports);
__exportStar(__webpack_require__(/*! ./features/navigation/navigation-action-handler */ "../../node_modules/@eclipse-glsp/client/lib/features/navigation/navigation-action-handler.js"), exports);
__exportStar(__webpack_require__(/*! ./features/navigation/navigation-target-resolver */ "../../node_modules/@eclipse-glsp/client/lib/features/navigation/navigation-target-resolver.js"), exports);
__exportStar(__webpack_require__(/*! ./features/rank/model */ "../../node_modules/@eclipse-glsp/client/lib/features/rank/model.js"), exports);
__exportStar(__webpack_require__(/*! ./features/reconnect/model */ "../../node_modules/@eclipse-glsp/client/lib/features/reconnect/model.js"), exports);
__exportStar(__webpack_require__(/*! ./features/save/model */ "../../node_modules/@eclipse-glsp/client/lib/features/save/model.js"), exports);
__exportStar(__webpack_require__(/*! ./features/save/save-keylistener */ "../../node_modules/@eclipse-glsp/client/lib/features/save/save-keylistener.js"), exports);
__exportStar(__webpack_require__(/*! ./features/select/select-feedback-action */ "../../node_modules/@eclipse-glsp/client/lib/features/select/select-feedback-action.js"), exports);
__exportStar(__webpack_require__(/*! ./features/select/select-mouse-listener */ "../../node_modules/@eclipse-glsp/client/lib/features/select/select-mouse-listener.js"), exports);
__exportStar(__webpack_require__(/*! ./features/select/selection-service */ "../../node_modules/@eclipse-glsp/client/lib/features/select/selection-service.js"), exports);
__exportStar(__webpack_require__(/*! ./features/source-model-watcher/source-model-changed-action-handler */ "../../node_modules/@eclipse-glsp/client/lib/features/source-model-watcher/source-model-changed-action-handler.js"), exports);
__exportStar(__webpack_require__(/*! ./features/svg-metadata/metadata-placer */ "../../node_modules/@eclipse-glsp/client/lib/features/svg-metadata/metadata-placer.js"), exports);
__exportStar(__webpack_require__(/*! ./features/tool-feedback/change-bounds-tool-feedback */ "../../node_modules/@eclipse-glsp/client/lib/features/tool-feedback/change-bounds-tool-feedback.js"), exports);
__exportStar(__webpack_require__(/*! ./features/tool-feedback/creation-tool-feedback */ "../../node_modules/@eclipse-glsp/client/lib/features/tool-feedback/creation-tool-feedback.js"), exports);
__exportStar(__webpack_require__(/*! ./features/tool-feedback/css-feedback */ "../../node_modules/@eclipse-glsp/client/lib/features/tool-feedback/css-feedback.js"), exports);
__exportStar(__webpack_require__(/*! ./features/tool-feedback/edge-edit-tool-feedback */ "../../node_modules/@eclipse-glsp/client/lib/features/tool-feedback/edge-edit-tool-feedback.js"), exports);
__exportStar(__webpack_require__(/*! ./features/tool-feedback/feedback-action-dispatcher */ "../../node_modules/@eclipse-glsp/client/lib/features/tool-feedback/feedback-action-dispatcher.js"), exports);
__exportStar(__webpack_require__(/*! ./features/tool-feedback/marquee-tool-feedback */ "../../node_modules/@eclipse-glsp/client/lib/features/tool-feedback/marquee-tool-feedback.js"), exports);
__exportStar(__webpack_require__(/*! ./features/tool-feedback/model */ "../../node_modules/@eclipse-glsp/client/lib/features/tool-feedback/model.js"), exports);
__exportStar(__webpack_require__(/*! ./features/tool-feedback/view */ "../../node_modules/@eclipse-glsp/client/lib/features/tool-feedback/view.js"), exports);
__exportStar(__webpack_require__(/*! ./features/tool-palette/tool-palette */ "../../node_modules/@eclipse-glsp/client/lib/features/tool-palette/tool-palette.js"), exports);
__exportStar(__webpack_require__(/*! ./features/tools/base-glsp-tool */ "../../node_modules/@eclipse-glsp/client/lib/features/tools/base-glsp-tool.js"), exports);
__exportStar(__webpack_require__(/*! ./features/tools/change-bounds-tool */ "../../node_modules/@eclipse-glsp/client/lib/features/tools/change-bounds-tool.js"), exports);
__exportStar(__webpack_require__(/*! ./features/tools/delete-tool */ "../../node_modules/@eclipse-glsp/client/lib/features/tools/delete-tool.js"), exports);
var di_config_27 = __webpack_require__(/*! ./features/tools/di.config */ "../../node_modules/@eclipse-glsp/client/lib/features/tools/di.config.js");
Object.defineProperty(exports, "configureMarqueeTool", ({ enumerable: true, get: function () { return di_config_27.configureMarqueeTool; } }));
__exportStar(__webpack_require__(/*! ./features/tools/edge-creation-tool */ "../../node_modules/@eclipse-glsp/client/lib/features/tools/edge-creation-tool.js"), exports);
__exportStar(__webpack_require__(/*! ./features/tools/edge-edit-tool */ "../../node_modules/@eclipse-glsp/client/lib/features/tools/edge-edit-tool.js"), exports);
__exportStar(__webpack_require__(/*! ./features/tools/enable-default-tools-on-focus-loss */ "../../node_modules/@eclipse-glsp/client/lib/features/tools/enable-default-tools-on-focus-loss.js"), exports);
__exportStar(__webpack_require__(/*! ./features/tools/glsp-manhattan-edge-router */ "../../node_modules/@eclipse-glsp/client/lib/features/tools/glsp-manhattan-edge-router.js"), exports);
__exportStar(__webpack_require__(/*! ./features/tools/marquee-behavior */ "../../node_modules/@eclipse-glsp/client/lib/features/tools/marquee-behavior.js"), exports);
__exportStar(__webpack_require__(/*! ./features/tools/model */ "../../node_modules/@eclipse-glsp/client/lib/features/tools/model.js"), exports);
__exportStar(__webpack_require__(/*! ./features/tools/node-creation-tool */ "../../node_modules/@eclipse-glsp/client/lib/features/tools/node-creation-tool.js"), exports);
__exportStar(__webpack_require__(/*! ./features/validation/issue-marker */ "../../node_modules/@eclipse-glsp/client/lib/features/validation/issue-marker.js"), exports);
__exportStar(__webpack_require__(/*! ./features/validation/marker-navigator */ "../../node_modules/@eclipse-glsp/client/lib/features/validation/marker-navigator.js"), exports);
__exportStar(__webpack_require__(/*! ./features/validation/validate */ "../../node_modules/@eclipse-glsp/client/lib/features/validation/validate.js"), exports);
__exportStar(__webpack_require__(/*! ./features/viewport/glsp-scroll-mouse-listener */ "../../node_modules/@eclipse-glsp/client/lib/features/viewport/glsp-scroll-mouse-listener.js"), exports);
__exportStar(__webpack_require__(/*! ./glsp-sprotty */ "../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/index.js"), exports);
__exportStar(__webpack_require__(/*! ./glsp-sprotty/types */ "../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/types.js"), exports);
//
// ------------------ Misc ------------------
__exportStar(__webpack_require__(/*! ./lib/model */ "../../node_modules/@eclipse-glsp/client/lib/lib/model.js"), exports);
__exportStar(__webpack_require__(/*! ./model-source/glsp-diagram-server */ "../../node_modules/@eclipse-glsp/client/lib/model-source/glsp-diagram-server.js"), exports);
__exportStar(__webpack_require__(/*! ./utils/argument-utils */ "../../node_modules/@eclipse-glsp/client/lib/utils/argument-utils.js"), exports);
__exportStar(__webpack_require__(/*! ./utils/html-utils */ "../../node_modules/@eclipse-glsp/client/lib/utils/html-utils.js"), exports);
__exportStar(__webpack_require__(/*! ./utils/layout-utils */ "../../node_modules/@eclipse-glsp/client/lib/utils/layout-utils.js"), exports);
__exportStar(__webpack_require__(/*! ./utils/marker */ "../../node_modules/@eclipse-glsp/client/lib/utils/marker.js"), exports);
__exportStar(__webpack_require__(/*! ./utils/smodel-util */ "../../node_modules/@eclipse-glsp/client/lib/utils/smodel-util.js"), exports);
__exportStar(__webpack_require__(/*! ./utils/viewpoint-util */ "../../node_modules/@eclipse-glsp/client/lib/utils/viewpoint-util.js"), exports);
__exportStar(__webpack_require__(/*! ./views */ "../../node_modules/@eclipse-glsp/client/lib/views/index.js"), exports);


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/lib/model.js":
/*!****************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/lib/model.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.GEdge = exports.GLSPGraph = void 0;
/********************************************************************************
 * Copyright (c) 2019-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const _glsp_sprotty_1 = __webpack_require__(/*! ../glsp-sprotty/index */ "../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/index.js");
const model_1 = __webpack_require__(/*! ../features/hints/model */ "../../node_modules/@eclipse-glsp/client/lib/features/hints/model.js");
const model_2 = __webpack_require__(/*! ../features/save/model */ "../../node_modules/@eclipse-glsp/client/lib/features/save/model.js");
class GLSPGraph extends _glsp_sprotty_1.SGraph {
    constructor() {
        super(...arguments);
        this.dirty = false;
    }
    isContainableElement(input) {
        return true;
    }
}
GLSPGraph.DEFAULT_FEATURES = [_glsp_sprotty_1.viewportFeature, _glsp_sprotty_1.exportFeature, model_2.saveFeature, model_1.containerFeature];
exports.GLSPGraph = GLSPGraph;
class GEdge extends _glsp_sprotty_1.SEdge {
    localToParent(point) {
        const bounds = (0, _glsp_sprotty_1.getRouteBounds)(this.routingPoints);
        const result = {
            x: point.x + bounds.x,
            y: point.y + bounds.y,
            width: -1,
            height: -1
        };
        if ((0, _glsp_sprotty_1.isBounds)(point)) {
            result.width = point.width;
            result.height = point.height;
        }
        return result;
    }
    parentToLocal(point) {
        const bounds = (0, _glsp_sprotty_1.getRouteBounds)(this.routingPoints);
        const result = {
            x: point.x - bounds.x,
            y: point.y - bounds.y,
            width: -1,
            height: -1
        };
        if ((0, _glsp_sprotty_1.isBounds)(point)) {
            result.width = point.width;
            result.height = point.height;
        }
        return result;
    }
}
exports.GEdge = GEdge;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/model-source/glsp-diagram-server.js":
/*!***************************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/model-source/glsp-diagram-server.js ***!
  \***************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.registerDefaultGLSPServerActions = exports.isReceivedFromServer = exports.GLSPDiagramServer = void 0;
/********************************************************************************
 * Copyright (c) 2019-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const _glsp_sprotty_1 = __webpack_require__(/*! ../glsp-sprotty/index */ "../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/index.js");
const receivedFromServerProperty = '__receivedFromServer';
let GLSPDiagramServer = class GLSPDiagramServer extends _glsp_sprotty_1.DiagramServerProxy {
    constructor() {
        super(...arguments);
        this.ready = false;
    }
    async connect(client) {
        await client.start();
        client.onActionMessage(message => this.messageReceived(message));
        this._glspClient = client;
        return this._glspClient;
    }
    get glspClient() {
        return this._glspClient;
    }
    sendMessage(message) {
        if (this.glspClient) {
            this.glspClient.sendActionMessage(message);
        }
        else {
            throw new Error('GLSPClient is not connected');
        }
    }
    initialize(registry) {
        registerDefaultGLSPServerActions(registry, this);
        if (!this.clientId) {
            this.clientId = this.viewerOptions.baseDiv;
        }
    }
    handle(action) {
        if (_glsp_sprotty_1.RequestModelAction.is(action) && action.options) {
            this._sourceUri = action.options.sourceUri;
        }
        return super.handle(action);
    }
    handleLocally(action) {
        if (_glsp_sprotty_1.ServerMessageAction.is(action)) {
            return this.handleServerMessageAction(action);
        }
        if (_glsp_sprotty_1.SetEditModeAction.is(action)) {
            return this.handleSetEditModeAction(action);
        }
        return super.handleLocally(action);
    }
    handleServerMessageAction(action) {
        this.logger.log('GLSPDiagramServer', `[${action.severity}] -${action.message}`);
        return false;
    }
    handleComputedBounds(_action) {
        return true;
    }
    handleSetEditModeAction(action) {
        return !isReceivedFromServer(action);
    }
    get sourceURI() {
        return this._sourceUri;
    }
};
GLSPDiagramServer = __decorate([
    (0, inversify_1.injectable)()
], GLSPDiagramServer);
exports.GLSPDiagramServer = GLSPDiagramServer;
function isReceivedFromServer(action) {
    return action[receivedFromServerProperty] === true;
}
exports.isReceivedFromServer = isReceivedFromServer;
function registerDefaultGLSPServerActions(registry, diagramServer) {
    registry.register(_glsp_sprotty_1.ServerMessageAction.KIND, diagramServer);
    registry.register(_glsp_sprotty_1.ServerStatusAction.KIND, diagramServer);
    registry.register(_glsp_sprotty_1.ExportSvgAction.KIND, diagramServer);
    // Register an empty handler for SwitchEditMode, to avoid runtime exceptions.
    // We don't support SwitchEditMode, but Sprotty still sends those actions, so ignore them.
    registry.register(_glsp_sprotty_1.SwitchEditModeCommand.KIND, { handle: action => undefined });
}
exports.registerDefaultGLSPServerActions = registerDefaultGLSPServerActions;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/utils/argument-utils.js":
/*!***************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/utils/argument-utils.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CornerRadius = exports.EdgePadding = exports.GArgument = void 0;
const argumentable_1 = __webpack_require__(/*! ../base/argumentable */ "../../node_modules/@eclipse-glsp/client/lib/base/argumentable.js");
var GArgument;
(function (GArgument) {
    function asNumber(argValue) {
        return typeof argValue === 'number' ? argValue : undefined;
    }
    GArgument.asNumber = asNumber;
    function asNumbers(argValues) {
        return argValues.map(asNumber);
    }
    GArgument.asNumbers = asNumbers;
    function asString(argValue) {
        return typeof argValue === 'string' ? argValue : undefined;
    }
    GArgument.asString = asString;
    function asStrings(argValues) {
        return argValues.map(asString);
    }
    GArgument.asStrings = asStrings;
    function asBoolean(argValue) {
        return typeof argValue === 'boolean' ? argValue : undefined;
    }
    GArgument.asBoolean = asBoolean;
    function asBooleans(argValues) {
        return argValues.map(asBoolean);
    }
    GArgument.asBooleans = asBooleans;
    function getArgument(element, key) {
        return (0, argumentable_1.hasArguments)(element) ? element.args[key] : undefined;
    }
    GArgument.getArgument = getArgument;
    function getNumber(element, key) {
        return (0, argumentable_1.hasArguments)(element) ? asNumber(element.args[key]) : undefined;
    }
    GArgument.getNumber = getNumber;
    function getString(element, key) {
        return (0, argumentable_1.hasArguments)(element) ? asString(element.args[key]) : undefined;
    }
    GArgument.getString = getString;
    function getBoolean(element, key) {
        return (0, argumentable_1.hasArguments)(element) ? asBoolean(element.args[key]) : undefined;
    }
    GArgument.getBoolean = getBoolean;
    function getArguments(element, ...keys) {
        if (!(0, argumentable_1.hasArguments)(element)) {
            return undefined;
        }
        const values = [];
        for (const key of keys) {
            const value = element.args[key];
            if (value) {
                values.push(value);
            }
        }
        return values;
    }
    GArgument.getArguments = getArguments;
    function getNumbers(element, ...keys) {
        const values = getArguments(element, ...keys);
        return values ? asNumbers(values) : undefined;
    }
    GArgument.getNumbers = getNumbers;
    function getStrings(element, ...keys) {
        const values = getArguments(element, ...keys);
        return values ? asStrings(values) : undefined;
    }
    GArgument.getStrings = getStrings;
    function getBooleans(element, ...keys) {
        const values = getArguments(element, ...keys);
        return values ? asBooleans(values) : undefined;
    }
    GArgument.getBooleans = getBooleans;
    function hasNValues(values, length) {
        return values.length === length && values.filter(e => e === undefined).length === 0;
    }
    GArgument.hasNValues = hasNValues;
})(GArgument = exports.GArgument || (exports.GArgument = {}));
var EdgePadding;
(function (EdgePadding) {
    const KEY = 'edgePadding';
    function from(element) {
        return GArgument.getNumber(element, KEY);
    }
    EdgePadding.from = from;
})(EdgePadding = exports.EdgePadding || (exports.EdgePadding = {}));
class CornerRadius {
    constructor(topLeft = 0, topRight = topLeft, bottomRight = topLeft, bottomLeft = topRight) {
        this.topLeft = topLeft;
        this.topRight = topRight;
        this.bottomRight = bottomRight;
        this.bottomLeft = bottomLeft;
    }
    static from(element) {
        const radius = GArgument.getNumbers(element, this.KEY_RADIUS_TOP_LEFT, this.KEY_RADIUS_TOP_RIGHT, this.KEY_RADIUS_BOTTOM_RIGHT, this.KEY_RADIUS_BOTTOM_LEFT);
        if (radius === undefined || radius[0] === undefined) {
            return undefined;
        }
        return GArgument.hasNValues(radius, 4) ? new CornerRadius(radius[0], radius[1], radius[2], radius[3]) : new CornerRadius(radius[0]);
    }
}
CornerRadius.NO_RADIUS = new CornerRadius(0);
CornerRadius.KEY_RADIUS_TOP_LEFT = 'radiusTopLeft';
CornerRadius.KEY_RADIUS_TOP_RIGHT = 'radiusTopRight';
CornerRadius.KEY_RADIUS_BOTTOM_RIGHT = 'radiusBottomRight';
CornerRadius.KEY_RADIUS_BOTTOM_LEFT = 'radiusBottomLeft';
exports.CornerRadius = CornerRadius;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/utils/html-utils.js":
/*!***********************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/utils/html-utils.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.createElementFromHTML = void 0;
/********************************************************************************
 * Copyright (c) 2019-2020 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
function createElementFromHTML(html) {
    const template = document.createElement('template');
    html = html.trim(); // Never return a text node of whitespace as the result
    template.innerHTML = html;
    const node = template.content.firstChild;
    if (node && node instanceof HTMLElement) {
        return node;
    }
    return undefined;
}
exports.createElementFromHTML = createElementFromHTML;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/utils/layout-utils.js":
/*!*************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/utils/layout-utils.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.toValidElementAndBounds = exports.toValidElementMove = exports.isValidMove = exports.isValidSize = exports.getLayoutOptions = exports.minHeight = exports.minWidth = void 0;
function minWidth(element) {
    const layoutOptions = getLayoutOptions(element);
    if (layoutOptions !== undefined && typeof layoutOptions.minWidth === 'number') {
        return layoutOptions.minWidth;
    }
    return 1;
}
exports.minWidth = minWidth;
function minHeight(element) {
    const layoutOptions = getLayoutOptions(element);
    if (layoutOptions !== undefined && typeof layoutOptions.minHeight === 'number') {
        return layoutOptions.minHeight;
    }
    return 1;
}
exports.minHeight = minHeight;
function getLayoutOptions(element) {
    const layoutOptions = element.layoutOptions;
    if (layoutOptions !== undefined) {
        return layoutOptions;
    }
    return undefined;
}
exports.getLayoutOptions = getLayoutOptions;
function isValidSize(element, size) {
    return size.width >= minWidth(element) && size.height >= minHeight(element);
}
exports.isValidSize = isValidSize;
function isValidMove(element, newPosition, movementRestrictor) {
    if (movementRestrictor) {
        return movementRestrictor.validate(element, newPosition);
    }
    return true;
}
exports.isValidMove = isValidMove;
function toValidElementMove(element, move, movementRestrictor) {
    if (!isValidMove(element, move.toPosition, movementRestrictor)) {
        return;
    }
    return move;
}
exports.toValidElementMove = toValidElementMove;
function toValidElementAndBounds(element, bounds, movementRestrictor) {
    if (!isValidMove(element, bounds.newPosition, movementRestrictor)) {
        return;
    }
    const elementMinWidth = minWidth(element);
    if (bounds.newSize.width < elementMinWidth) {
        bounds.newSize.width = elementMinWidth;
    }
    const elementMinHeight = minHeight(element);
    if (bounds.newSize.height < elementMinHeight) {
        bounds.newSize.height = elementMinHeight;
    }
    return bounds;
}
exports.toValidElementAndBounds = toValidElementAndBounds;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/utils/marker.js":
/*!*******************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/utils/marker.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.collectIssueMarkers = exports.MarkerPredicates = void 0;
/********************************************************************************
 * Copyright (c) 2019-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const _glsp_sprotty_1 = __webpack_require__(/*! ../glsp-sprotty/index */ "../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/index.js");
var MarkerPredicates;
(function (MarkerPredicates) {
    MarkerPredicates.ALL = () => true;
    MarkerPredicates.ERRORS = (marker) => hasIssueWithSeverity(marker, _glsp_sprotty_1.MarkerKind.ERROR);
    MarkerPredicates.WARNINGS = (marker) => hasIssueWithSeverity(marker, _glsp_sprotty_1.MarkerKind.WARNING);
    MarkerPredicates.INFOS = (marker) => hasIssueWithSeverity(marker, _glsp_sprotty_1.MarkerKind.INFO);
    function hasIssueWithSeverity(marker, severity) {
        return marker.issues.find(issue => issue.severity === severity) !== undefined;
    }
    MarkerPredicates.hasIssueWithSeverity = hasIssueWithSeverity;
})(MarkerPredicates = exports.MarkerPredicates || (exports.MarkerPredicates = {}));
function collectIssueMarkers(root) {
    const markers = [];
    for (const child of root.children) {
        if (child instanceof _glsp_sprotty_1.SIssueMarker) {
            markers.push(child);
        }
        markers.push(...collectIssueMarkers(child));
    }
    return markers;
}
exports.collectIssueMarkers = collectIssueMarkers;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/utils/smodel-util.js":
/*!************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/utils/smodel-util.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.getElementTypeId = exports.hasCompatibleType = exports.calcRoute = exports.calcElementAndRoute = exports.calcElementAndRoutingPoints = exports.ROUTE_KINDS = exports.ROUTING_POINT_KINDS = exports.ALL_ROUTING_POINTS = exports.toElementAndRoutingPoints = exports.toElementAndBounds = exports.isSelectableAndBoundsAware = exports.isRoutingHandle = exports.isRoutable = exports.isNonRoutableSelectedBoundsAware = exports.isNonRoutableSelectedMovableBoundsAware = exports.removeCssClasses = exports.addCssClasses = exports.isNotUndefined = exports.hasSelectedElements = exports.getSelectedElementCount = exports.getElements = exports.getMatchingElements = exports.forEachElement = exports.filter = void 0;
/********************************************************************************
 * Copyright (c) 2019-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const _glsp_sprotty_1 = __webpack_require__(/*! ../glsp-sprotty/index */ "../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/index.js");
/**
 * Retrieves all elements from the given {@link ModelIndexImpl} that match the given {@link ModelFilterPredicate}
 * @param index The {@link ModelIndexImpl}.
 * @param predicate The {@link ModelFilterPredicate} that should be used.
 * @returns A {@link FluentIterable} of all indexed element that match the predicate
 * (correctly casted to also include the additional type of the predicate).
 */
function filter(index, predicate) {
    return index.all().filter(predicate);
}
exports.filter = filter;
/**
 * Retrieves all elements from the given {@link ModelIndexImpl} that match the given {@link ModelFilterPredicate} and executes
 * the given runnable for each element of the result set.
 * @param index The {@link ModelIndexImpl}.
 * @param predicate The {@link ModelFilterPredicate} that should be used.
 * @param runnable The runnable that should be executed for each matching element.
 */
function forEachElement(index, predicate, runnable) {
    filter(index, predicate).forEach(runnable);
}
exports.forEachElement = forEachElement;
/**
 * Retrieves an array of all elements that match the given {@link ModelFilterPredicate} from the given {@link ModelIndexImpl}.
 * @param index The {@link ModelIndexImpl}.
 * @param predicate The {@link ModelFilterPredicate} that should be used.
 * @returns An array of all indexed element that match the predicate
 * (correctly casted to also include the additional type of the predicate).
 */
function getMatchingElements(index, predicate) {
    return Array.from(filter(index, predicate));
}
exports.getMatchingElements = getMatchingElements;
/**
 * Invokes the given model index to retrieve the corresponding model elements for the given set of ids. Ids that
 * have no corresponding element in the index will be ignored.
 * @param index THe model index.
 * @param elementsIDs The element ids.
 * @param guard Optional typeguard. If defined only elements that match the guard will be returned.
 * @returns An array of the model elements that correspond to the given ids and filter predicate.
 */
function getElements(index, elementsIDs, guard) {
    // Internal filter function that filters out undefined model elements and runs an optional typeguard check.
    const filterFn = (element) => {
        if (element !== undefined) {
            return guard ? guard(element) : true;
        }
        return false;
    };
    return elementsIDs.map(id => index.getById(id)).filter(filterFn);
}
exports.getElements = getElements;
/**
 * Retrieves the amount of currently selected elements in the given {@link ModelIndexImpl}.
 * @param index The {@link ModelIndexImpl}.
 * @returns The amount of selected elements.
 */
function getSelectedElementCount(index) {
    let selected = 0;
    forEachElement(index, _glsp_sprotty_1.isSelected, element => selected++);
    return selected;
}
exports.getSelectedElementCount = getSelectedElementCount;
/**
 * Helper function to check wether an any element is selected in the given {@link ModelIndexImpl}.
 * @param index The {@link ModelIndexImpl}.
 * @returns `true` if at least one element is selected, `false` otherwise.
 */
function hasSelectedElements(index) {
    return getSelectedElementCount(index) > 0;
}
exports.hasSelectedElements = hasSelectedElements;
/**
 * Helper function to check wether an element is defined. Can be used as {@link ModelFilterPredicate}.
 * @param element The element that should be checked.
 * @returns the type predicate for `T`
 */
function isNotUndefined(element) {
    return element !== undefined;
}
exports.isNotUndefined = isNotUndefined;
/**
 * Adds a set of css classes to the given {@link SModelElement}.
 * @param element The element to which the css classes should be added.
 * @param cssClasses The set of css classes as string array.
 */
function addCssClasses(element, cssClasses) {
    var _a;
    const elementCssClasses = (_a = element.cssClasses) !== null && _a !== void 0 ? _a : [];
    (0, _glsp_sprotty_1.distinctAdd)(elementCssClasses, ...cssClasses);
    element.cssClasses = elementCssClasses;
}
exports.addCssClasses = addCssClasses;
/**
 * Removes a set of css classes from the given {@link SModelElement}.
 * @param element The element from which the css classes should be removed.
 * @param cssClasses The set of css classes as string array.
 */
function removeCssClasses(root, cssClasses) {
    if (!root.cssClasses || root.cssClasses.length === 0) {
        return;
    }
    (0, _glsp_sprotty_1.remove)(root.cssClasses, ...cssClasses);
}
exports.removeCssClasses = removeCssClasses;
function isNonRoutableSelectedMovableBoundsAware(element) {
    return isNonRoutableSelectedBoundsAware(element) && (0, _glsp_sprotty_1.isMoveable)(element);
}
exports.isNonRoutableSelectedMovableBoundsAware = isNonRoutableSelectedMovableBoundsAware;
/**
 * A typeguard function to check wether a given {@link SModelElement} implements the {@link BoundsAware} model feature,
 * the {@link Selectable} model feature and is actually selected. In addition, the element must not be a {@link SRoutableElement}.
 * @param element The element to check.
 * @returns A type predicate indicating wether the element is of type {@link SelectableBoundsAware}.
 */
function isNonRoutableSelectedBoundsAware(element) {
    return (0, _glsp_sprotty_1.isBoundsAware)(element) && (0, _glsp_sprotty_1.isSelected)(element) && !isRoutable(element);
}
exports.isNonRoutableSelectedBoundsAware = isNonRoutableSelectedBoundsAware;
/**
 * A type guard function to check wether a given {@link SModelElement} is a {@link SRoutableElement}.
 * @param element The element to check.
 * @returns A type predicate indicating wether the element is a {@link SRoutableElement}.
 */
function isRoutable(element) {
    return element instanceof _glsp_sprotty_1.SRoutableElement && element.routingPoints !== undefined;
}
exports.isRoutable = isRoutable;
/**
 * A typeguard function to check wether a given {@link SModelElement} is a {@link SRoutingHandle}.
 * @param element The element to check.
 * @returns A type predicate indicating wether the element is a {@link SRoutingHandle}
 */
function isRoutingHandle(element) {
    return element !== undefined && element instanceof _glsp_sprotty_1.SRoutingHandle;
}
exports.isRoutingHandle = isRoutingHandle;
/**
 * A typeguard function to check wether a given {@link SModelElement} implements the {@link Selectable} model feature and
 * the {@link BoundsAware} model feature.
 * @returns A type predicate indicating wether the element is of type {@link SelectableBoundsAware}.
 */
function isSelectableAndBoundsAware(element) {
    return (0, _glsp_sprotty_1.isSelectable)(element) && (0, _glsp_sprotty_1.isBoundsAware)(element);
}
exports.isSelectableAndBoundsAware = isSelectableAndBoundsAware;
/**
 * Helper function to translate a given {@link SModelElement} into its corresponding {@link ElementAndBounds} representation.
 * @param element The element to translate.
 * @returns The corresponding {@link ElementAndBounds} for the given element.
 */
function toElementAndBounds(element) {
    return {
        elementId: element.id,
        newPosition: {
            x: element.bounds.x,
            y: element.bounds.y
        },
        newSize: {
            width: element.bounds.width,
            height: element.bounds.height
        }
    };
}
exports.toElementAndBounds = toElementAndBounds;
/**
 * Helper function to translate a given {@link SRoutableElement} into its corresponding
 * {@link ElementAndRoutingPoints} representation.
 * @param element The element to translate.
 * @returns The corresponding {@link ElementAndRoutingPoints} for the given element.
 */
function toElementAndRoutingPoints(element) {
    return {
        elementId: element.id,
        newRoutingPoints: element.routingPoints
    };
}
exports.toElementAndRoutingPoints = toElementAndRoutingPoints;
/** All routing points. */
exports.ALL_ROUTING_POINTS = undefined;
/** Pure routing point data kinds. */
exports.ROUTING_POINT_KINDS = ['linear', 'bezier-junction'];
/** Pure route data kinds. */
exports.ROUTE_KINDS = [...exports.ROUTING_POINT_KINDS, 'source', 'target'];
/**
 * Helper function to calculate the {@link ElementAndRoutingPoints} for a given {@link SRoutableElement}.
 * If client layout is activated, i.e., the edge routing registry is given and has a router for the element, then the routing
 * points from the calculated route are used, otherwise we use the already specified routing points of the {@link SRoutableElement}.
 * @param element The element to translate.
 * @param routerRegistry the edge router registry.
 * @returns The corresponding {@link ElementAndRoutingPoints} for the given element.
 */
function calcElementAndRoutingPoints(element, routerRegistry) {
    const newRoutingPoints = routerRegistry ? calcRoute(element, routerRegistry, exports.ROUTING_POINT_KINDS) : element.routingPoints;
    return { elementId: element.id, newRoutingPoints };
}
exports.calcElementAndRoutingPoints = calcElementAndRoutingPoints;
/**
 * Helper function to calculate the route for a given {@link SRoutableElement}.
 * If client layout is activated, i.e., the edge routing registry is given and has a router for the element, then the points
 * from the calculated route are used, otherwise we use the already specified routing points of the {@link SRoutableElement}.
 * @param element The element to translate.
 * @param routerRegistry the edge router registry.
 * @returns The corresponding route for the given element.
 */
function calcElementAndRoute(element, routerRegistry) {
    var _a, _b;
    let route = routerRegistry ? calcRoute(element, routerRegistry, exports.ROUTE_KINDS) : undefined;
    if (!route) {
        // add source and target to the routing points
        route = [...element.routingPoints];
        route.splice(0, 0, ((_a = element.source) === null || _a === void 0 ? void 0 : _a.position) || _glsp_sprotty_1.Point.ORIGIN);
        route.push(((_b = element.target) === null || _b === void 0 ? void 0 : _b.position) || _glsp_sprotty_1.Point.ORIGIN);
    }
    return { elementId: element.id, newRoutingPoints: route };
}
exports.calcElementAndRoute = calcElementAndRoute;
/**
 * Helper function to calculate the route for a given {@link SRoutableElement} by filtering duplicate points.
 * @param element The element to translate.
 * @param routerRegistry the edge router registry.
 * @param pointKinds the routing point kinds that should be considered.
 * @param tolerance the tolerance applied to a point's coordinates to determine duplicates.
 * @returns The corresponding route for the given element.
 */
function calcRoute(element, routerRegistry, pointKinds = exports.ALL_ROUTING_POINTS, tolerance = Number.EPSILON) {
    const route = routerRegistry.get(element.routerKind).route(element);
    const calculatedRoute = [];
    for (const point of route) {
        // only include points we are actually interested in
        if (pointKinds && !pointKinds.includes(point.kind)) {
            continue;
        }
        // check if we are a duplicate based on coordinates in the already calculated route
        if (exports.ROUTING_POINT_KINDS.includes(point.kind) &&
            calculatedRoute.find(calculatedPoint => _glsp_sprotty_1.Point.maxDistance(point, calculatedPoint) < tolerance)) {
            continue;
        }
        calculatedRoute.push(point);
    }
    return calculatedRoute;
}
exports.calcRoute = calcRoute;
/**
 * Checks if the model is compatible with the passed type string.
 * (either has the same type or a subtype of this type)
 */
function hasCompatibleType(input, type) {
    const inputType = getElementTypeId(input);
    return inputType === type ? true : inputType.split(':').includes(type);
}
exports.hasCompatibleType = hasCompatibleType;
/**
 * Convenience function to retrieve the model element type from a given input. The input
 * can either be a {@link SModelElement}, {@link SModelElementSchema} or a string.
 * @param input The type input.
 * @returns The corresponding model type as string.
 */
function getElementTypeId(input) {
    if (typeof input === 'string') {
        return input;
    }
    else {
        return input['type'];
    }
}
exports.getElementTypeId = getElementTypeId;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/utils/viewpoint-util.js":
/*!***************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/utils/viewpoint-util.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2019-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.toAbsoluteSize = exports.toAbsolutePosition = exports.toAbsoluteBounds = exports.getAbsolutePosition = void 0;
const _glsp_sprotty_1 = __webpack_require__(/*! ../glsp-sprotty/index */ "../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/index.js");
/**
 * Return the position corresponding to this mouse event (Browser coordinates)
 * in the diagram coordinates system (i.e. relative to the Diagram's 0;0 point)
 *
 * This functions takes into account the following transformations:
 * - Location of the Diagram Canvas inside of the browser's page
 * - Current viewport Scroll and Zoom
 *
 * @param target
 *  An element from the diagram
 * @param mouseEvent
 *  A mouseEvent
 */
function getAbsolutePosition(target, mouseEvent) {
    let xPos = mouseEvent.pageX;
    let yPos = mouseEvent.pageY;
    const canvasBounds = target.root.canvasBounds;
    xPos -= canvasBounds.x;
    yPos -= canvasBounds.y;
    const viewport = (0, _glsp_sprotty_1.findParentByFeature)(target, _glsp_sprotty_1.isViewport);
    const zoom = viewport ? viewport.zoom : 1;
    if (viewport) {
        const scroll = { x: viewport.scroll.x, y: viewport.scroll.y };
        xPos += scroll.x * zoom;
        yPos += scroll.y * zoom;
        xPos /= zoom;
        yPos /= zoom;
    }
    return {
        x: xPos,
        y: yPos
    };
}
exports.getAbsolutePosition = getAbsolutePosition;
/**
 * Translates the bounds of the diagram element (local coordinates) into the diagram coordinates system
 * (i.e. relative to the Diagram's 0;0 point)
 *
 * @param target  A bounds-aware element from the diagram
 */
function toAbsoluteBounds(element) {
    const location = (0, _glsp_sprotty_1.isAlignable)(element) ? element.alignment : _glsp_sprotty_1.Point.ORIGIN;
    const x = location.x;
    const y = location.y;
    const width = element.bounds.width;
    const height = element.bounds.height;
    return (0, _glsp_sprotty_1.translateBounds)({ x, y, width, height }, element, element.root);
}
exports.toAbsoluteBounds = toAbsoluteBounds;
/**
 * Translates the position of the diagram element (local coordinates) into the diagram coordinates system
 * (i.e. relative to the Diagram's 0;0 point)
 *
 * @param target  A bounds-aware element from the diagram
 */
function toAbsolutePosition(target) {
    return toAbsoluteBounds(target);
}
exports.toAbsolutePosition = toAbsolutePosition;
/**
 * Translates the size of the diagram element (local coordinates) into the diagram coordinates system
 * (i.e. relative to the Diagram's 0;0 point)
 *
 * @param target  A bounds-aware element from the diagram
 */
function toAbsoluteSize(target) {
    return toAbsoluteBounds(target);
}
exports.toAbsoluteSize = toAbsoluteSize;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/views/base-view-module.js":
/*!*****************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/views/base-view-module.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.configureDefaultModelElements = void 0;
/********************************************************************************
 * Copyright (c) 2021-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const _glsp_sprotty_1 = __webpack_require__(/*! ../glsp-sprotty/index */ "../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/index.js");
const model_1 = __webpack_require__(/*! ../lib/model */ "../../node_modules/@eclipse-glsp/client/lib/lib/model.js");
const glsp_edge_view_1 = __webpack_require__(/*! ./glsp-edge-view */ "../../node_modules/@eclipse-glsp/client/lib/views/glsp-edge-view.js");
const issue_marker_view_1 = __webpack_require__(/*! ./issue-marker-view */ "../../node_modules/@eclipse-glsp/client/lib/views/issue-marker-view.js");
const rounded_corner_view_1 = __webpack_require__(/*! ./rounded-corner-view */ "../../node_modules/@eclipse-glsp/client/lib/views/rounded-corner-view.js");
const baseViewModule = new inversify_1.ContainerModule((bind, unbind, isBound, rebind) => {
    const context = { bind, unbind, isBound, rebind };
    configureDefaultModelElements(context);
});
function configureDefaultModelElements(context) {
    // HTML elements
    (0, _glsp_sprotty_1.configureModelElement)(context, _glsp_sprotty_1.DefaultTypes.HTML, _glsp_sprotty_1.HtmlRoot, _glsp_sprotty_1.HtmlRootView);
    // generic elements
    (0, _glsp_sprotty_1.configureModelElement)(context, _glsp_sprotty_1.DefaultTypes.FOREIGN_OBJECT, _glsp_sprotty_1.ForeignObjectElement, _glsp_sprotty_1.ForeignObjectView, {
        disable: [_glsp_sprotty_1.selectFeature, _glsp_sprotty_1.moveFeature]
    });
    (0, _glsp_sprotty_1.configureModelElement)(context, _glsp_sprotty_1.DefaultTypes.PRE_RENDERED, _glsp_sprotty_1.PreRenderedElement, _glsp_sprotty_1.PreRenderedView);
    (0, _glsp_sprotty_1.configureModelElement)(context, _glsp_sprotty_1.DefaultTypes.SHAPE_PRE_RENDERED, _glsp_sprotty_1.ShapedPreRenderedElement, _glsp_sprotty_1.PreRenderedView);
    // SVG elements
    (0, _glsp_sprotty_1.configureModelElement)(context, _glsp_sprotty_1.DefaultTypes.SVG, _glsp_sprotty_1.ViewportRootElement, _glsp_sprotty_1.SvgViewportView);
    // graph elements
    (0, _glsp_sprotty_1.configureModelElement)(context, _glsp_sprotty_1.DefaultTypes.GRAPH, model_1.GLSPGraph, _glsp_sprotty_1.SGraphView);
    (0, _glsp_sprotty_1.configureModelElement)(context, _glsp_sprotty_1.DefaultTypes.NODE, _glsp_sprotty_1.SNode, rounded_corner_view_1.RoundedCornerNodeView);
    (0, _glsp_sprotty_1.configureModelElement)(context, _glsp_sprotty_1.DefaultTypes.COMPARTMENT, _glsp_sprotty_1.SCompartment, _glsp_sprotty_1.SCompartmentView);
    (0, _glsp_sprotty_1.configureModelElement)(context, _glsp_sprotty_1.DefaultTypes.COMPARTMENT_HEADER, _glsp_sprotty_1.SCompartment, _glsp_sprotty_1.SCompartmentView);
    (0, _glsp_sprotty_1.configureModelElement)(context, _glsp_sprotty_1.DefaultTypes.EDGE, _glsp_sprotty_1.SEdge, glsp_edge_view_1.GEdgeView);
    (0, _glsp_sprotty_1.configureModelElement)(context, _glsp_sprotty_1.DefaultTypes.PORT, _glsp_sprotty_1.SPort, _glsp_sprotty_1.RectangularNodeView);
    (0, _glsp_sprotty_1.configureModelElement)(context, _glsp_sprotty_1.DefaultTypes.ROUTING_POINT, _glsp_sprotty_1.SRoutingHandle, _glsp_sprotty_1.SRoutingHandleView);
    (0, _glsp_sprotty_1.configureModelElement)(context, _glsp_sprotty_1.DefaultTypes.VOLATILE_ROUTING_POINT, _glsp_sprotty_1.SRoutingHandle, _glsp_sprotty_1.SRoutingHandleView);
    (0, _glsp_sprotty_1.configureModelElement)(context, _glsp_sprotty_1.DefaultTypes.LABEL, _glsp_sprotty_1.SLabel, _glsp_sprotty_1.SLabelView);
    // UI elements
    (0, _glsp_sprotty_1.configureModelElement)(context, _glsp_sprotty_1.DefaultTypes.BUTTON_EXPAND, _glsp_sprotty_1.SButton, _glsp_sprotty_1.ExpandButtonView);
    (0, _glsp_sprotty_1.configureModelElement)(context, _glsp_sprotty_1.DefaultTypes.ISSUE_MARKER, _glsp_sprotty_1.SIssueMarker, issue_marker_view_1.GIssueMarkerView);
    // shapes
    (0, _glsp_sprotty_1.configureModelElement)(context, _glsp_sprotty_1.DefaultTypes.NODE_CIRCLE, _glsp_sprotty_1.CircularNode, _glsp_sprotty_1.CircularNodeView);
    (0, _glsp_sprotty_1.configureModelElement)(context, _glsp_sprotty_1.DefaultTypes.NODE_DIAMOND, _glsp_sprotty_1.DiamondNode, _glsp_sprotty_1.DiamondNodeView);
    (0, _glsp_sprotty_1.configureModelElement)(context, _glsp_sprotty_1.DefaultTypes.NODE_RECTANGLE, _glsp_sprotty_1.RectangularNode, _glsp_sprotty_1.RectangularNodeView);
}
exports.configureDefaultModelElements = configureDefaultModelElements;
exports["default"] = baseViewModule;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/views/compartments.js":
/*!*************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/views/compartments.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.StructureCompartmentView = void 0;
/********************************************************************************
 * Copyright (c) 2021-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const _glsp_sprotty_1 = __webpack_require__(/*! ../glsp-sprotty/index */ "../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/index.js");
// eslint-disable-next-line @typescript-eslint/no-unused-vars
const JSX = { createElement: _glsp_sprotty_1.svg };
let StructureCompartmentView = class StructureCompartmentView extends _glsp_sprotty_1.ShapeView {
    render(model, context) {
        if (!this.isVisible(model, context)) {
            return undefined;
        }
        return (JSX.createElement("g", null,
            JSX.createElement("rect", { "class-sprotty-comp": true, "class-debug": false, x: '0', y: '0', width: model.size.width, height: model.size.height }),
            context.renderChildren(model)));
    }
};
StructureCompartmentView = __decorate([
    (0, inversify_1.injectable)()
], StructureCompartmentView);
exports.StructureCompartmentView = StructureCompartmentView;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/views/glsp-edge-view.js":
/*!***************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/views/glsp-edge-view.js ***!
  \***************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.GEdgeView = void 0;
/********************************************************************************
 * Copyright (c) 2021-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const _glsp_sprotty_1 = __webpack_require__(/*! ../glsp-sprotty/index */ "../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/index.js");
const argument_utils_1 = __webpack_require__(/*! ../utils/argument-utils */ "../../node_modules/@eclipse-glsp/client/lib/utils/argument-utils.js");
// eslint-disable-next-line @typescript-eslint/no-unused-vars
const JSX = { createElement: _glsp_sprotty_1.svg };
let GEdgeView = class GEdgeView extends _glsp_sprotty_1.PolylineEdgeView {
    render(edge, context) {
        const router = this.edgeRouterRegistry.get(edge.routerKind);
        const route = router.route(edge);
        if (route.length === 0) {
            return this.renderDanglingEdge('Cannot compute route', edge, context);
        }
        return (JSX.createElement("g", Object.assign({ "class-sprotty-edge": true, "class-mouseover": edge.hoverFeedback }, this.additionalClasses(edge, context)),
            this.renderLine(edge, route, context),
            this.renderAdditionals(edge, route, context),
            context.renderChildren(edge, { route })));
    }
    additionalClasses(_edge, _context) {
        return {};
    }
    renderLine(_edge, segments, _context) {
        return JSX.createElement("path", { d: this.createPathForSegments(segments) });
    }
    renderAdditionals(edge, segments, _context) {
        // for additional padding we draw another transparent path with larger stroke width
        const edgePadding = argument_utils_1.EdgePadding.from(edge);
        return edgePadding ? [this.renderMouseHandle(segments, edgePadding)] : [];
    }
    renderMouseHandle(segments, padding) {
        return (JSX.createElement("path", { "class-mouse-handle": true, d: this.createPathForSegments(segments), "style-stroke-width": padding * 2, "style-stroke": 'transparent', "style-stroke-dasharray": 'none', "style-stroke-dashoffset": '0' }));
    }
    createPathForSegments(segments) {
        const firstPoint = segments[0];
        let path = `M ${firstPoint.x},${firstPoint.y}`;
        for (let i = 1; i < segments.length; i++) {
            const p = segments[i];
            path += ` L ${p.x},${p.y}`;
        }
        return path;
    }
};
GEdgeView = __decorate([
    (0, inversify_1.injectable)()
], GEdgeView);
exports.GEdgeView = GEdgeView;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/views/glsp-projection-view.js":
/*!*********************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/views/glsp-projection-view.js ***!
  \*********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2023 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.GLSPProjectionView = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const snabbdom_1 = __webpack_require__(/*! snabbdom */ "../../node_modules/snabbdom/build/index.js");
const _glsp_sprotty_1 = __webpack_require__(/*! ../glsp-sprotty/index */ "../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/index.js");
// eslint-disable-next-line @typescript-eslint/no-unused-vars
const JSX = { createElement: _glsp_sprotty_1.html };
/**
 * Special viewport root view that renders horizontal and vertical projection bars for quick navigation.
 */
let GLSPProjectionView = class GLSPProjectionView extends _glsp_sprotty_1.ProjectedViewportView {
    render(model, context, args) {
        const svgElem = this.renderSvg(model, context, args);
        if (svgElem.data) {
            svgElem.data.class = { 'sprotty-graph': true };
        }
        const rootNode = (JSX.createElement("div", { "class-sprotty-graph": false, style: { width: '100%', height: '100%' } },
            svgElem,
            this.renderProjections(model, context, args)));
        (0, _glsp_sprotty_1.setAttr)(rootNode, 'tabindex', 0);
        return rootNode;
    }
    renderSvg(model, context, args) {
        const transform = `scale(${model.zoom}) translate(${-model.scroll.x},${-model.scroll.y})`;
        const ns = 'http://www.w3.org/2000/svg';
        const svg = (0, snabbdom_1.h)('svg', { ns, style: { height: '100%' } }, (0, snabbdom_1.h)('g', { ns, attrs: { transform } }, context.renderChildren(model)));
        return svg;
    }
    renderProjectionBar(projections, model, modelBounds, orientation) {
        const params = { modelBounds, orientation };
        // NOTE: Here we assume that the projection bars have the same size as the diagram canvas,
        // i.e. they are drawn as overlay above the canvas.
        params.factor =
            orientation === 'horizontal' ? model.canvasBounds.width / modelBounds.width : model.canvasBounds.height / modelBounds.height;
        params.zoomedFactor = params.factor / model.zoom;
        return (JSX.createElement("div", { "class-sprotty-projection-bar": true, "class-horizontal": orientation === 'horizontal', "class-vertical": orientation === 'vertical', "class-bordered-projection-bar": true },
            this.renderViewport(model, params),
            projections.map(p => this.renderProjection(p, model, params))));
    }
    renderViewport(model, params) {
        let canvasSize;
        let viewportPos;
        if (params.orientation === 'horizontal') {
            canvasSize = model.canvasBounds.width;
            viewportPos = (model.scroll.x - params.modelBounds.x) * params.factor;
        }
        else {
            canvasSize = model.canvasBounds.height;
            viewportPos = (model.scroll.y - params.modelBounds.y) * params.factor;
        }
        let viewportSize = canvasSize * params.zoomedFactor;
        if (viewportPos < 0) {
            viewportSize += viewportPos;
            viewportPos = 0;
        }
        else if (viewportPos > canvasSize) {
            viewportPos = canvasSize;
        }
        if (viewportSize < 0) {
            viewportSize = 0;
        }
        else if (viewportPos + viewportSize > canvasSize) {
            viewportSize = canvasSize - viewportPos;
        }
        if (Math.abs(viewportSize - canvasSize) < 1) {
            viewportSize = 0;
        }
        const style = params.orientation === 'horizontal'
            ? {
                left: `${viewportPos}px`,
                width: `${viewportSize}px`,
                border: 'none'
            }
            : {
                top: `${viewportPos}px`,
                height: `${viewportSize}px`,
                border: 'none'
            };
        return JSX.createElement("div", { "class-sprotty-viewport": viewportSize !== 0, "class-projection-scroll-bar": true, style: style });
    }
    renderProjection(projection, model, params) {
        let canvasSize;
        let projPos;
        let projSize;
        if (params.orientation === 'horizontal') {
            canvasSize = model.canvasBounds.width;
            projPos = (projection.projectedBounds.x - params.modelBounds.x) * params.factor;
            projSize = projection.projectedBounds.width * params.factor;
        }
        else {
            canvasSize = model.canvasBounds.height;
            projPos = (projection.projectedBounds.y - params.modelBounds.y) * params.factor;
            projSize = projection.projectedBounds.height * params.factor;
        }
        if (projPos < 0) {
            projSize += projPos;
            projPos = 0;
        }
        else if (projPos > canvasSize) {
            projPos = canvasSize;
        }
        if (projSize < 0) {
            projSize = 0;
        }
        else if (projPos + projSize > canvasSize) {
            projSize = canvasSize - projPos;
        }
        const style = params.orientation === 'horizontal'
            ? {
                left: `${projPos}px`,
                width: `${projSize}px`,
                height: '60%'
            }
            : {
                top: `${projPos}px`,
                height: `${projSize}px`,
                width: '60%'
            };
        const result = (JSX.createElement("div", { id: `${params.orientation}-projection:${projection.elementId}`, "class-sprotty-projection": true, "class-glsp-projection": true, style: style }));
        projection.cssClasses.forEach(cl => (0, _glsp_sprotty_1.setClass)(result, cl, true));
        return result;
    }
};
GLSPProjectionView = __decorate([
    (0, inversify_1.injectable)()
], GLSPProjectionView);
exports.GLSPProjectionView = GLSPProjectionView;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/views/index.js":
/*!******************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/views/index.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
/********************************************************************************
 * Copyright (c) 2019-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
__exportStar(__webpack_require__(/*! ./base-view-module */ "../../node_modules/@eclipse-glsp/client/lib/views/base-view-module.js"), exports);
__exportStar(__webpack_require__(/*! ./compartments */ "../../node_modules/@eclipse-glsp/client/lib/views/compartments.js"), exports);
__exportStar(__webpack_require__(/*! ./glsp-edge-view */ "../../node_modules/@eclipse-glsp/client/lib/views/glsp-edge-view.js"), exports);
__exportStar(__webpack_require__(/*! ./glsp-projection-view */ "../../node_modules/@eclipse-glsp/client/lib/views/glsp-projection-view.js"), exports);
__exportStar(__webpack_require__(/*! ./issue-marker-view */ "../../node_modules/@eclipse-glsp/client/lib/views/issue-marker-view.js"), exports);
__exportStar(__webpack_require__(/*! ./rounded-corner */ "../../node_modules/@eclipse-glsp/client/lib/views/rounded-corner.js"), exports);
__exportStar(__webpack_require__(/*! ./rounded-corner-view */ "../../node_modules/@eclipse-glsp/client/lib/views/rounded-corner-view.js"), exports);


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/views/issue-marker-view.js":
/*!******************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/views/issue-marker-view.js ***!
  \******************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.GIssueMarkerView = void 0;
/********************************************************************************
 * Copyright (c) 2020-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
/* eslint-disable max-len */
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const _glsp_sprotty_1 = __webpack_require__(/*! ../glsp-sprotty/index */ "../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/index.js");
// eslint-disable-next-line @typescript-eslint/no-unused-vars
const JSX = { createElement: _glsp_sprotty_1.svg };
let GIssueMarkerView = class GIssueMarkerView extends _glsp_sprotty_1.IssueMarkerView {
    render(marker, _context) {
        const maxSeverity = super.getMaxSeverity(marker);
        const group = (JSX.createElement("g", { "class-sprotty-issue": true },
            JSX.createElement("g", null,
                this.getGlspIssueMarkerBackground(maxSeverity),
                JSX.createElement("path", { d: this.getGlspIssueMarkerPath(maxSeverity) }))));
        (0, _glsp_sprotty_1.setClass)(group, 'sprotty-' + maxSeverity, true);
        return group;
    }
    getGlspIssueMarkerBackground(severity) {
        switch (severity) {
            case 'warning':
                return JSX.createElement("polygon", { "class-sprotty-issue-background": true, points: '8 2, 15.9 14.9, 0.2 14.9' });
            case 'error':
            case 'info':
                return JSX.createElement("circle", { "class-sprotty-issue-background": true, r: this.radius, cx: this.radius, cy: this.radius });
        }
    }
    get radius() {
        return 8; // var(--theia-icon-size)=16px => 16/2=8
    }
    getGlspIssueMarkerPath(severity) {
        switch (severity) {
            // paths used here are svg versions of codicons, resized to var(--theia-icon-size) 16px
            case 'error': // 'codicon-error'
                return 'm 8.8527788,0.00699568 c 1.8523692,0.115773 3.5889642,1.04195762 4.8624692,2.31546152 1.505048,1.620823 2.31546,3.5889653 2.31546,5.9044268 0,1.852369 -0.694637,3.588965 -1.852367,5.094015 -1.157733,1.389277 -2.778554,2.431235 -4.6309235,2.778554 C 7.6950478,16.446772 5.8426784,16.215226 4.2218552,15.289042 2.6010319,14.362857 1.3275281,12.97358 0.63288942,11.236984 -0.06174907,9.5003878 -0.17752216,7.5322456 0.4013433,5.7956494 0.98020876,3.9432802 2.0221665,2.4382302 3.6429898,1.3962725 5.14804,0.35431486 7.0004094,-0.10877742 8.8527788,0.00699568 Z M 9.4316445,14.941722 c 1.5050505,-0.347319 2.8943275,-1.15773 3.9362845,-2.431234 0.926185,-1.273504 1.50505,-2.778554 1.389277,-4.3993771 0,-1.8523692 -0.69464,-3.7047384 -1.968142,-4.9782422 C 11.631331,1.9751379 10.242054,1.2804995 8.6212324,1.1647264 7.1161824,1.0489533 5.4953592,1.3962725 4.2218552,2.3224572 2.9483511,3.2486418 2.0221665,4.5221456 1.5590742,6.1429686 c -0.4630923,1.50505 -0.4630923,3.1258731 0.2315462,4.6309234 0.6946384,1.50505 1.7365963,2.66278 3.1258734,3.473192 1.3892769,0.810411 3.0101002,1.041958 4.5151507,0.694638 z M 8.042367,7.5322456 10.82092,4.6379187 11.631331,5.4483302 8.8527788,8.3426571 11.631331,11.236984 10.82092,12.047395 8.042367,9.1530686 5.2638128,12.047395 4.4534013,11.236984 7.2319555,8.3426571 4.4534013,5.4483302 5.2638128,4.6379187 Z';
            case 'warning': // 'codicon-warning'
                return 'M 7.5587159,0.61312771 H 8.565869 L 16.050847,14.644601 15.54727,15.491525 H 0.55442396 L 0.05084746,14.644601 Z M 8.0622924,2.0780776 1.5157974,14.347033 H 14.585897 Z M 8.7776,13.202541 V 12.058049 H 7.3469848 v 1.144492 z M 7.3469848,10.913557 V 6.3355883 H 8.7776 v 4.5779687 z';
            case 'info': // 'codicon-info'
                return 'M 8.7624795,0.01729008 A 7.8878137,7.8878137 0 0 1 13.625085,2.3592747 8.1894066,8.1894066 0 0 1 14.158672,13.251418 7.9458123,7.9458123 0 0 1 4.2061071,15.26977 8.1198082,8.1198082 0 0 1 0.58699265,11.209866 8.259005,8.259005 0 0 1 0.32019895,5.7463948 8.1198082,8.1198082 0 0 1 3.533323,1.3500986 7.8878137,7.8878137 0 0 1 8.7624795,0.01729008 Z M 9.3099868,14.921778 A 6.8322386,6.8322386 0 0 0 13.265493,12.520635 7.0410337,7.0410337 0 0 0 12.801504,3.1712556 6.7510406,6.7510406 0 0 0 4.1829077,2.3128758 7.029434,7.029434 0 0 0 4.762894,14.248994 6.7394408,6.7394408 0 0 0 9.3099868,14.921778 Z M 7.3786322,5.7811939 H 8.8285979 V 4.6212213 H 7.3786322 Z M 8.8285979,6.9411665 V 11.581057 H 7.3786322 V 6.9411665 Z';
        }
    }
};
GIssueMarkerView = __decorate([
    (0, inversify_1.injectable)()
], GIssueMarkerView);
exports.GIssueMarkerView = GIssueMarkerView;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/views/rounded-corner-view.js":
/*!********************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/views/rounded-corner-view.js ***!
  \********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.toClipPathId = exports.RoundedCornerNodeView = void 0;
/********************************************************************************
 * Copyright (c) 2021-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const _glsp_sprotty_1 = __webpack_require__(/*! ../glsp-sprotty/index */ "../../node_modules/@eclipse-glsp/client/lib/glsp-sprotty/index.js");
const argument_utils_1 = __webpack_require__(/*! ../utils/argument-utils */ "../../node_modules/@eclipse-glsp/client/lib/utils/argument-utils.js");
const rounded_corner_1 = __webpack_require__(/*! ./rounded-corner */ "../../node_modules/@eclipse-glsp/client/lib/views/rounded-corner.js");
// eslint-disable-next-line @typescript-eslint/no-unused-vars
const JSX = { createElement: _glsp_sprotty_1.svg };
let RoundedCornerNodeView = class RoundedCornerNodeView extends _glsp_sprotty_1.RectangularNodeView {
    render(node, context) {
        const cornerRadius = argument_utils_1.CornerRadius.from(node);
        if (!cornerRadius) {
            return this.renderWithoutRadius(node, context);
        }
        const wrapper = new rounded_corner_1.RoundedCornerWrapper(node, cornerRadius);
        return (JSX.createElement("g", { "class-node": true },
            JSX.createElement("defs", null,
                JSX.createElement("clipPath", { id: toClipPathId(node) },
                    JSX.createElement("path", { d: this.renderPath(wrapper, context, this.getClipPathInsets() || 0) }))),
            this.renderPathNode(wrapper, context),
            context.renderChildren(node)));
    }
    renderWithoutRadius(node, context) {
        return super.render(node, context);
    }
    getClipPathInsets() {
        return 2;
    }
    renderPathNode(wrapper, context) {
        return (JSX.createElement("path", Object.assign({ d: this.renderPath(wrapper, context, 0), "class-sprotty-node": wrapper.element instanceof _glsp_sprotty_1.SNode, "class-sprotty-port": wrapper.element instanceof _glsp_sprotty_1.SPort, "class-mouseover": wrapper.element.hoverFeedback, "class-selected": wrapper.element.selected }, this.additionalClasses(wrapper.element, context))));
    }
    additionalClasses(_node, _context) {
        return {};
    }
    renderPath(wrapper, _context, inset) {
        // Calculate length of straight line segments
        const topLineLength = Math.max(0, wrapper.size.width - wrapper.cornerRadius.topLeft - wrapper.cornerRadius.topRight);
        const rightLineLength = Math.max(0, wrapper.size.height - wrapper.cornerRadius.topRight - wrapper.cornerRadius.bottomRight);
        const bottomLineLength = Math.max(0, wrapper.size.width - wrapper.cornerRadius.bottomLeft - wrapper.cornerRadius.bottomRight);
        const path = `M${0 + inset},${0 + wrapper.topLeftCorner.radiusY}` +
            `q${0},${-(wrapper.topLeftCorner.radiusY - inset)} ${wrapper.topLeftCorner.radiusX - inset},${-(wrapper.topLeftCorner.radiusY - inset)}` +
            `h${topLineLength}` +
            `q${wrapper.topRightCorner.radiusX - inset},0 ${wrapper.topRightCorner.radiusX - inset},${wrapper.topRightCorner.radiusY - inset}` +
            `v${rightLineLength}` +
            `q0,${wrapper.bottomRightCorner.radiusY - inset} ${-(wrapper.bottomRightCorner.radiusX - inset)},${wrapper.bottomRightCorner.radiusY - inset}` +
            `h${-bottomLineLength}` +
            `q${-(wrapper.bottomLeftCorner.radiusX - inset)},0 ${-(wrapper.bottomLeftCorner.radiusX - inset)},${-(wrapper.bottomLeftCorner.radiusY - inset)}` +
            'z ';
        return path;
    }
};
RoundedCornerNodeView = __decorate([
    (0, inversify_1.injectable)()
], RoundedCornerNodeView);
exports.RoundedCornerNodeView = RoundedCornerNodeView;
function toClipPathId(node) {
    return `${node.id}_clip_path`;
}
exports.toClipPathId = toClipPathId;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/lib/views/rounded-corner.js":
/*!***************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/lib/views/rounded-corner.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.scaledRadius = exports.RoundedCornerWrapper = void 0;
class RoundedCornerWrapper {
    constructor(element, cornerRadius) {
        this.element = element;
        this.cornerRadius = cornerRadius;
    }
    get size() {
        return this.element.size;
    }
    get topLeftCorner() {
        if (!this._topLeftCorner) {
            this._topLeftCorner = {
                radiusX: scaledRadius(this.cornerRadius.topLeft, this.element.size.width / 2),
                radiusY: scaledRadius(this.cornerRadius.topLeft, this.element.size.height / 2)
            };
        }
        return this._topLeftCorner;
    }
    get topRightCorner() {
        if (!this._topRightCorner) {
            this._topRightCorner = {
                radiusX: scaledRadius(this.cornerRadius.topRight, this.element.size.width / 2),
                radiusY: scaledRadius(this.cornerRadius.topRight, this.element.size.height / 2)
            };
        }
        return this._topRightCorner;
    }
    get bottomRightCorner() {
        if (!this._bottomRightCorner) {
            this._bottomRightCorner = {
                radiusX: scaledRadius(this.cornerRadius.bottomRight, this.element.size.width / 2),
                radiusY: scaledRadius(this.cornerRadius.bottomRight, this.element.size.height / 2)
            };
        }
        return this._bottomRightCorner;
    }
    get bottomLeftCorner() {
        if (!this._bottomLeftCorner) {
            this._bottomLeftCorner = {
                radiusX: scaledRadius(this.cornerRadius.bottomLeft, this.element.size.width / 2),
                radiusY: scaledRadius(this.cornerRadius.bottomLeft, this.element.size.height / 2)
            };
        }
        return this._bottomLeftCorner;
    }
}
exports.RoundedCornerWrapper = RoundedCornerWrapper;
/*
 * Scales the radius if necessary. (Percentile down scaling if the radius is bigger then the maximal allowed length)
 */
function scaledRadius(radius, maximalLength) {
    if (radius <= maximalLength) {
        return radius;
    }
    else {
        return radius * (maximalLength / radius);
    }
}
exports.scaledRadius = scaledRadius;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/protocol/lib/action-protocol/base-protocol.js":
/*!**************************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/protocol/lib/action-protocol/base-protocol.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CompoundOperation = exports.Operation = exports.RejectAction = exports.ResponseAction = exports.RequestAction = exports.ActionMessage = exports.Action = void 0;
const sprotty = __webpack_require__(/*! sprotty-protocol/lib/actions */ "../../node_modules/sprotty-protocol/lib/actions.js");
const type_util_1 = __webpack_require__(/*! ../utils/type-util */ "../../node_modules/@eclipse-glsp/protocol/lib/utils/type-util.js");
var Action;
(function (Action) {
    function is(object) {
        return type_util_1.AnyObject.is(object) && (0, type_util_1.hasStringProp)(object, 'kind');
    }
    Action.is = is;
    /**
     * Typeguard function to check wether the given object is an {@link Action} with the given `kind`.
     * @param object The object to check.
     * @param kind  The expected action kind.
     * @returns A type literal indicating wether the given object is an action with the given kind.
     */
    function hasKind(object, kind) {
        return Action.is(object) && object.kind === kind;
    }
    Action.hasKind = hasKind;
})(Action = exports.Action || (exports.Action = {}));
var ActionMessage;
(function (ActionMessage) {
    function is(object, typeguard) {
        const actionGuard = typeguard !== null && typeguard !== void 0 ? typeguard : Action.is;
        return type_util_1.AnyObject.is(object) && (0, type_util_1.hasStringProp)(object, 'clientId') && 'action' in object && actionGuard(object.action);
    }
    ActionMessage.is = is;
})(ActionMessage = exports.ActionMessage || (exports.ActionMessage = {}));
var RequestAction;
(function (RequestAction) {
    function is(object) {
        return Action.is(object) && (0, type_util_1.hasStringProp)(object, 'requestId');
    }
    RequestAction.is = is;
    /**
     * Typeguard function to check wether the given object is an {@link RequestAction} with the given `kind`.
     * @param object The object to check.
     * @param kind  The expected action kind.
     * @returns A type literal indicating wether the given object is a request action with the given kind.
     */
    function hasKind(object, kind) {
        return RequestAction.is(object) && object.kind === kind;
    }
    RequestAction.hasKind = hasKind;
    function generateRequestId() {
        return sprotty.generateRequestId();
    }
    RequestAction.generateRequestId = generateRequestId;
})(RequestAction = exports.RequestAction || (exports.RequestAction = {}));
var ResponseAction;
(function (ResponseAction) {
    function is(object) {
        return Action.is(object) && (0, type_util_1.hasStringProp)(object, 'responseId');
    }
    ResponseAction.is = is;
    /**
     * Typeguard function to check wether the given object is an {@link ResponseAction} with a non-empty response id.
     * @param object The object to check.
     * @returns A type literal indicating wether the given object is a response action with a non-empty response id.
     */
    function hasValidResponseId(object) {
        return ResponseAction.is(object) && object.responseId !== '';
    }
    ResponseAction.hasValidResponseId = hasValidResponseId;
})(ResponseAction = exports.ResponseAction || (exports.ResponseAction = {}));
var RejectAction;
(function (RejectAction) {
    RejectAction.KIND = 'rejectRequest';
    function is(object) {
        return Action.hasKind(object, RejectAction.KIND) && (0, type_util_1.hasStringProp)(object, 'message');
    }
    RejectAction.is = is;
    function create(message, options = {}) {
        return Object.assign({ kind: RejectAction.KIND, responseId: '', message }, options);
    }
    RejectAction.create = create;
})(RejectAction = exports.RejectAction || (exports.RejectAction = {}));
var Operation;
(function (Operation) {
    function is(object) {
        return Action.is(object) && object.isOperation === true;
    }
    Operation.is = is;
    /**
     * Typeguard function to check wether the given object is an {@link Operation} with the given `kind`.
     * @param object The object to check.
     * @param kind  The expected operation kind.
     * @returns A type literal indicating wether the given object is an operation with the given kind.
     */
    function hasKind(object, kind) {
        return Operation.is(object) && object.kind === kind;
    }
    Operation.hasKind = hasKind;
})(Operation = exports.Operation || (exports.Operation = {}));
var CompoundOperation;
(function (CompoundOperation) {
    CompoundOperation.KIND = 'compound';
    function is(object) {
        return Operation.hasKind(object, CompoundOperation.KIND) && (0, type_util_1.hasArrayProp)(object, 'operationList');
    }
    CompoundOperation.is = is;
    function create(operationList) {
        return {
            kind: CompoundOperation.KIND,
            isOperation: true,
            operationList
        };
    }
    CompoundOperation.create = create;
})(CompoundOperation = exports.CompoundOperation || (exports.CompoundOperation = {}));


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/protocol/lib/action-protocol/client-notification.js":
/*!********************************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/protocol/lib/action-protocol/client-notification.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ServerMessageAction = exports.ServerStatusAction = void 0;
/********************************************************************************
 * Copyright (c) 2021-2022 STMicroelectronics and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const type_util_1 = __webpack_require__(/*! ../utils/type-util */ "../../node_modules/@eclipse-glsp/protocol/lib/utils/type-util.js");
const base_protocol_1 = __webpack_require__(/*! ./base-protocol */ "../../node_modules/@eclipse-glsp/protocol/lib/action-protocol/base-protocol.js");
var ServerStatusAction;
(function (ServerStatusAction) {
    ServerStatusAction.KIND = 'serverStatus';
    function is(object) {
        return base_protocol_1.Action.hasKind(object, ServerStatusAction.KIND) && (0, type_util_1.hasStringProp)(object, 'severity') && (0, type_util_1.hasStringProp)(object, 'message');
    }
    ServerStatusAction.is = is;
    function create(message, options = {}) {
        return Object.assign({ kind: ServerStatusAction.KIND, severity: 'INFO', message }, options);
    }
    ServerStatusAction.create = create;
})(ServerStatusAction = exports.ServerStatusAction || (exports.ServerStatusAction = {}));
var ServerMessageAction;
(function (ServerMessageAction) {
    ServerMessageAction.KIND = 'serverMessage';
    function is(object) {
        return base_protocol_1.Action.hasKind(object, ServerMessageAction.KIND) && (0, type_util_1.hasStringProp)(object, 'message') && (0, type_util_1.hasStringProp)(object, 'severity');
    }
    ServerMessageAction.is = is;
    function create(message, options = {}) {
        return Object.assign({ kind: ServerMessageAction.KIND, message, severity: 'INFO' }, options);
    }
    ServerMessageAction.create = create;
})(ServerMessageAction = exports.ServerMessageAction || (exports.ServerMessageAction = {}));


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/protocol/lib/action-protocol/clipboard.js":
/*!**********************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/protocol/lib/action-protocol/clipboard.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2021-2022 STMicroelectronics and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.PasteOperation = exports.CutOperation = exports.SetClipboardDataAction = exports.RequestClipboardDataAction = void 0;
const type_util_1 = __webpack_require__(/*! ../utils/type-util */ "../../node_modules/@eclipse-glsp/protocol/lib/utils/type-util.js");
const base_protocol_1 = __webpack_require__(/*! ./base-protocol */ "../../node_modules/@eclipse-glsp/protocol/lib/action-protocol/base-protocol.js");
var RequestClipboardDataAction;
(function (RequestClipboardDataAction) {
    RequestClipboardDataAction.KIND = 'requestClipboardData';
    function is(object) {
        return base_protocol_1.RequestAction.hasKind(object, RequestClipboardDataAction.KIND) && (0, type_util_1.hasObjectProp)(object, 'editorContext');
    }
    RequestClipboardDataAction.is = is;
    function create(editorContext, options = {}) {
        return Object.assign({ kind: RequestClipboardDataAction.KIND, requestId: '', editorContext }, options);
    }
    RequestClipboardDataAction.create = create;
})(RequestClipboardDataAction = exports.RequestClipboardDataAction || (exports.RequestClipboardDataAction = {}));
var SetClipboardDataAction;
(function (SetClipboardDataAction) {
    SetClipboardDataAction.KIND = 'setClipboardData';
    function is(object) {
        return base_protocol_1.Action.hasKind(object, SetClipboardDataAction.KIND) && (0, type_util_1.hasObjectProp)(object, 'clipboardData');
    }
    SetClipboardDataAction.is = is;
    function create(clipboardData, options = {}) {
        return Object.assign({ kind: SetClipboardDataAction.KIND, responseId: '', clipboardData }, options);
    }
    SetClipboardDataAction.create = create;
})(SetClipboardDataAction = exports.SetClipboardDataAction || (exports.SetClipboardDataAction = {}));
var CutOperation;
(function (CutOperation) {
    CutOperation.KIND = 'cut';
    function is(object) {
        return base_protocol_1.Operation.hasKind(object, CutOperation.KIND) && (0, type_util_1.hasObjectProp)(object, 'editorContext');
    }
    CutOperation.is = is;
    function create(editorContext) {
        return {
            kind: CutOperation.KIND,
            isOperation: true,
            editorContext
        };
    }
    CutOperation.create = create;
})(CutOperation = exports.CutOperation || (exports.CutOperation = {}));
var PasteOperation;
(function (PasteOperation) {
    PasteOperation.KIND = 'paste';
    function is(object) {
        return base_protocol_1.Operation.hasKind(object, PasteOperation.KIND) && (0, type_util_1.hasObjectProp)(object, 'clipboardData') && (0, type_util_1.hasObjectProp)(object, 'editorContext');
    }
    PasteOperation.is = is;
    function create(options) {
        return Object.assign({ kind: PasteOperation.KIND, isOperation: true }, options);
    }
    PasteOperation.create = create;
})(PasteOperation = exports.PasteOperation || (exports.PasteOperation = {}));


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/protocol/lib/action-protocol/contexts.js":
/*!*********************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/protocol/lib/action-protocol/contexts.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2021-2022 STMicroelectronics and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SetContextActions = exports.RequestContextActions = void 0;
const type_util_1 = __webpack_require__(/*! ../utils/type-util */ "../../node_modules/@eclipse-glsp/protocol/lib/utils/type-util.js");
const base_protocol_1 = __webpack_require__(/*! ./base-protocol */ "../../node_modules/@eclipse-glsp/protocol/lib/action-protocol/base-protocol.js");
var RequestContextActions;
(function (RequestContextActions) {
    RequestContextActions.KIND = 'requestContextActions';
    function is(object) {
        return base_protocol_1.RequestAction.hasKind(object, RequestContextActions.KIND) && (0, type_util_1.hasStringProp)(object, 'contextId') && (0, type_util_1.hasObjectProp)(object, 'editorContext');
    }
    RequestContextActions.is = is;
    function create(options) {
        return Object.assign({ kind: RequestContextActions.KIND, requestId: '' }, options);
    }
    RequestContextActions.create = create;
})(RequestContextActions = exports.RequestContextActions || (exports.RequestContextActions = {}));
var SetContextActions;
(function (SetContextActions) {
    SetContextActions.KIND = 'setContextActions';
    function is(object) {
        return base_protocol_1.Action.hasKind(object, SetContextActions.KIND) && (0, type_util_1.hasArrayProp)(object, 'actions');
    }
    SetContextActions.is = is;
    function create(actions, options = {}) {
        return Object.assign({ kind: SetContextActions.KIND, responseId: '', actions }, options);
    }
    SetContextActions.create = create;
})(SetContextActions = exports.SetContextActions || (exports.SetContextActions = {}));


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/protocol/lib/action-protocol/edge-modification.js":
/*!******************************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/protocol/lib/action-protocol/edge-modification.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2021-2022 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ChangeRoutingPointsOperation = exports.ReconnectEdgeOperation = void 0;
const type_util_1 = __webpack_require__(/*! ../utils/type-util */ "../../node_modules/@eclipse-glsp/protocol/lib/utils/type-util.js");
const base_protocol_1 = __webpack_require__(/*! ./base-protocol */ "../../node_modules/@eclipse-glsp/protocol/lib/action-protocol/base-protocol.js");
var ReconnectEdgeOperation;
(function (ReconnectEdgeOperation) {
    ReconnectEdgeOperation.KIND = 'reconnectEdge';
    function is(object) {
        return (base_protocol_1.Operation.hasKind(object, ReconnectEdgeOperation.KIND) &&
            (0, type_util_1.hasStringProp)(object, 'edgeElementId') &&
            (0, type_util_1.hasStringProp)(object, 'sourceElementId') &&
            (0, type_util_1.hasStringProp)(object, 'targetElementId'));
    }
    ReconnectEdgeOperation.is = is;
    function create(options) {
        return Object.assign({ kind: ReconnectEdgeOperation.KIND, isOperation: true }, options);
    }
    ReconnectEdgeOperation.create = create;
})(ReconnectEdgeOperation = exports.ReconnectEdgeOperation || (exports.ReconnectEdgeOperation = {}));
var ChangeRoutingPointsOperation;
(function (ChangeRoutingPointsOperation) {
    ChangeRoutingPointsOperation.KIND = 'changeRoutingPoints';
    function is(object) {
        return base_protocol_1.Operation.hasKind(object, ChangeRoutingPointsOperation.KIND) && (0, type_util_1.hasArrayProp)(object, 'newRoutingPoints');
    }
    ChangeRoutingPointsOperation.is = is;
    function create(newRoutingPoints) {
        return {
            kind: ChangeRoutingPointsOperation.KIND,
            isOperation: true,
            newRoutingPoints
        };
    }
    ChangeRoutingPointsOperation.create = create;
})(ChangeRoutingPointsOperation = exports.ChangeRoutingPointsOperation || (exports.ChangeRoutingPointsOperation = {}));


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/protocol/lib/action-protocol/element-creation.js":
/*!*****************************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/protocol/lib/action-protocol/element-creation.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2021-2022 STMicroelectronics and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.DeleteElementOperation = exports.CreateEdgeOperation = exports.CreateNodeOperation = exports.CreateOperation = void 0;
const type_util_1 = __webpack_require__(/*! ../utils/type-util */ "../../node_modules/@eclipse-glsp/protocol/lib/utils/type-util.js");
const base_protocol_1 = __webpack_require__(/*! ./base-protocol */ "../../node_modules/@eclipse-glsp/protocol/lib/action-protocol/base-protocol.js");
var CreateOperation;
(function (CreateOperation) {
    function is(object) {
        return base_protocol_1.Operation.is(object) && (0, type_util_1.hasStringProp)(object, 'elementTypeId');
    }
    CreateOperation.is = is;
    /**
     * Typeguard function to check wether the given object is a {@link CreateOperation} with the given `kind`.
     * @param object The object to check.
     * @param kind  The expected operation kind.
     * @returns A type literal indicating wether the given object is a create operation with the given kind.
     */
    function hasKind(object, kind) {
        return CreateOperation.is(object) && object.kind === kind;
    }
    CreateOperation.hasKind = hasKind;
})(CreateOperation = exports.CreateOperation || (exports.CreateOperation = {}));
var CreateNodeOperation;
(function (CreateNodeOperation) {
    CreateNodeOperation.KIND = 'createNode';
    function is(object) {
        return CreateOperation.hasKind(object, CreateNodeOperation.KIND);
    }
    CreateNodeOperation.is = is;
    function create(elementTypeId, options = {}) {
        return Object.assign({ kind: CreateNodeOperation.KIND, isOperation: true, elementTypeId }, options);
    }
    CreateNodeOperation.create = create;
})(CreateNodeOperation = exports.CreateNodeOperation || (exports.CreateNodeOperation = {}));
var CreateEdgeOperation;
(function (CreateEdgeOperation) {
    CreateEdgeOperation.KIND = 'createEdge';
    function is(object) {
        return (CreateOperation.hasKind(object, CreateEdgeOperation.KIND) && (0, type_util_1.hasStringProp)(object, 'sourceElementId') && (0, type_util_1.hasStringProp)(object, 'targetElementId'));
    }
    CreateEdgeOperation.is = is;
    function create(options) {
        return Object.assign({ kind: CreateEdgeOperation.KIND, isOperation: true }, options);
    }
    CreateEdgeOperation.create = create;
})(CreateEdgeOperation = exports.CreateEdgeOperation || (exports.CreateEdgeOperation = {}));
var DeleteElementOperation;
(function (DeleteElementOperation) {
    DeleteElementOperation.KIND = 'deleteElement';
    function is(object) {
        return base_protocol_1.Operation.hasKind(object, DeleteElementOperation.KIND) && (0, type_util_1.hasArrayProp)(object, 'elementIds');
    }
    DeleteElementOperation.is = is;
    function create(elementIds) {
        return {
            kind: DeleteElementOperation.KIND,
            isOperation: true,
            elementIds
        };
    }
    DeleteElementOperation.create = create;
})(DeleteElementOperation = exports.DeleteElementOperation || (exports.DeleteElementOperation = {}));


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/protocol/lib/action-protocol/element-hover.js":
/*!**************************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/protocol/lib/action-protocol/element-hover.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SetPopupModelAction = exports.RequestPopupModelAction = void 0;
const type_util_1 = __webpack_require__(/*! ../utils/type-util */ "../../node_modules/@eclipse-glsp/protocol/lib/utils/type-util.js");
const base_protocol_1 = __webpack_require__(/*! ./base-protocol */ "../../node_modules/@eclipse-glsp/protocol/lib/action-protocol/base-protocol.js");
var RequestPopupModelAction;
(function (RequestPopupModelAction) {
    RequestPopupModelAction.KIND = 'requestPopupModel';
    function is(object) {
        return base_protocol_1.RequestAction.hasKind(object, RequestPopupModelAction.KIND) && (0, type_util_1.hasStringProp)(object, 'elementId') && (0, type_util_1.hasObjectProp)(object, 'bounds');
    }
    RequestPopupModelAction.is = is;
    function create(options) {
        return Object.assign({ kind: RequestPopupModelAction.KIND, requestId: '' }, options);
    }
    RequestPopupModelAction.create = create;
})(RequestPopupModelAction = exports.RequestPopupModelAction || (exports.RequestPopupModelAction = {}));
var SetPopupModelAction;
(function (SetPopupModelAction) {
    SetPopupModelAction.KIND = 'setPopupModel';
    function is(object) {
        return base_protocol_1.Action.hasKind(object, SetPopupModelAction.KIND) && (0, type_util_1.hasObjectProp)(object, 'newRoot');
    }
    SetPopupModelAction.is = is;
    function create(newRoot, options = {}) {
        return Object.assign({ kind: SetPopupModelAction.KIND, responseId: '', newRoot }, options);
    }
    SetPopupModelAction.create = create;
})(SetPopupModelAction = exports.SetPopupModelAction || (exports.SetPopupModelAction = {}));


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/protocol/lib/action-protocol/element-navigation.js":
/*!*******************************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/protocol/lib/action-protocol/element-navigation.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.NavigateToExternalTargetAction = exports.SetResolvedNavigationTargetAction = exports.ResolveNavigationTargetAction = exports.NavigateToTargetAction = exports.SetNavigationTargetsAction = exports.RequestNavigationTargetsAction = exports.NavigationTarget = void 0;
const type_util_1 = __webpack_require__(/*! ../utils/type-util */ "../../node_modules/@eclipse-glsp/protocol/lib/utils/type-util.js");
const base_protocol_1 = __webpack_require__(/*! ./base-protocol */ "../../node_modules/@eclipse-glsp/protocol/lib/action-protocol/base-protocol.js");
var NavigationTarget;
(function (NavigationTarget) {
    function is(object) {
        return object !== undefined && (0, type_util_1.hasStringProp)(object, 'uri');
    }
    NavigationTarget.is = is;
    /**
     *  Generic key to store element ids as additional argument
     */
    NavigationTarget.ELEMENT_IDS = 'elementIds';
    /**
     * The separator that is used to store he values for the {@link ELEMENT_IDS} as a single string.
     */
    NavigationTarget.ELEMENT_IDS_SEPARATOR = '&';
    /**
     *  Generic key ot store the line property of a {@link TextPosition} as additional argument.
     */
    NavigationTarget.TEXT_LINE = 'line';
    /**
     *  Generic key ot store the character property of a {@link TextPosition} as additional argument.
     */
    NavigationTarget.TEXT_COLUMN = 'column';
    /**
     * Utility function to check wether the given {@link NavigationTarget} has additional arguments defined.
     * @param target The navigation target to check.
     * @returns `true` if the navigation target has a non-empty `args` property, `false`
     */
    function hasArguments(target) {
        return target.args !== undefined && Object.keys(target.args).length > 0;
    }
    NavigationTarget.hasArguments = hasArguments;
    /**
     * Adds a new key-value pair to the additional arguments of the given {@link NavigationTarget}.
     * @param target The navigation target.
     * @param key The key of the new argument.
     * @param value The (primitive) value of the new argument.
     */
    function addArgument(target, key, value) {
        if (!target.args) {
            target.args = {};
        }
        target.args[key] = value;
    }
    NavigationTarget.addArgument = addArgument;
    /**
     * Retrieves the element ids that have been stored with the generic {@link ELEMENT_IDS} key from the args of the
     * given target.
     * @param target The navigation target.
     * @returns An array with the parsed element ids. The array is empty if no {@link ELEMENT_IDS} key is present in the args
     * of the navigation target.
     */
    function getElementIds(target) {
        var _a;
        if (!((_a = target === null || target === void 0 ? void 0 : target.args) === null || _a === void 0 ? void 0 : _a[NavigationTarget.ELEMENT_IDS])) {
            return [];
        }
        const elementIdsValue = target.args[NavigationTarget.ELEMENT_IDS].toString();
        return elementIdsValue.split(NavigationTarget.ELEMENT_IDS_SEPARATOR);
    }
    NavigationTarget.getElementIds = getElementIds;
    /**
     * Stores the given element ids in the given {@link NavigationTarget} as additional arguments using the generic {@link ELEMENT_IDS} key.
     * @param target The navigation target.
     * @param elementIds The element ids that should be stored.
     * @returns the value of the {@link ELEMENT_IDS} key after storing the given element ids.
     */
    function setElementIds(target, ...elementIds) {
        if (target.args === undefined) {
            target.args = {};
        }
        return (target.args[NavigationTarget.ELEMENT_IDS] = elementIds.join(NavigationTarget.ELEMENT_IDS_SEPARATOR));
    }
    NavigationTarget.setElementIds = setElementIds;
    /**
     * Stores the given {@link TextPosition} in the given {@link NavigationTarget} as additional arguments using
     * the generic {@link TEXT_LINE} & {@link TEXT_COLUMN} keys.
     * @param target The navigation target.
     * @param position The text position that should be stored.
     */
    function setTextPosition(target, position) {
        if (position) {
            if (target.args === undefined) {
                target.args = {};
            }
            target.args[NavigationTarget.TEXT_LINE] = position.line;
            target.args[NavigationTarget.TEXT_COLUMN] = position.character;
        }
    }
    NavigationTarget.setTextPosition = setTextPosition;
    /**
     * Retrieves the {@link TextPosition} that have been stored with the generic {@link TEXT_LINE} & {@link TEXT_COLUMN} keys
     * from the args of the given target.
     * @param target The navigation target.
     * @returns The parsed text position or `undefined` if one of the generic text keys is not present in the args
     * of the navigation target.
     */
    function getTextPosition(target) {
        if (!target.args || !target.args[NavigationTarget.TEXT_LINE] || !target.args[NavigationTarget.TEXT_COLUMN]) {
            return undefined;
        }
        return {
            line: Number(target.args[NavigationTarget.TEXT_LINE]),
            character: Number(target.args[NavigationTarget.TEXT_COLUMN])
        };
    }
    NavigationTarget.getTextPosition = getTextPosition;
})(NavigationTarget = exports.NavigationTarget || (exports.NavigationTarget = {}));
var RequestNavigationTargetsAction;
(function (RequestNavigationTargetsAction) {
    RequestNavigationTargetsAction.KIND = 'requestNavigationTargets';
    function is(object) {
        return base_protocol_1.RequestAction.hasKind(object, RequestNavigationTargetsAction.KIND) && (0, type_util_1.hasStringProp)(object, 'targetTypeId') && (0, type_util_1.hasObjectProp)(object, 'editorContext');
    }
    RequestNavigationTargetsAction.is = is;
    function create(options) {
        return Object.assign({ kind: RequestNavigationTargetsAction.KIND, requestId: '' }, options);
    }
    RequestNavigationTargetsAction.create = create;
})(RequestNavigationTargetsAction = exports.RequestNavigationTargetsAction || (exports.RequestNavigationTargetsAction = {}));
var SetNavigationTargetsAction;
(function (SetNavigationTargetsAction) {
    SetNavigationTargetsAction.KIND = 'setNavigationTargets';
    function is(object) {
        return base_protocol_1.Action.hasKind(object, SetNavigationTargetsAction.KIND) && (0, type_util_1.hasArrayProp)(object, 'targets');
    }
    SetNavigationTargetsAction.is = is;
    function create(targets, options = {}) {
        return Object.assign({ kind: SetNavigationTargetsAction.KIND, responseId: '', targets }, options);
    }
    SetNavigationTargetsAction.create = create;
})(SetNavigationTargetsAction = exports.SetNavigationTargetsAction || (exports.SetNavigationTargetsAction = {}));
var NavigateToTargetAction;
(function (NavigateToTargetAction) {
    NavigateToTargetAction.KIND = 'navigateToTarget';
    function is(object) {
        return base_protocol_1.Action.hasKind(object, NavigateToTargetAction.KIND) && (0, type_util_1.hasObjectProp)(object, 'target');
    }
    NavigateToTargetAction.is = is;
    function create(target) {
        return {
            kind: NavigateToTargetAction.KIND,
            target
        };
    }
    NavigateToTargetAction.create = create;
})(NavigateToTargetAction = exports.NavigateToTargetAction || (exports.NavigateToTargetAction = {}));
var ResolveNavigationTargetAction;
(function (ResolveNavigationTargetAction) {
    ResolveNavigationTargetAction.KIND = 'resolveNavigationTarget';
    function is(object) {
        return base_protocol_1.RequestAction.hasKind(object, ResolveNavigationTargetAction.KIND) && (0, type_util_1.hasObjectProp)(object, 'navigationTarget');
    }
    ResolveNavigationTargetAction.is = is;
    function create(navigationTarget, options = {}) {
        return Object.assign({ kind: ResolveNavigationTargetAction.KIND, requestId: '', navigationTarget }, options);
    }
    ResolveNavigationTargetAction.create = create;
})(ResolveNavigationTargetAction = exports.ResolveNavigationTargetAction || (exports.ResolveNavigationTargetAction = {}));
var SetResolvedNavigationTargetAction;
(function (SetResolvedNavigationTargetAction) {
    SetResolvedNavigationTargetAction.KIND = 'setResolvedNavigationTarget';
    function is(object) {
        return base_protocol_1.Action.hasKind(object, SetResolvedNavigationTargetAction.KIND) && (0, type_util_1.hasArrayProp)(object, 'elementIds');
    }
    SetResolvedNavigationTargetAction.is = is;
    function create(elementIds, options = {}) {
        return Object.assign({ kind: SetResolvedNavigationTargetAction.KIND, responseId: '', elementIds }, options);
    }
    SetResolvedNavigationTargetAction.create = create;
})(SetResolvedNavigationTargetAction = exports.SetResolvedNavigationTargetAction || (exports.SetResolvedNavigationTargetAction = {}));
var NavigateToExternalTargetAction;
(function (NavigateToExternalTargetAction) {
    NavigateToExternalTargetAction.KIND = 'navigateToExternalTarget';
    function is(object) {
        return base_protocol_1.Action.hasKind(object, NavigateToExternalTargetAction.KIND) && (0, type_util_1.hasObjectProp)(object, 'target');
    }
    NavigateToExternalTargetAction.is = is;
    function create(target) {
        return {
            kind: NavigateToExternalTargetAction.KIND,
            target
        };
    }
    NavigateToExternalTargetAction.create = create;
})(NavigateToExternalTargetAction = exports.NavigateToExternalTargetAction || (exports.NavigateToExternalTargetAction = {}));


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/protocol/lib/action-protocol/element-selection.js":
/*!******************************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/protocol/lib/action-protocol/element-selection.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SelectAllAction = exports.SelectAction = void 0;
const array_util_1 = __webpack_require__(/*! ../utils/array-util */ "../../node_modules/@eclipse-glsp/protocol/lib/utils/array-util.js");
const type_util_1 = __webpack_require__(/*! ../utils/type-util */ "../../node_modules/@eclipse-glsp/protocol/lib/utils/type-util.js");
const base_protocol_1 = __webpack_require__(/*! ./base-protocol */ "../../node_modules/@eclipse-glsp/protocol/lib/action-protocol/base-protocol.js");
var SelectAction;
(function (SelectAction) {
    SelectAction.KIND = 'elementSelected';
    function is(object) {
        return base_protocol_1.Action.hasKind(object, SelectAction.KIND) && (0, type_util_1.hasArrayProp)(object, 'selectedElementsIDs') && (0, type_util_1.hasArrayProp)(object, 'deselectedElementsIDs');
    }
    SelectAction.is = is;
    function create(options = {}) {
        var _a, _b;
        const deselectedElementsIDs = (_a = options.deselectedElementsIDs) !== null && _a !== void 0 ? _a : [];
        return {
            kind: SelectAction.KIND,
            selectedElementsIDs: (_b = options.selectedElementsIDs) !== null && _b !== void 0 ? _b : [],
            deselectedElementsIDs: (0, array_util_1.isStringArray)(deselectedElementsIDs, true) ? deselectedElementsIDs : [],
            deselectAll: typeof deselectedElementsIDs === 'boolean' ? deselectedElementsIDs : false
        };
    }
    SelectAction.create = create;
    function addSelection(selectedElementsIDs) {
        return create({ selectedElementsIDs });
    }
    SelectAction.addSelection = addSelection;
    function removeSelection(deselectedElementsIDs) {
        return create({ deselectedElementsIDs });
    }
    SelectAction.removeSelection = removeSelection;
    function setSelection(selectedElementsIDs) {
        return create({ selectedElementsIDs, deselectedElementsIDs: true });
    }
    SelectAction.setSelection = setSelection;
})(SelectAction = exports.SelectAction || (exports.SelectAction = {}));
var SelectAllAction;
(function (SelectAllAction) {
    SelectAllAction.KIND = 'allSelected';
    function is(object) {
        return base_protocol_1.Action.hasKind(object, SelectAllAction.KIND) && (0, type_util_1.hasBooleanProp)(object, 'select');
    }
    SelectAllAction.is = is;
    function create(select = true) {
        return {
            kind: SelectAllAction.KIND,
            select
        };
    }
    SelectAllAction.create = create;
})(SelectAllAction = exports.SelectAllAction || (exports.SelectAllAction = {}));


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/protocol/lib/action-protocol/element-text-editing.js":
/*!*********************************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/protocol/lib/action-protocol/element-text-editing.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ValidationStatus = exports.ApplyLabelEditOperation = exports.SetEditValidationResultAction = exports.RequestEditValidationAction = void 0;
const type_util_1 = __webpack_require__(/*! ../utils/type-util */ "../../node_modules/@eclipse-glsp/protocol/lib/utils/type-util.js");
const base_protocol_1 = __webpack_require__(/*! ./base-protocol */ "../../node_modules/@eclipse-glsp/protocol/lib/action-protocol/base-protocol.js");
var RequestEditValidationAction;
(function (RequestEditValidationAction) {
    RequestEditValidationAction.KIND = 'requestEditValidation';
    function is(object) {
        return (base_protocol_1.RequestAction.hasKind(object, RequestEditValidationAction.KIND) &&
            (0, type_util_1.hasStringProp)(object, 'contextId') &&
            (0, type_util_1.hasStringProp)(object, 'modelElementId') &&
            (0, type_util_1.hasStringProp)(object, 'text'));
    }
    RequestEditValidationAction.is = is;
    function create(options) {
        return Object.assign({ kind: RequestEditValidationAction.KIND, requestId: '' }, options);
    }
    RequestEditValidationAction.create = create;
})(RequestEditValidationAction = exports.RequestEditValidationAction || (exports.RequestEditValidationAction = {}));
var SetEditValidationResultAction;
(function (SetEditValidationResultAction) {
    SetEditValidationResultAction.KIND = 'setEditValidationResult';
    function is(object) {
        return base_protocol_1.Action.hasKind(object, SetEditValidationResultAction.KIND) && (0, type_util_1.hasObjectProp)(object, 'status');
    }
    SetEditValidationResultAction.is = is;
    function create(status, options = {}) {
        return Object.assign({ kind: SetEditValidationResultAction.KIND, responseId: '', status }, options);
    }
    SetEditValidationResultAction.create = create;
})(SetEditValidationResultAction = exports.SetEditValidationResultAction || (exports.SetEditValidationResultAction = {}));
var ApplyLabelEditOperation;
(function (ApplyLabelEditOperation) {
    ApplyLabelEditOperation.KIND = 'applyLabelEdit';
    function is(object) {
        return base_protocol_1.Operation.hasKind(object, ApplyLabelEditOperation.KIND) && (0, type_util_1.hasStringProp)(object, 'labelId') && (0, type_util_1.hasStringProp)(object, 'text');
    }
    ApplyLabelEditOperation.is = is;
    function create(options) {
        return Object.assign({ kind: ApplyLabelEditOperation.KIND, isOperation: true }, options);
    }
    ApplyLabelEditOperation.create = create;
})(ApplyLabelEditOperation = exports.ApplyLabelEditOperation || (exports.ApplyLabelEditOperation = {}));
var ValidationStatus;
(function (ValidationStatus) {
    /**
     * The default {@link ValidationStatus} severity levels used in GLSP.
     */
    let Severity;
    (function (Severity) {
        Severity[Severity["FATAL"] = 0] = "FATAL";
        Severity[Severity["ERROR"] = 1] = "ERROR";
        Severity[Severity["WARNING"] = 2] = "WARNING";
        Severity[Severity["INFO"] = 3] = "INFO";
        Severity[Severity["OK"] = 4] = "OK";
        Severity[Severity["NONE"] = 5] = "NONE";
    })(Severity = ValidationStatus.Severity || (ValidationStatus.Severity = {}));
    /**
     * An empty {@link ValidationStatus}.
     */
    ValidationStatus.NONE = {
        severity: Severity.NONE,
        message: '',
        error: { code: -1, message: '', data: {} }
    };
    /**
     * Utility function to check wether the given {@link ValidationStatus} has
     * a severity that is considered to be OK.
     * @param validationStatus The validation status to check.
     * @returns `true` if the given status has a non critical severity, `false` otherwise.
     */
    function isOk(validationStatus) {
        return (validationStatus.severity === Severity.OK ||
            validationStatus.severity === Severity.INFO ||
            validationStatus.severity === Severity.NONE);
    }
    ValidationStatus.isOk = isOk;
    /**
     * Utility function to check wether the given {@link ValidationStatus} has
     * a `warning` severity.
     * @param validationStatus The validation status to check.
     * @returns `true` if the given status has a `warning` severity, `false` otherwise.
     */
    function isWarning(validationStatus) {
        return validationStatus.severity === Severity.WARNING;
    }
    ValidationStatus.isWarning = isWarning;
    /**
     * Utility function to check wether the given {@link ValidationStatus} has
     * an `error` or `fatal` severity.
     * @param validationStatus The validation status to check.
     * @returns `true` if the given status has a `error` or `fatal` severity, `false` otherwise.
     */
    function isError(validationStatus) {
        return validationStatus.severity === Severity.ERROR || validationStatus.severity === Severity.FATAL;
    }
    ValidationStatus.isError = isError;
})(ValidationStatus = exports.ValidationStatus || (exports.ValidationStatus = {}));


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/protocol/lib/action-protocol/element-type-hints.js":
/*!*******************************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/protocol/lib/action-protocol/element-type-hints.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2019-2022 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SetTypeHintsAction = exports.RequestTypeHintsAction = void 0;
const type_util_1 = __webpack_require__(/*! ../utils/type-util */ "../../node_modules/@eclipse-glsp/protocol/lib/utils/type-util.js");
const base_protocol_1 = __webpack_require__(/*! ./base-protocol */ "../../node_modules/@eclipse-glsp/protocol/lib/action-protocol/base-protocol.js");
var RequestTypeHintsAction;
(function (RequestTypeHintsAction) {
    RequestTypeHintsAction.KIND = 'requestTypeHints';
    function is(object) {
        return base_protocol_1.RequestAction.hasKind(object, RequestTypeHintsAction.KIND);
    }
    RequestTypeHintsAction.is = is;
    function create(options = {}) {
        return Object.assign({ kind: RequestTypeHintsAction.KIND, requestId: '' }, options);
    }
    RequestTypeHintsAction.create = create;
})(RequestTypeHintsAction = exports.RequestTypeHintsAction || (exports.RequestTypeHintsAction = {}));
var SetTypeHintsAction;
(function (SetTypeHintsAction) {
    SetTypeHintsAction.KIND = 'setTypeHints';
    function is(object) {
        return base_protocol_1.Action.hasKind(object, SetTypeHintsAction.KIND) && (0, type_util_1.hasArrayProp)(object, 'shapeHints') && (0, type_util_1.hasArrayProp)(object, 'edgeHints');
    }
    SetTypeHintsAction.is = is;
    function create(options) {
        return Object.assign({ kind: SetTypeHintsAction.KIND, responseId: '' }, options);
    }
    SetTypeHintsAction.create = create;
})(SetTypeHintsAction = exports.SetTypeHintsAction || (exports.SetTypeHintsAction = {}));


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/protocol/lib/action-protocol/element-validation.js":
/*!*******************************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/protocol/lib/action-protocol/element-validation.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.DeleteMarkersAction = exports.SetMarkersAction = exports.RequestMarkersAction = exports.MarkersReason = exports.MarkerKind = void 0;
/********************************************************************************
 * Copyright (c) 2021-2023 STMicroelectronics and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const type_util_1 = __webpack_require__(/*! ../utils/type-util */ "../../node_modules/@eclipse-glsp/protocol/lib/utils/type-util.js");
const base_protocol_1 = __webpack_require__(/*! ./base-protocol */ "../../node_modules/@eclipse-glsp/protocol/lib/action-protocol/base-protocol.js");
/**
 * The default marker kinds used in GLSP
 */
var MarkerKind;
(function (MarkerKind) {
    MarkerKind.INFO = 'info';
    MarkerKind.WARNING = 'warning';
    MarkerKind.ERROR = 'error';
})(MarkerKind = exports.MarkerKind || (exports.MarkerKind = {}));
/**
 * The default reasons for markers.
 */
var MarkersReason;
(function (MarkersReason) {
    /** Markers resulting from a batch validation */
    MarkersReason.BATCH = 'batch';
    /** Markers resulting from a live validation */
    MarkersReason.LIVE = 'live';
})(MarkersReason = exports.MarkersReason || (exports.MarkersReason = {}));
var RequestMarkersAction;
(function (RequestMarkersAction) {
    RequestMarkersAction.KIND = 'requestMarkers';
    function is(object) {
        return base_protocol_1.RequestAction.hasKind(object, RequestMarkersAction.KIND) && (0, type_util_1.hasArrayProp)(object, 'elementsIDs');
    }
    RequestMarkersAction.is = is;
    function create(elementsIDs, options = {}) {
        return Object.assign({ kind: RequestMarkersAction.KIND, requestId: '', elementsIDs, reason: MarkersReason.BATCH }, options);
    }
    RequestMarkersAction.create = create;
})(RequestMarkersAction = exports.RequestMarkersAction || (exports.RequestMarkersAction = {}));
var SetMarkersAction;
(function (SetMarkersAction) {
    SetMarkersAction.KIND = 'setMarkers';
    function is(object) {
        return base_protocol_1.Action.hasKind(object, SetMarkersAction.KIND) && (0, type_util_1.hasArrayProp)(object, 'markers');
    }
    SetMarkersAction.is = is;
    function create(markers, options = {}) {
        return Object.assign({ kind: SetMarkersAction.KIND, responseId: '', markers, reason: MarkersReason.BATCH }, options);
    }
    SetMarkersAction.create = create;
})(SetMarkersAction = exports.SetMarkersAction || (exports.SetMarkersAction = {}));
var DeleteMarkersAction;
(function (DeleteMarkersAction) {
    DeleteMarkersAction.KIND = 'deleteMarkers';
    function is(object) {
        return base_protocol_1.Action.hasKind(object, DeleteMarkersAction.KIND) && (0, type_util_1.hasArrayProp)(object, 'markers');
    }
    DeleteMarkersAction.is = is;
    function create(markers) {
        return {
            kind: DeleteMarkersAction.KIND,
            markers
        };
    }
    DeleteMarkersAction.create = create;
})(DeleteMarkersAction = exports.DeleteMarkersAction || (exports.DeleteMarkersAction = {}));


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/protocol/lib/action-protocol/index.js":
/*!******************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/protocol/lib/action-protocol/index.js ***!
  \******************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
/********************************************************************************
 * Copyright (c) 2021-2022 STMicroelectronics and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
__exportStar(__webpack_require__(/*! ./base-protocol */ "../../node_modules/@eclipse-glsp/protocol/lib/action-protocol/base-protocol.js"), exports);
__exportStar(__webpack_require__(/*! ./client-notification */ "../../node_modules/@eclipse-glsp/protocol/lib/action-protocol/client-notification.js"), exports);
__exportStar(__webpack_require__(/*! ./clipboard */ "../../node_modules/@eclipse-glsp/protocol/lib/action-protocol/clipboard.js"), exports);
__exportStar(__webpack_require__(/*! ./contexts */ "../../node_modules/@eclipse-glsp/protocol/lib/action-protocol/contexts.js"), exports);
__exportStar(__webpack_require__(/*! ./edge-modification */ "../../node_modules/@eclipse-glsp/protocol/lib/action-protocol/edge-modification.js"), exports);
__exportStar(__webpack_require__(/*! ./element-creation */ "../../node_modules/@eclipse-glsp/protocol/lib/action-protocol/element-creation.js"), exports);
__exportStar(__webpack_require__(/*! ./element-hover */ "../../node_modules/@eclipse-glsp/protocol/lib/action-protocol/element-hover.js"), exports);
__exportStar(__webpack_require__(/*! ./element-navigation */ "../../node_modules/@eclipse-glsp/protocol/lib/action-protocol/element-navigation.js"), exports);
__exportStar(__webpack_require__(/*! ./element-selection */ "../../node_modules/@eclipse-glsp/protocol/lib/action-protocol/element-selection.js"), exports);
__exportStar(__webpack_require__(/*! ./element-text-editing */ "../../node_modules/@eclipse-glsp/protocol/lib/action-protocol/element-text-editing.js"), exports);
__exportStar(__webpack_require__(/*! ./element-type-hints */ "../../node_modules/@eclipse-glsp/protocol/lib/action-protocol/element-type-hints.js"), exports);
__exportStar(__webpack_require__(/*! ./element-validation */ "../../node_modules/@eclipse-glsp/protocol/lib/action-protocol/element-validation.js"), exports);
__exportStar(__webpack_require__(/*! ./model-data */ "../../node_modules/@eclipse-glsp/protocol/lib/action-protocol/model-data.js"), exports);
__exportStar(__webpack_require__(/*! ./model-edit-mode */ "../../node_modules/@eclipse-glsp/protocol/lib/action-protocol/model-edit-mode.js"), exports);
__exportStar(__webpack_require__(/*! ./model-layout */ "../../node_modules/@eclipse-glsp/protocol/lib/action-protocol/model-layout.js"), exports);
__exportStar(__webpack_require__(/*! ./model-saving */ "../../node_modules/@eclipse-glsp/protocol/lib/action-protocol/model-saving.js"), exports);
__exportStar(__webpack_require__(/*! ./model-structure */ "../../node_modules/@eclipse-glsp/protocol/lib/action-protocol/model-structure.js"), exports);
__exportStar(__webpack_require__(/*! ./node-modification */ "../../node_modules/@eclipse-glsp/protocol/lib/action-protocol/node-modification.js"), exports);
__exportStar(__webpack_require__(/*! ./tool-palette */ "../../node_modules/@eclipse-glsp/protocol/lib/action-protocol/tool-palette.js"), exports);
__exportStar(__webpack_require__(/*! ./types */ "../../node_modules/@eclipse-glsp/protocol/lib/action-protocol/types.js"), exports);
__exportStar(__webpack_require__(/*! ./undo-redo */ "../../node_modules/@eclipse-glsp/protocol/lib/action-protocol/undo-redo.js"), exports);
__exportStar(__webpack_require__(/*! ./viewport */ "../../node_modules/@eclipse-glsp/protocol/lib/action-protocol/viewport.js"), exports);


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/protocol/lib/action-protocol/model-data.js":
/*!***********************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/protocol/lib/action-protocol/model-data.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SourceModelChangedAction = exports.UpdateModelAction = exports.SetModelAction = exports.RequestModelAction = void 0;
const type_util_1 = __webpack_require__(/*! ../utils/type-util */ "../../node_modules/@eclipse-glsp/protocol/lib/utils/type-util.js");
const base_protocol_1 = __webpack_require__(/*! ./base-protocol */ "../../node_modules/@eclipse-glsp/protocol/lib/action-protocol/base-protocol.js");
var RequestModelAction;
(function (RequestModelAction) {
    RequestModelAction.KIND = 'requestModel';
    function is(object) {
        return base_protocol_1.RequestAction.hasKind(object, RequestModelAction.KIND);
    }
    RequestModelAction.is = is;
    function create(options = {}) {
        return Object.assign({ kind: RequestModelAction.KIND, requestId: '' }, options);
    }
    RequestModelAction.create = create;
})(RequestModelAction = exports.RequestModelAction || (exports.RequestModelAction = {}));
var SetModelAction;
(function (SetModelAction) {
    SetModelAction.KIND = 'setModel';
    function is(object) {
        return base_protocol_1.Action.hasKind(object, SetModelAction.KIND) && (0, type_util_1.hasObjectProp)(object, 'newRoot');
    }
    SetModelAction.is = is;
    function create(newRoot, options = {}) {
        return Object.assign({ kind: SetModelAction.KIND, responseId: '', newRoot }, options);
    }
    SetModelAction.create = create;
})(SetModelAction = exports.SetModelAction || (exports.SetModelAction = {}));
var UpdateModelAction;
(function (UpdateModelAction) {
    UpdateModelAction.KIND = 'updateModel';
    function is(action) {
        return base_protocol_1.Action.hasKind(action, UpdateModelAction.KIND) && (0, type_util_1.hasObjectProp)(action, 'newRoot');
    }
    UpdateModelAction.is = is;
    function create(newRoot, options = {}) {
        return Object.assign({ kind: UpdateModelAction.KIND, newRoot, animate: true }, options);
    }
    UpdateModelAction.create = create;
})(UpdateModelAction = exports.UpdateModelAction || (exports.UpdateModelAction = {}));
var SourceModelChangedAction;
(function (SourceModelChangedAction) {
    SourceModelChangedAction.KIND = 'sourceModelChanged';
    function is(object) {
        return base_protocol_1.Action.hasKind(object, SourceModelChangedAction.KIND) && (0, type_util_1.hasStringProp)(object, 'sourceModelName');
    }
    SourceModelChangedAction.is = is;
    function create(sourceModelName) {
        return {
            kind: SourceModelChangedAction.KIND,
            sourceModelName: sourceModelName
        };
    }
    SourceModelChangedAction.create = create;
})(SourceModelChangedAction = exports.SourceModelChangedAction || (exports.SourceModelChangedAction = {}));


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/protocol/lib/action-protocol/model-edit-mode.js":
/*!****************************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/protocol/lib/action-protocol/model-edit-mode.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.EditMode = exports.SetEditModeAction = void 0;
/********************************************************************************
 * Copyright (c) 2020-2022 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const type_util_1 = __webpack_require__(/*! ../utils/type-util */ "../../node_modules/@eclipse-glsp/protocol/lib/utils/type-util.js");
const base_protocol_1 = __webpack_require__(/*! ./base-protocol */ "../../node_modules/@eclipse-glsp/protocol/lib/action-protocol/base-protocol.js");
var SetEditModeAction;
(function (SetEditModeAction) {
    SetEditModeAction.KIND = 'setEditMode';
    function is(object) {
        return base_protocol_1.Action.hasKind(object, SetEditModeAction.KIND) && (0, type_util_1.hasStringProp)(object, 'editMode');
    }
    SetEditModeAction.is = is;
    function create(editMode) {
        return {
            kind: SetEditModeAction.KIND,
            editMode
        };
    }
    SetEditModeAction.create = create;
})(SetEditModeAction = exports.SetEditModeAction || (exports.SetEditModeAction = {}));
/**
 * The potential default values for the `editMode` property of  a {@link SetEditModeAction}.
 */
var EditMode;
(function (EditMode) {
    EditMode.READONLY = 'readonly';
    EditMode.EDITABLE = 'editable';
})(EditMode = exports.EditMode || (exports.EditMode = {}));


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/protocol/lib/action-protocol/model-layout.js":
/*!*************************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/protocol/lib/action-protocol/model-layout.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.LayoutOperation = exports.ComputedBoundsAction = exports.RequestBoundsAction = void 0;
const type_util_1 = __webpack_require__(/*! ../utils/type-util */ "../../node_modules/@eclipse-glsp/protocol/lib/utils/type-util.js");
const base_protocol_1 = __webpack_require__(/*! ./base-protocol */ "../../node_modules/@eclipse-glsp/protocol/lib/action-protocol/base-protocol.js");
var RequestBoundsAction;
(function (RequestBoundsAction) {
    RequestBoundsAction.KIND = 'requestBounds';
    function is(object) {
        return base_protocol_1.RequestAction.hasKind(object, RequestBoundsAction.KIND) && (0, type_util_1.hasObjectProp)(object, 'newRoot');
    }
    RequestBoundsAction.is = is;
    function create(newRoot, options = {}) {
        return Object.assign({ kind: RequestBoundsAction.KIND, requestId: '', newRoot }, options);
    }
    RequestBoundsAction.create = create;
})(RequestBoundsAction = exports.RequestBoundsAction || (exports.RequestBoundsAction = {}));
var ComputedBoundsAction;
(function (ComputedBoundsAction) {
    ComputedBoundsAction.KIND = 'computedBounds';
    function is(object) {
        return base_protocol_1.Action.hasKind(object, ComputedBoundsAction.KIND) && (0, type_util_1.hasArrayProp)(object, 'bounds');
    }
    ComputedBoundsAction.is = is;
    function create(bounds, options = {}) {
        return Object.assign({ kind: ComputedBoundsAction.KIND, responseId: '', bounds }, options);
    }
    ComputedBoundsAction.create = create;
})(ComputedBoundsAction = exports.ComputedBoundsAction || (exports.ComputedBoundsAction = {}));
var LayoutOperation;
(function (LayoutOperation) {
    LayoutOperation.KIND = 'layout';
    function is(object) {
        return base_protocol_1.Action.hasKind(object, LayoutOperation.KIND) && (0, type_util_1.hasArrayProp)(object, 'elementIds');
    }
    LayoutOperation.is = is;
    function create(elementIds) {
        return {
            kind: LayoutOperation.KIND,
            isOperation: true,
            elementIds
        };
    }
    LayoutOperation.create = create;
})(LayoutOperation = exports.LayoutOperation || (exports.LayoutOperation = {}));


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/protocol/lib/action-protocol/model-saving.js":
/*!*************************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/protocol/lib/action-protocol/model-saving.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ExportSvgAction = exports.RequestExportSvgAction = exports.SetDirtyStateAction = exports.SaveModelAction = void 0;
/********************************************************************************
 * Copyright (c) 2021-2022 STMicroelectronics and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const type_util_1 = __webpack_require__(/*! ../utils/type-util */ "../../node_modules/@eclipse-glsp/protocol/lib/utils/type-util.js");
const base_protocol_1 = __webpack_require__(/*! ./base-protocol */ "../../node_modules/@eclipse-glsp/protocol/lib/action-protocol/base-protocol.js");
var SaveModelAction;
(function (SaveModelAction) {
    SaveModelAction.KIND = 'saveModel';
    function is(object) {
        return base_protocol_1.Action.hasKind(object, SaveModelAction.KIND);
    }
    SaveModelAction.is = is;
    function create(options = {}) {
        return Object.assign({ kind: SaveModelAction.KIND }, options);
    }
    SaveModelAction.create = create;
})(SaveModelAction = exports.SaveModelAction || (exports.SaveModelAction = {}));
var SetDirtyStateAction;
(function (SetDirtyStateAction) {
    SetDirtyStateAction.KIND = 'setDirtyState';
    function is(object) {
        return base_protocol_1.Action.hasKind(object, SetDirtyStateAction.KIND) && (0, type_util_1.hasBooleanProp)(object, 'isDirty');
    }
    SetDirtyStateAction.is = is;
    function create(isDirty, options = {}) {
        return Object.assign({ kind: SetDirtyStateAction.KIND, isDirty }, options);
    }
    SetDirtyStateAction.create = create;
})(SetDirtyStateAction = exports.SetDirtyStateAction || (exports.SetDirtyStateAction = {}));
var RequestExportSvgAction;
(function (RequestExportSvgAction) {
    RequestExportSvgAction.KIND = 'requestExportSvg';
    function is(object) {
        return base_protocol_1.RequestAction.hasKind(object, RequestExportSvgAction.KIND);
    }
    RequestExportSvgAction.is = is;
    function create(options = {}) {
        return Object.assign({ kind: RequestExportSvgAction.KIND, requestId: '' }, options);
    }
    RequestExportSvgAction.create = create;
})(RequestExportSvgAction = exports.RequestExportSvgAction || (exports.RequestExportSvgAction = {}));
var ExportSvgAction;
(function (ExportSvgAction) {
    ExportSvgAction.KIND = 'exportSvg';
    function is(object) {
        return base_protocol_1.Action.hasKind(object, ExportSvgAction.KIND) && (0, type_util_1.hasStringProp)(object, 'svg');
    }
    ExportSvgAction.is = is;
    function create(svg, options = {}) {
        return Object.assign({ kind: ExportSvgAction.KIND, svg, responseId: '' }, options);
    }
    ExportSvgAction.create = create;
})(ExportSvgAction = exports.ExportSvgAction || (exports.ExportSvgAction = {}));


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/protocol/lib/action-protocol/model-structure.js":
/*!****************************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/protocol/lib/action-protocol/model-structure.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SModelElementSchema = void 0;
const type_util_1 = __webpack_require__(/*! ../utils/type-util */ "../../node_modules/@eclipse-glsp/protocol/lib/utils/type-util.js");
var SModelElementSchema;
(function (SModelElementSchema) {
    /**
     * Typeguard function to check wether the given object is an {@link SModelElementSchema}.
     * @param object The object to check.
     * @returns A type literal indicating wether the given object is of type {@link SModelElementSchema}.
     */
    function is(object) {
        return typeof object === 'object' && (0, type_util_1.hasStringProp)(object, 'type') && (0, type_util_1.hasStringProp)(object, 'id');
    }
    SModelElementSchema.is = is;
})(SModelElementSchema = exports.SModelElementSchema || (exports.SModelElementSchema = {}));


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/protocol/lib/action-protocol/node-modification.js":
/*!******************************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/protocol/lib/action-protocol/node-modification.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2021-2022 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ChangeContainerOperation = exports.ChangeBoundsOperation = void 0;
const type_util_1 = __webpack_require__(/*! ../utils/type-util */ "../../node_modules/@eclipse-glsp/protocol/lib/utils/type-util.js");
const base_protocol_1 = __webpack_require__(/*! ./base-protocol */ "../../node_modules/@eclipse-glsp/protocol/lib/action-protocol/base-protocol.js");
var ChangeBoundsOperation;
(function (ChangeBoundsOperation) {
    ChangeBoundsOperation.KIND = 'changeBounds';
    function is(object) {
        return base_protocol_1.Operation.hasKind(object, ChangeBoundsOperation.KIND) && (0, type_util_1.hasArrayProp)(object, 'newBounds');
    }
    ChangeBoundsOperation.is = is;
    function create(newBounds) {
        return {
            kind: ChangeBoundsOperation.KIND,
            isOperation: true,
            newBounds
        };
    }
    ChangeBoundsOperation.create = create;
})(ChangeBoundsOperation = exports.ChangeBoundsOperation || (exports.ChangeBoundsOperation = {}));
var ChangeContainerOperation;
(function (ChangeContainerOperation) {
    ChangeContainerOperation.KIND = 'changeContainer';
    function is(object) {
        return base_protocol_1.Operation.hasKind(object, ChangeContainerOperation.KIND) && (0, type_util_1.hasStringProp)(object, 'elementId') && (0, type_util_1.hasStringProp)(object, 'targetContainerId');
    }
    ChangeContainerOperation.is = is;
    function create(options) {
        return Object.assign({ kind: ChangeContainerOperation.KIND, isOperation: true }, options);
    }
    ChangeContainerOperation.create = create;
})(ChangeContainerOperation = exports.ChangeContainerOperation || (exports.ChangeContainerOperation = {}));


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/protocol/lib/action-protocol/tool-palette.js":
/*!*************************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/protocol/lib/action-protocol/tool-palette.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2021-2022 STMicroelectronics and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TriggerEdgeCreationAction = exports.TriggerNodeCreationAction = void 0;
const type_util_1 = __webpack_require__(/*! ../utils/type-util */ "../../node_modules/@eclipse-glsp/protocol/lib/utils/type-util.js");
const base_protocol_1 = __webpack_require__(/*! ./base-protocol */ "../../node_modules/@eclipse-glsp/protocol/lib/action-protocol/base-protocol.js");
var TriggerNodeCreationAction;
(function (TriggerNodeCreationAction) {
    TriggerNodeCreationAction.KIND = 'triggerNodeCreation';
    function is(object) {
        return base_protocol_1.Action.hasKind(object, TriggerNodeCreationAction.KIND) && (0, type_util_1.hasStringProp)(object, 'elementTypeId');
    }
    TriggerNodeCreationAction.is = is;
    function create(elementTypeId, options = {}) {
        return Object.assign({ kind: TriggerNodeCreationAction.KIND, elementTypeId }, options);
    }
    TriggerNodeCreationAction.create = create;
})(TriggerNodeCreationAction = exports.TriggerNodeCreationAction || (exports.TriggerNodeCreationAction = {}));
var TriggerEdgeCreationAction;
(function (TriggerEdgeCreationAction) {
    TriggerEdgeCreationAction.KIND = 'triggerEdgeCreation';
    function is(object) {
        return base_protocol_1.Action.hasKind(object, TriggerEdgeCreationAction.KIND) && (0, type_util_1.hasStringProp)(object, 'elementTypeId');
    }
    TriggerEdgeCreationAction.is = is;
    function create(elementTypeId, options = {}) {
        return Object.assign({ kind: TriggerEdgeCreationAction.KIND, elementTypeId }, options);
    }
    TriggerEdgeCreationAction.create = create;
})(TriggerEdgeCreationAction = exports.TriggerEdgeCreationAction || (exports.TriggerEdgeCreationAction = {}));


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/protocol/lib/action-protocol/types.js":
/*!******************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/protocol/lib/action-protocol/types.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.MenuItem = exports.PaletteItem = exports.LabeledAction = exports.EditorContext = void 0;
const type_util_1 = __webpack_require__(/*! ../utils/type-util */ "../../node_modules/@eclipse-glsp/protocol/lib/utils/type-util.js");
const tool_palette_1 = __webpack_require__(/*! ./tool-palette */ "../../node_modules/@eclipse-glsp/protocol/lib/action-protocol/tool-palette.js");
var EditorContext;
(function (EditorContext) {
    function is(object) {
        return object !== undefined && (0, type_util_1.hasArrayProp)(object, 'selectedElementIds');
    }
    EditorContext.is = is;
})(EditorContext = exports.EditorContext || (exports.EditorContext = {}));
var LabeledAction;
(function (LabeledAction) {
    function is(object) {
        return type_util_1.AnyObject.is(object) && (0, type_util_1.hasStringProp)(object, 'label') && (0, type_util_1.hasArrayProp)(object, 'actions');
    }
    LabeledAction.is = is;
    function toActionArray(input) {
        if (Array.isArray(input)) {
            return input;
        }
        else if (LabeledAction.is(input)) {
            return input.actions;
        }
        return [input];
    }
    LabeledAction.toActionArray = toActionArray;
})(LabeledAction = exports.LabeledAction || (exports.LabeledAction = {}));
var PaletteItem;
(function (PaletteItem) {
    function is(object) {
        return LabeledAction.is(object) && (0, type_util_1.hasStringProp)(object, 'id') && (0, type_util_1.hasStringProp)(object, 'sortString');
    }
    PaletteItem.is = is;
    function getTriggerAction(item) {
        if (item) {
            const initialActions = item.actions
                .filter(a => isTriggerElementCreationAction(a))
                .map(action => action);
            return initialActions.length > 0 ? initialActions[0] : undefined;
        }
        return undefined;
    }
    PaletteItem.getTriggerAction = getTriggerAction;
    function isTriggerElementCreationAction(object) {
        return tool_palette_1.TriggerNodeCreationAction.is(object) || tool_palette_1.TriggerEdgeCreationAction.is(object);
    }
    PaletteItem.isTriggerElementCreationAction = isTriggerElementCreationAction;
})(PaletteItem = exports.PaletteItem || (exports.PaletteItem = {}));
var MenuItem;
(function (MenuItem) {
    function is(object) {
        return LabeledAction.is(object) && (0, type_util_1.hasStringProp)(object, 'id');
    }
    MenuItem.is = is;
})(MenuItem = exports.MenuItem || (exports.MenuItem = {}));


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/protocol/lib/action-protocol/undo-redo.js":
/*!**********************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/protocol/lib/action-protocol/undo-redo.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2021-2022 STMicroelectronics and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.RedoAction = exports.UndoAction = void 0;
const base_protocol_1 = __webpack_require__(/*! ./base-protocol */ "../../node_modules/@eclipse-glsp/protocol/lib/action-protocol/base-protocol.js");
var UndoAction;
(function (UndoAction) {
    UndoAction.KIND = 'glspUndo';
    function is(object) {
        return base_protocol_1.Action.hasKind(object, UndoAction.KIND);
    }
    UndoAction.is = is;
    function create() {
        return {
            kind: UndoAction.KIND
        };
    }
    UndoAction.create = create;
})(UndoAction = exports.UndoAction || (exports.UndoAction = {}));
var RedoAction;
(function (RedoAction) {
    RedoAction.KIND = 'glspRedo';
    function is(object) {
        return base_protocol_1.Action.hasKind(object, RedoAction.KIND);
    }
    RedoAction.is = is;
    function create() {
        return {
            kind: RedoAction.KIND
        };
    }
    RedoAction.create = create;
})(RedoAction = exports.RedoAction || (exports.RedoAction = {}));


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/protocol/lib/action-protocol/viewport.js":
/*!*********************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/protocol/lib/action-protocol/viewport.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.FitToScreenAction = exports.CenterAction = void 0;
const type_util_1 = __webpack_require__(/*! ../utils/type-util */ "../../node_modules/@eclipse-glsp/protocol/lib/utils/type-util.js");
const base_protocol_1 = __webpack_require__(/*! ./base-protocol */ "../../node_modules/@eclipse-glsp/protocol/lib/action-protocol/base-protocol.js");
var CenterAction;
(function (CenterAction) {
    CenterAction.KIND = 'center';
    function is(object) {
        return base_protocol_1.Action.hasKind(object, CenterAction.KIND) && (0, type_util_1.hasBooleanProp)(object, 'animate') && (0, type_util_1.hasBooleanProp)(object, 'retainZoom');
    }
    CenterAction.is = is;
    function create(elementIds, options = {}) {
        return Object.assign({ kind: CenterAction.KIND, animate: true, retainZoom: false, elementIds }, options);
    }
    CenterAction.create = create;
})(CenterAction = exports.CenterAction || (exports.CenterAction = {}));
var FitToScreenAction;
(function (FitToScreenAction) {
    FitToScreenAction.KIND = 'fit';
    function is(object) {
        return base_protocol_1.Action.hasKind(object, FitToScreenAction.KIND) && (0, type_util_1.hasArrayProp)(object, 'elementIds') && (0, type_util_1.hasBooleanProp)(object, 'animate');
    }
    FitToScreenAction.is = is;
    function create(elementIds, options = {}) {
        return Object.assign({ kind: FitToScreenAction.KIND, animate: true, elementIds }, options);
    }
    FitToScreenAction.create = create;
})(FitToScreenAction = exports.FitToScreenAction || (exports.FitToScreenAction = {}));


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/protocol/lib/client-server-protocol/base-glsp-client.js":
/*!************************************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/protocol/lib/client-server-protocol/base-glsp-client.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.BaseGLSPClient = void 0;
const sprotty_protocol_1 = __webpack_require__(/*! sprotty-protocol */ "../../node_modules/sprotty-protocol/lib/index.js");
const vscode_jsonrpc_1 = __webpack_require__(/*! vscode-jsonrpc */ "../../node_modules/vscode-jsonrpc/lib/browser/main.js");
const array_util_1 = __webpack_require__(/*! ../utils/array-util */ "../../node_modules/@eclipse-glsp/protocol/lib/utils/array-util.js");
const glsp_client_1 = __webpack_require__(/*! ./glsp-client */ "../../node_modules/@eclipse-glsp/protocol/lib/client-server-protocol/glsp-client.js");
/**
 * A simple {@link GLSPClient} implementation for use cases where the client & server are running
 * in the same context/process without a communication layer (like json-rpc) between. The client
 * directly communicates with a given {@link GLSPServer} instance.
 */
class BaseGLSPClient {
    constructor(options) {
        this.options = options;
        this.serverDeferred = new sprotty_protocol_1.Deferred();
        this.onStartDeferred = new sprotty_protocol_1.Deferred();
        this.onStopDeferred = new sprotty_protocol_1.Deferred();
        this.startupTimeout = 1500;
        this.actionMessageHandlers = [];
        this.state = glsp_client_1.ClientState.Initial;
        this.proxy = this.createProxy();
    }
    createProxy() {
        return {
            process: message => {
                if (this.actionMessageHandlers.length === 0) {
                    console.warn('No ActionMessageHandler is configured- Cannot process server message', message);
                    return;
                }
                [...this.actionMessageHandlers].forEach(handler => handler(message));
            }
        };
    }
    configureServer(server) {
        if (this.state === glsp_client_1.ClientState.Running) {
            throw new Error('Could not configure new server. The GLSPClient is already running');
        }
        this.serverDeferred.resolve(server);
    }
    start() {
        if (this.state !== glsp_client_1.ClientState.Initial) {
            return this.onStartDeferred.promise;
        }
        this.state = glsp_client_1.ClientState.Starting;
        const timeOut = new Promise((_, reject) => setTimeout(() => {
            reject(new Error('Could not start client. No server is configured'));
        }, this.startupTimeout));
        Promise.race([this.serverDeferred.promise, timeOut])
            .then(server => {
            this._server = server;
            this.state = glsp_client_1.ClientState.Running;
            this.onStartDeferred.resolve();
        })
            .catch(error => {
            this.state = glsp_client_1.ClientState.StartFailed;
            this.onStartDeferred.reject(error);
        });
        return this.onStartDeferred.promise;
    }
    initializeServer(params) {
        return this.checkedServer.initialize(params);
    }
    initializeClientSession(params) {
        return this.checkedServer.initializeClientSession(params);
    }
    disposeClientSession(params) {
        return this.checkedServer.disposeClientSession(params);
    }
    shutdownServer() {
        this.checkedServer.shutdown();
    }
    async stop() {
        if (this.state === glsp_client_1.ClientState.Stopped || this.state === glsp_client_1.ClientState.Stopping) {
            return this.onStop();
        }
        this.state = glsp_client_1.ClientState.Stopping;
        try {
            if (this._server) {
                this._server.shutdown();
            }
        }
        finally {
            this.state = glsp_client_1.ClientState.Stopped;
            this.onStopDeferred.resolve();
        }
    }
    sendActionMessage(message) {
        this.checkedServer.process(message);
    }
    onActionMessage(handler) {
        (0, array_util_1.distinctAdd)(this.actionMessageHandlers, handler);
        return vscode_jsonrpc_1.Disposable.create(() => (0, array_util_1.remove)(this.actionMessageHandlers, handler));
    }
    get currentState() {
        return this.state;
    }
    onStart() {
        return this.onStartDeferred.promise;
    }
    onStop() {
        return this.onStopDeferred.promise;
    }
    get id() {
        return this.options.id;
    }
    checkState() {
        if (this.state !== glsp_client_1.ClientState.Running) {
            throw new Error(`Client with id '${this.id}' is not in 'Running' state`);
        }
    }
    get checkedServer() {
        this.checkState();
        if (!this._server) {
            throw new Error(`No server is configured for GLSPClient with id '${this.id}'`);
        }
        return this._server;
    }
    setStartupTimeout(ms) {
        this.startupTimeout = ms;
    }
}
exports.BaseGLSPClient = BaseGLSPClient;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/protocol/lib/client-server-protocol/glsp-client.js":
/*!*******************************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/protocol/lib/client-server-protocol/glsp-client.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.GLSPClient = exports.ClientState = exports.ApplicationIdProvider = void 0;
/********************************************************************************
 * Copyright (c) 2020-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const uuid = __webpack_require__(/*! uuid */ "../../node_modules/@eclipse-glsp/protocol/node_modules/uuid/dist/esm-browser/index.js");
class ApplicationIdProvider {
    static get() {
        if (!ApplicationIdProvider._applicationId) {
            ApplicationIdProvider._applicationId = uuid.v4();
        }
        return ApplicationIdProvider._applicationId;
    }
}
exports.ApplicationIdProvider = ApplicationIdProvider;
var ClientState;
(function (ClientState) {
    /**
     * The client has been created.
     */
    ClientState[ClientState["Initial"] = 0] = "Initial";
    /**
     * `Start` has been called on the client and the start process is still on-going.
     */
    ClientState[ClientState["Starting"] = 1] = "Starting";
    /**
     * The client failed to complete the start process.
     */
    ClientState[ClientState["StartFailed"] = 2] = "StartFailed";
    /**
     * The client was successfully started and is now running.
     */
    ClientState[ClientState["Running"] = 3] = "Running";
    /**
     * `Stop` has been called on the client and the stop process is still on-going.
     */
    ClientState[ClientState["Stopping"] = 4] = "Stopping";
    /**
     * The client stopped and disposed the server connection. Thus, action messages can no longer be sent.
     */
    ClientState[ClientState["Stopped"] = 5] = "Stopped";
    /**
     * An error was encountered while connecting to the server. No action messages can be sent.
     */
    ClientState[ClientState["ServerError"] = 6] = "ServerError";
})(ClientState = exports.ClientState || (exports.ClientState = {}));
var GLSPClient;
(function (GLSPClient) {
    // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types
    function isOptions(object) {
        return typeof object === 'object' && 'id' in object && typeof object['id'] === 'string';
    }
    GLSPClient.isOptions = isOptions;
    GLSPClient.protocolVersion = '1.0.0';
})(GLSPClient = exports.GLSPClient || (exports.GLSPClient = {}));


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/protocol/lib/client-server-protocol/glsp-server.js":
/*!*******************************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/protocol/lib/client-server-protocol/glsp-server.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2022-2023 STMicroelectronics and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.GLSPClientProxy = exports.GLSPServerListener = exports.GLSPServer = void 0;
exports.GLSPServer = Symbol('GLSPServer');
exports.GLSPServerListener = Symbol('GLSPServerListener');
exports.GLSPClientProxy = Symbol('GLSPClientProxy');


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/protocol/lib/client-server-protocol/jsonrpc/base-jsonrpc-glsp-client.js":
/*!****************************************************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/protocol/lib/client-server-protocol/jsonrpc/base-jsonrpc-glsp-client.js ***!
  \****************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.JsonrpcClientProxy = exports.BaseJsonrpcGLSPClient = void 0;
/********************************************************************************
 * Copyright (c) 2019-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const glsp_client_1 = __webpack_require__(/*! ../glsp-client */ "../../node_modules/@eclipse-glsp/protocol/lib/client-server-protocol/glsp-client.js");
const glsp_jsonrpc_client_1 = __webpack_require__(/*! ./glsp-jsonrpc-client */ "../../node_modules/@eclipse-glsp/protocol/lib/client-server-protocol/jsonrpc/glsp-jsonrpc-client.js");
class BaseJsonrpcGLSPClient {
    constructor(options) {
        Object.assign(this, options);
        this.state = glsp_client_1.ClientState.Initial;
    }
    shutdownServer() {
        this.checkedConnection.sendNotification(glsp_jsonrpc_client_1.JsonrpcGLSPClient.ShutdownNotification);
    }
    initializeServer(params) {
        return this.checkedConnection.sendRequest(glsp_jsonrpc_client_1.JsonrpcGLSPClient.InitializeRequest, params);
    }
    initializeClientSession(params) {
        return this.checkedConnection.sendRequest(glsp_jsonrpc_client_1.JsonrpcGLSPClient.InitializeClientSessionRequest, params);
    }
    disposeClientSession(params) {
        return this.checkedConnection.sendRequest(glsp_jsonrpc_client_1.JsonrpcGLSPClient.DisposeClientSessionRequest, params);
    }
    onActionMessage(handler) {
        return this.checkedConnection.onNotification(glsp_jsonrpc_client_1.JsonrpcGLSPClient.ActionMessageNotification, handler);
    }
    sendActionMessage(message) {
        this.checkedConnection.sendNotification(glsp_jsonrpc_client_1.JsonrpcGLSPClient.ActionMessageNotification, message);
    }
    get checkedConnection() {
        if (!this.isConnectionActive()) {
            throw new Error(glsp_jsonrpc_client_1.JsonrpcGLSPClient.ClientNotReadyMsg);
        }
        return this.resolvedConnection;
    }
    /**
     * @Deprecated use {@link checkConnection} instead
     */
    checkConnectionState() {
        return this.checkedConnection !== undefined;
    }
    async start() {
        try {
            this.state = glsp_client_1.ClientState.Starting;
            const connection = await this.resolveConnection();
            connection.listen();
            this.resolvedConnection = connection;
            this.state = glsp_client_1.ClientState.Running;
        }
        catch (error) {
            glsp_jsonrpc_client_1.JsonrpcGLSPClient.error('Failed to start connection to server', error);
            this.state = glsp_client_1.ClientState.StartFailed;
        }
    }
    stop() {
        if (!this.connectionPromise) {
            this.state = glsp_client_1.ClientState.Stopped;
            return Promise.resolve();
        }
        if (this.state === glsp_client_1.ClientState.Stopping && this.onStop) {
            return this.onStop;
        }
        this.state = glsp_client_1.ClientState.Stopping;
        return (this.onStop = this.resolveConnection().then(connection => {
            connection.dispose();
            this.state = glsp_client_1.ClientState.Stopped;
            this.onStop = undefined;
            this.connectionPromise = undefined;
            this.resolvedConnection = undefined;
        }));
    }
    resolveConnection() {
        if (!this.connectionPromise) {
            this.connectionPromise = this.doCreateConnection();
        }
        return this.connectionPromise;
    }
    async doCreateConnection() {
        const connection = typeof this.connectionProvider === 'function' ? await this.connectionProvider() : this.connectionProvider;
        connection.onError(data => this.handleConnectionError(data[0], data[1], data[2]));
        connection.onClose(() => this.handleConnectionClosed());
        return connection;
    }
    handleConnectionError(error, message, count) {
        glsp_jsonrpc_client_1.JsonrpcGLSPClient.error('Connection to server is erroring. Shutting down server.', error);
        this.stop();
        this.state = glsp_client_1.ClientState.ServerError;
    }
    handleConnectionClosed() {
        if (this.state === glsp_client_1.ClientState.Stopping || this.state === glsp_client_1.ClientState.Stopped) {
            return;
        }
        try {
            if (this.resolvedConnection) {
                this.resolvedConnection.dispose();
                this.connectionPromise = undefined;
                this.resolvedConnection = undefined;
            }
        }
        catch (error) {
            // Disposing a connection could fail if error cases.
        }
        glsp_jsonrpc_client_1.JsonrpcGLSPClient.error('Connection to server got closed. Server will not be restarted.');
        this.state = glsp_client_1.ClientState.ServerError;
    }
    isConnectionActive() {
        return this.state === glsp_client_1.ClientState.Running && !!this.resolvedConnection;
    }
    get currentState() {
        return this.state;
    }
}
exports.BaseJsonrpcGLSPClient = BaseJsonrpcGLSPClient;
/**
 * Default {@link GLSPClientProxy} implementation for jsonrpc-based client-server communication with typescript based servers.
 */
let JsonrpcClientProxy = class JsonrpcClientProxy {
    initialize(clientConnection, enableLogging = false) {
        this.clientConnection = clientConnection;
        this.enableLogging = enableLogging;
    }
    process(message) {
        var _a;
        if (this.enableLogging) {
            console.log(`Send action '${message.action.kind}' to client '${message.clientId}'`);
        }
        (_a = this.clientConnection) === null || _a === void 0 ? void 0 : _a.sendNotification(glsp_jsonrpc_client_1.JsonrpcGLSPClient.ActionMessageNotification, message);
    }
};
JsonrpcClientProxy = __decorate([
    (0, inversify_1.injectable)()
], JsonrpcClientProxy);
exports.JsonrpcClientProxy = JsonrpcClientProxy;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/protocol/lib/client-server-protocol/jsonrpc/glsp-jsonrpc-client.js":
/*!***********************************************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/protocol/lib/client-server-protocol/jsonrpc/glsp-jsonrpc-client.js ***!
  \***********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.JsonrpcGLSPClient = void 0;
/********************************************************************************
 * Copyright (c) 2020-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const vscode_jsonrpc_1 = __webpack_require__(/*! vscode-jsonrpc */ "../../node_modules/vscode-jsonrpc/lib/browser/main.js");
const glsp_client_1 = __webpack_require__(/*! ../glsp-client */ "../../node_modules/@eclipse-glsp/protocol/lib/client-server-protocol/glsp-client.js");
var JsonrpcGLSPClient;
(function (JsonrpcGLSPClient) {
    // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types
    function isOptions(object) {
        return glsp_client_1.GLSPClient.isOptions(object) && 'connectionProvider' in object;
    }
    JsonrpcGLSPClient.isOptions = isOptions;
    JsonrpcGLSPClient.ActionMessageNotification = new vscode_jsonrpc_1.NotificationType('process');
    JsonrpcGLSPClient.InitializeRequest = new vscode_jsonrpc_1.RequestType('initialize');
    JsonrpcGLSPClient.InitializeClientSessionRequest = new vscode_jsonrpc_1.RequestType('initializeClientSession');
    JsonrpcGLSPClient.DisposeClientSessionRequest = new vscode_jsonrpc_1.RequestType('disposeClientSession');
    JsonrpcGLSPClient.ShutdownNotification = new vscode_jsonrpc_1.NotificationType0('shutdown');
    JsonrpcGLSPClient.ClientNotReadyMsg = 'JsonrpcGLSPClient is not ready yet';
    function error(message, ...optionalParams) {
        console.error(`[JsonrpcGLSPClient] ${message}`, optionalParams);
    }
    JsonrpcGLSPClient.error = error;
})(JsonrpcGLSPClient = exports.JsonrpcGLSPClient || (exports.JsonrpcGLSPClient = {}));


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/protocol/lib/client-server-protocol/jsonrpc/glsp-jsonrpc-server.js":
/*!***********************************************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/protocol/lib/client-server-protocol/jsonrpc/glsp-jsonrpc-server.js ***!
  \***********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2023 STMicroelectronics and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.configureClientConnection = void 0;
const glsp_jsonrpc_client_1 = __webpack_require__(/*! ./glsp-jsonrpc-client */ "../../node_modules/@eclipse-glsp/protocol/lib/client-server-protocol/jsonrpc/glsp-jsonrpc-client.js");
/**
 * Configure the given client connection to forward the requests and notifications to the given {@link GLSPServer} instance.
 * @param clientConnection JSON-RPC client connection.
 * @param glspServer The GLSP Server which should react to requests & notifications.
 */
function configureClientConnection(clientConnection, glspServer) {
    clientConnection.onRequest(glsp_jsonrpc_client_1.JsonrpcGLSPClient.InitializeRequest.method, (params) => glspServer.initialize(params));
    clientConnection.onRequest(glsp_jsonrpc_client_1.JsonrpcGLSPClient.InitializeClientSessionRequest, (params) => glspServer.initializeClientSession(params));
    clientConnection.onRequest(glsp_jsonrpc_client_1.JsonrpcGLSPClient.DisposeClientSessionRequest, (params) => glspServer.disposeClientSession(params));
    clientConnection.onNotification(glsp_jsonrpc_client_1.JsonrpcGLSPClient.ActionMessageNotification, message => glspServer.process(message));
    clientConnection.listen();
}
exports.configureClientConnection = configureClientConnection;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/protocol/lib/client-server-protocol/jsonrpc/websocket-connection.js":
/*!************************************************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/protocol/lib/client-server-protocol/jsonrpc/websocket-connection.js ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2023 STMicroelectronics and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.listen = exports.createWebSocketConnection = exports.WebSocketMessageWriter = exports.WebSocketMessageReader = exports.wrap = void 0;
// based on https://github.com/TypeFox/monaco-languageclient/blob/vwj-2.0.1/packages/vscode-ws-jsonrpc/src/socket/reader.ts
/* --------------------------------------------------------------------------------------------
 * Copyright (c) 2018-2022 TypeFox GmbH (http://www.typefox.io). All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 * ------------------------------------------------------------------------------------------ */
const vscode_jsonrpc_1 = __webpack_require__(/*! vscode-jsonrpc */ "../../node_modules/vscode-jsonrpc/lib/browser/main.js");
/**
 * Creates a {@link WebSocketWrapper} for the given plain WebSocket
 * @param socket The socket to wrap
 */
function wrap(socket) {
    return {
        send: content => socket.send(content),
        onMessage: cb => (socket.onmessage = event => cb(event.data)),
        onClose: cb => (socket.onclose = event => cb(event.code, event.reason)),
        onError: cb => (socket.onerror = event => {
            if ('error' in event) {
                cb(event.error);
            }
        }),
        dispose: () => socket.close()
    };
}
exports.wrap = wrap;
/**
 * A `vscode-jsonrpc` {@link MessageReader} that reads messages from an underlying {@link WebSocketWrapper}.
 */
class WebSocketMessageReader extends vscode_jsonrpc_1.AbstractMessageReader {
    constructor(socket) {
        super();
        this.socket = socket;
        this.state = 'initial';
        this.eventQueue = [];
        this.socket.onMessage(message => this.handleMessage(message));
        this.socket.onError(error => this.fireError(error));
        this.socket.onClose(() => this.fireClose());
    }
    listen(callback) {
        if (this.state === 'initial') {
            this.state = 'listening';
            this.callback = callback;
            this.eventQueue.forEach(event => {
                if (event.message) {
                    this.handleMessage(event.message);
                }
                else if (event.error) {
                    this.fireError(event.error);
                }
                else {
                    this.fireClose();
                }
            });
            this.eventQueue = [];
        }
        return vscode_jsonrpc_1.Disposable.create(() => {
            this.callback = undefined;
            this.eventQueue = [];
        });
    }
    handleMessage(message) {
        if (this.state === 'initial') {
            this.eventQueue.push({ message });
        }
        else if (this.state === 'listening') {
            const data = JSON.parse(message);
            this.callback(data);
        }
    }
    fireError(error) {
        if (this.state === 'initial') {
            this.eventQueue.push({ error });
        }
        else if (this.state === 'listening') {
            super.fireError(error);
        }
    }
    fireClose() {
        if (this.state === 'initial') {
            this.eventQueue.push({});
        }
        else if (this.state === 'listening') {
            super.fireClose();
        }
        this.state = 'closed';
    }
}
exports.WebSocketMessageReader = WebSocketMessageReader;
/**
 * A `vscode-jsonrpc` {@link MessageReader} that writes messages to an underlying {@link WebSocketWrapper}.
 */
class WebSocketMessageWriter extends vscode_jsonrpc_1.AbstractMessageWriter {
    constructor(socket) {
        super();
        this.socket = socket;
        this.errorCount = 0;
    }
    end() {
        /** no-op */
    }
    async write(msg) {
        try {
            const content = JSON.stringify(msg);
            this.socket.send(content);
        }
        catch (e) {
            this.errorCount++;
            this.fireError(e, msg, this.errorCount);
        }
    }
}
exports.WebSocketMessageWriter = WebSocketMessageWriter;
/**
 * Create a `vscode-jsonrpc` {@link MessageConnection} on top of a given {@link WebSocketWrapper}.
 */
function createWebSocketConnection(socket, logger) {
    const reader = new WebSocketMessageReader(socket);
    const writer = new WebSocketMessageWriter(socket);
    return (0, vscode_jsonrpc_1.createMessageConnection)(reader, writer, logger);
}
exports.createWebSocketConnection = createWebSocketConnection;
/**
 * Creates a new {@link MessageConnection} on top of the given websocket on open.
 * @param webSocket The target webSocket
 * @param onConnection Optional callback that is invoked after the connection has been created
 * @param logger Optional connection logger
 * @returns A promise of the created connection
 */
function listen(webSocket, onConnection, logger) {
    return new Promise(resolve => {
        webSocket.onopen = () => {
            const socket = wrap(webSocket);
            const connection = createWebSocketConnection(socket, logger);
            onConnection === null || onConnection === void 0 ? void 0 : onConnection(connection);
            resolve(connection);
        };
    });
}
exports.listen = listen;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/protocol/lib/client-server-protocol/types.js":
/*!*************************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/protocol/lib/client-server-protocol/types.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/protocol/lib/disposable/disposable.js":
/*!******************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/protocol/lib/disposable/disposable.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.DisposableCollection = exports.Disposable = void 0;
/********************************************************************************
 * Copyright (c) 2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const array_util_1 = __webpack_require__(/*! ../utils/array-util */ "../../node_modules/@eclipse-glsp/protocol/lib/utils/array-util.js");
const type_util_1 = __webpack_require__(/*! ../utils/type-util */ "../../node_modules/@eclipse-glsp/protocol/lib/utils/type-util.js");
var Disposable;
(function (Disposable) {
    function is(value) {
        return type_util_1.AnyObject.is(value) && (0, type_util_1.hasFunctionProp)(value, 'dispose');
    }
    Disposable.is = is;
    /**
     * Creates a new empty i.e. no-op {@link Disposable}.
     * @returns the newly created disposable
     */
    function empty() {
        // eslint-disable-next-line @typescript-eslint/no-empty-function
        return { dispose: () => { } };
    }
    Disposable.empty = empty;
    /**
     * Creates a new {@link Disposable} that delegates to the given callback.
     * @param cb The callback that should be invoked on dispose
     * @returns the newly created disposable
     */
    function create(cb) {
        return { dispose: cb };
    }
    Disposable.create = create;
})(Disposable = exports.Disposable || (exports.Disposable = {}));
/**
 * Reusable base class to manage a collection of {@link Disposable}s.
 */
class DisposableCollection {
    constructor(...toDispose) {
        this.disposables = [];
        toDispose.forEach(d => this.push(d));
        this.errorHandler = err => console.error(err);
    }
    dispose() {
        var _a, _b;
        if (this.disposed) {
            return;
        }
        try {
            while (!this.disposed) {
                (_a = this.disposables.pop()) === null || _a === void 0 ? void 0 : _a.dispose();
            }
        }
        catch (err) {
            (_b = this.errorHandler) === null || _b === void 0 ? void 0 : _b.call(this, err);
        }
    }
    get disposed() {
        return this.disposables.length === 0;
    }
    /**
     * Pushes the given disposables to the collection.
     * @param disposables The disposables that should be added
     * @returns A disposable that removes the previously pushed values from the collection when invoked
     */
    push(...disposables) {
        this.disposables.push(...disposables);
        return Disposable.create(() => (0, array_util_1.remove)(this.disposables, ...disposables));
    }
    get isDisposed() {
        return this.disposed;
    }
}
exports.DisposableCollection = DisposableCollection;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/protocol/lib/index.js":
/*!**************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/protocol/lib/index.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SetViewportAction = exports.SetBoundsAction = void 0;
/********************************************************************************
 * Copyright (c) 2020-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const actions_1 = __webpack_require__(/*! sprotty-protocol/lib/actions */ "../../node_modules/sprotty-protocol/lib/actions.js");
Object.defineProperty(exports, "SetBoundsAction", ({ enumerable: true, get: function () { return actions_1.SetBoundsAction; } }));
Object.defineProperty(exports, "SetViewportAction", ({ enumerable: true, get: function () { return actions_1.SetViewportAction; } }));
const action_protocol_1 = __webpack_require__(/*! ./action-protocol */ "../../node_modules/@eclipse-glsp/protocol/lib/action-protocol/index.js");
const type_util_1 = __webpack_require__(/*! ./utils/type-util */ "../../node_modules/@eclipse-glsp/protocol/lib/utils/type-util.js");
actions_1.SetViewportAction.is = (object) => action_protocol_1.Action.hasKind(object, actions_1.SetViewportAction.KIND) &&
    (0, type_util_1.hasStringProp)(object, 'elementId') &&
    (0, type_util_1.hasObjectProp)(object, 'newViewport') &&
    (0, type_util_1.hasBooleanProp)(object, 'animate');
actions_1.SetBoundsAction.is = (object) => action_protocol_1.Action.hasKind(object, actions_1.SetBoundsAction.KIND) && (0, type_util_1.hasObjectProp)(object, 'bounds');
__exportStar(__webpack_require__(/*! sprotty-protocol/lib/utils/async */ "../../node_modules/sprotty-protocol/lib/utils/async.js"), exports);
__exportStar(__webpack_require__(/*! sprotty-protocol/lib/utils/geometry */ "../../node_modules/sprotty-protocol/lib/utils/geometry.js"), exports);
__exportStar(__webpack_require__(/*! sprotty-protocol/lib/utils/json */ "../../node_modules/sprotty-protocol/lib/utils/json.js"), exports);
__exportStar(__webpack_require__(/*! sprotty-protocol/lib/utils/model-utils */ "../../node_modules/sprotty-protocol/lib/utils/model-utils.js"), exports);
// Default export of @eclipse-glsp/protocol
__exportStar(__webpack_require__(/*! ./action-protocol */ "../../node_modules/@eclipse-glsp/protocol/lib/action-protocol/index.js"), exports);
__exportStar(__webpack_require__(/*! ./client-server-protocol/base-glsp-client */ "../../node_modules/@eclipse-glsp/protocol/lib/client-server-protocol/base-glsp-client.js"), exports);
__exportStar(__webpack_require__(/*! ./client-server-protocol/glsp-client */ "../../node_modules/@eclipse-glsp/protocol/lib/client-server-protocol/glsp-client.js"), exports);
__exportStar(__webpack_require__(/*! ./client-server-protocol/glsp-server */ "../../node_modules/@eclipse-glsp/protocol/lib/client-server-protocol/glsp-server.js"), exports);
__exportStar(__webpack_require__(/*! ./client-server-protocol/jsonrpc/base-jsonrpc-glsp-client */ "../../node_modules/@eclipse-glsp/protocol/lib/client-server-protocol/jsonrpc/base-jsonrpc-glsp-client.js"), exports);
__exportStar(__webpack_require__(/*! ./client-server-protocol/jsonrpc/glsp-jsonrpc-client */ "../../node_modules/@eclipse-glsp/protocol/lib/client-server-protocol/jsonrpc/glsp-jsonrpc-client.js"), exports);
__exportStar(__webpack_require__(/*! ./client-server-protocol/jsonrpc/glsp-jsonrpc-server */ "../../node_modules/@eclipse-glsp/protocol/lib/client-server-protocol/jsonrpc/glsp-jsonrpc-server.js"), exports);
__exportStar(__webpack_require__(/*! ./client-server-protocol/jsonrpc/websocket-connection */ "../../node_modules/@eclipse-glsp/protocol/lib/client-server-protocol/jsonrpc/websocket-connection.js"), exports);
__exportStar(__webpack_require__(/*! ./client-server-protocol/types */ "../../node_modules/@eclipse-glsp/protocol/lib/client-server-protocol/types.js"), exports);
__exportStar(__webpack_require__(/*! ./disposable/disposable */ "../../node_modules/@eclipse-glsp/protocol/lib/disposable/disposable.js"), exports);
__exportStar(__webpack_require__(/*! ./model/default-types */ "../../node_modules/@eclipse-glsp/protocol/lib/model/default-types.js"), exports);
__exportStar(__webpack_require__(/*! ./model/model-schema */ "../../node_modules/@eclipse-glsp/protocol/lib/model/model-schema.js"), exports);
__exportStar(__webpack_require__(/*! ./utils/array-util */ "../../node_modules/@eclipse-glsp/protocol/lib/utils/array-util.js"), exports);
__exportStar(__webpack_require__(/*! ./utils/di-util */ "../../node_modules/@eclipse-glsp/protocol/lib/utils/di-util.js"), exports);
__exportStar(__webpack_require__(/*! ./utils/type-util */ "../../node_modules/@eclipse-glsp/protocol/lib/utils/type-util.js"), exports);


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/protocol/lib/model/default-types.js":
/*!****************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/protocol/lib/model/default-types.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2021-2022 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.DefaultTypes = void 0;
/**
 * The default types for graphical model elements available in GLSP.
 */
var DefaultTypes;
(function (DefaultTypes) {
    // HTML elements
    DefaultTypes.HTML = 'html';
    // generic types
    DefaultTypes.FOREIGN_OBJECT = 'foreign-object';
    DefaultTypes.PRE_RENDERED = 'pre-rendered';
    DefaultTypes.SHAPE_PRE_RENDERED = 'shape-pre-rendered';
    // SVG elements
    DefaultTypes.SVG = 'svg';
    // graph types
    DefaultTypes.GRAPH = 'graph';
    DefaultTypes.NODE = 'node';
    DefaultTypes.COMPARTMENT = 'comp';
    DefaultTypes.COMPARTMENT_HEADER = 'comp:header';
    DefaultTypes.EDGE = 'edge';
    DefaultTypes.PORT = 'port';
    DefaultTypes.ROUTING_POINT = 'routing-point';
    DefaultTypes.VOLATILE_ROUTING_POINT = `volatile-${DefaultTypes.ROUTING_POINT}`;
    DefaultTypes.LABEL = 'label';
    // UI elements
    DefaultTypes.BUTTON = 'button';
    DefaultTypes.BUTTON_EXPAND = 'button:expand';
    DefaultTypes.ISSUE_MARKER = 'marker';
    // shapes
    DefaultTypes.NODE_CIRCLE = 'node:circle';
    DefaultTypes.NODE_RECTANGLE = 'node:rectangle';
    DefaultTypes.NODE_DIAMOND = 'node:diamond';
})(DefaultTypes = exports.DefaultTypes || (exports.DefaultTypes = {}));


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/protocol/lib/model/model-schema.js":
/*!***************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/protocol/lib/model/model-schema.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/protocol/lib/utils/array-util.js":
/*!*************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/protocol/lib/utils/array-util.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2019-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isArrayMatching = exports.isStringArray = exports.isArrayOfPrimitive = exports.isArrayOfClass = exports.isArrayOfType = exports.distinctAdd = exports.asArray = exports.flatPush = exports.remove = exports.pluck = exports.last = exports.first = void 0;
function first(array, n) {
    if (n) {
        return array.filter((_, index) => index < n);
    }
    return array[0];
}
exports.first = first;
function last(array, n) {
    if (n) {
        return array.filter((_, index) => array.length - index <= n);
    }
    return array[array.length - 1];
}
exports.last = last;
/**
 * Plucks (i.e. extracts) the property value that corresponds to the given key from all objects of the array.
 * @param array The array which should be plucked.
 * @param key  The key of the property that should be extracted.
 * @returns A new array containing the plugged property for each element of the array.
 */
function pluck(array, key) {
    return array.map(element => element[key]);
}
exports.pluck = pluck;
/**
 * Removes the given values from the given array (if present).
 * @param array The array to execute the remove operation on.
 * @param values The values that should be removed from the array.
 */
function remove(array, ...values) {
    values.forEach(value => {
        const index = array.indexOf(value);
        if (index >= 0) {
            array.splice(index, 1);
        }
    });
}
exports.remove = remove;
/**
 * Push an array of values to the given array. The values can either be single objects of a concrete type `T`
 * or can also be nested arrays of T. If nested arrays are passed the they will be destructured (i.e. flattened)
 * so that they can be pushed to the given array.
 * @param array The array to push to.
 * @param toPush The values of {@link MaybeArray}s that should be pushed.
 */
function flatPush(array, toPush) {
    toPush.forEach(value => (Array.isArray(value) ? array.push(...value) : array.push(value)));
}
exports.flatPush = flatPush;
/**
 * Helper function to convert a {@link MaybeArray} into an array.
 * @param maybe The MaybeArray to convert
 * @returns The corresponding array
 */
function asArray(maybe) {
    if (Array.isArray(maybe)) {
        return maybe;
    }
    return [maybe];
}
exports.asArray = asArray;
/**
 * Adds the given values to the given array. The add operation is executed distinct meaning
 * a value will not be pushed to the array if its already present in the array.
 * @param array The array to push to.
 * @param values The values that should be added distinctively.
 */
function distinctAdd(array, ...values) {
    values.forEach(value => {
        if (!array.includes(value)) {
            array.push(value);
        }
    });
}
exports.distinctAdd = distinctAdd;
/**
 * A typeguard function to check wether a given object is an array of a specific type `T`. As it checks the type of each individual
 * array element this guard check is expensive and should only be used in cases where complete type-safety is required.
 * @param object The object to check.
 * @param typeGuard A typeguard to check the type of the individual elements.
 * @param supportEmpty A flag to determine wether empty arrays should pass the typeguard check.
 * @returns A type predicate indicating wether the given object has passed the type guard check.
 */
function isArrayOfType(object, typeGuard, supportEmpty = false) {
    return isArrayMatching(object, element => typeGuard(element), supportEmpty);
}
exports.isArrayOfType = isArrayOfType;
/**
 * A typeguard function to check wether a given object is an array of a class`T`. As it checks the wether each individual element
 * is an instance of the given class this  guard check is expensive and should only be used in cases where complete type-safety is required.
 * @param object The object to check.
 * @param constructor The constructor for the class under test.
 * @param supportEmpty A flag to determine wether empty arrays should pass the typeguard check.
 * @returns A type predicate indicating wether the given object has passed the type guard check.
 */
function isArrayOfClass(object, constructor, supportEmpty = false) {
    return isArrayMatching(object, element => element instanceof constructor, supportEmpty);
}
exports.isArrayOfClass = isArrayOfClass;
/**
 * A typeguard function to check wether a given object is an array of a {@link PrimitiveType} `T. As it checks the type of each individual
 * array element this guard check is expensive and should only be used in cases where complete type-safety is required.
 * @param object The object to check.
 * @param primitiveType The expected primitive type of the elements.
 * @param supportEmpty A flag to determine wether empty arrays should pass the typeguard check.
 * @returns A type predicate indicating wether the given object has passed the type guard check.
 */
function isArrayOfPrimitive(object, primitiveType, supportEmpty = false) {
    return isArrayMatching(object, element => typeof element === primitiveType, supportEmpty);
}
exports.isArrayOfPrimitive = isArrayOfPrimitive;
/**
 * A typeguard function to check wether a given object is an array of a strings. As it checks the type of each individual
 * array element this guard check is expensive and should only be used in cases where complete type-safety is required.
 * @param object The object to check.
 * @param supportEmpty A flag to determine wether empty arrays should pass the typeguard check.
 * @returns A type predicate indicating wether the given object has passed the type guard check.
 */
function isStringArray(object, supportEmpty = false) {
    return isArrayOfPrimitive(object, 'string', supportEmpty);
}
exports.isStringArray = isStringArray;
/**
 * A typeguard function to check wether a given object is an array where each element matches the given predicate.
 * @param object The object to check.
 * @param predicate The predicate to test with.
 * @param supportEmpty A flag to determine wether empty arrays be matched by the predicate..
 * @returns `true` if the given object is an array and all elements match the given predicate. `false` otherwise.
 */
function isArrayMatching(object, predicate, supportEmpty = false) {
    return Array.isArray(object) && object.every(predicate) && (supportEmpty || object.length > 0);
}
exports.isArrayMatching = isArrayMatching;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/protocol/lib/utils/di-util.js":
/*!**********************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/protocol/lib/utils/di-util.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.bindAsService = exports.lazyBind = exports.bindOrRebind = exports.initializeContainer = void 0;
const array_util_1 = __webpack_require__(/*! ./array-util */ "../../node_modules/@eclipse-glsp/protocol/lib/utils/array-util.js");
const type_util_1 = __webpack_require__(/*! ./type-util */ "../../node_modules/@eclipse-glsp/protocol/lib/utils/type-util.js");
/**
 * Initializes a container with the given {@link ContainerConfiguration}. The container configuration
 * consists of the set of {@link ContainerModule}s that should be loaded in the container.
 * In addition, for more fine-grained control {@link ModuleConfiguration}s can be passed as part fo the container configuration
 * Module loading is distinct,this means each module will only get loaded once even if it is configured multiple times.
  @param containerConfiguration
 *          Custom modules to be loaded in addition to the default modules and/or default modules that should be excluded.
  @returns The initialized container.
 */
function initializeContainer(container, ...containerConfiguration) {
    const modules = [];
    containerConfiguration.forEach(config => {
        if (isContainerModule(config)) {
            (0, array_util_1.distinctAdd)(modules, config);
        }
        else {
            if (config.remove) {
                (0, array_util_1.remove)(modules, ...(0, array_util_1.asArray)(config.remove));
            }
            if (config.add) {
                (0, array_util_1.distinctAdd)(modules, ...(0, array_util_1.asArray)(config.add));
            }
        }
    });
    container.load(...modules);
    return container;
}
exports.initializeContainer = initializeContainer;
/**
 * The container modules might originate form different inversify contexts (e.g. `inversify` vs. `@theia/core/shared/inversify`).
 * If this is the case an instanceof check can return  false negative.
 * => use a simple typeguard instead.
 */
function isContainerModule(config) {
    return (0, type_util_1.hasNumberProp)(config, 'id') && (0, type_util_1.hasFunctionProp)(config, 'registry');
}
/**
 * Checks wether the given service identifier is already bound in the given context
 * then either calls  the `bind` or `rebind` function respectively.
 *
 * As this is just a convenience function
 * ```ts
 * bindOrRebind({bind,isBound,rebind}, MyService).to(SomeOtherService);
 * ```
 * is equivalent to:
 * ```
 * if (isBound(MyService)) {
 *    rebind(MyService).to(SomeOtherService);
 * } else {
 *    bind(MyService).to(SomeOtherService);
 * }
 * ```
 * @param context The binding context
 * @param serviceIdentifier The service identifier
 * @returns The result of the `bind` or `rebind` function
 */
function bindOrRebind(context, serviceIdentifier) {
    if (context.isBound(serviceIdentifier)) {
        return context.rebind(serviceIdentifier);
    }
    return context.bind(serviceIdentifier);
}
exports.bindOrRebind = bindOrRebind;
/**
 * Only binds the given service identifier if it's not already bound in the given context.
 *
 * As this is just a convenience function
 * ```ts
 * lazyBind({bind,isBound}, MyService)?.to(SomeOtherService);
 * ```
 * is equivalent to:
 * ```
 * if (!isBound(MyService)) {
 *    bind(MyService).to(SomeOtherService);
 * }
 * ```
 * @param context The binding context
 * @param serviceIdentifier The service identifier
 * @returns The result of the `bind` function or `undefined` if the service was already bound
 */
function lazyBind(context, serviceIdentifier) {
    if (context.isBound(serviceIdentifier)) {
        return undefined;
    }
    return context.bind(serviceIdentifier);
}
exports.lazyBind = lazyBind;
/**
 * Binds the given service identifier to the given target service in the given context.
 * In addition, the target service is bound to itself in singleton scope. This ensures
 * that services can be rebound individually even if they are multi-injected.
 *
 * As this is just a convenience function
 * ```ts
 * bindAsService(bind,SomeOtherService,MyServiceImpl);
 * ```
 * is equivalent to:
 * ```ts
 * bind(MyServiceImpl).toSelf.inSingletonScope():
 * bind(SomeOtherService).toService(MyServiceImpl);
 * ```
 * @param serviceIdentifier
 * @param toServiceIdentifier
 */
function bindAsService(context, serviceIdentifier, targetService) {
    const bind = typeof context === 'object' ? context.bind.bind(context) : context;
    bind(targetService).toSelf().inSingletonScope();
    bind(serviceIdentifier).toService(targetService);
}
exports.bindAsService = bindAsService;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/protocol/lib/utils/type-util.js":
/*!************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/protocol/lib/utils/type-util.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2021-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.hasArrayProp = exports.hasFunctionProp = exports.hasObjectProp = exports.hasNumberProp = exports.hasBooleanProp = exports.hasStringProp = exports.toTypeGuard = exports.AnyObject = void 0;
var AnyObject;
(function (AnyObject) {
    /**
     * Type guard to check wether a given object is of type {@link AnyObject}.
     * @param object The object to check.
     * @returns The given object as {@link AnyObject} or `false`.
     */
    function is(object) {
        // eslint-disable-next-line no-null/no-null
        return object !== null && typeof object === 'object';
    }
    AnyObject.is = is;
})(AnyObject = exports.AnyObject || (exports.AnyObject = {}));
/**
 * Utility function that create a typeguard function for a given class constructor.
 * Essentially this wraps an instance of check as typeguard function.
 * @param constructor The constructor of the class for which the typeguard should be created.
 * @returns The typeguard for this class.
 */
function toTypeGuard(constructor) {
    return (element) => element instanceof constructor;
}
exports.toTypeGuard = toTypeGuard;
/**
 * Validates whether the given object has a property of type `string` with the given key.
 * @param object The object that should be validated
 * @param propertyKey The key of the property
 * @param optional Flag to indicate wether the property can be optional i.e. also return true if the given key is undefined
 * @returns `true` if the object has property with matching key of type `string`.
 */
function hasStringProp(object, propertyKey, optional = false) {
    return propertyKey in object ? typeof object[propertyKey] === 'string' : optional;
}
exports.hasStringProp = hasStringProp;
/**
 * Validates whether the given object has a property of type `boolean` with the given key.
 * @param object The object that should be validated
 * @param propertyKey The key of the property
 * @param optional Flag to indicate wether the property can be optional i.e. also return true if the given key is undefined
 * @returns `true` if the object has property with matching key of type `boolean`.
 */
function hasBooleanProp(object, propertyKey, optional = false) {
    return propertyKey in object ? typeof object[propertyKey] === 'boolean' : optional;
}
exports.hasBooleanProp = hasBooleanProp;
/**
 * Validates whether the given object has a property of type `number` with the given key.
 * @param object The object that should be validated
 * @param propertyKey The key of the property
 * @param optional Flag to indicate wether the property can be optional i.e. also return true if the given key is undefined
 * @returns `true` if the object has property with matching key of type `number`.
 */
function hasNumberProp(object, propertyKey, optional = false) {
    return propertyKey in object ? typeof object[propertyKey] === 'number' : optional;
}
exports.hasNumberProp = hasNumberProp;
/**
 * Validates whether the given object has a property of type `object` with the given key.
 * @param object The object that should be validated
 * @param propertyKey The key of the property
 * @param optional Flag to indicate wether the property can be optional i.e. also return true if the given key is undefined
 * @returns `true` if the object has property with matching key of type `object`.
 */
function hasObjectProp(object, propertyKey, optional = false) {
    return propertyKey in object ? AnyObject.is(object[propertyKey]) : optional;
}
exports.hasObjectProp = hasObjectProp;
/**
 * Validates whether the given object has a property of type `function` with the given key.
 * @param object The object that should be validated
 * @param propertyKey The key of the property
 * @param optional Flag to indicate wether the property can be optional i.e. also return true if the given key is undefined
 * @returns `true` if the object has property with matching key of type `function`.
 */
function hasFunctionProp(object, propertyKey, optional = false) {
    return propertyKey in object ? typeof object[propertyKey] === 'function' : optional;
}
exports.hasFunctionProp = hasFunctionProp;
/**
 * Validates whether the given object has a property of type `Array` with the given key.
 * @param object The object that should be validated
 * @param propertyKey The key of the property
 * @param optional Flag to indicate wether the property can be optional i.e. also return true if the given key is undefined
 * @returns `true` if the object has property with matching key of type `Array`.
 */
function hasArrayProp(object, propertyKey, optional = false) {
    return propertyKey in object ? Array.isArray(object[propertyKey]) : optional;
}
exports.hasArrayProp = hasArrayProp;


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/protocol/node_modules/uuid/dist/esm-browser/bytesToUuid.js":
/*!***************************************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/protocol/node_modules/uuid/dist/esm-browser/bytesToUuid.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/**
 * Convert array of 16 byte values to UUID string format of the form:
 * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX
 */
var byteToHex = [];

for (var i = 0; i < 256; ++i) {
  byteToHex[i] = (i + 0x100).toString(16).substr(1);
}

function bytesToUuid(buf, offset) {
  var i = offset || 0;
  var bth = byteToHex; // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4

  return [bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], '-', bth[buf[i++]], bth[buf[i++]], '-', bth[buf[i++]], bth[buf[i++]], '-', bth[buf[i++]], bth[buf[i++]], '-', bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]]].join('');
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (bytesToUuid);

/***/ }),

/***/ "../../node_modules/@eclipse-glsp/protocol/node_modules/uuid/dist/esm-browser/index.js":
/*!*********************************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/protocol/node_modules/uuid/dist/esm-browser/index.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   v1: () => (/* reexport safe */ _v1_js__WEBPACK_IMPORTED_MODULE_0__["default"]),
/* harmony export */   v3: () => (/* reexport safe */ _v3_js__WEBPACK_IMPORTED_MODULE_1__["default"]),
/* harmony export */   v4: () => (/* reexport safe */ _v4_js__WEBPACK_IMPORTED_MODULE_2__["default"]),
/* harmony export */   v5: () => (/* reexport safe */ _v5_js__WEBPACK_IMPORTED_MODULE_3__["default"])
/* harmony export */ });
/* harmony import */ var _v1_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./v1.js */ "../../node_modules/@eclipse-glsp/protocol/node_modules/uuid/dist/esm-browser/v1.js");
/* harmony import */ var _v3_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./v3.js */ "../../node_modules/@eclipse-glsp/protocol/node_modules/uuid/dist/esm-browser/v3.js");
/* harmony import */ var _v4_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./v4.js */ "../../node_modules/@eclipse-glsp/protocol/node_modules/uuid/dist/esm-browser/v4.js");
/* harmony import */ var _v5_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./v5.js */ "../../node_modules/@eclipse-glsp/protocol/node_modules/uuid/dist/esm-browser/v5.js");





/***/ }),

/***/ "../../node_modules/@eclipse-glsp/protocol/node_modules/uuid/dist/esm-browser/md5.js":
/*!*******************************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/protocol/node_modules/uuid/dist/esm-browser/md5.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/*
 * Browser-compatible JavaScript MD5
 *
 * Modification of JavaScript MD5
 * https://github.com/blueimp/JavaScript-MD5
 *
 * Copyright 2011, Sebastian Tschan
 * https://blueimp.net
 *
 * Licensed under the MIT license:
 * https://opensource.org/licenses/MIT
 *
 * Based on
 * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message
 * Digest Algorithm, as defined in RFC 1321.
 * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009
 * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
 * Distributed under the BSD License
 * See http://pajhome.org.uk/crypt/md5 for more info.
 */
function md5(bytes) {
  if (typeof bytes == 'string') {
    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape

    bytes = new Array(msg.length);

    for (var i = 0; i < msg.length; i++) {
      bytes[i] = msg.charCodeAt(i);
    }
  }

  return md5ToHexEncodedArray(wordsToMd5(bytesToWords(bytes), bytes.length * 8));
}
/*
 * Convert an array of little-endian words to an array of bytes
 */


function md5ToHexEncodedArray(input) {
  var i;
  var x;
  var output = [];
  var length32 = input.length * 32;
  var hexTab = '0123456789abcdef';
  var hex;

  for (i = 0; i < length32; i += 8) {
    x = input[i >> 5] >>> i % 32 & 0xff;
    hex = parseInt(hexTab.charAt(x >>> 4 & 0x0f) + hexTab.charAt(x & 0x0f), 16);
    output.push(hex);
  }

  return output;
}
/*
 * Calculate the MD5 of an array of little-endian words, and a bit length.
 */


function wordsToMd5(x, len) {
  /* append padding */
  x[len >> 5] |= 0x80 << len % 32;
  x[(len + 64 >>> 9 << 4) + 14] = len;
  var i;
  var olda;
  var oldb;
  var oldc;
  var oldd;
  var a = 1732584193;
  var b = -271733879;
  var c = -1732584194;
  var d = 271733878;

  for (i = 0; i < x.length; i += 16) {
    olda = a;
    oldb = b;
    oldc = c;
    oldd = d;
    a = md5ff(a, b, c, d, x[i], 7, -680876936);
    d = md5ff(d, a, b, c, x[i + 1], 12, -389564586);
    c = md5ff(c, d, a, b, x[i + 2], 17, 606105819);
    b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330);
    a = md5ff(a, b, c, d, x[i + 4], 7, -176418897);
    d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426);
    c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341);
    b = md5ff(b, c, d, a, x[i + 7], 22, -45705983);
    a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416);
    d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417);
    c = md5ff(c, d, a, b, x[i + 10], 17, -42063);
    b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162);
    a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682);
    d = md5ff(d, a, b, c, x[i + 13], 12, -40341101);
    c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290);
    b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329);
    a = md5gg(a, b, c, d, x[i + 1], 5, -165796510);
    d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632);
    c = md5gg(c, d, a, b, x[i + 11], 14, 643717713);
    b = md5gg(b, c, d, a, x[i], 20, -373897302);
    a = md5gg(a, b, c, d, x[i + 5], 5, -701558691);
    d = md5gg(d, a, b, c, x[i + 10], 9, 38016083);
    c = md5gg(c, d, a, b, x[i + 15], 14, -660478335);
    b = md5gg(b, c, d, a, x[i + 4], 20, -405537848);
    a = md5gg(a, b, c, d, x[i + 9], 5, 568446438);
    d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690);
    c = md5gg(c, d, a, b, x[i + 3], 14, -187363961);
    b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501);
    a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467);
    d = md5gg(d, a, b, c, x[i + 2], 9, -51403784);
    c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473);
    b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734);
    a = md5hh(a, b, c, d, x[i + 5], 4, -378558);
    d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463);
    c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562);
    b = md5hh(b, c, d, a, x[i + 14], 23, -35309556);
    a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060);
    d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353);
    c = md5hh(c, d, a, b, x[i + 7], 16, -155497632);
    b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640);
    a = md5hh(a, b, c, d, x[i + 13], 4, 681279174);
    d = md5hh(d, a, b, c, x[i], 11, -358537222);
    c = md5hh(c, d, a, b, x[i + 3], 16, -722521979);
    b = md5hh(b, c, d, a, x[i + 6], 23, 76029189);
    a = md5hh(a, b, c, d, x[i + 9], 4, -640364487);
    d = md5hh(d, a, b, c, x[i + 12], 11, -421815835);
    c = md5hh(c, d, a, b, x[i + 15], 16, 530742520);
    b = md5hh(b, c, d, a, x[i + 2], 23, -995338651);
    a = md5ii(a, b, c, d, x[i], 6, -198630844);
    d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415);
    c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905);
    b = md5ii(b, c, d, a, x[i + 5], 21, -57434055);
    a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571);
    d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606);
    c = md5ii(c, d, a, b, x[i + 10], 15, -1051523);
    b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799);
    a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359);
    d = md5ii(d, a, b, c, x[i + 15], 10, -30611744);
    c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380);
    b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649);
    a = md5ii(a, b, c, d, x[i + 4], 6, -145523070);
    d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379);
    c = md5ii(c, d, a, b, x[i + 2], 15, 718787259);
    b = md5ii(b, c, d, a, x[i + 9], 21, -343485551);
    a = safeAdd(a, olda);
    b = safeAdd(b, oldb);
    c = safeAdd(c, oldc);
    d = safeAdd(d, oldd);
  }

  return [a, b, c, d];
}
/*
 * Convert an array bytes to an array of little-endian words
 * Characters >255 have their high-byte silently ignored.
 */


function bytesToWords(input) {
  var i;
  var output = [];
  output[(input.length >> 2) - 1] = undefined;

  for (i = 0; i < output.length; i += 1) {
    output[i] = 0;
  }

  var length8 = input.length * 8;

  for (i = 0; i < length8; i += 8) {
    output[i >> 5] |= (input[i / 8] & 0xff) << i % 32;
  }

  return output;
}
/*
 * Add integers, wrapping at 2^32. This uses 16-bit operations internally
 * to work around bugs in some JS interpreters.
 */


function safeAdd(x, y) {
  var lsw = (x & 0xffff) + (y & 0xffff);
  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);
  return msw << 16 | lsw & 0xffff;
}
/*
 * Bitwise rotate a 32-bit number to the left.
 */


function bitRotateLeft(num, cnt) {
  return num << cnt | num >>> 32 - cnt;
}
/*
 * These functions implement the four basic operations the algorithm uses.
 */


function md5cmn(q, a, b, x, s, t) {
  return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b);
}

function md5ff(a, b, c, d, x, s, t) {
  return md5cmn(b & c | ~b & d, a, b, x, s, t);
}

function md5gg(a, b, c, d, x, s, t) {
  return md5cmn(b & d | c & ~d, a, b, x, s, t);
}

function md5hh(a, b, c, d, x, s, t) {
  return md5cmn(b ^ c ^ d, a, b, x, s, t);
}

function md5ii(a, b, c, d, x, s, t) {
  return md5cmn(c ^ (b | ~d), a, b, x, s, t);
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (md5);

/***/ }),

/***/ "../../node_modules/@eclipse-glsp/protocol/node_modules/uuid/dist/esm-browser/rng.js":
/*!*******************************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/protocol/node_modules/uuid/dist/esm-browser/rng.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ rng)
/* harmony export */ });
// Unique ID creation requires a high quality random # generator. In the browser we therefore
// require the crypto API and do not support built-in fallback to lower quality random number
// generators (like Math.random()).
// getRandomValues needs to be invoked in a context where "this" is a Crypto implementation. Also,
// find the complete implementation of crypto (msCrypto) on IE11.
var getRandomValues = typeof crypto != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto != 'undefined' && typeof msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto);
var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef

function rng() {
  if (!getRandomValues) {
    throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');
  }

  return getRandomValues(rnds8);
}

/***/ }),

/***/ "../../node_modules/@eclipse-glsp/protocol/node_modules/uuid/dist/esm-browser/sha1.js":
/*!********************************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/protocol/node_modules/uuid/dist/esm-browser/sha1.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
// Adapted from Chris Veness' SHA1 code at
// http://www.movable-type.co.uk/scripts/sha1.html
function f(s, x, y, z) {
  switch (s) {
    case 0:
      return x & y ^ ~x & z;

    case 1:
      return x ^ y ^ z;

    case 2:
      return x & y ^ x & z ^ y & z;

    case 3:
      return x ^ y ^ z;
  }
}

function ROTL(x, n) {
  return x << n | x >>> 32 - n;
}

function sha1(bytes) {
  var K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xca62c1d6];
  var H = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];

  if (typeof bytes == 'string') {
    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape

    bytes = new Array(msg.length);

    for (var i = 0; i < msg.length; i++) {
      bytes[i] = msg.charCodeAt(i);
    }
  }

  bytes.push(0x80);
  var l = bytes.length / 4 + 2;
  var N = Math.ceil(l / 16);
  var M = new Array(N);

  for (var i = 0; i < N; i++) {
    M[i] = new Array(16);

    for (var j = 0; j < 16; j++) {
      M[i][j] = bytes[i * 64 + j * 4] << 24 | bytes[i * 64 + j * 4 + 1] << 16 | bytes[i * 64 + j * 4 + 2] << 8 | bytes[i * 64 + j * 4 + 3];
    }
  }

  M[N - 1][14] = (bytes.length - 1) * 8 / Math.pow(2, 32);
  M[N - 1][14] = Math.floor(M[N - 1][14]);
  M[N - 1][15] = (bytes.length - 1) * 8 & 0xffffffff;

  for (var i = 0; i < N; i++) {
    var W = new Array(80);

    for (var t = 0; t < 16; t++) {
      W[t] = M[i][t];
    }

    for (var t = 16; t < 80; t++) {
      W[t] = ROTL(W[t - 3] ^ W[t - 8] ^ W[t - 14] ^ W[t - 16], 1);
    }

    var a = H[0];
    var b = H[1];
    var c = H[2];
    var d = H[3];
    var e = H[4];

    for (var t = 0; t < 80; t++) {
      var s = Math.floor(t / 20);
      var T = ROTL(a, 5) + f(s, b, c, d) + e + K[s] + W[t] >>> 0;
      e = d;
      d = c;
      c = ROTL(b, 30) >>> 0;
      b = a;
      a = T;
    }

    H[0] = H[0] + a >>> 0;
    H[1] = H[1] + b >>> 0;
    H[2] = H[2] + c >>> 0;
    H[3] = H[3] + d >>> 0;
    H[4] = H[4] + e >>> 0;
  }

  return [H[0] >> 24 & 0xff, H[0] >> 16 & 0xff, H[0] >> 8 & 0xff, H[0] & 0xff, H[1] >> 24 & 0xff, H[1] >> 16 & 0xff, H[1] >> 8 & 0xff, H[1] & 0xff, H[2] >> 24 & 0xff, H[2] >> 16 & 0xff, H[2] >> 8 & 0xff, H[2] & 0xff, H[3] >> 24 & 0xff, H[3] >> 16 & 0xff, H[3] >> 8 & 0xff, H[3] & 0xff, H[4] >> 24 & 0xff, H[4] >> 16 & 0xff, H[4] >> 8 & 0xff, H[4] & 0xff];
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (sha1);

/***/ }),

/***/ "../../node_modules/@eclipse-glsp/protocol/node_modules/uuid/dist/esm-browser/v1.js":
/*!******************************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/protocol/node_modules/uuid/dist/esm-browser/v1.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _rng_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./rng.js */ "../../node_modules/@eclipse-glsp/protocol/node_modules/uuid/dist/esm-browser/rng.js");
/* harmony import */ var _bytesToUuid_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./bytesToUuid.js */ "../../node_modules/@eclipse-glsp/protocol/node_modules/uuid/dist/esm-browser/bytesToUuid.js");

 // **`v1()` - Generate time-based UUID**
//
// Inspired by https://github.com/LiosK/UUID.js
// and http://docs.python.org/library/uuid.html

var _nodeId;

var _clockseq; // Previous uuid creation time


var _lastMSecs = 0;
var _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details

function v1(options, buf, offset) {
  var i = buf && offset || 0;
  var b = buf || [];
  options = options || {};
  var node = options.node || _nodeId;
  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not
  // specified.  We do this lazily to minimize issues related to insufficient
  // system entropy.  See #189

  if (node == null || clockseq == null) {
    var seedBytes = options.random || (options.rng || _rng_js__WEBPACK_IMPORTED_MODULE_0__["default"])();

    if (node == null) {
      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)
      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];
    }

    if (clockseq == null) {
      // Per 4.2.2, randomize (14 bit) clockseq
      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;
    }
  } // UUID timestamps are 100 nano-second units since the Gregorian epoch,
  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so
  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'
  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.


  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime(); // Per 4.2.1.2, use count of uuid's generated during the current clock
  // cycle to simulate higher resolution clock

  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)

  var dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression

  if (dt < 0 && options.clockseq === undefined) {
    clockseq = clockseq + 1 & 0x3fff;
  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new
  // time interval


  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {
    nsecs = 0;
  } // Per 4.2.1.2 Throw error if too many uuids are requested


  if (nsecs >= 10000) {
    throw new Error("uuid.v1(): Can't create more than 10M uuids/sec");
  }

  _lastMSecs = msecs;
  _lastNSecs = nsecs;
  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch

  msecs += 12219292800000; // `time_low`

  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;
  b[i++] = tl >>> 24 & 0xff;
  b[i++] = tl >>> 16 & 0xff;
  b[i++] = tl >>> 8 & 0xff;
  b[i++] = tl & 0xff; // `time_mid`

  var tmh = msecs / 0x100000000 * 10000 & 0xfffffff;
  b[i++] = tmh >>> 8 & 0xff;
  b[i++] = tmh & 0xff; // `time_high_and_version`

  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version

  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)

  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`

  b[i++] = clockseq & 0xff; // `node`

  for (var n = 0; n < 6; ++n) {
    b[i + n] = node[n];
  }

  return buf ? buf : (0,_bytesToUuid_js__WEBPACK_IMPORTED_MODULE_1__["default"])(b);
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (v1);

/***/ }),

/***/ "../../node_modules/@eclipse-glsp/protocol/node_modules/uuid/dist/esm-browser/v3.js":
/*!******************************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/protocol/node_modules/uuid/dist/esm-browser/v3.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _v35_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./v35.js */ "../../node_modules/@eclipse-glsp/protocol/node_modules/uuid/dist/esm-browser/v35.js");
/* harmony import */ var _md5_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./md5.js */ "../../node_modules/@eclipse-glsp/protocol/node_modules/uuid/dist/esm-browser/md5.js");


var v3 = (0,_v35_js__WEBPACK_IMPORTED_MODULE_0__["default"])('v3', 0x30, _md5_js__WEBPACK_IMPORTED_MODULE_1__["default"]);
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (v3);

/***/ }),

/***/ "../../node_modules/@eclipse-glsp/protocol/node_modules/uuid/dist/esm-browser/v35.js":
/*!*******************************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/protocol/node_modules/uuid/dist/esm-browser/v35.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DNS: () => (/* binding */ DNS),
/* harmony export */   URL: () => (/* binding */ URL),
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _bytesToUuid_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bytesToUuid.js */ "../../node_modules/@eclipse-glsp/protocol/node_modules/uuid/dist/esm-browser/bytesToUuid.js");


function uuidToBytes(uuid) {
  // Note: We assume we're being passed a valid uuid string
  var bytes = [];
  uuid.replace(/[a-fA-F0-9]{2}/g, function (hex) {
    bytes.push(parseInt(hex, 16));
  });
  return bytes;
}

function stringToBytes(str) {
  str = unescape(encodeURIComponent(str)); // UTF8 escape

  var bytes = new Array(str.length);

  for (var i = 0; i < str.length; i++) {
    bytes[i] = str.charCodeAt(i);
  }

  return bytes;
}

var DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';
var URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(name, version, hashfunc) {
  var generateUUID = function generateUUID(value, namespace, buf, offset) {
    var off = buf && offset || 0;
    if (typeof value == 'string') value = stringToBytes(value);
    if (typeof namespace == 'string') namespace = uuidToBytes(namespace);
    if (!Array.isArray(value)) throw TypeError('value must be an array of bytes');
    if (!Array.isArray(namespace) || namespace.length !== 16) throw TypeError('namespace must be uuid string or an Array of 16 byte values'); // Per 4.3

    var bytes = hashfunc(namespace.concat(value));
    bytes[6] = bytes[6] & 0x0f | version;
    bytes[8] = bytes[8] & 0x3f | 0x80;

    if (buf) {
      for (var idx = 0; idx < 16; ++idx) {
        buf[off + idx] = bytes[idx];
      }
    }

    return buf || (0,_bytesToUuid_js__WEBPACK_IMPORTED_MODULE_0__["default"])(bytes);
  }; // Function#name is not settable on some platforms (#270)


  try {
    generateUUID.name = name;
  } catch (err) {} // For CommonJS default export support


  generateUUID.DNS = DNS;
  generateUUID.URL = URL;
  return generateUUID;
}

/***/ }),

/***/ "../../node_modules/@eclipse-glsp/protocol/node_modules/uuid/dist/esm-browser/v4.js":
/*!******************************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/protocol/node_modules/uuid/dist/esm-browser/v4.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _rng_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./rng.js */ "../../node_modules/@eclipse-glsp/protocol/node_modules/uuid/dist/esm-browser/rng.js");
/* harmony import */ var _bytesToUuid_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./bytesToUuid.js */ "../../node_modules/@eclipse-glsp/protocol/node_modules/uuid/dist/esm-browser/bytesToUuid.js");



function v4(options, buf, offset) {
  var i = buf && offset || 0;

  if (typeof options == 'string') {
    buf = options === 'binary' ? new Array(16) : null;
    options = null;
  }

  options = options || {};
  var rnds = options.random || (options.rng || _rng_js__WEBPACK_IMPORTED_MODULE_0__["default"])(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`

  rnds[6] = rnds[6] & 0x0f | 0x40;
  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided

  if (buf) {
    for (var ii = 0; ii < 16; ++ii) {
      buf[i + ii] = rnds[ii];
    }
  }

  return buf || (0,_bytesToUuid_js__WEBPACK_IMPORTED_MODULE_1__["default"])(rnds);
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (v4);

/***/ }),

/***/ "../../node_modules/@eclipse-glsp/protocol/node_modules/uuid/dist/esm-browser/v5.js":
/*!******************************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/protocol/node_modules/uuid/dist/esm-browser/v5.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _v35_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./v35.js */ "../../node_modules/@eclipse-glsp/protocol/node_modules/uuid/dist/esm-browser/v35.js");
/* harmony import */ var _sha1_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./sha1.js */ "../../node_modules/@eclipse-glsp/protocol/node_modules/uuid/dist/esm-browser/sha1.js");


var v5 = (0,_v35_js__WEBPACK_IMPORTED_MODULE_0__["default"])('v5', 0x50, _sha1_js__WEBPACK_IMPORTED_MODULE_1__["default"]);
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (v5);

/***/ }),

/***/ "../../node_modules/autocompleter/autocomplete.js":
/*!********************************************************!*\
  !*** ../../node_modules/autocompleter/autocomplete.js ***!
  \********************************************************/
/***/ (function(module) {

(function (global, factory) {
   true ? module.exports = factory() :
  0;
}(this, function () { 'use strict';

  /*
   * https://github.com/kraaden/autocomplete
   * Copyright (c) 2016 Denys Krasnoshchok
   * MIT License
   */
  function autocomplete(settings) {
      // just an alias to minimize JS file size
      var doc = document;
      var container = doc.createElement("div");
      var containerStyle = container.style;
      var userAgent = navigator.userAgent;
      var mobileFirefox = userAgent.indexOf("Firefox") !== -1 && userAgent.indexOf("Mobile") !== -1;
      var debounceWaitMs = settings.debounceWaitMs || 0;
      var preventSubmit = settings.preventSubmit || false;
      // 'keyup' event will not be fired on Mobile Firefox, so we have to use 'input' event instead
      var keyUpEventName = mobileFirefox ? "input" : "keyup";
      var items = [];
      var inputValue = "";
      var minLen = 2;
      var showOnFocus = settings.showOnFocus;
      var selected;
      var keypressCounter = 0;
      var debounceTimer;
      if (settings.minLength !== undefined) {
          minLen = settings.minLength;
      }
      if (!settings.input) {
          throw new Error("input undefined");
      }
      var input = settings.input;
      container.className = "autocomplete " + (settings.className || "");
      containerStyle.position = "fixed";
      /**
       * Detach the container from DOM
       */
      function detach() {
          var parent = container.parentNode;
          if (parent) {
              parent.removeChild(container);
          }
      }
      /**
       * Clear debouncing timer if assigned
       */
      function clearDebounceTimer() {
          if (debounceTimer) {
              window.clearTimeout(debounceTimer);
          }
      }
      /**
       * Attach the container to DOM
       */
      function attach() {
          if (!container.parentNode) {
              doc.body.appendChild(container);
          }
      }
      /**
       * Check if container for autocomplete is displayed
       */
      function containerDisplayed() {
          return !!container.parentNode;
      }
      /**
       * Clear autocomplete state and hide container
       */
      function clear() {
          keypressCounter++;
          items = [];
          inputValue = "";
          selected = undefined;
          detach();
      }
      /**
       * Update autocomplete position
       */
      function updatePosition() {
          if (!containerDisplayed()) {
              return;
          }
          containerStyle.height = "auto";
          containerStyle.width = input.offsetWidth + "px";
          var inputRect = input.getBoundingClientRect();
          var top = inputRect.top + input.offsetHeight;
          var maxHeight = window.innerHeight - top;
          if (maxHeight < 0) {
              maxHeight = 0;
          }
          containerStyle.top = top + "px";
          containerStyle.bottom = "";
          containerStyle.left = inputRect.left + "px";
          containerStyle.maxHeight = maxHeight + "px";
          if (settings.customize) {
              settings.customize(input, inputRect, container, maxHeight);
          }
      }
      /**
       * Redraw the autocomplete div element with suggestions
       */
      function update() {
          // delete all children from autocomplete DOM container
          while (container.firstChild) {
              container.removeChild(container.firstChild);
          }
          // function for rendering autocomplete suggestions
          var render = function (item, currentValue) {
              var itemElement = doc.createElement("div");
              itemElement.textContent = item.label || "";
              return itemElement;
          };
          if (settings.render) {
              render = settings.render;
          }
          // function to render autocomplete groups
          var renderGroup = function (groupName, currentValue) {
              var groupDiv = doc.createElement("div");
              groupDiv.textContent = groupName;
              return groupDiv;
          };
          if (settings.renderGroup) {
              renderGroup = settings.renderGroup;
          }
          var fragment = doc.createDocumentFragment();
          var prevGroup = "#9?$";
          items.forEach(function (item) {
              if (item.group && item.group !== prevGroup) {
                  prevGroup = item.group;
                  var groupDiv = renderGroup(item.group, inputValue);
                  if (groupDiv) {
                      groupDiv.className += " group";
                      fragment.appendChild(groupDiv);
                  }
              }
              var div = render(item, inputValue);
              if (div) {
                  div.addEventListener("click", function (ev) {
                      settings.onSelect(item, input);
                      clear();
                      ev.preventDefault();
                      ev.stopPropagation();
                  });
                  if (item === selected) {
                      div.className += " selected";
                  }
                  fragment.appendChild(div);
              }
          });
          container.appendChild(fragment);
          if (items.length < 1) {
              if (settings.emptyMsg) {
                  var empty = doc.createElement("div");
                  empty.className = "empty";
                  empty.textContent = settings.emptyMsg;
                  container.appendChild(empty);
              }
              else {
                  clear();
                  return;
              }
          }
          attach();
          updatePosition();
          updateScroll();
      }
      function updateIfDisplayed() {
          if (containerDisplayed()) {
              update();
          }
      }
      function resizeEventHandler() {
          updateIfDisplayed();
      }
      function scrollEventHandler(e) {
          if (e.target !== container) {
              updateIfDisplayed();
          }
          else {
              e.preventDefault();
          }
      }
      function keyupEventHandler(ev) {
          var keyCode = ev.which || ev.keyCode || 0;
          var ignore = [38 /* Up */, 13 /* Enter */, 27 /* Esc */, 39 /* Right */, 37 /* Left */, 16 /* Shift */, 17 /* Ctrl */, 18 /* Alt */, 20 /* CapsLock */, 91 /* WindowsKey */, 9 /* Tab */];
          for (var _i = 0, ignore_1 = ignore; _i < ignore_1.length; _i++) {
              var key = ignore_1[_i];
              if (keyCode === key) {
                  return;
              }
          }
          // the down key is used to open autocomplete
          if (keyCode === 40 /* Down */ && containerDisplayed()) {
              return;
          }
          startFetch(0 /* Keyboard */);
      }
      /**
       * Automatically move scroll bar if selected item is not visible
       */
      function updateScroll() {
          var elements = container.getElementsByClassName("selected");
          if (elements.length > 0) {
              var element = elements[0];
              // make group visible
              var previous = element.previousElementSibling;
              if (previous && previous.className.indexOf("group") !== -1 && !previous.previousElementSibling) {
                  element = previous;
              }
              if (element.offsetTop < container.scrollTop) {
                  container.scrollTop = element.offsetTop;
              }
              else {
                  var selectBottom = element.offsetTop + element.offsetHeight;
                  var containerBottom = container.scrollTop + container.offsetHeight;
                  if (selectBottom > containerBottom) {
                      container.scrollTop += selectBottom - containerBottom;
                  }
              }
          }
      }
      /**
       * Select the previous item in suggestions
       */
      function selectPrev() {
          if (items.length < 1) {
              selected = undefined;
          }
          else {
              if (selected === items[0]) {
                  selected = items[items.length - 1];
              }
              else {
                  for (var i = items.length - 1; i > 0; i--) {
                      if (selected === items[i] || i === 1) {
                          selected = items[i - 1];
                          break;
                      }
                  }
              }
          }
      }
      /**
       * Select the next item in suggestions
       */
      function selectNext() {
          if (items.length < 1) {
              selected = undefined;
          }
          if (!selected || selected === items[items.length - 1]) {
              selected = items[0];
              return;
          }
          for (var i = 0; i < (items.length - 1); i++) {
              if (selected === items[i]) {
                  selected = items[i + 1];
                  break;
              }
          }
      }
      function keydownEventHandler(ev) {
          var keyCode = ev.which || ev.keyCode || 0;
          if (keyCode === 38 /* Up */ || keyCode === 40 /* Down */ || keyCode === 27 /* Esc */) {
              var containerIsDisplayed = containerDisplayed();
              if (keyCode === 27 /* Esc */) {
                  clear();
              }
              else {
                  if (!containerDisplayed || items.length < 1) {
                      return;
                  }
                  keyCode === 38 /* Up */
                      ? selectPrev()
                      : selectNext();
                  update();
              }
              ev.preventDefault();
              if (containerIsDisplayed) {
                  ev.stopPropagation();
              }
              return;
          }
          if (keyCode === 13 /* Enter */) {
              if (selected) {
                  settings.onSelect(selected, input);
                  clear();
              }
              if (preventSubmit) {
                  ev.preventDefault();
              }
          }
      }
      function focusEventHandler() {
          if (showOnFocus) {
              startFetch(1 /* Focus */);
          }
      }
      function startFetch(trigger) {
          // if multiple keys were pressed, before we get update from server,
          // this may cause redrawing our autocomplete multiple times after the last key press.
          // to avoid this, the number of times keyboard was pressed will be
          // saved and checked before redraw our autocomplete box.
          var savedKeypressCounter = ++keypressCounter;
          var val = input.value;
          if (val.length >= minLen || trigger === 1 /* Focus */) {
              clearDebounceTimer();
              debounceTimer = window.setTimeout(function () {
                  settings.fetch(val, function (elements) {
                      if (keypressCounter === savedKeypressCounter && elements) {
                          items = elements;
                          inputValue = val;
                          selected = items.length > 0 ? items[0] : undefined;
                          update();
                      }
                  }, 0 /* Keyboard */);
              }, trigger === 0 /* Keyboard */ ? debounceWaitMs : 0);
          }
          else {
              clear();
          }
      }
      function blurEventHandler() {
          // we need to delay clear, because when we click on an item, blur will be called before click and remove items from DOM
          setTimeout(function () {
              if (doc.activeElement !== input) {
                  clear();
              }
          }, 200);
      }
      /**
       * Fixes #26: on long clicks focus will be lost and onSelect method will not be called
       */
      container.addEventListener("mousedown", function (evt) {
          evt.stopPropagation();
          evt.preventDefault();
      });
      /**
       * This function will remove DOM elements and clear event handlers
       */
      function destroy() {
          input.removeEventListener("focus", focusEventHandler);
          input.removeEventListener("keydown", keydownEventHandler);
          input.removeEventListener(keyUpEventName, keyupEventHandler);
          input.removeEventListener("blur", blurEventHandler);
          window.removeEventListener("resize", resizeEventHandler);
          doc.removeEventListener("scroll", scrollEventHandler, true);
          clearDebounceTimer();
          clear();
          // prevent the update call if there are pending AJAX requests
          keypressCounter++;
      }
      // setup event handlers
      input.addEventListener("keydown", keydownEventHandler);
      input.addEventListener(keyUpEventName, keyupEventHandler);
      input.addEventListener("blur", blurEventHandler);
      input.addEventListener("focus", focusEventHandler);
      window.addEventListener("resize", resizeEventHandler);
      doc.addEventListener("scroll", scrollEventHandler, true);
      return {
          destroy: destroy
      };
  }

  return autocomplete;

}));


/***/ }),

/***/ "../../node_modules/css-loader/dist/runtime/api.js":
/*!*********************************************************!*\
  !*** ../../node_modules/css-loader/dist/runtime/api.js ***!
  \*********************************************************/
/***/ ((module) => {

"use strict";


/*
  MIT License http://www.opensource.org/licenses/mit-license.php
  Author Tobias Koppers @sokra
*/
module.exports = function (cssWithMappingToString) {
  var list = [];

  // return the list of modules as css string
  list.toString = function toString() {
    return this.map(function (item) {
      var content = "";
      var needLayer = typeof item[5] !== "undefined";
      if (item[4]) {
        content += "@supports (".concat(item[4], ") {");
      }
      if (item[2]) {
        content += "@media ".concat(item[2], " {");
      }
      if (needLayer) {
        content += "@layer".concat(item[5].length > 0 ? " ".concat(item[5]) : "", " {");
      }
      content += cssWithMappingToString(item);
      if (needLayer) {
        content += "}";
      }
      if (item[2]) {
        content += "}";
      }
      if (item[4]) {
        content += "}";
      }
      return content;
    }).join("");
  };

  // import a list of modules into the list
  list.i = function i(modules, media, dedupe, supports, layer) {
    if (typeof modules === "string") {
      modules = [[null, modules, undefined]];
    }
    var alreadyImportedModules = {};
    if (dedupe) {
      for (var k = 0; k < this.length; k++) {
        var id = this[k][0];
        if (id != null) {
          alreadyImportedModules[id] = true;
        }
      }
    }
    for (var _k = 0; _k < modules.length; _k++) {
      var item = [].concat(modules[_k]);
      if (dedupe && alreadyImportedModules[item[0]]) {
        continue;
      }
      if (typeof layer !== "undefined") {
        if (typeof item[5] === "undefined") {
          item[5] = layer;
        } else {
          item[1] = "@layer".concat(item[5].length > 0 ? " ".concat(item[5]) : "", " {").concat(item[1], "}");
          item[5] = layer;
        }
      }
      if (media) {
        if (!item[2]) {
          item[2] = media;
        } else {
          item[1] = "@media ".concat(item[2], " {").concat(item[1], "}");
          item[2] = media;
        }
      }
      if (supports) {
        if (!item[4]) {
          item[4] = "".concat(supports);
        } else {
          item[1] = "@supports (".concat(item[4], ") {").concat(item[1], "}");
          item[4] = supports;
        }
      }
      list.push(item);
    }
  };
  return list;
};

/***/ }),

/***/ "../../node_modules/css-loader/dist/runtime/getUrl.js":
/*!************************************************************!*\
  !*** ../../node_modules/css-loader/dist/runtime/getUrl.js ***!
  \************************************************************/
/***/ ((module) => {

"use strict";


module.exports = function (url, options) {
  if (!options) {
    options = {};
  }
  if (!url) {
    return url;
  }
  url = String(url.__esModule ? url.default : url);

  // If url is already wrapped in quotes, remove them
  if (/^['"].*['"]$/.test(url)) {
    url = url.slice(1, -1);
  }
  if (options.hash) {
    url += options.hash;
  }

  // Should url be wrapped?
  // See https://drafts.csswg.org/css-values-3/#urls
  if (/["'() \t\n]|(%20)/.test(url) || options.needQuotes) {
    return "\"".concat(url.replace(/"/g, '\\"').replace(/\n/g, "\\n"), "\"");
  }
  return url;
};

/***/ }),

/***/ "../../node_modules/css-loader/dist/runtime/sourceMaps.js":
/*!****************************************************************!*\
  !*** ../../node_modules/css-loader/dist/runtime/sourceMaps.js ***!
  \****************************************************************/
/***/ ((module) => {

"use strict";


module.exports = function (item) {
  var content = item[1];
  var cssMapping = item[3];
  if (!cssMapping) {
    return content;
  }
  if (typeof btoa === "function") {
    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));
    var data = "sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(base64);
    var sourceMapping = "/*# ".concat(data, " */");
    return [content].concat([sourceMapping]).join("\n");
  }
  return [content].join("\n");
};

/***/ }),

/***/ "../../node_modules/file-saver/dist/FileSaver.min.js":
/*!***********************************************************!*\
  !*** ../../node_modules/file-saver/dist/FileSaver.min.js ***!
  \***********************************************************/
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function(a,b){if(true)!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (b),
		__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
		(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));else {}})(this,function(){"use strict";function b(a,b){return"undefined"==typeof b?b={autoBom:!1}:"object"!=typeof b&&(console.warn("Deprecated: Expected third argument to be a object"),b={autoBom:!b}),b.autoBom&&/^\s*(?:text\/\S*|application\/xml|\S*\/\S*\+xml)\s*;.*charset\s*=\s*utf-8/i.test(a.type)?new Blob(["\uFEFF",a],{type:a.type}):a}function c(a,b,c){var d=new XMLHttpRequest;d.open("GET",a),d.responseType="blob",d.onload=function(){g(d.response,b,c)},d.onerror=function(){console.error("could not download file")},d.send()}function d(a){var b=new XMLHttpRequest;b.open("HEAD",a,!1);try{b.send()}catch(a){}return 200<=b.status&&299>=b.status}function e(a){try{a.dispatchEvent(new MouseEvent("click"))}catch(c){var b=document.createEvent("MouseEvents");b.initMouseEvent("click",!0,!0,window,0,0,0,80,20,!1,!1,!1,!1,0,null),a.dispatchEvent(b)}}var f="object"==typeof window&&window.window===window?window:"object"==typeof self&&self.self===self?self:"object"==typeof __webpack_require__.g&&__webpack_require__.g.global===__webpack_require__.g?__webpack_require__.g:void 0,a=f.navigator&&/Macintosh/.test(navigator.userAgent)&&/AppleWebKit/.test(navigator.userAgent)&&!/Safari/.test(navigator.userAgent),g=f.saveAs||("object"!=typeof window||window!==f?function(){}:"download"in HTMLAnchorElement.prototype&&!a?function(b,g,h){var i=f.URL||f.webkitURL,j=document.createElement("a");g=g||b.name||"download",j.download=g,j.rel="noopener","string"==typeof b?(j.href=b,j.origin===location.origin?e(j):d(j.href)?c(b,g,h):e(j,j.target="_blank")):(j.href=i.createObjectURL(b),setTimeout(function(){i.revokeObjectURL(j.href)},4E4),setTimeout(function(){e(j)},0))}:"msSaveOrOpenBlob"in navigator?function(f,g,h){if(g=g||f.name||"download","string"!=typeof f)navigator.msSaveOrOpenBlob(b(f,h),g);else if(d(f))c(f,g,h);else{var i=document.createElement("a");i.href=f,i.target="_blank",setTimeout(function(){e(i)})}}:function(b,d,e,g){if(g=g||open("","_blank"),g&&(g.document.title=g.document.body.innerText="downloading..."),"string"==typeof b)return c(b,d,e);var h="application/octet-stream"===b.type,i=/constructor/i.test(f.HTMLElement)||f.safari,j=/CriOS\/[\d]+/.test(navigator.userAgent);if((j||h&&i||a)&&"undefined"!=typeof FileReader){var k=new FileReader;k.onloadend=function(){var a=k.result;a=j?a:a.replace(/^data:[^;]*;/,"data:attachment/file;"),g?g.location.href=a:location=a,g=null},k.readAsDataURL(b)}else{var l=f.URL||f.webkitURL,m=l.createObjectURL(b);g?g.location=m:location.href=m,g=null,setTimeout(function(){l.revokeObjectURL(m)},4E4)}});f.saveAs=g.saveAs=g, true&&(module.exports=g)});



/***/ }),

/***/ "../../node_modules/inversify/es/annotation/decorator_utils.js":
/*!*********************************************************************!*\
  !*** ../../node_modules/inversify/es/annotation/decorator_utils.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   createTaggedDecorator: () => (/* binding */ createTaggedDecorator),
/* harmony export */   decorate: () => (/* binding */ decorate),
/* harmony export */   tagParameter: () => (/* binding */ tagParameter),
/* harmony export */   tagProperty: () => (/* binding */ tagProperty)
/* harmony export */ });
/* harmony import */ var _constants_error_msgs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../constants/error_msgs */ "../../node_modules/inversify/es/constants/error_msgs.js");
/* harmony import */ var _constants_metadata_keys__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../constants/metadata_keys */ "../../node_modules/inversify/es/constants/metadata_keys.js");
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/js */ "../../node_modules/inversify/es/utils/js.js");



function targetIsConstructorFunction(target) {
    return target.prototype !== undefined;
}
function _throwIfMethodParameter(parameterName) {
    if (parameterName !== undefined) {
        throw new Error(_constants_error_msgs__WEBPACK_IMPORTED_MODULE_0__.INVALID_DECORATOR_OPERATION);
    }
}
function tagParameter(annotationTarget, parameterName, parameterIndex, metadata) {
    _throwIfMethodParameter(parameterName);
    _tagParameterOrProperty(_constants_metadata_keys__WEBPACK_IMPORTED_MODULE_1__.TAGGED, annotationTarget, parameterIndex.toString(), metadata);
}
function tagProperty(annotationTarget, propertyName, metadata) {
    if (targetIsConstructorFunction(annotationTarget)) {
        throw new Error(_constants_error_msgs__WEBPACK_IMPORTED_MODULE_0__.INVALID_DECORATOR_OPERATION);
    }
    _tagParameterOrProperty(_constants_metadata_keys__WEBPACK_IMPORTED_MODULE_1__.TAGGED_PROP, annotationTarget.constructor, propertyName, metadata);
}
function _ensureNoMetadataKeyDuplicates(metadata) {
    var metadatas = [];
    if (Array.isArray(metadata)) {
        metadatas = metadata;
        var duplicate = (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.getFirstArrayDuplicate)(metadatas.map(function (md) { return md.key; }));
        if (duplicate !== undefined) {
            throw new Error(_constants_error_msgs__WEBPACK_IMPORTED_MODULE_0__.DUPLICATED_METADATA + " " + duplicate.toString());
        }
    }
    else {
        metadatas = [metadata];
    }
    return metadatas;
}
function _tagParameterOrProperty(metadataKey, annotationTarget, key, metadata) {
    var metadatas = _ensureNoMetadataKeyDuplicates(metadata);
    var paramsOrPropertiesMetadata = {};
    if (Reflect.hasOwnMetadata(metadataKey, annotationTarget)) {
        paramsOrPropertiesMetadata = Reflect.getMetadata(metadataKey, annotationTarget);
    }
    var paramOrPropertyMetadata = paramsOrPropertiesMetadata[key];
    if (paramOrPropertyMetadata === undefined) {
        paramOrPropertyMetadata = [];
    }
    else {
        var _loop_1 = function (m) {
            if (metadatas.some(function (md) { return md.key === m.key; })) {
                throw new Error(_constants_error_msgs__WEBPACK_IMPORTED_MODULE_0__.DUPLICATED_METADATA + " " + m.key.toString());
            }
        };
        for (var _i = 0, paramOrPropertyMetadata_1 = paramOrPropertyMetadata; _i < paramOrPropertyMetadata_1.length; _i++) {
            var m = paramOrPropertyMetadata_1[_i];
            _loop_1(m);
        }
    }
    paramOrPropertyMetadata.push.apply(paramOrPropertyMetadata, metadatas);
    paramsOrPropertiesMetadata[key] = paramOrPropertyMetadata;
    Reflect.defineMetadata(metadataKey, paramsOrPropertiesMetadata, annotationTarget);
}
function createTaggedDecorator(metadata) {
    return function (target, targetKey, indexOrPropertyDescriptor) {
        if (typeof indexOrPropertyDescriptor === "number") {
            tagParameter(target, targetKey, indexOrPropertyDescriptor, metadata);
        }
        else {
            tagProperty(target, targetKey, metadata);
        }
    };
}
function _decorate(decorators, target) {
    Reflect.decorate(decorators, target);
}
function _param(paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); };
}
function decorate(decorator, target, parameterIndexOrProperty) {
    if (typeof parameterIndexOrProperty === "number") {
        _decorate([_param(parameterIndexOrProperty, decorator)], target);
    }
    else if (typeof parameterIndexOrProperty === "string") {
        Reflect.decorate([decorator], target, parameterIndexOrProperty);
    }
    else {
        _decorate([decorator], target);
    }
}



/***/ }),

/***/ "../../node_modules/inversify/es/annotation/inject.js":
/*!************************************************************!*\
  !*** ../../node_modules/inversify/es/annotation/inject.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   inject: () => (/* binding */ inject)
/* harmony export */ });
/* harmony import */ var _constants_metadata_keys__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../constants/metadata_keys */ "../../node_modules/inversify/es/constants/metadata_keys.js");
/* harmony import */ var _inject_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./inject_base */ "../../node_modules/inversify/es/annotation/inject_base.js");


var inject = (0,_inject_base__WEBPACK_IMPORTED_MODULE_0__.injectBase)(_constants_metadata_keys__WEBPACK_IMPORTED_MODULE_1__.INJECT_TAG);



/***/ }),

/***/ "../../node_modules/inversify/es/annotation/inject_base.js":
/*!*****************************************************************!*\
  !*** ../../node_modules/inversify/es/annotation/inject_base.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   injectBase: () => (/* binding */ injectBase)
/* harmony export */ });
/* harmony import */ var _constants_error_msgs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../constants/error_msgs */ "../../node_modules/inversify/es/constants/error_msgs.js");
/* harmony import */ var _planning_metadata__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../planning/metadata */ "../../node_modules/inversify/es/planning/metadata.js");
/* harmony import */ var _decorator_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./decorator_utils */ "../../node_modules/inversify/es/annotation/decorator_utils.js");



function injectBase(metadataKey) {
    return function (serviceIdentifier) {
        return function (target, targetKey, indexOrPropertyDescriptor) {
            if (serviceIdentifier === undefined) {
                var className = typeof target === "function" ? target.name : target.constructor.name;
                throw new Error((0,_constants_error_msgs__WEBPACK_IMPORTED_MODULE_0__.UNDEFINED_INJECT_ANNOTATION)(className));
            }
            return (0,_decorator_utils__WEBPACK_IMPORTED_MODULE_1__.createTaggedDecorator)(new _planning_metadata__WEBPACK_IMPORTED_MODULE_2__.Metadata(metadataKey, serviceIdentifier))(target, targetKey, indexOrPropertyDescriptor);
        };
    };
}


/***/ }),

/***/ "../../node_modules/inversify/es/annotation/injectable.js":
/*!****************************************************************!*\
  !*** ../../node_modules/inversify/es/annotation/injectable.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   injectable: () => (/* binding */ injectable)
/* harmony export */ });
/* harmony import */ var _constants_error_msgs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../constants/error_msgs */ "../../node_modules/inversify/es/constants/error_msgs.js");
/* harmony import */ var _constants_metadata_keys__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../constants/metadata_keys */ "../../node_modules/inversify/es/constants/metadata_keys.js");


function injectable() {
    return function (target) {
        if (Reflect.hasOwnMetadata(_constants_metadata_keys__WEBPACK_IMPORTED_MODULE_0__.PARAM_TYPES, target)) {
            throw new Error(_constants_error_msgs__WEBPACK_IMPORTED_MODULE_1__.DUPLICATED_INJECTABLE_DECORATOR);
        }
        var types = Reflect.getMetadata(_constants_metadata_keys__WEBPACK_IMPORTED_MODULE_0__.DESIGN_PARAM_TYPES, target) || [];
        Reflect.defineMetadata(_constants_metadata_keys__WEBPACK_IMPORTED_MODULE_0__.PARAM_TYPES, types, target);
        return target;
    };
}



/***/ }),

/***/ "../../node_modules/inversify/es/annotation/lazy_service_identifier.js":
/*!*****************************************************************************!*\
  !*** ../../node_modules/inversify/es/annotation/lazy_service_identifier.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   LazyServiceIdentifer: () => (/* binding */ LazyServiceIdentifer)
/* harmony export */ });
var LazyServiceIdentifer = (function () {
    function LazyServiceIdentifer(cb) {
        this._cb = cb;
    }
    LazyServiceIdentifer.prototype.unwrap = function () {
        return this._cb();
    };
    return LazyServiceIdentifer;
}());



/***/ }),

/***/ "../../node_modules/inversify/es/annotation/multi_inject.js":
/*!******************************************************************!*\
  !*** ../../node_modules/inversify/es/annotation/multi_inject.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   multiInject: () => (/* binding */ multiInject)
/* harmony export */ });
/* harmony import */ var _constants_metadata_keys__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../constants/metadata_keys */ "../../node_modules/inversify/es/constants/metadata_keys.js");
/* harmony import */ var _inject_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./inject_base */ "../../node_modules/inversify/es/annotation/inject_base.js");


var multiInject = (0,_inject_base__WEBPACK_IMPORTED_MODULE_0__.injectBase)(_constants_metadata_keys__WEBPACK_IMPORTED_MODULE_1__.MULTI_INJECT_TAG);



/***/ }),

/***/ "../../node_modules/inversify/es/annotation/named.js":
/*!***********************************************************!*\
  !*** ../../node_modules/inversify/es/annotation/named.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   named: () => (/* binding */ named)
/* harmony export */ });
/* harmony import */ var _constants_metadata_keys__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../constants/metadata_keys */ "../../node_modules/inversify/es/constants/metadata_keys.js");
/* harmony import */ var _planning_metadata__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../planning/metadata */ "../../node_modules/inversify/es/planning/metadata.js");
/* harmony import */ var _decorator_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./decorator_utils */ "../../node_modules/inversify/es/annotation/decorator_utils.js");



function named(name) {
    return (0,_decorator_utils__WEBPACK_IMPORTED_MODULE_0__.createTaggedDecorator)(new _planning_metadata__WEBPACK_IMPORTED_MODULE_1__.Metadata(_constants_metadata_keys__WEBPACK_IMPORTED_MODULE_2__.NAMED_TAG, name));
}



/***/ }),

/***/ "../../node_modules/inversify/es/annotation/optional.js":
/*!**************************************************************!*\
  !*** ../../node_modules/inversify/es/annotation/optional.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   optional: () => (/* binding */ optional)
/* harmony export */ });
/* harmony import */ var _constants_metadata_keys__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../constants/metadata_keys */ "../../node_modules/inversify/es/constants/metadata_keys.js");
/* harmony import */ var _planning_metadata__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../planning/metadata */ "../../node_modules/inversify/es/planning/metadata.js");
/* harmony import */ var _decorator_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./decorator_utils */ "../../node_modules/inversify/es/annotation/decorator_utils.js");



function optional() {
    return (0,_decorator_utils__WEBPACK_IMPORTED_MODULE_0__.createTaggedDecorator)(new _planning_metadata__WEBPACK_IMPORTED_MODULE_1__.Metadata(_constants_metadata_keys__WEBPACK_IMPORTED_MODULE_2__.OPTIONAL_TAG, true));
}



/***/ }),

/***/ "../../node_modules/inversify/es/annotation/post_construct.js":
/*!********************************************************************!*\
  !*** ../../node_modules/inversify/es/annotation/post_construct.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   postConstruct: () => (/* binding */ postConstruct)
/* harmony export */ });
/* harmony import */ var _constants_error_msgs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../constants/error_msgs */ "../../node_modules/inversify/es/constants/error_msgs.js");
/* harmony import */ var _constants_metadata_keys__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../constants/metadata_keys */ "../../node_modules/inversify/es/constants/metadata_keys.js");
/* harmony import */ var _property_event_decorator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./property_event_decorator */ "../../node_modules/inversify/es/annotation/property_event_decorator.js");



var postConstruct = (0,_property_event_decorator__WEBPACK_IMPORTED_MODULE_0__.propertyEventDecorator)(_constants_metadata_keys__WEBPACK_IMPORTED_MODULE_1__.POST_CONSTRUCT, _constants_error_msgs__WEBPACK_IMPORTED_MODULE_2__.MULTIPLE_POST_CONSTRUCT_METHODS);



/***/ }),

/***/ "../../node_modules/inversify/es/annotation/pre_destroy.js":
/*!*****************************************************************!*\
  !*** ../../node_modules/inversify/es/annotation/pre_destroy.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   preDestroy: () => (/* binding */ preDestroy)
/* harmony export */ });
/* harmony import */ var _constants_error_msgs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../constants/error_msgs */ "../../node_modules/inversify/es/constants/error_msgs.js");
/* harmony import */ var _constants_metadata_keys__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../constants/metadata_keys */ "../../node_modules/inversify/es/constants/metadata_keys.js");
/* harmony import */ var _property_event_decorator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./property_event_decorator */ "../../node_modules/inversify/es/annotation/property_event_decorator.js");



var preDestroy = (0,_property_event_decorator__WEBPACK_IMPORTED_MODULE_0__.propertyEventDecorator)(_constants_metadata_keys__WEBPACK_IMPORTED_MODULE_1__.PRE_DESTROY, _constants_error_msgs__WEBPACK_IMPORTED_MODULE_2__.MULTIPLE_PRE_DESTROY_METHODS);



/***/ }),

/***/ "../../node_modules/inversify/es/annotation/property_event_decorator.js":
/*!******************************************************************************!*\
  !*** ../../node_modules/inversify/es/annotation/property_event_decorator.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   propertyEventDecorator: () => (/* binding */ propertyEventDecorator)
/* harmony export */ });
/* harmony import */ var _planning_metadata__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../planning/metadata */ "../../node_modules/inversify/es/planning/metadata.js");

function propertyEventDecorator(eventKey, errorMessage) {
    return function () {
        return function (target, propertyKey) {
            var metadata = new _planning_metadata__WEBPACK_IMPORTED_MODULE_0__.Metadata(eventKey, propertyKey);
            if (Reflect.hasOwnMetadata(eventKey, target.constructor)) {
                throw new Error(errorMessage);
            }
            Reflect.defineMetadata(eventKey, metadata, target.constructor);
        };
    };
}



/***/ }),

/***/ "../../node_modules/inversify/es/annotation/tagged.js":
/*!************************************************************!*\
  !*** ../../node_modules/inversify/es/annotation/tagged.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   tagged: () => (/* binding */ tagged)
/* harmony export */ });
/* harmony import */ var _planning_metadata__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../planning/metadata */ "../../node_modules/inversify/es/planning/metadata.js");
/* harmony import */ var _decorator_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./decorator_utils */ "../../node_modules/inversify/es/annotation/decorator_utils.js");


function tagged(metadataKey, metadataValue) {
    return (0,_decorator_utils__WEBPACK_IMPORTED_MODULE_0__.createTaggedDecorator)(new _planning_metadata__WEBPACK_IMPORTED_MODULE_1__.Metadata(metadataKey, metadataValue));
}



/***/ }),

/***/ "../../node_modules/inversify/es/annotation/target_name.js":
/*!*****************************************************************!*\
  !*** ../../node_modules/inversify/es/annotation/target_name.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   targetName: () => (/* binding */ targetName)
/* harmony export */ });
/* harmony import */ var _constants_metadata_keys__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../constants/metadata_keys */ "../../node_modules/inversify/es/constants/metadata_keys.js");
/* harmony import */ var _planning_metadata__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../planning/metadata */ "../../node_modules/inversify/es/planning/metadata.js");
/* harmony import */ var _decorator_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./decorator_utils */ "../../node_modules/inversify/es/annotation/decorator_utils.js");



function targetName(name) {
    return function (target, targetKey, index) {
        var metadata = new _planning_metadata__WEBPACK_IMPORTED_MODULE_0__.Metadata(_constants_metadata_keys__WEBPACK_IMPORTED_MODULE_1__.NAME_TAG, name);
        (0,_decorator_utils__WEBPACK_IMPORTED_MODULE_2__.tagParameter)(target, targetKey, index, metadata);
    };
}



/***/ }),

/***/ "../../node_modules/inversify/es/annotation/unmanaged.js":
/*!***************************************************************!*\
  !*** ../../node_modules/inversify/es/annotation/unmanaged.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   unmanaged: () => (/* binding */ unmanaged)
/* harmony export */ });
/* harmony import */ var _constants_metadata_keys__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../constants/metadata_keys */ "../../node_modules/inversify/es/constants/metadata_keys.js");
/* harmony import */ var _planning_metadata__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../planning/metadata */ "../../node_modules/inversify/es/planning/metadata.js");
/* harmony import */ var _decorator_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./decorator_utils */ "../../node_modules/inversify/es/annotation/decorator_utils.js");



function unmanaged() {
    return function (target, targetKey, index) {
        var metadata = new _planning_metadata__WEBPACK_IMPORTED_MODULE_0__.Metadata(_constants_metadata_keys__WEBPACK_IMPORTED_MODULE_1__.UNMANAGED_TAG, true);
        (0,_decorator_utils__WEBPACK_IMPORTED_MODULE_2__.tagParameter)(target, targetKey, index, metadata);
    };
}



/***/ }),

/***/ "../../node_modules/inversify/es/bindings/binding.js":
/*!***********************************************************!*\
  !*** ../../node_modules/inversify/es/bindings/binding.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Binding: () => (/* binding */ Binding)
/* harmony export */ });
/* harmony import */ var _constants_literal_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../constants/literal_types */ "../../node_modules/inversify/es/constants/literal_types.js");
/* harmony import */ var _utils_id__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/id */ "../../node_modules/inversify/es/utils/id.js");


var Binding = (function () {
    function Binding(serviceIdentifier, scope) {
        this.id = (0,_utils_id__WEBPACK_IMPORTED_MODULE_0__.id)();
        this.activated = false;
        this.serviceIdentifier = serviceIdentifier;
        this.scope = scope;
        this.type = _constants_literal_types__WEBPACK_IMPORTED_MODULE_1__.BindingTypeEnum.Invalid;
        this.constraint = function (request) { return true; };
        this.implementationType = null;
        this.cache = null;
        this.factory = null;
        this.provider = null;
        this.onActivation = null;
        this.onDeactivation = null;
        this.dynamicValue = null;
    }
    Binding.prototype.clone = function () {
        var clone = new Binding(this.serviceIdentifier, this.scope);
        clone.activated = (clone.scope === _constants_literal_types__WEBPACK_IMPORTED_MODULE_1__.BindingScopeEnum.Singleton) ? this.activated : false;
        clone.implementationType = this.implementationType;
        clone.dynamicValue = this.dynamicValue;
        clone.scope = this.scope;
        clone.type = this.type;
        clone.factory = this.factory;
        clone.provider = this.provider;
        clone.constraint = this.constraint;
        clone.onActivation = this.onActivation;
        clone.onDeactivation = this.onDeactivation;
        clone.cache = this.cache;
        return clone;
    };
    return Binding;
}());



/***/ }),

/***/ "../../node_modules/inversify/es/bindings/binding_count.js":
/*!*****************************************************************!*\
  !*** ../../node_modules/inversify/es/bindings/binding_count.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   BindingCount: () => (/* binding */ BindingCount)
/* harmony export */ });
var BindingCount = {
    MultipleBindingsAvailable: 2,
    NoBindingsAvailable: 0,
    OnlyOneBindingAvailable: 1
};



/***/ }),

/***/ "../../node_modules/inversify/es/constants/error_msgs.js":
/*!***************************************************************!*\
  !*** ../../node_modules/inversify/es/constants/error_msgs.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AMBIGUOUS_MATCH: () => (/* binding */ AMBIGUOUS_MATCH),
/* harmony export */   ARGUMENTS_LENGTH_MISMATCH: () => (/* binding */ ARGUMENTS_LENGTH_MISMATCH),
/* harmony export */   ASYNC_UNBIND_REQUIRED: () => (/* binding */ ASYNC_UNBIND_REQUIRED),
/* harmony export */   CANNOT_UNBIND: () => (/* binding */ CANNOT_UNBIND),
/* harmony export */   CIRCULAR_DEPENDENCY: () => (/* binding */ CIRCULAR_DEPENDENCY),
/* harmony export */   CIRCULAR_DEPENDENCY_IN_FACTORY: () => (/* binding */ CIRCULAR_DEPENDENCY_IN_FACTORY),
/* harmony export */   CONTAINER_OPTIONS_INVALID_AUTO_BIND_INJECTABLE: () => (/* binding */ CONTAINER_OPTIONS_INVALID_AUTO_BIND_INJECTABLE),
/* harmony export */   CONTAINER_OPTIONS_INVALID_DEFAULT_SCOPE: () => (/* binding */ CONTAINER_OPTIONS_INVALID_DEFAULT_SCOPE),
/* harmony export */   CONTAINER_OPTIONS_INVALID_SKIP_BASE_CHECK: () => (/* binding */ CONTAINER_OPTIONS_INVALID_SKIP_BASE_CHECK),
/* harmony export */   CONTAINER_OPTIONS_MUST_BE_AN_OBJECT: () => (/* binding */ CONTAINER_OPTIONS_MUST_BE_AN_OBJECT),
/* harmony export */   DUPLICATED_INJECTABLE_DECORATOR: () => (/* binding */ DUPLICATED_INJECTABLE_DECORATOR),
/* harmony export */   DUPLICATED_METADATA: () => (/* binding */ DUPLICATED_METADATA),
/* harmony export */   INVALID_BINDING_TYPE: () => (/* binding */ INVALID_BINDING_TYPE),
/* harmony export */   INVALID_DECORATOR_OPERATION: () => (/* binding */ INVALID_DECORATOR_OPERATION),
/* harmony export */   INVALID_FUNCTION_BINDING: () => (/* binding */ INVALID_FUNCTION_BINDING),
/* harmony export */   INVALID_MIDDLEWARE_RETURN: () => (/* binding */ INVALID_MIDDLEWARE_RETURN),
/* harmony export */   INVALID_TO_SELF_VALUE: () => (/* binding */ INVALID_TO_SELF_VALUE),
/* harmony export */   KEY_NOT_FOUND: () => (/* binding */ KEY_NOT_FOUND),
/* harmony export */   LAZY_IN_SYNC: () => (/* binding */ LAZY_IN_SYNC),
/* harmony export */   MISSING_INJECTABLE_ANNOTATION: () => (/* binding */ MISSING_INJECTABLE_ANNOTATION),
/* harmony export */   MISSING_INJECT_ANNOTATION: () => (/* binding */ MISSING_INJECT_ANNOTATION),
/* harmony export */   MULTIPLE_POST_CONSTRUCT_METHODS: () => (/* binding */ MULTIPLE_POST_CONSTRUCT_METHODS),
/* harmony export */   MULTIPLE_PRE_DESTROY_METHODS: () => (/* binding */ MULTIPLE_PRE_DESTROY_METHODS),
/* harmony export */   NOT_IMPLEMENTED: () => (/* binding */ NOT_IMPLEMENTED),
/* harmony export */   NOT_REGISTERED: () => (/* binding */ NOT_REGISTERED),
/* harmony export */   NO_MORE_SNAPSHOTS_AVAILABLE: () => (/* binding */ NO_MORE_SNAPSHOTS_AVAILABLE),
/* harmony export */   NULL_ARGUMENT: () => (/* binding */ NULL_ARGUMENT),
/* harmony export */   ON_DEACTIVATION_ERROR: () => (/* binding */ ON_DEACTIVATION_ERROR),
/* harmony export */   POST_CONSTRUCT_ERROR: () => (/* binding */ POST_CONSTRUCT_ERROR),
/* harmony export */   PRE_DESTROY_ERROR: () => (/* binding */ PRE_DESTROY_ERROR),
/* harmony export */   STACK_OVERFLOW: () => (/* binding */ STACK_OVERFLOW),
/* harmony export */   UNDEFINED_INJECT_ANNOTATION: () => (/* binding */ UNDEFINED_INJECT_ANNOTATION)
/* harmony export */ });
var DUPLICATED_INJECTABLE_DECORATOR = "Cannot apply @injectable decorator multiple times.";
var DUPLICATED_METADATA = "Metadata key was used more than once in a parameter:";
var NULL_ARGUMENT = "NULL argument";
var KEY_NOT_FOUND = "Key Not Found";
var AMBIGUOUS_MATCH = "Ambiguous match found for serviceIdentifier:";
var CANNOT_UNBIND = "Could not unbind serviceIdentifier:";
var NOT_REGISTERED = "No matching bindings found for serviceIdentifier:";
var MISSING_INJECTABLE_ANNOTATION = "Missing required @injectable annotation in:";
var MISSING_INJECT_ANNOTATION = "Missing required @inject or @multiInject annotation in:";
var UNDEFINED_INJECT_ANNOTATION = function (name) {
    return "@inject called with undefined this could mean that the class " + name + " has " +
        "a circular dependency problem. You can use a LazyServiceIdentifer to  " +
        "overcome this limitation.";
};
var CIRCULAR_DEPENDENCY = "Circular dependency found:";
var NOT_IMPLEMENTED = "Sorry, this feature is not fully implemented yet.";
var INVALID_BINDING_TYPE = "Invalid binding type:";
var NO_MORE_SNAPSHOTS_AVAILABLE = "No snapshot available to restore.";
var INVALID_MIDDLEWARE_RETURN = "Invalid return type in middleware. Middleware must return!";
var INVALID_FUNCTION_BINDING = "Value provided to function binding must be a function!";
var LAZY_IN_SYNC = function (key) { return "You are attempting to construct '" + key + "' in a synchronous way\n but it has asynchronous dependencies."; };
var INVALID_TO_SELF_VALUE = "The toSelf function can only be applied when a constructor is " +
    "used as service identifier";
var INVALID_DECORATOR_OPERATION = "The @inject @multiInject @tagged and @named decorators " +
    "must be applied to the parameters of a class constructor or a class property.";
var ARGUMENTS_LENGTH_MISMATCH = function () {
    var values = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        values[_i] = arguments[_i];
    }
    return "The number of constructor arguments in the derived class " +
        (values[0] + " must be >= than the number of constructor arguments of its base class.");
};
var CONTAINER_OPTIONS_MUST_BE_AN_OBJECT = "Invalid Container constructor argument. Container options " +
    "must be an object.";
var CONTAINER_OPTIONS_INVALID_DEFAULT_SCOPE = "Invalid Container option. Default scope must " +
    "be a string ('singleton' or 'transient').";
var CONTAINER_OPTIONS_INVALID_AUTO_BIND_INJECTABLE = "Invalid Container option. Auto bind injectable must " +
    "be a boolean";
var CONTAINER_OPTIONS_INVALID_SKIP_BASE_CHECK = "Invalid Container option. Skip base check must " +
    "be a boolean";
var MULTIPLE_PRE_DESTROY_METHODS = "Cannot apply @preDestroy decorator multiple times in the same class";
var MULTIPLE_POST_CONSTRUCT_METHODS = "Cannot apply @postConstruct decorator multiple times in the same class";
var ASYNC_UNBIND_REQUIRED = "Attempting to unbind dependency with asynchronous destruction (@preDestroy or onDeactivation)";
var POST_CONSTRUCT_ERROR = function (clazz, errorMessage) { return "@postConstruct error in class " + clazz + ": " + errorMessage; };
var PRE_DESTROY_ERROR = function (clazz, errorMessage) { return "@preDestroy error in class " + clazz + ": " + errorMessage; };
var ON_DEACTIVATION_ERROR = function (clazz, errorMessage) { return "onDeactivation() error in class " + clazz + ": " + errorMessage; };
var CIRCULAR_DEPENDENCY_IN_FACTORY = function (factoryType, serviceIdentifier) {
    return "It looks like there is a circular dependency in one of the '" + factoryType + "' bindings. Please investigate bindings with" +
        ("service identifier '" + serviceIdentifier + "'.");
};
var STACK_OVERFLOW = "Maximum call stack size exceeded";


/***/ }),

/***/ "../../node_modules/inversify/es/constants/literal_types.js":
/*!******************************************************************!*\
  !*** ../../node_modules/inversify/es/constants/literal_types.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   BindingScopeEnum: () => (/* binding */ BindingScopeEnum),
/* harmony export */   BindingTypeEnum: () => (/* binding */ BindingTypeEnum),
/* harmony export */   TargetTypeEnum: () => (/* binding */ TargetTypeEnum)
/* harmony export */ });
var BindingScopeEnum = {
    Request: "Request",
    Singleton: "Singleton",
    Transient: "Transient"
};
var BindingTypeEnum = {
    ConstantValue: "ConstantValue",
    Constructor: "Constructor",
    DynamicValue: "DynamicValue",
    Factory: "Factory",
    Function: "Function",
    Instance: "Instance",
    Invalid: "Invalid",
    Provider: "Provider"
};
var TargetTypeEnum = {
    ClassProperty: "ClassProperty",
    ConstructorArgument: "ConstructorArgument",
    Variable: "Variable"
};



/***/ }),

/***/ "../../node_modules/inversify/es/constants/metadata_keys.js":
/*!******************************************************************!*\
  !*** ../../node_modules/inversify/es/constants/metadata_keys.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DESIGN_PARAM_TYPES: () => (/* binding */ DESIGN_PARAM_TYPES),
/* harmony export */   INJECT_TAG: () => (/* binding */ INJECT_TAG),
/* harmony export */   MULTI_INJECT_TAG: () => (/* binding */ MULTI_INJECT_TAG),
/* harmony export */   NAMED_TAG: () => (/* binding */ NAMED_TAG),
/* harmony export */   NAME_TAG: () => (/* binding */ NAME_TAG),
/* harmony export */   NON_CUSTOM_TAG_KEYS: () => (/* binding */ NON_CUSTOM_TAG_KEYS),
/* harmony export */   OPTIONAL_TAG: () => (/* binding */ OPTIONAL_TAG),
/* harmony export */   PARAM_TYPES: () => (/* binding */ PARAM_TYPES),
/* harmony export */   POST_CONSTRUCT: () => (/* binding */ POST_CONSTRUCT),
/* harmony export */   PRE_DESTROY: () => (/* binding */ PRE_DESTROY),
/* harmony export */   TAGGED: () => (/* binding */ TAGGED),
/* harmony export */   TAGGED_PROP: () => (/* binding */ TAGGED_PROP),
/* harmony export */   UNMANAGED_TAG: () => (/* binding */ UNMANAGED_TAG)
/* harmony export */ });
var NAMED_TAG = "named";
var NAME_TAG = "name";
var UNMANAGED_TAG = "unmanaged";
var OPTIONAL_TAG = "optional";
var INJECT_TAG = "inject";
var MULTI_INJECT_TAG = "multi_inject";
var TAGGED = "inversify:tagged";
var TAGGED_PROP = "inversify:tagged_props";
var PARAM_TYPES = "inversify:paramtypes";
var DESIGN_PARAM_TYPES = "design:paramtypes";
var POST_CONSTRUCT = "post_construct";
var PRE_DESTROY = "pre_destroy";
function getNonCustomTagKeys() {
    return [
        INJECT_TAG,
        MULTI_INJECT_TAG,
        NAME_TAG,
        UNMANAGED_TAG,
        NAMED_TAG,
        OPTIONAL_TAG,
    ];
}
var NON_CUSTOM_TAG_KEYS = getNonCustomTagKeys();


/***/ }),

/***/ "../../node_modules/inversify/es/container/container.js":
/*!**************************************************************!*\
  !*** ../../node_modules/inversify/es/container/container.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Container: () => (/* binding */ Container)
/* harmony export */ });
/* harmony import */ var _bindings_binding__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../bindings/binding */ "../../node_modules/inversify/es/bindings/binding.js");
/* harmony import */ var _constants_error_msgs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../constants/error_msgs */ "../../node_modules/inversify/es/constants/error_msgs.js");
/* harmony import */ var _constants_literal_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../constants/literal_types */ "../../node_modules/inversify/es/constants/literal_types.js");
/* harmony import */ var _constants_metadata_keys__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../constants/metadata_keys */ "../../node_modules/inversify/es/constants/metadata_keys.js");
/* harmony import */ var _planning_metadata_reader__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../planning/metadata_reader */ "../../node_modules/inversify/es/planning/metadata_reader.js");
/* harmony import */ var _planning_planner__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../planning/planner */ "../../node_modules/inversify/es/planning/planner.js");
/* harmony import */ var _resolution_resolver__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../resolution/resolver */ "../../node_modules/inversify/es/resolution/resolver.js");
/* harmony import */ var _syntax_binding_to_syntax__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../syntax/binding_to_syntax */ "../../node_modules/inversify/es/syntax/binding_to_syntax.js");
/* harmony import */ var _utils_async__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../utils/async */ "../../node_modules/inversify/es/utils/async.js");
/* harmony import */ var _utils_id__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/id */ "../../node_modules/inversify/es/utils/id.js");
/* harmony import */ var _utils_serialization__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../utils/serialization */ "../../node_modules/inversify/es/utils/serialization.js");
/* harmony import */ var _container_snapshot__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./container_snapshot */ "../../node_modules/inversify/es/container/container_snapshot.js");
/* harmony import */ var _lookup__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./lookup */ "../../node_modules/inversify/es/container/lookup.js");
/* harmony import */ var _module_activation_store__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./module_activation_store */ "../../node_modules/inversify/es/container/module_activation_store.js");
var __assign = (undefined && undefined.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (undefined && undefined.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __spreadArray = (undefined && undefined.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};














var Container = (function () {
    function Container(containerOptions) {
        var options = containerOptions || {};
        if (typeof options !== "object") {
            throw new Error("" + _constants_error_msgs__WEBPACK_IMPORTED_MODULE_0__.CONTAINER_OPTIONS_MUST_BE_AN_OBJECT);
        }
        if (options.defaultScope === undefined) {
            options.defaultScope = _constants_literal_types__WEBPACK_IMPORTED_MODULE_1__.BindingScopeEnum.Transient;
        }
        else if (options.defaultScope !== _constants_literal_types__WEBPACK_IMPORTED_MODULE_1__.BindingScopeEnum.Singleton &&
            options.defaultScope !== _constants_literal_types__WEBPACK_IMPORTED_MODULE_1__.BindingScopeEnum.Transient &&
            options.defaultScope !== _constants_literal_types__WEBPACK_IMPORTED_MODULE_1__.BindingScopeEnum.Request) {
            throw new Error("" + _constants_error_msgs__WEBPACK_IMPORTED_MODULE_0__.CONTAINER_OPTIONS_INVALID_DEFAULT_SCOPE);
        }
        if (options.autoBindInjectable === undefined) {
            options.autoBindInjectable = false;
        }
        else if (typeof options.autoBindInjectable !== "boolean") {
            throw new Error("" + _constants_error_msgs__WEBPACK_IMPORTED_MODULE_0__.CONTAINER_OPTIONS_INVALID_AUTO_BIND_INJECTABLE);
        }
        if (options.skipBaseClassChecks === undefined) {
            options.skipBaseClassChecks = false;
        }
        else if (typeof options.skipBaseClassChecks !== "boolean") {
            throw new Error("" + _constants_error_msgs__WEBPACK_IMPORTED_MODULE_0__.CONTAINER_OPTIONS_INVALID_SKIP_BASE_CHECK);
        }
        this.options = {
            autoBindInjectable: options.autoBindInjectable,
            defaultScope: options.defaultScope,
            skipBaseClassChecks: options.skipBaseClassChecks
        };
        this.id = (0,_utils_id__WEBPACK_IMPORTED_MODULE_2__.id)();
        this._bindingDictionary = new _lookup__WEBPACK_IMPORTED_MODULE_3__.Lookup();
        this._snapshots = [];
        this._middleware = null;
        this._activations = new _lookup__WEBPACK_IMPORTED_MODULE_3__.Lookup();
        this._deactivations = new _lookup__WEBPACK_IMPORTED_MODULE_3__.Lookup();
        this.parent = null;
        this._metadataReader = new _planning_metadata_reader__WEBPACK_IMPORTED_MODULE_4__.MetadataReader();
        this._moduleActivationStore = new _module_activation_store__WEBPACK_IMPORTED_MODULE_5__.ModuleActivationStore();
    }
    Container.merge = function (container1, container2) {
        var containers = [];
        for (var _i = 2; _i < arguments.length; _i++) {
            containers[_i - 2] = arguments[_i];
        }
        var container = new Container();
        var targetContainers = __spreadArray([container1, container2], containers, true).map(function (targetContainer) { return (0,_planning_planner__WEBPACK_IMPORTED_MODULE_6__.getBindingDictionary)(targetContainer); });
        var bindingDictionary = (0,_planning_planner__WEBPACK_IMPORTED_MODULE_6__.getBindingDictionary)(container);
        function copyDictionary(origin, destination) {
            origin.traverse(function (_key, value) {
                value.forEach(function (binding) {
                    destination.add(binding.serviceIdentifier, binding.clone());
                });
            });
        }
        targetContainers.forEach(function (targetBindingDictionary) {
            copyDictionary(targetBindingDictionary, bindingDictionary);
        });
        return container;
    };
    Container.prototype.load = function () {
        var modules = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            modules[_i] = arguments[_i];
        }
        var getHelpers = this._getContainerModuleHelpersFactory();
        for (var _a = 0, modules_1 = modules; _a < modules_1.length; _a++) {
            var currentModule = modules_1[_a];
            var containerModuleHelpers = getHelpers(currentModule.id);
            currentModule.registry(containerModuleHelpers.bindFunction, containerModuleHelpers.unbindFunction, containerModuleHelpers.isboundFunction, containerModuleHelpers.rebindFunction, containerModuleHelpers.unbindAsyncFunction, containerModuleHelpers.onActivationFunction, containerModuleHelpers.onDeactivationFunction);
        }
    };
    Container.prototype.loadAsync = function () {
        var modules = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            modules[_i] = arguments[_i];
        }
        return __awaiter(this, void 0, void 0, function () {
            var getHelpers, _a, modules_2, currentModule, containerModuleHelpers;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        getHelpers = this._getContainerModuleHelpersFactory();
                        _a = 0, modules_2 = modules;
                        _b.label = 1;
                    case 1:
                        if (!(_a < modules_2.length)) return [3, 4];
                        currentModule = modules_2[_a];
                        containerModuleHelpers = getHelpers(currentModule.id);
                        return [4, currentModule.registry(containerModuleHelpers.bindFunction, containerModuleHelpers.unbindFunction, containerModuleHelpers.isboundFunction, containerModuleHelpers.rebindFunction, containerModuleHelpers.unbindAsyncFunction, containerModuleHelpers.onActivationFunction, containerModuleHelpers.onDeactivationFunction)];
                    case 2:
                        _b.sent();
                        _b.label = 3;
                    case 3:
                        _a++;
                        return [3, 1];
                    case 4: return [2];
                }
            });
        });
    };
    Container.prototype.unload = function () {
        var _this = this;
        var modules = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            modules[_i] = arguments[_i];
        }
        modules.forEach(function (module) {
            var deactivations = _this._removeModuleBindings(module.id);
            _this._deactivateSingletons(deactivations);
            _this._removeModuleHandlers(module.id);
        });
    };
    Container.prototype.unloadAsync = function () {
        var modules = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            modules[_i] = arguments[_i];
        }
        return __awaiter(this, void 0, void 0, function () {
            var _a, modules_3, module_1, deactivations;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        _a = 0, modules_3 = modules;
                        _b.label = 1;
                    case 1:
                        if (!(_a < modules_3.length)) return [3, 4];
                        module_1 = modules_3[_a];
                        deactivations = this._removeModuleBindings(module_1.id);
                        return [4, this._deactivateSingletonsAsync(deactivations)];
                    case 2:
                        _b.sent();
                        this._removeModuleHandlers(module_1.id);
                        _b.label = 3;
                    case 3:
                        _a++;
                        return [3, 1];
                    case 4: return [2];
                }
            });
        });
    };
    Container.prototype.bind = function (serviceIdentifier) {
        var scope = this.options.defaultScope || _constants_literal_types__WEBPACK_IMPORTED_MODULE_1__.BindingScopeEnum.Transient;
        var binding = new _bindings_binding__WEBPACK_IMPORTED_MODULE_7__.Binding(serviceIdentifier, scope);
        this._bindingDictionary.add(serviceIdentifier, binding);
        return new _syntax_binding_to_syntax__WEBPACK_IMPORTED_MODULE_8__.BindingToSyntax(binding);
    };
    Container.prototype.rebind = function (serviceIdentifier) {
        this.unbind(serviceIdentifier);
        return this.bind(serviceIdentifier);
    };
    Container.prototype.rebindAsync = function (serviceIdentifier) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4, this.unbindAsync(serviceIdentifier)];
                    case 1:
                        _a.sent();
                        return [2, this.bind(serviceIdentifier)];
                }
            });
        });
    };
    Container.prototype.unbind = function (serviceIdentifier) {
        if (this._bindingDictionary.hasKey(serviceIdentifier)) {
            var bindings = this._bindingDictionary.get(serviceIdentifier);
            this._deactivateSingletons(bindings);
        }
        this._removeServiceFromDictionary(serviceIdentifier);
    };
    Container.prototype.unbindAsync = function (serviceIdentifier) {
        return __awaiter(this, void 0, void 0, function () {
            var bindings;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!this._bindingDictionary.hasKey(serviceIdentifier)) return [3, 2];
                        bindings = this._bindingDictionary.get(serviceIdentifier);
                        return [4, this._deactivateSingletonsAsync(bindings)];
                    case 1:
                        _a.sent();
                        _a.label = 2;
                    case 2:
                        this._removeServiceFromDictionary(serviceIdentifier);
                        return [2];
                }
            });
        });
    };
    Container.prototype.unbindAll = function () {
        var _this = this;
        this._bindingDictionary.traverse(function (_key, value) {
            _this._deactivateSingletons(value);
        });
        this._bindingDictionary = new _lookup__WEBPACK_IMPORTED_MODULE_3__.Lookup();
    };
    Container.prototype.unbindAllAsync = function () {
        return __awaiter(this, void 0, void 0, function () {
            var promises;
            var _this = this;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        promises = [];
                        this._bindingDictionary.traverse(function (_key, value) {
                            promises.push(_this._deactivateSingletonsAsync(value));
                        });
                        return [4, Promise.all(promises)];
                    case 1:
                        _a.sent();
                        this._bindingDictionary = new _lookup__WEBPACK_IMPORTED_MODULE_3__.Lookup();
                        return [2];
                }
            });
        });
    };
    Container.prototype.onActivation = function (serviceIdentifier, onActivation) {
        this._activations.add(serviceIdentifier, onActivation);
    };
    Container.prototype.onDeactivation = function (serviceIdentifier, onDeactivation) {
        this._deactivations.add(serviceIdentifier, onDeactivation);
    };
    Container.prototype.isBound = function (serviceIdentifier) {
        var bound = this._bindingDictionary.hasKey(serviceIdentifier);
        if (!bound && this.parent) {
            bound = this.parent.isBound(serviceIdentifier);
        }
        return bound;
    };
    Container.prototype.isCurrentBound = function (serviceIdentifier) {
        return this._bindingDictionary.hasKey(serviceIdentifier);
    };
    Container.prototype.isBoundNamed = function (serviceIdentifier, named) {
        return this.isBoundTagged(serviceIdentifier, _constants_metadata_keys__WEBPACK_IMPORTED_MODULE_9__.NAMED_TAG, named);
    };
    Container.prototype.isBoundTagged = function (serviceIdentifier, key, value) {
        var bound = false;
        if (this._bindingDictionary.hasKey(serviceIdentifier)) {
            var bindings = this._bindingDictionary.get(serviceIdentifier);
            var request_1 = (0,_planning_planner__WEBPACK_IMPORTED_MODULE_6__.createMockRequest)(this, serviceIdentifier, key, value);
            bound = bindings.some(function (b) { return b.constraint(request_1); });
        }
        if (!bound && this.parent) {
            bound = this.parent.isBoundTagged(serviceIdentifier, key, value);
        }
        return bound;
    };
    Container.prototype.snapshot = function () {
        this._snapshots.push(_container_snapshot__WEBPACK_IMPORTED_MODULE_10__.ContainerSnapshot.of(this._bindingDictionary.clone(), this._middleware, this._activations.clone(), this._deactivations.clone(), this._moduleActivationStore.clone()));
    };
    Container.prototype.restore = function () {
        var snapshot = this._snapshots.pop();
        if (snapshot === undefined) {
            throw new Error(_constants_error_msgs__WEBPACK_IMPORTED_MODULE_0__.NO_MORE_SNAPSHOTS_AVAILABLE);
        }
        this._bindingDictionary = snapshot.bindings;
        this._activations = snapshot.activations;
        this._deactivations = snapshot.deactivations;
        this._middleware = snapshot.middleware;
        this._moduleActivationStore = snapshot.moduleActivationStore;
    };
    Container.prototype.createChild = function (containerOptions) {
        var child = new Container(containerOptions || this.options);
        child.parent = this;
        return child;
    };
    Container.prototype.applyMiddleware = function () {
        var middlewares = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            middlewares[_i] = arguments[_i];
        }
        var initial = (this._middleware) ? this._middleware : this._planAndResolve();
        this._middleware = middlewares.reduce(function (prev, curr) { return curr(prev); }, initial);
    };
    Container.prototype.applyCustomMetadataReader = function (metadataReader) {
        this._metadataReader = metadataReader;
    };
    Container.prototype.get = function (serviceIdentifier) {
        var getArgs = this._getNotAllArgs(serviceIdentifier, false);
        return this._getButThrowIfAsync(getArgs);
    };
    Container.prototype.getAsync = function (serviceIdentifier) {
        return __awaiter(this, void 0, void 0, function () {
            var getArgs;
            return __generator(this, function (_a) {
                getArgs = this._getNotAllArgs(serviceIdentifier, false);
                return [2, this._get(getArgs)];
            });
        });
    };
    Container.prototype.getTagged = function (serviceIdentifier, key, value) {
        var getArgs = this._getNotAllArgs(serviceIdentifier, false, key, value);
        return this._getButThrowIfAsync(getArgs);
    };
    Container.prototype.getTaggedAsync = function (serviceIdentifier, key, value) {
        return __awaiter(this, void 0, void 0, function () {
            var getArgs;
            return __generator(this, function (_a) {
                getArgs = this._getNotAllArgs(serviceIdentifier, false, key, value);
                return [2, this._get(getArgs)];
            });
        });
    };
    Container.prototype.getNamed = function (serviceIdentifier, named) {
        return this.getTagged(serviceIdentifier, _constants_metadata_keys__WEBPACK_IMPORTED_MODULE_9__.NAMED_TAG, named);
    };
    Container.prototype.getNamedAsync = function (serviceIdentifier, named) {
        return this.getTaggedAsync(serviceIdentifier, _constants_metadata_keys__WEBPACK_IMPORTED_MODULE_9__.NAMED_TAG, named);
    };
    Container.prototype.getAll = function (serviceIdentifier) {
        var getArgs = this._getAllArgs(serviceIdentifier);
        return this._getButThrowIfAsync(getArgs);
    };
    Container.prototype.getAllAsync = function (serviceIdentifier) {
        var getArgs = this._getAllArgs(serviceIdentifier);
        return this._getAll(getArgs);
    };
    Container.prototype.getAllTagged = function (serviceIdentifier, key, value) {
        var getArgs = this._getNotAllArgs(serviceIdentifier, true, key, value);
        return this._getButThrowIfAsync(getArgs);
    };
    Container.prototype.getAllTaggedAsync = function (serviceIdentifier, key, value) {
        var getArgs = this._getNotAllArgs(serviceIdentifier, true, key, value);
        return this._getAll(getArgs);
    };
    Container.prototype.getAllNamed = function (serviceIdentifier, named) {
        return this.getAllTagged(serviceIdentifier, _constants_metadata_keys__WEBPACK_IMPORTED_MODULE_9__.NAMED_TAG, named);
    };
    Container.prototype.getAllNamedAsync = function (serviceIdentifier, named) {
        return this.getAllTaggedAsync(serviceIdentifier, _constants_metadata_keys__WEBPACK_IMPORTED_MODULE_9__.NAMED_TAG, named);
    };
    Container.prototype.resolve = function (constructorFunction) {
        var isBound = this.isBound(constructorFunction);
        if (!isBound) {
            this.bind(constructorFunction).toSelf();
        }
        var resolved = this.get(constructorFunction);
        if (!isBound) {
            this.unbind(constructorFunction);
        }
        return resolved;
    };
    Container.prototype._preDestroy = function (constructor, instance) {
        if (Reflect.hasMetadata(_constants_metadata_keys__WEBPACK_IMPORTED_MODULE_9__.PRE_DESTROY, constructor)) {
            var data = Reflect.getMetadata(_constants_metadata_keys__WEBPACK_IMPORTED_MODULE_9__.PRE_DESTROY, constructor);
            return instance[data.value]();
        }
    };
    Container.prototype._removeModuleHandlers = function (moduleId) {
        var moduleActivationsHandlers = this._moduleActivationStore.remove(moduleId);
        this._activations.removeIntersection(moduleActivationsHandlers.onActivations);
        this._deactivations.removeIntersection(moduleActivationsHandlers.onDeactivations);
    };
    Container.prototype._removeModuleBindings = function (moduleId) {
        return this._bindingDictionary.removeByCondition(function (binding) { return binding.moduleId === moduleId; });
    };
    Container.prototype._deactivate = function (binding, instance) {
        var _this = this;
        var constructor = Object.getPrototypeOf(instance).constructor;
        try {
            if (this._deactivations.hasKey(binding.serviceIdentifier)) {
                var result = this._deactivateContainer(instance, this._deactivations.get(binding.serviceIdentifier).values());
                if ((0,_utils_async__WEBPACK_IMPORTED_MODULE_11__.isPromise)(result)) {
                    return this._handleDeactivationError(result.then(function () { return _this._propagateContainerDeactivationThenBindingAndPreDestroyAsync(binding, instance, constructor); }), constructor);
                }
            }
            var propagateDeactivationResult = this._propagateContainerDeactivationThenBindingAndPreDestroy(binding, instance, constructor);
            if ((0,_utils_async__WEBPACK_IMPORTED_MODULE_11__.isPromise)(propagateDeactivationResult)) {
                return this._handleDeactivationError(propagateDeactivationResult, constructor);
            }
        }
        catch (ex) {
            throw new Error(_constants_error_msgs__WEBPACK_IMPORTED_MODULE_0__.ON_DEACTIVATION_ERROR(constructor.name, ex.message));
        }
    };
    Container.prototype._handleDeactivationError = function (asyncResult, constructor) {
        return __awaiter(this, void 0, void 0, function () {
            var ex_1;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        _a.trys.push([0, 2, , 3]);
                        return [4, asyncResult];
                    case 1:
                        _a.sent();
                        return [3, 3];
                    case 2:
                        ex_1 = _a.sent();
                        throw new Error(_constants_error_msgs__WEBPACK_IMPORTED_MODULE_0__.ON_DEACTIVATION_ERROR(constructor.name, ex_1.message));
                    case 3: return [2];
                }
            });
        });
    };
    Container.prototype._deactivateContainer = function (instance, deactivationsIterator) {
        var _this = this;
        var deactivation = deactivationsIterator.next();
        while (deactivation.value) {
            var result = deactivation.value(instance);
            if ((0,_utils_async__WEBPACK_IMPORTED_MODULE_11__.isPromise)(result)) {
                return result.then(function () {
                    return _this._deactivateContainerAsync(instance, deactivationsIterator);
                });
            }
            deactivation = deactivationsIterator.next();
        }
    };
    Container.prototype._deactivateContainerAsync = function (instance, deactivationsIterator) {
        return __awaiter(this, void 0, void 0, function () {
            var deactivation;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        deactivation = deactivationsIterator.next();
                        _a.label = 1;
                    case 1:
                        if (!deactivation.value) return [3, 3];
                        return [4, deactivation.value(instance)];
                    case 2:
                        _a.sent();
                        deactivation = deactivationsIterator.next();
                        return [3, 1];
                    case 3: return [2];
                }
            });
        });
    };
    Container.prototype._getContainerModuleHelpersFactory = function () {
        var _this = this;
        var setModuleId = function (bindingToSyntax, moduleId) {
            bindingToSyntax._binding.moduleId = moduleId;
        };
        var getBindFunction = function (moduleId) {
            return function (serviceIdentifier) {
                var bindingToSyntax = _this.bind(serviceIdentifier);
                setModuleId(bindingToSyntax, moduleId);
                return bindingToSyntax;
            };
        };
        var getUnbindFunction = function () {
            return function (serviceIdentifier) {
                return _this.unbind(serviceIdentifier);
            };
        };
        var getUnbindAsyncFunction = function () {
            return function (serviceIdentifier) {
                return _this.unbindAsync(serviceIdentifier);
            };
        };
        var getIsboundFunction = function () {
            return function (serviceIdentifier) {
                return _this.isBound(serviceIdentifier);
            };
        };
        var getRebindFunction = function (moduleId) {
            return function (serviceIdentifier) {
                var bindingToSyntax = _this.rebind(serviceIdentifier);
                setModuleId(bindingToSyntax, moduleId);
                return bindingToSyntax;
            };
        };
        var getOnActivationFunction = function (moduleId) {
            return function (serviceIdentifier, onActivation) {
                _this._moduleActivationStore.addActivation(moduleId, serviceIdentifier, onActivation);
                _this.onActivation(serviceIdentifier, onActivation);
            };
        };
        var getOnDeactivationFunction = function (moduleId) {
            return function (serviceIdentifier, onDeactivation) {
                _this._moduleActivationStore.addDeactivation(moduleId, serviceIdentifier, onDeactivation);
                _this.onDeactivation(serviceIdentifier, onDeactivation);
            };
        };
        return function (mId) { return ({
            bindFunction: getBindFunction(mId),
            isboundFunction: getIsboundFunction(),
            onActivationFunction: getOnActivationFunction(mId),
            onDeactivationFunction: getOnDeactivationFunction(mId),
            rebindFunction: getRebindFunction(mId),
            unbindFunction: getUnbindFunction(),
            unbindAsyncFunction: getUnbindAsyncFunction()
        }); };
    };
    Container.prototype._getAll = function (getArgs) {
        return Promise.all(this._get(getArgs));
    };
    Container.prototype._get = function (getArgs) {
        var planAndResolveArgs = __assign(__assign({}, getArgs), { contextInterceptor: function (context) { return context; }, targetType: _constants_literal_types__WEBPACK_IMPORTED_MODULE_1__.TargetTypeEnum.Variable });
        if (this._middleware) {
            var middlewareResult = this._middleware(planAndResolveArgs);
            if (middlewareResult === undefined || middlewareResult === null) {
                throw new Error(_constants_error_msgs__WEBPACK_IMPORTED_MODULE_0__.INVALID_MIDDLEWARE_RETURN);
            }
            return middlewareResult;
        }
        return this._planAndResolve()(planAndResolveArgs);
    };
    Container.prototype._getButThrowIfAsync = function (getArgs) {
        var result = this._get(getArgs);
        if ((0,_utils_async__WEBPACK_IMPORTED_MODULE_11__.isPromiseOrContainsPromise)(result)) {
            throw new Error(_constants_error_msgs__WEBPACK_IMPORTED_MODULE_0__.LAZY_IN_SYNC(getArgs.serviceIdentifier));
        }
        return result;
    };
    Container.prototype._getAllArgs = function (serviceIdentifier) {
        var getAllArgs = {
            avoidConstraints: true,
            isMultiInject: true,
            serviceIdentifier: serviceIdentifier,
        };
        return getAllArgs;
    };
    Container.prototype._getNotAllArgs = function (serviceIdentifier, isMultiInject, key, value) {
        var getNotAllArgs = {
            avoidConstraints: false,
            isMultiInject: isMultiInject,
            serviceIdentifier: serviceIdentifier,
            key: key,
            value: value,
        };
        return getNotAllArgs;
    };
    Container.prototype._planAndResolve = function () {
        var _this = this;
        return function (args) {
            var context = (0,_planning_planner__WEBPACK_IMPORTED_MODULE_6__.plan)(_this._metadataReader, _this, args.isMultiInject, args.targetType, args.serviceIdentifier, args.key, args.value, args.avoidConstraints);
            context = args.contextInterceptor(context);
            var result = (0,_resolution_resolver__WEBPACK_IMPORTED_MODULE_12__.resolve)(context);
            return result;
        };
    };
    Container.prototype._deactivateIfSingleton = function (binding) {
        var _this = this;
        if (!binding.activated) {
            return;
        }
        if ((0,_utils_async__WEBPACK_IMPORTED_MODULE_11__.isPromise)(binding.cache)) {
            return binding.cache.then(function (resolved) { return _this._deactivate(binding, resolved); });
        }
        return this._deactivate(binding, binding.cache);
    };
    Container.prototype._deactivateSingletons = function (bindings) {
        for (var _i = 0, bindings_1 = bindings; _i < bindings_1.length; _i++) {
            var binding = bindings_1[_i];
            var result = this._deactivateIfSingleton(binding);
            if ((0,_utils_async__WEBPACK_IMPORTED_MODULE_11__.isPromise)(result)) {
                throw new Error(_constants_error_msgs__WEBPACK_IMPORTED_MODULE_0__.ASYNC_UNBIND_REQUIRED);
            }
        }
    };
    Container.prototype._deactivateSingletonsAsync = function (bindings) {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4, Promise.all(bindings.map(function (b) { return _this._deactivateIfSingleton(b); }))];
                    case 1:
                        _a.sent();
                        return [2];
                }
            });
        });
    };
    Container.prototype._propagateContainerDeactivationThenBindingAndPreDestroy = function (binding, instance, constructor) {
        if (this.parent) {
            return this._deactivate.bind(this.parent)(binding, instance);
        }
        else {
            return this._bindingDeactivationAndPreDestroy(binding, instance, constructor);
        }
    };
    Container.prototype._propagateContainerDeactivationThenBindingAndPreDestroyAsync = function (binding, instance, constructor) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!this.parent) return [3, 2];
                        return [4, this._deactivate.bind(this.parent)(binding, instance)];
                    case 1:
                        _a.sent();
                        return [3, 4];
                    case 2: return [4, this._bindingDeactivationAndPreDestroyAsync(binding, instance, constructor)];
                    case 3:
                        _a.sent();
                        _a.label = 4;
                    case 4: return [2];
                }
            });
        });
    };
    Container.prototype._removeServiceFromDictionary = function (serviceIdentifier) {
        try {
            this._bindingDictionary.remove(serviceIdentifier);
        }
        catch (e) {
            throw new Error(_constants_error_msgs__WEBPACK_IMPORTED_MODULE_0__.CANNOT_UNBIND + " " + (0,_utils_serialization__WEBPACK_IMPORTED_MODULE_13__.getServiceIdentifierAsString)(serviceIdentifier));
        }
    };
    Container.prototype._bindingDeactivationAndPreDestroy = function (binding, instance, constructor) {
        var _this = this;
        if (typeof binding.onDeactivation === "function") {
            var result = binding.onDeactivation(instance);
            if ((0,_utils_async__WEBPACK_IMPORTED_MODULE_11__.isPromise)(result)) {
                return result.then(function () { return _this._preDestroy(constructor, instance); });
            }
        }
        return this._preDestroy(constructor, instance);
    };
    Container.prototype._bindingDeactivationAndPreDestroyAsync = function (binding, instance, constructor) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!(typeof binding.onDeactivation === "function")) return [3, 2];
                        return [4, binding.onDeactivation(instance)];
                    case 1:
                        _a.sent();
                        _a.label = 2;
                    case 2: return [4, this._preDestroy(constructor, instance)];
                    case 3:
                        _a.sent();
                        return [2];
                }
            });
        });
    };
    return Container;
}());



/***/ }),

/***/ "../../node_modules/inversify/es/container/container_module.js":
/*!*********************************************************************!*\
  !*** ../../node_modules/inversify/es/container/container_module.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AsyncContainerModule: () => (/* binding */ AsyncContainerModule),
/* harmony export */   ContainerModule: () => (/* binding */ ContainerModule)
/* harmony export */ });
/* harmony import */ var _utils_id__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/id */ "../../node_modules/inversify/es/utils/id.js");

var ContainerModule = (function () {
    function ContainerModule(registry) {
        this.id = (0,_utils_id__WEBPACK_IMPORTED_MODULE_0__.id)();
        this.registry = registry;
    }
    return ContainerModule;
}());

var AsyncContainerModule = (function () {
    function AsyncContainerModule(registry) {
        this.id = (0,_utils_id__WEBPACK_IMPORTED_MODULE_0__.id)();
        this.registry = registry;
    }
    return AsyncContainerModule;
}());



/***/ }),

/***/ "../../node_modules/inversify/es/container/container_snapshot.js":
/*!***********************************************************************!*\
  !*** ../../node_modules/inversify/es/container/container_snapshot.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ContainerSnapshot: () => (/* binding */ ContainerSnapshot)
/* harmony export */ });
var ContainerSnapshot = (function () {
    function ContainerSnapshot() {
    }
    ContainerSnapshot.of = function (bindings, middleware, activations, deactivations, moduleActivationStore) {
        var snapshot = new ContainerSnapshot();
        snapshot.bindings = bindings;
        snapshot.middleware = middleware;
        snapshot.deactivations = deactivations;
        snapshot.activations = activations;
        snapshot.moduleActivationStore = moduleActivationStore;
        return snapshot;
    };
    return ContainerSnapshot;
}());



/***/ }),

/***/ "../../node_modules/inversify/es/container/lookup.js":
/*!***********************************************************!*\
  !*** ../../node_modules/inversify/es/container/lookup.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Lookup: () => (/* binding */ Lookup)
/* harmony export */ });
/* harmony import */ var _constants_error_msgs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../constants/error_msgs */ "../../node_modules/inversify/es/constants/error_msgs.js");
/* harmony import */ var _utils_clonable__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/clonable */ "../../node_modules/inversify/es/utils/clonable.js");


var Lookup = (function () {
    function Lookup() {
        this._map = new Map();
    }
    Lookup.prototype.getMap = function () {
        return this._map;
    };
    Lookup.prototype.add = function (serviceIdentifier, value) {
        if (serviceIdentifier === null || serviceIdentifier === undefined) {
            throw new Error(_constants_error_msgs__WEBPACK_IMPORTED_MODULE_0__.NULL_ARGUMENT);
        }
        if (value === null || value === undefined) {
            throw new Error(_constants_error_msgs__WEBPACK_IMPORTED_MODULE_0__.NULL_ARGUMENT);
        }
        var entry = this._map.get(serviceIdentifier);
        if (entry !== undefined) {
            entry.push(value);
        }
        else {
            this._map.set(serviceIdentifier, [value]);
        }
    };
    Lookup.prototype.get = function (serviceIdentifier) {
        if (serviceIdentifier === null || serviceIdentifier === undefined) {
            throw new Error(_constants_error_msgs__WEBPACK_IMPORTED_MODULE_0__.NULL_ARGUMENT);
        }
        var entry = this._map.get(serviceIdentifier);
        if (entry !== undefined) {
            return entry;
        }
        else {
            throw new Error(_constants_error_msgs__WEBPACK_IMPORTED_MODULE_0__.KEY_NOT_FOUND);
        }
    };
    Lookup.prototype.remove = function (serviceIdentifier) {
        if (serviceIdentifier === null || serviceIdentifier === undefined) {
            throw new Error(_constants_error_msgs__WEBPACK_IMPORTED_MODULE_0__.NULL_ARGUMENT);
        }
        if (!this._map.delete(serviceIdentifier)) {
            throw new Error(_constants_error_msgs__WEBPACK_IMPORTED_MODULE_0__.KEY_NOT_FOUND);
        }
    };
    Lookup.prototype.removeIntersection = function (lookup) {
        var _this = this;
        this.traverse(function (serviceIdentifier, value) {
            var lookupActivations = lookup.hasKey(serviceIdentifier) ? lookup.get(serviceIdentifier) : undefined;
            if (lookupActivations !== undefined) {
                var filteredValues = value.filter(function (lookupValue) {
                    return !lookupActivations.some(function (moduleActivation) { return lookupValue === moduleActivation; });
                });
                _this._setValue(serviceIdentifier, filteredValues);
            }
        });
    };
    Lookup.prototype.removeByCondition = function (condition) {
        var _this = this;
        var removals = [];
        this._map.forEach(function (entries, key) {
            var updatedEntries = [];
            for (var _i = 0, entries_1 = entries; _i < entries_1.length; _i++) {
                var entry = entries_1[_i];
                var remove = condition(entry);
                if (remove) {
                    removals.push(entry);
                }
                else {
                    updatedEntries.push(entry);
                }
            }
            _this._setValue(key, updatedEntries);
        });
        return removals;
    };
    Lookup.prototype.hasKey = function (serviceIdentifier) {
        if (serviceIdentifier === null || serviceIdentifier === undefined) {
            throw new Error(_constants_error_msgs__WEBPACK_IMPORTED_MODULE_0__.NULL_ARGUMENT);
        }
        return this._map.has(serviceIdentifier);
    };
    Lookup.prototype.clone = function () {
        var copy = new Lookup();
        this._map.forEach(function (value, key) {
            value.forEach(function (b) { return copy.add(key, (0,_utils_clonable__WEBPACK_IMPORTED_MODULE_1__.isClonable)(b) ? b.clone() : b); });
        });
        return copy;
    };
    Lookup.prototype.traverse = function (func) {
        this._map.forEach(function (value, key) {
            func(key, value);
        });
    };
    Lookup.prototype._setValue = function (serviceIdentifier, value) {
        if (value.length > 0) {
            this._map.set(serviceIdentifier, value);
        }
        else {
            this._map.delete(serviceIdentifier);
        }
    };
    return Lookup;
}());



/***/ }),

/***/ "../../node_modules/inversify/es/container/module_activation_store.js":
/*!****************************************************************************!*\
  !*** ../../node_modules/inversify/es/container/module_activation_store.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ModuleActivationStore: () => (/* binding */ ModuleActivationStore)
/* harmony export */ });
/* harmony import */ var _lookup__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lookup */ "../../node_modules/inversify/es/container/lookup.js");

var ModuleActivationStore = (function () {
    function ModuleActivationStore() {
        this._map = new Map();
    }
    ModuleActivationStore.prototype.remove = function (moduleId) {
        if (this._map.has(moduleId)) {
            var handlers = this._map.get(moduleId);
            this._map.delete(moduleId);
            return handlers;
        }
        return this._getEmptyHandlersStore();
    };
    ModuleActivationStore.prototype.addDeactivation = function (moduleId, serviceIdentifier, onDeactivation) {
        this._getModuleActivationHandlers(moduleId)
            .onDeactivations.add(serviceIdentifier, onDeactivation);
    };
    ModuleActivationStore.prototype.addActivation = function (moduleId, serviceIdentifier, onActivation) {
        this._getModuleActivationHandlers(moduleId)
            .onActivations.add(serviceIdentifier, onActivation);
    };
    ModuleActivationStore.prototype.clone = function () {
        var clone = new ModuleActivationStore();
        this._map.forEach(function (handlersStore, moduleId) {
            clone._map.set(moduleId, {
                onActivations: handlersStore.onActivations.clone(),
                onDeactivations: handlersStore.onDeactivations.clone(),
            });
        });
        return clone;
    };
    ModuleActivationStore.prototype._getModuleActivationHandlers = function (moduleId) {
        var moduleActivationHandlers = this._map.get(moduleId);
        if (moduleActivationHandlers === undefined) {
            moduleActivationHandlers = this._getEmptyHandlersStore();
            this._map.set(moduleId, moduleActivationHandlers);
        }
        return moduleActivationHandlers;
    };
    ModuleActivationStore.prototype._getEmptyHandlersStore = function () {
        var handlersStore = {
            onActivations: new _lookup__WEBPACK_IMPORTED_MODULE_0__.Lookup(),
            onDeactivations: new _lookup__WEBPACK_IMPORTED_MODULE_0__.Lookup()
        };
        return handlersStore;
    };
    return ModuleActivationStore;
}());



/***/ }),

/***/ "../../node_modules/inversify/es/interfaces/interfaces.js":
/*!****************************************************************!*\
  !*** ../../node_modules/inversify/es/interfaces/interfaces.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   interfaces: () => (/* binding */ interfaces)
/* harmony export */ });
var interfaces;
(function (interfaces) {
    ;
})(interfaces || (interfaces = {}));



/***/ }),

/***/ "../../node_modules/inversify/es/inversify.js":
/*!****************************************************!*\
  !*** ../../node_modules/inversify/es/inversify.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AsyncContainerModule: () => (/* reexport safe */ _container_container_module__WEBPACK_IMPORTED_MODULE_3__.AsyncContainerModule),
/* harmony export */   BindingScopeEnum: () => (/* reexport safe */ _constants_literal_types__WEBPACK_IMPORTED_MODULE_2__.BindingScopeEnum),
/* harmony export */   BindingTypeEnum: () => (/* reexport safe */ _constants_literal_types__WEBPACK_IMPORTED_MODULE_2__.BindingTypeEnum),
/* harmony export */   Container: () => (/* reexport safe */ _container_container__WEBPACK_IMPORTED_MODULE_1__.Container),
/* harmony export */   ContainerModule: () => (/* reexport safe */ _container_container_module__WEBPACK_IMPORTED_MODULE_3__.ContainerModule),
/* harmony export */   LazyServiceIdentifer: () => (/* reexport safe */ _annotation_lazy_service_identifier__WEBPACK_IMPORTED_MODULE_9__.LazyServiceIdentifer),
/* harmony export */   METADATA_KEY: () => (/* binding */ METADATA_KEY),
/* harmony export */   MetadataReader: () => (/* reexport safe */ _planning_metadata_reader__WEBPACK_IMPORTED_MODULE_16__.MetadataReader),
/* harmony export */   TargetTypeEnum: () => (/* reexport safe */ _constants_literal_types__WEBPACK_IMPORTED_MODULE_2__.TargetTypeEnum),
/* harmony export */   createTaggedDecorator: () => (/* reexport safe */ _annotation_decorator_utils__WEBPACK_IMPORTED_MODULE_4__.createTaggedDecorator),
/* harmony export */   decorate: () => (/* reexport safe */ _annotation_decorator_utils__WEBPACK_IMPORTED_MODULE_4__.decorate),
/* harmony export */   getServiceIdentifierAsString: () => (/* reexport safe */ _utils_serialization__WEBPACK_IMPORTED_MODULE_20__.getServiceIdentifierAsString),
/* harmony export */   id: () => (/* reexport safe */ _utils_id__WEBPACK_IMPORTED_MODULE_17__.id),
/* harmony export */   inject: () => (/* reexport safe */ _annotation_inject__WEBPACK_IMPORTED_MODULE_8__.inject),
/* harmony export */   injectable: () => (/* reexport safe */ _annotation_injectable__WEBPACK_IMPORTED_MODULE_5__.injectable),
/* harmony export */   interfaces: () => (/* reexport safe */ _interfaces_interfaces__WEBPACK_IMPORTED_MODULE_18__.interfaces),
/* harmony export */   multiBindToService: () => (/* reexport safe */ _utils_binding_utils__WEBPACK_IMPORTED_MODULE_21__.multiBindToService),
/* harmony export */   multiInject: () => (/* reexport safe */ _annotation_multi_inject__WEBPACK_IMPORTED_MODULE_12__.multiInject),
/* harmony export */   named: () => (/* reexport safe */ _annotation_named__WEBPACK_IMPORTED_MODULE_7__.named),
/* harmony export */   namedConstraint: () => (/* reexport safe */ _syntax_constraint_helpers__WEBPACK_IMPORTED_MODULE_19__.namedConstraint),
/* harmony export */   optional: () => (/* reexport safe */ _annotation_optional__WEBPACK_IMPORTED_MODULE_10__.optional),
/* harmony export */   postConstruct: () => (/* reexport safe */ _annotation_post_construct__WEBPACK_IMPORTED_MODULE_14__.postConstruct),
/* harmony export */   preDestroy: () => (/* reexport safe */ _annotation_pre_destroy__WEBPACK_IMPORTED_MODULE_15__.preDestroy),
/* harmony export */   tagged: () => (/* reexport safe */ _annotation_tagged__WEBPACK_IMPORTED_MODULE_6__.tagged),
/* harmony export */   taggedConstraint: () => (/* reexport safe */ _syntax_constraint_helpers__WEBPACK_IMPORTED_MODULE_19__.taggedConstraint),
/* harmony export */   targetName: () => (/* reexport safe */ _annotation_target_name__WEBPACK_IMPORTED_MODULE_13__.targetName),
/* harmony export */   traverseAncerstors: () => (/* reexport safe */ _syntax_constraint_helpers__WEBPACK_IMPORTED_MODULE_19__.traverseAncerstors),
/* harmony export */   typeConstraint: () => (/* reexport safe */ _syntax_constraint_helpers__WEBPACK_IMPORTED_MODULE_19__.typeConstraint),
/* harmony export */   unmanaged: () => (/* reexport safe */ _annotation_unmanaged__WEBPACK_IMPORTED_MODULE_11__.unmanaged)
/* harmony export */ });
/* harmony import */ var _constants_metadata_keys__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants/metadata_keys */ "../../node_modules/inversify/es/constants/metadata_keys.js");
/* harmony import */ var _container_container__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./container/container */ "../../node_modules/inversify/es/container/container.js");
/* harmony import */ var _constants_literal_types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./constants/literal_types */ "../../node_modules/inversify/es/constants/literal_types.js");
/* harmony import */ var _container_container_module__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./container/container_module */ "../../node_modules/inversify/es/container/container_module.js");
/* harmony import */ var _annotation_decorator_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./annotation/decorator_utils */ "../../node_modules/inversify/es/annotation/decorator_utils.js");
/* harmony import */ var _annotation_injectable__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./annotation/injectable */ "../../node_modules/inversify/es/annotation/injectable.js");
/* harmony import */ var _annotation_tagged__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./annotation/tagged */ "../../node_modules/inversify/es/annotation/tagged.js");
/* harmony import */ var _annotation_named__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./annotation/named */ "../../node_modules/inversify/es/annotation/named.js");
/* harmony import */ var _annotation_inject__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./annotation/inject */ "../../node_modules/inversify/es/annotation/inject.js");
/* harmony import */ var _annotation_lazy_service_identifier__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./annotation/lazy_service_identifier */ "../../node_modules/inversify/es/annotation/lazy_service_identifier.js");
/* harmony import */ var _annotation_optional__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./annotation/optional */ "../../node_modules/inversify/es/annotation/optional.js");
/* harmony import */ var _annotation_unmanaged__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./annotation/unmanaged */ "../../node_modules/inversify/es/annotation/unmanaged.js");
/* harmony import */ var _annotation_multi_inject__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./annotation/multi_inject */ "../../node_modules/inversify/es/annotation/multi_inject.js");
/* harmony import */ var _annotation_target_name__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./annotation/target_name */ "../../node_modules/inversify/es/annotation/target_name.js");
/* harmony import */ var _annotation_post_construct__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./annotation/post_construct */ "../../node_modules/inversify/es/annotation/post_construct.js");
/* harmony import */ var _annotation_pre_destroy__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./annotation/pre_destroy */ "../../node_modules/inversify/es/annotation/pre_destroy.js");
/* harmony import */ var _planning_metadata_reader__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./planning/metadata_reader */ "../../node_modules/inversify/es/planning/metadata_reader.js");
/* harmony import */ var _utils_id__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./utils/id */ "../../node_modules/inversify/es/utils/id.js");
/* harmony import */ var _interfaces_interfaces__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./interfaces/interfaces */ "../../node_modules/inversify/es/interfaces/interfaces.js");
/* harmony import */ var _syntax_constraint_helpers__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./syntax/constraint_helpers */ "../../node_modules/inversify/es/syntax/constraint_helpers.js");
/* harmony import */ var _utils_serialization__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./utils/serialization */ "../../node_modules/inversify/es/utils/serialization.js");
/* harmony import */ var _utils_binding_utils__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./utils/binding_utils */ "../../node_modules/inversify/es/utils/binding_utils.js");

var METADATA_KEY = _constants_metadata_keys__WEBPACK_IMPORTED_MODULE_0__;
























/***/ }),

/***/ "../../node_modules/inversify/es/planning/context.js":
/*!***********************************************************!*\
  !*** ../../node_modules/inversify/es/planning/context.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Context: () => (/* binding */ Context)
/* harmony export */ });
/* harmony import */ var _utils_id__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/id */ "../../node_modules/inversify/es/utils/id.js");

var Context = (function () {
    function Context(container) {
        this.id = (0,_utils_id__WEBPACK_IMPORTED_MODULE_0__.id)();
        this.container = container;
    }
    Context.prototype.addPlan = function (plan) {
        this.plan = plan;
    };
    Context.prototype.setCurrentRequest = function (currentRequest) {
        this.currentRequest = currentRequest;
    };
    return Context;
}());



/***/ }),

/***/ "../../node_modules/inversify/es/planning/metadata.js":
/*!************************************************************!*\
  !*** ../../node_modules/inversify/es/planning/metadata.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Metadata: () => (/* binding */ Metadata)
/* harmony export */ });
/* harmony import */ var _constants_metadata_keys__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../constants/metadata_keys */ "../../node_modules/inversify/es/constants/metadata_keys.js");

var Metadata = (function () {
    function Metadata(key, value) {
        this.key = key;
        this.value = value;
    }
    Metadata.prototype.toString = function () {
        if (this.key === _constants_metadata_keys__WEBPACK_IMPORTED_MODULE_0__.NAMED_TAG) {
            return "named: " + String(this.value).toString() + " ";
        }
        else {
            return "tagged: { key:" + this.key.toString() + ", value: " + String(this.value) + " }";
        }
    };
    return Metadata;
}());



/***/ }),

/***/ "../../node_modules/inversify/es/planning/metadata_reader.js":
/*!*******************************************************************!*\
  !*** ../../node_modules/inversify/es/planning/metadata_reader.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   MetadataReader: () => (/* binding */ MetadataReader)
/* harmony export */ });
/* harmony import */ var _constants_metadata_keys__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../constants/metadata_keys */ "../../node_modules/inversify/es/constants/metadata_keys.js");

var MetadataReader = (function () {
    function MetadataReader() {
    }
    MetadataReader.prototype.getConstructorMetadata = function (constructorFunc) {
        var compilerGeneratedMetadata = Reflect.getMetadata(_constants_metadata_keys__WEBPACK_IMPORTED_MODULE_0__.PARAM_TYPES, constructorFunc);
        var userGeneratedMetadata = Reflect.getMetadata(_constants_metadata_keys__WEBPACK_IMPORTED_MODULE_0__.TAGGED, constructorFunc);
        return {
            compilerGeneratedMetadata: compilerGeneratedMetadata,
            userGeneratedMetadata: userGeneratedMetadata || {}
        };
    };
    MetadataReader.prototype.getPropertiesMetadata = function (constructorFunc) {
        var userGeneratedMetadata = Reflect.getMetadata(_constants_metadata_keys__WEBPACK_IMPORTED_MODULE_0__.TAGGED_PROP, constructorFunc) || [];
        return userGeneratedMetadata;
    };
    return MetadataReader;
}());



/***/ }),

/***/ "../../node_modules/inversify/es/planning/plan.js":
/*!********************************************************!*\
  !*** ../../node_modules/inversify/es/planning/plan.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Plan: () => (/* binding */ Plan)
/* harmony export */ });
var Plan = (function () {
    function Plan(parentContext, rootRequest) {
        this.parentContext = parentContext;
        this.rootRequest = rootRequest;
    }
    return Plan;
}());



/***/ }),

/***/ "../../node_modules/inversify/es/planning/planner.js":
/*!***********************************************************!*\
  !*** ../../node_modules/inversify/es/planning/planner.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   createMockRequest: () => (/* binding */ createMockRequest),
/* harmony export */   getBindingDictionary: () => (/* binding */ getBindingDictionary),
/* harmony export */   plan: () => (/* binding */ plan)
/* harmony export */ });
/* harmony import */ var _bindings_binding_count__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../bindings/binding_count */ "../../node_modules/inversify/es/bindings/binding_count.js");
/* harmony import */ var _constants_error_msgs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../constants/error_msgs */ "../../node_modules/inversify/es/constants/error_msgs.js");
/* harmony import */ var _constants_literal_types__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../constants/literal_types */ "../../node_modules/inversify/es/constants/literal_types.js");
/* harmony import */ var _constants_metadata_keys__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../constants/metadata_keys */ "../../node_modules/inversify/es/constants/metadata_keys.js");
/* harmony import */ var _utils_exceptions__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../utils/exceptions */ "../../node_modules/inversify/es/utils/exceptions.js");
/* harmony import */ var _utils_serialization__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./reflection_utils */ "../../node_modules/inversify/es/utils/serialization.js");
/* harmony import */ var _context__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./context */ "../../node_modules/inversify/es/planning/context.js");
/* harmony import */ var _metadata__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./metadata */ "../../node_modules/inversify/es/planning/metadata.js");
/* harmony import */ var _plan__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./plan */ "../../node_modules/inversify/es/planning/plan.js");
/* harmony import */ var _reflection_utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./reflection_utils */ "../../node_modules/inversify/es/planning/reflection_utils.js");
/* harmony import */ var _request__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./request */ "../../node_modules/inversify/es/planning/request.js");
/* harmony import */ var _target__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./target */ "../../node_modules/inversify/es/planning/target.js");












function getBindingDictionary(cntnr) {
    return cntnr._bindingDictionary;
}
function _createTarget(isMultiInject, targetType, serviceIdentifier, name, key, value) {
    var metadataKey = isMultiInject ? _constants_metadata_keys__WEBPACK_IMPORTED_MODULE_0__.MULTI_INJECT_TAG : _constants_metadata_keys__WEBPACK_IMPORTED_MODULE_0__.INJECT_TAG;
    var injectMetadata = new _metadata__WEBPACK_IMPORTED_MODULE_1__.Metadata(metadataKey, serviceIdentifier);
    var target = new _target__WEBPACK_IMPORTED_MODULE_2__.Target(targetType, name, serviceIdentifier, injectMetadata);
    if (key !== undefined) {
        var tagMetadata = new _metadata__WEBPACK_IMPORTED_MODULE_1__.Metadata(key, value);
        target.metadata.push(tagMetadata);
    }
    return target;
}
function _getActiveBindings(metadataReader, avoidConstraints, context, parentRequest, target) {
    var bindings = getBindings(context.container, target.serviceIdentifier);
    var activeBindings = [];
    if (bindings.length === _bindings_binding_count__WEBPACK_IMPORTED_MODULE_3__.BindingCount.NoBindingsAvailable &&
        context.container.options.autoBindInjectable &&
        typeof target.serviceIdentifier === "function" &&
        metadataReader.getConstructorMetadata(target.serviceIdentifier).compilerGeneratedMetadata) {
        context.container.bind(target.serviceIdentifier).toSelf();
        bindings = getBindings(context.container, target.serviceIdentifier);
    }
    if (!avoidConstraints) {
        activeBindings = bindings.filter(function (binding) {
            var request = new _request__WEBPACK_IMPORTED_MODULE_4__.Request(binding.serviceIdentifier, context, parentRequest, binding, target);
            return binding.constraint(request);
        });
    }
    else {
        activeBindings = bindings;
    }
    _validateActiveBindingCount(target.serviceIdentifier, activeBindings, target, context.container);
    return activeBindings;
}
function _validateActiveBindingCount(serviceIdentifier, bindings, target, container) {
    switch (bindings.length) {
        case _bindings_binding_count__WEBPACK_IMPORTED_MODULE_3__.BindingCount.NoBindingsAvailable:
            if (target.isOptional()) {
                return bindings;
            }
            else {
                var serviceIdentifierString = (0,_utils_serialization__WEBPACK_IMPORTED_MODULE_5__.getServiceIdentifierAsString)(serviceIdentifier);
                var msg = _constants_error_msgs__WEBPACK_IMPORTED_MODULE_6__.NOT_REGISTERED;
                msg += (0,_utils_serialization__WEBPACK_IMPORTED_MODULE_5__.listMetadataForTarget)(serviceIdentifierString, target);
                msg += (0,_utils_serialization__WEBPACK_IMPORTED_MODULE_5__.listRegisteredBindingsForServiceIdentifier)(container, serviceIdentifierString, getBindings);
                throw new Error(msg);
            }
        case _bindings_binding_count__WEBPACK_IMPORTED_MODULE_3__.BindingCount.OnlyOneBindingAvailable:
            return bindings;
        case _bindings_binding_count__WEBPACK_IMPORTED_MODULE_3__.BindingCount.MultipleBindingsAvailable:
        default:
            if (!target.isArray()) {
                var serviceIdentifierString = (0,_utils_serialization__WEBPACK_IMPORTED_MODULE_5__.getServiceIdentifierAsString)(serviceIdentifier);
                var msg = _constants_error_msgs__WEBPACK_IMPORTED_MODULE_6__.AMBIGUOUS_MATCH + " " + serviceIdentifierString;
                msg += (0,_utils_serialization__WEBPACK_IMPORTED_MODULE_5__.listRegisteredBindingsForServiceIdentifier)(container, serviceIdentifierString, getBindings);
                throw new Error(msg);
            }
            else {
                return bindings;
            }
    }
}
function _createSubRequests(metadataReader, avoidConstraints, serviceIdentifier, context, parentRequest, target) {
    var activeBindings;
    var childRequest;
    if (parentRequest === null) {
        activeBindings = _getActiveBindings(metadataReader, avoidConstraints, context, null, target);
        childRequest = new _request__WEBPACK_IMPORTED_MODULE_4__.Request(serviceIdentifier, context, null, activeBindings, target);
        var thePlan = new _plan__WEBPACK_IMPORTED_MODULE_7__.Plan(context, childRequest);
        context.addPlan(thePlan);
    }
    else {
        activeBindings = _getActiveBindings(metadataReader, avoidConstraints, context, parentRequest, target);
        childRequest = parentRequest.addChildRequest(target.serviceIdentifier, activeBindings, target);
    }
    activeBindings.forEach(function (binding) {
        var subChildRequest = null;
        if (target.isArray()) {
            subChildRequest = childRequest.addChildRequest(binding.serviceIdentifier, binding, target);
        }
        else {
            if (binding.cache) {
                return;
            }
            subChildRequest = childRequest;
        }
        if (binding.type === _constants_literal_types__WEBPACK_IMPORTED_MODULE_8__.BindingTypeEnum.Instance && binding.implementationType !== null) {
            var dependencies = (0,_reflection_utils__WEBPACK_IMPORTED_MODULE_9__.getDependencies)(metadataReader, binding.implementationType);
            if (!context.container.options.skipBaseClassChecks) {
                var baseClassDependencyCount = (0,_reflection_utils__WEBPACK_IMPORTED_MODULE_9__.getBaseClassDependencyCount)(metadataReader, binding.implementationType);
                if (dependencies.length < baseClassDependencyCount) {
                    var error = _constants_error_msgs__WEBPACK_IMPORTED_MODULE_6__.ARGUMENTS_LENGTH_MISMATCH((0,_utils_serialization__WEBPACK_IMPORTED_MODULE_5__.getFunctionName)(binding.implementationType));
                    throw new Error(error);
                }
            }
            dependencies.forEach(function (dependency) {
                _createSubRequests(metadataReader, false, dependency.serviceIdentifier, context, subChildRequest, dependency);
            });
        }
    });
}
function getBindings(container, serviceIdentifier) {
    var bindings = [];
    var bindingDictionary = getBindingDictionary(container);
    if (bindingDictionary.hasKey(serviceIdentifier)) {
        bindings = bindingDictionary.get(serviceIdentifier);
    }
    else if (container.parent !== null) {
        bindings = getBindings(container.parent, serviceIdentifier);
    }
    return bindings;
}
function plan(metadataReader, container, isMultiInject, targetType, serviceIdentifier, key, value, avoidConstraints) {
    if (avoidConstraints === void 0) { avoidConstraints = false; }
    var context = new _context__WEBPACK_IMPORTED_MODULE_10__.Context(container);
    var target = _createTarget(isMultiInject, targetType, serviceIdentifier, "", key, value);
    try {
        _createSubRequests(metadataReader, avoidConstraints, serviceIdentifier, context, null, target);
        return context;
    }
    catch (error) {
        if ((0,_utils_exceptions__WEBPACK_IMPORTED_MODULE_11__.isStackOverflowExeption)(error)) {
            (0,_utils_serialization__WEBPACK_IMPORTED_MODULE_5__.circularDependencyToException)(context.plan.rootRequest);
        }
        throw error;
    }
}
function createMockRequest(container, serviceIdentifier, key, value) {
    var target = new _target__WEBPACK_IMPORTED_MODULE_2__.Target(_constants_literal_types__WEBPACK_IMPORTED_MODULE_8__.TargetTypeEnum.Variable, "", serviceIdentifier, new _metadata__WEBPACK_IMPORTED_MODULE_1__.Metadata(key, value));
    var context = new _context__WEBPACK_IMPORTED_MODULE_10__.Context(container);
    var request = new _request__WEBPACK_IMPORTED_MODULE_4__.Request(serviceIdentifier, context, null, [], target);
    return request;
}



/***/ }),

/***/ "../../node_modules/inversify/es/planning/queryable_string.js":
/*!********************************************************************!*\
  !*** ../../node_modules/inversify/es/planning/queryable_string.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   QueryableString: () => (/* binding */ QueryableString)
/* harmony export */ });
var QueryableString = (function () {
    function QueryableString(str) {
        this.str = str;
    }
    QueryableString.prototype.startsWith = function (searchString) {
        return this.str.indexOf(searchString) === 0;
    };
    QueryableString.prototype.endsWith = function (searchString) {
        var reverseString = "";
        var reverseSearchString = searchString.split("").reverse().join("");
        reverseString = this.str.split("").reverse().join("");
        return this.startsWith.call({ str: reverseString }, reverseSearchString);
    };
    QueryableString.prototype.contains = function (searchString) {
        return (this.str.indexOf(searchString) !== -1);
    };
    QueryableString.prototype.equals = function (compareString) {
        return this.str === compareString;
    };
    QueryableString.prototype.value = function () {
        return this.str;
    };
    return QueryableString;
}());



/***/ }),

/***/ "../../node_modules/inversify/es/planning/reflection_utils.js":
/*!********************************************************************!*\
  !*** ../../node_modules/inversify/es/planning/reflection_utils.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getBaseClassDependencyCount: () => (/* binding */ getBaseClassDependencyCount),
/* harmony export */   getDependencies: () => (/* binding */ getDependencies),
/* harmony export */   getFunctionName: () => (/* reexport safe */ _utils_serialization__WEBPACK_IMPORTED_MODULE_0__.getFunctionName)
/* harmony export */ });
/* harmony import */ var _annotation_lazy_service_identifier__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../annotation/lazy_service_identifier */ "../../node_modules/inversify/es/annotation/lazy_service_identifier.js");
/* harmony import */ var _constants_error_msgs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../constants/error_msgs */ "../../node_modules/inversify/es/constants/error_msgs.js");
/* harmony import */ var _constants_literal_types__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../constants/literal_types */ "../../node_modules/inversify/es/constants/literal_types.js");
/* harmony import */ var _constants_metadata_keys__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../constants/metadata_keys */ "../../node_modules/inversify/es/constants/metadata_keys.js");
/* harmony import */ var _utils_serialization__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/serialization */ "../../node_modules/inversify/es/utils/serialization.js");
/* harmony import */ var _target__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./target */ "../../node_modules/inversify/es/planning/target.js");
var __spreadArray = (undefined && undefined.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};






function getDependencies(metadataReader, func) {
    var constructorName = (0,_utils_serialization__WEBPACK_IMPORTED_MODULE_0__.getFunctionName)(func);
    return getTargets(metadataReader, constructorName, func, false);
}
function getTargets(metadataReader, constructorName, func, isBaseClass) {
    var metadata = metadataReader.getConstructorMetadata(func);
    var serviceIdentifiers = metadata.compilerGeneratedMetadata;
    if (serviceIdentifiers === undefined) {
        var msg = _constants_error_msgs__WEBPACK_IMPORTED_MODULE_1__.MISSING_INJECTABLE_ANNOTATION + " " + constructorName + ".";
        throw new Error(msg);
    }
    var constructorArgsMetadata = metadata.userGeneratedMetadata;
    var keys = Object.keys(constructorArgsMetadata);
    var hasUserDeclaredUnknownInjections = (func.length === 0 && keys.length > 0);
    var hasOptionalParameters = keys.length > func.length;
    var iterations = (hasUserDeclaredUnknownInjections || hasOptionalParameters) ? keys.length : func.length;
    var constructorTargets = getConstructorArgsAsTargets(isBaseClass, constructorName, serviceIdentifiers, constructorArgsMetadata, iterations);
    var propertyTargets = getClassPropsAsTargets(metadataReader, func, constructorName);
    var targets = __spreadArray(__spreadArray([], constructorTargets, true), propertyTargets, true);
    return targets;
}
function getConstructorArgsAsTarget(index, isBaseClass, constructorName, serviceIdentifiers, constructorArgsMetadata) {
    var targetMetadata = constructorArgsMetadata[index.toString()] || [];
    var metadata = formatTargetMetadata(targetMetadata);
    var isManaged = metadata.unmanaged !== true;
    var serviceIdentifier = serviceIdentifiers[index];
    var injectIdentifier = (metadata.inject || metadata.multiInject);
    serviceIdentifier = (injectIdentifier) ? (injectIdentifier) : serviceIdentifier;
    if (serviceIdentifier instanceof _annotation_lazy_service_identifier__WEBPACK_IMPORTED_MODULE_2__.LazyServiceIdentifer) {
        serviceIdentifier = serviceIdentifier.unwrap();
    }
    if (isManaged) {
        var isObject = serviceIdentifier === Object;
        var isFunction = serviceIdentifier === Function;
        var isUndefined = serviceIdentifier === undefined;
        var isUnknownType = (isObject || isFunction || isUndefined);
        if (!isBaseClass && isUnknownType) {
            var msg = _constants_error_msgs__WEBPACK_IMPORTED_MODULE_1__.MISSING_INJECT_ANNOTATION + " argument " + index + " in class " + constructorName + ".";
            throw new Error(msg);
        }
        var target = new _target__WEBPACK_IMPORTED_MODULE_3__.Target(_constants_literal_types__WEBPACK_IMPORTED_MODULE_4__.TargetTypeEnum.ConstructorArgument, metadata.targetName, serviceIdentifier);
        target.metadata = targetMetadata;
        return target;
    }
    return null;
}
function getConstructorArgsAsTargets(isBaseClass, constructorName, serviceIdentifiers, constructorArgsMetadata, iterations) {
    var targets = [];
    for (var i = 0; i < iterations; i++) {
        var index = i;
        var target = getConstructorArgsAsTarget(index, isBaseClass, constructorName, serviceIdentifiers, constructorArgsMetadata);
        if (target !== null) {
            targets.push(target);
        }
    }
    return targets;
}
function _getServiceIdentifierForProperty(inject, multiInject, propertyName, className) {
    var serviceIdentifier = (inject || multiInject);
    if (serviceIdentifier === undefined) {
        var msg = _constants_error_msgs__WEBPACK_IMPORTED_MODULE_1__.MISSING_INJECTABLE_ANNOTATION + " for property " + String(propertyName) + " in class " + className + ".";
        throw new Error(msg);
    }
    return serviceIdentifier;
}
function getClassPropsAsTargets(metadataReader, constructorFunc, constructorName) {
    var classPropsMetadata = metadataReader.getPropertiesMetadata(constructorFunc);
    var targets = [];
    var symbolKeys = Object.getOwnPropertySymbols(classPropsMetadata);
    var stringKeys = Object.keys(classPropsMetadata);
    var keys = stringKeys.concat(symbolKeys);
    for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {
        var key = keys_1[_i];
        var targetMetadata = classPropsMetadata[key];
        var metadata = formatTargetMetadata(targetMetadata);
        var identifier = metadata.targetName || key;
        var serviceIdentifier = _getServiceIdentifierForProperty(metadata.inject, metadata.multiInject, key, constructorName);
        var target = new _target__WEBPACK_IMPORTED_MODULE_3__.Target(_constants_literal_types__WEBPACK_IMPORTED_MODULE_4__.TargetTypeEnum.ClassProperty, identifier, serviceIdentifier);
        target.metadata = targetMetadata;
        targets.push(target);
    }
    var baseConstructor = Object.getPrototypeOf(constructorFunc.prototype).constructor;
    if (baseConstructor !== Object) {
        var baseTargets = getClassPropsAsTargets(metadataReader, baseConstructor, constructorName);
        targets = __spreadArray(__spreadArray([], targets, true), baseTargets, true);
    }
    return targets;
}
function getBaseClassDependencyCount(metadataReader, func) {
    var baseConstructor = Object.getPrototypeOf(func.prototype).constructor;
    if (baseConstructor !== Object) {
        var baseConstructorName = (0,_utils_serialization__WEBPACK_IMPORTED_MODULE_0__.getFunctionName)(baseConstructor);
        var targets = getTargets(metadataReader, baseConstructorName, baseConstructor, true);
        var metadata = targets.map(function (t) { return t.metadata.filter(function (m) { return m.key === _constants_metadata_keys__WEBPACK_IMPORTED_MODULE_5__.UNMANAGED_TAG; }); });
        var unmanagedCount = [].concat.apply([], metadata).length;
        var dependencyCount = targets.length - unmanagedCount;
        if (dependencyCount > 0) {
            return dependencyCount;
        }
        else {
            return getBaseClassDependencyCount(metadataReader, baseConstructor);
        }
    }
    else {
        return 0;
    }
}
function formatTargetMetadata(targetMetadata) {
    var targetMetadataMap = {};
    targetMetadata.forEach(function (m) {
        targetMetadataMap[m.key.toString()] = m.value;
    });
    return {
        inject: targetMetadataMap[_constants_metadata_keys__WEBPACK_IMPORTED_MODULE_5__.INJECT_TAG],
        multiInject: targetMetadataMap[_constants_metadata_keys__WEBPACK_IMPORTED_MODULE_5__.MULTI_INJECT_TAG],
        targetName: targetMetadataMap[_constants_metadata_keys__WEBPACK_IMPORTED_MODULE_5__.NAME_TAG],
        unmanaged: targetMetadataMap[_constants_metadata_keys__WEBPACK_IMPORTED_MODULE_5__.UNMANAGED_TAG]
    };
}



/***/ }),

/***/ "../../node_modules/inversify/es/planning/request.js":
/*!***********************************************************!*\
  !*** ../../node_modules/inversify/es/planning/request.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Request: () => (/* binding */ Request)
/* harmony export */ });
/* harmony import */ var _utils_id__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/id */ "../../node_modules/inversify/es/utils/id.js");

var Request = (function () {
    function Request(serviceIdentifier, parentContext, parentRequest, bindings, target) {
        this.id = (0,_utils_id__WEBPACK_IMPORTED_MODULE_0__.id)();
        this.serviceIdentifier = serviceIdentifier;
        this.parentContext = parentContext;
        this.parentRequest = parentRequest;
        this.target = target;
        this.childRequests = [];
        this.bindings = (Array.isArray(bindings) ? bindings : [bindings]);
        this.requestScope = parentRequest === null
            ? new Map()
            : null;
    }
    Request.prototype.addChildRequest = function (serviceIdentifier, bindings, target) {
        var child = new Request(serviceIdentifier, this.parentContext, this, bindings, target);
        this.childRequests.push(child);
        return child;
    };
    return Request;
}());



/***/ }),

/***/ "../../node_modules/inversify/es/planning/target.js":
/*!**********************************************************!*\
  !*** ../../node_modules/inversify/es/planning/target.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Target: () => (/* binding */ Target)
/* harmony export */ });
/* harmony import */ var _constants_metadata_keys__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../constants/metadata_keys */ "../../node_modules/inversify/es/constants/metadata_keys.js");
/* harmony import */ var _utils_id__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/id */ "../../node_modules/inversify/es/utils/id.js");
/* harmony import */ var _utils_serialization__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/serialization */ "../../node_modules/inversify/es/utils/serialization.js");
/* harmony import */ var _metadata__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./metadata */ "../../node_modules/inversify/es/planning/metadata.js");
/* harmony import */ var _queryable_string__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./queryable_string */ "../../node_modules/inversify/es/planning/queryable_string.js");





var Target = (function () {
    function Target(type, identifier, serviceIdentifier, namedOrTagged) {
        this.id = (0,_utils_id__WEBPACK_IMPORTED_MODULE_0__.id)();
        this.type = type;
        this.serviceIdentifier = serviceIdentifier;
        var queryableName = typeof identifier === 'symbol' ? (0,_utils_serialization__WEBPACK_IMPORTED_MODULE_1__.getSymbolDescription)(identifier) : identifier;
        this.name = new _queryable_string__WEBPACK_IMPORTED_MODULE_2__.QueryableString(queryableName || "");
        this.identifier = identifier;
        this.metadata = new Array();
        var metadataItem = null;
        if (typeof namedOrTagged === 'string') {
            metadataItem = new _metadata__WEBPACK_IMPORTED_MODULE_3__.Metadata(_constants_metadata_keys__WEBPACK_IMPORTED_MODULE_4__.NAMED_TAG, namedOrTagged);
        }
        else if (namedOrTagged instanceof _metadata__WEBPACK_IMPORTED_MODULE_3__.Metadata) {
            metadataItem = namedOrTagged;
        }
        if (metadataItem !== null) {
            this.metadata.push(metadataItem);
        }
    }
    Target.prototype.hasTag = function (key) {
        for (var _i = 0, _a = this.metadata; _i < _a.length; _i++) {
            var m = _a[_i];
            if (m.key === key) {
                return true;
            }
        }
        return false;
    };
    Target.prototype.isArray = function () {
        return this.hasTag(_constants_metadata_keys__WEBPACK_IMPORTED_MODULE_4__.MULTI_INJECT_TAG);
    };
    Target.prototype.matchesArray = function (name) {
        return this.matchesTag(_constants_metadata_keys__WEBPACK_IMPORTED_MODULE_4__.MULTI_INJECT_TAG)(name);
    };
    Target.prototype.isNamed = function () {
        return this.hasTag(_constants_metadata_keys__WEBPACK_IMPORTED_MODULE_4__.NAMED_TAG);
    };
    Target.prototype.isTagged = function () {
        return this.metadata.some(function (metadata) { return _constants_metadata_keys__WEBPACK_IMPORTED_MODULE_4__.NON_CUSTOM_TAG_KEYS.every(function (key) { return metadata.key !== key; }); });
    };
    Target.prototype.isOptional = function () {
        return this.matchesTag(_constants_metadata_keys__WEBPACK_IMPORTED_MODULE_4__.OPTIONAL_TAG)(true);
    };
    Target.prototype.getNamedTag = function () {
        if (this.isNamed()) {
            return this.metadata.filter(function (m) { return m.key === _constants_metadata_keys__WEBPACK_IMPORTED_MODULE_4__.NAMED_TAG; })[0];
        }
        return null;
    };
    Target.prototype.getCustomTags = function () {
        if (this.isTagged()) {
            return this.metadata.filter(function (metadata) { return _constants_metadata_keys__WEBPACK_IMPORTED_MODULE_4__.NON_CUSTOM_TAG_KEYS.every(function (key) { return metadata.key !== key; }); });
        }
        else {
            return null;
        }
    };
    Target.prototype.matchesNamedTag = function (name) {
        return this.matchesTag(_constants_metadata_keys__WEBPACK_IMPORTED_MODULE_4__.NAMED_TAG)(name);
    };
    Target.prototype.matchesTag = function (key) {
        var _this = this;
        return function (value) {
            for (var _i = 0, _a = _this.metadata; _i < _a.length; _i++) {
                var m = _a[_i];
                if (m.key === key && m.value === value) {
                    return true;
                }
            }
            return false;
        };
    };
    return Target;
}());



/***/ }),

/***/ "../../node_modules/inversify/es/resolution/instantiation.js":
/*!*******************************************************************!*\
  !*** ../../node_modules/inversify/es/resolution/instantiation.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   resolveInstance: () => (/* binding */ resolveInstance)
/* harmony export */ });
/* harmony import */ var _constants_error_msgs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../constants/error_msgs */ "../../node_modules/inversify/es/constants/error_msgs.js");
/* harmony import */ var _constants_literal_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../constants/literal_types */ "../../node_modules/inversify/es/constants/literal_types.js");
/* harmony import */ var _constants_metadata_keys__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../constants/metadata_keys */ "../../node_modules/inversify/es/constants/metadata_keys.js");
/* harmony import */ var _utils_async__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/async */ "../../node_modules/inversify/es/utils/async.js");
var __assign = (undefined && undefined.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (undefined && undefined.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __spreadArray = (undefined && undefined.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};




function _resolveRequests(childRequests, resolveRequest) {
    return childRequests.reduce(function (resolvedRequests, childRequest) {
        var injection = resolveRequest(childRequest);
        var targetType = childRequest.target.type;
        if (targetType === _constants_literal_types__WEBPACK_IMPORTED_MODULE_0__.TargetTypeEnum.ConstructorArgument) {
            resolvedRequests.constructorInjections.push(injection);
        }
        else {
            resolvedRequests.propertyRequests.push(childRequest);
            resolvedRequests.propertyInjections.push(injection);
        }
        if (!resolvedRequests.isAsync) {
            resolvedRequests.isAsync = (0,_utils_async__WEBPACK_IMPORTED_MODULE_1__.isPromiseOrContainsPromise)(injection);
        }
        return resolvedRequests;
    }, { constructorInjections: [], propertyInjections: [], propertyRequests: [], isAsync: false });
}
function _createInstance(constr, childRequests, resolveRequest) {
    var result;
    if (childRequests.length > 0) {
        var resolved = _resolveRequests(childRequests, resolveRequest);
        var createInstanceWithInjectionsArg = __assign(__assign({}, resolved), { constr: constr });
        if (resolved.isAsync) {
            result = createInstanceWithInjectionsAsync(createInstanceWithInjectionsArg);
        }
        else {
            result = createInstanceWithInjections(createInstanceWithInjectionsArg);
        }
    }
    else {
        result = new constr();
    }
    return result;
}
function createInstanceWithInjections(args) {
    var _a;
    var instance = new ((_a = args.constr).bind.apply(_a, __spreadArray([void 0], args.constructorInjections, false)))();
    args.propertyRequests.forEach(function (r, index) {
        var property = r.target.identifier;
        var injection = args.propertyInjections[index];
        instance[property] = injection;
    });
    return instance;
}
function createInstanceWithInjectionsAsync(args) {
    return __awaiter(this, void 0, void 0, function () {
        var constructorInjections, propertyInjections;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0: return [4, possiblyWaitInjections(args.constructorInjections)];
                case 1:
                    constructorInjections = _a.sent();
                    return [4, possiblyWaitInjections(args.propertyInjections)];
                case 2:
                    propertyInjections = _a.sent();
                    return [2, createInstanceWithInjections(__assign(__assign({}, args), { constructorInjections: constructorInjections, propertyInjections: propertyInjections }))];
            }
        });
    });
}
function possiblyWaitInjections(possiblePromiseinjections) {
    return __awaiter(this, void 0, void 0, function () {
        var injections, _i, possiblePromiseinjections_1, injection;
        return __generator(this, function (_a) {
            injections = [];
            for (_i = 0, possiblePromiseinjections_1 = possiblePromiseinjections; _i < possiblePromiseinjections_1.length; _i++) {
                injection = possiblePromiseinjections_1[_i];
                if (Array.isArray(injection)) {
                    injections.push(Promise.all(injection));
                }
                else {
                    injections.push(injection);
                }
            }
            return [2, Promise.all(injections)];
        });
    });
}
function _getInstanceAfterPostConstruct(constr, result) {
    var postConstructResult = _postConstruct(constr, result);
    if ((0,_utils_async__WEBPACK_IMPORTED_MODULE_1__.isPromise)(postConstructResult)) {
        return postConstructResult.then(function () { return result; });
    }
    else {
        return result;
    }
}
function _postConstruct(constr, instance) {
    var _a, _b;
    if (Reflect.hasMetadata(_constants_metadata_keys__WEBPACK_IMPORTED_MODULE_2__.POST_CONSTRUCT, constr)) {
        var data = Reflect.getMetadata(_constants_metadata_keys__WEBPACK_IMPORTED_MODULE_2__.POST_CONSTRUCT, constr);
        try {
            return (_b = (_a = instance)[data.value]) === null || _b === void 0 ? void 0 : _b.call(_a);
        }
        catch (e) {
            throw new Error((0,_constants_error_msgs__WEBPACK_IMPORTED_MODULE_3__.POST_CONSTRUCT_ERROR)(constr.name, e.message));
        }
    }
}
function _validateInstanceResolution(binding, constr) {
    if (binding.scope !== _constants_literal_types__WEBPACK_IMPORTED_MODULE_0__.BindingScopeEnum.Singleton) {
        _throwIfHandlingDeactivation(binding, constr);
    }
}
function _throwIfHandlingDeactivation(binding, constr) {
    var scopeErrorMessage = "Class cannot be instantiated in " + (binding.scope === _constants_literal_types__WEBPACK_IMPORTED_MODULE_0__.BindingScopeEnum.Request ?
        "request" :
        "transient") + " scope.";
    if (typeof binding.onDeactivation === "function") {
        throw new Error((0,_constants_error_msgs__WEBPACK_IMPORTED_MODULE_3__.ON_DEACTIVATION_ERROR)(constr.name, scopeErrorMessage));
    }
    if (Reflect.hasMetadata(_constants_metadata_keys__WEBPACK_IMPORTED_MODULE_2__.PRE_DESTROY, constr)) {
        throw new Error((0,_constants_error_msgs__WEBPACK_IMPORTED_MODULE_3__.PRE_DESTROY_ERROR)(constr.name, scopeErrorMessage));
    }
}
function resolveInstance(binding, constr, childRequests, resolveRequest) {
    _validateInstanceResolution(binding, constr);
    var result = _createInstance(constr, childRequests, resolveRequest);
    if ((0,_utils_async__WEBPACK_IMPORTED_MODULE_1__.isPromise)(result)) {
        return result.then(function (resolvedResult) { return _getInstanceAfterPostConstruct(constr, resolvedResult); });
    }
    else {
        return _getInstanceAfterPostConstruct(constr, result);
    }
}



/***/ }),

/***/ "../../node_modules/inversify/es/resolution/resolver.js":
/*!**************************************************************!*\
  !*** ../../node_modules/inversify/es/resolution/resolver.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   resolve: () => (/* binding */ resolve)
/* harmony export */ });
/* harmony import */ var _constants_error_msgs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../constants/error_msgs */ "../../node_modules/inversify/es/constants/error_msgs.js");
/* harmony import */ var _constants_literal_types__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../constants/literal_types */ "../../node_modules/inversify/es/constants/literal_types.js");
/* harmony import */ var _planning_planner__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../planning/planner */ "../../node_modules/inversify/es/planning/planner.js");
/* harmony import */ var _scope_scope__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../scope/scope */ "../../node_modules/inversify/es/scope/scope.js");
/* harmony import */ var _utils_async__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../utils/async */ "../../node_modules/inversify/es/utils/async.js");
/* harmony import */ var _utils_binding_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/binding_utils */ "../../node_modules/inversify/es/utils/binding_utils.js");
/* harmony import */ var _utils_exceptions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/exceptions */ "../../node_modules/inversify/es/utils/exceptions.js");
/* harmony import */ var _instantiation__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./instantiation */ "../../node_modules/inversify/es/resolution/instantiation.js");
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (undefined && undefined.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};








var _resolveRequest = function (requestScope) {
    return function (request) {
        request.parentContext.setCurrentRequest(request);
        var bindings = request.bindings;
        var childRequests = request.childRequests;
        var targetIsAnArray = request.target && request.target.isArray();
        var targetParentIsNotAnArray = !request.parentRequest ||
            !request.parentRequest.target ||
            !request.target ||
            !request.parentRequest.target.matchesArray(request.target.serviceIdentifier);
        if (targetIsAnArray && targetParentIsNotAnArray) {
            return childRequests.map(function (childRequest) {
                var _f = _resolveRequest(requestScope);
                return _f(childRequest);
            });
        }
        else {
            if (request.target.isOptional() && bindings.length === 0) {
                return undefined;
            }
            var binding = bindings[0];
            return _resolveBinding(requestScope, request, binding);
        }
    };
};
var _resolveFactoryFromBinding = function (binding, context) {
    var factoryDetails = (0,_utils_binding_utils__WEBPACK_IMPORTED_MODULE_0__.getFactoryDetails)(binding);
    return (0,_utils_exceptions__WEBPACK_IMPORTED_MODULE_1__.tryAndThrowErrorIfStackOverflow)(function () { return factoryDetails.factory.bind(binding)(context); }, function () { return new Error(_constants_error_msgs__WEBPACK_IMPORTED_MODULE_2__.CIRCULAR_DEPENDENCY_IN_FACTORY(factoryDetails.factoryType, context.currentRequest.serviceIdentifier.toString())); });
};
var _getResolvedFromBinding = function (requestScope, request, binding) {
    var result;
    var childRequests = request.childRequests;
    (0,_utils_binding_utils__WEBPACK_IMPORTED_MODULE_0__.ensureFullyBound)(binding);
    switch (binding.type) {
        case _constants_literal_types__WEBPACK_IMPORTED_MODULE_3__.BindingTypeEnum.ConstantValue:
        case _constants_literal_types__WEBPACK_IMPORTED_MODULE_3__.BindingTypeEnum.Function:
            result = binding.cache;
            break;
        case _constants_literal_types__WEBPACK_IMPORTED_MODULE_3__.BindingTypeEnum.Constructor:
            result = binding.implementationType;
            break;
        case _constants_literal_types__WEBPACK_IMPORTED_MODULE_3__.BindingTypeEnum.Instance:
            result = (0,_instantiation__WEBPACK_IMPORTED_MODULE_4__.resolveInstance)(binding, binding.implementationType, childRequests, _resolveRequest(requestScope));
            break;
        default:
            result = _resolveFactoryFromBinding(binding, request.parentContext);
    }
    return result;
};
var _resolveInScope = function (requestScope, binding, resolveFromBinding) {
    var result = (0,_scope_scope__WEBPACK_IMPORTED_MODULE_5__.tryGetFromScope)(requestScope, binding);
    if (result !== null) {
        return result;
    }
    result = resolveFromBinding();
    (0,_scope_scope__WEBPACK_IMPORTED_MODULE_5__.saveToScope)(requestScope, binding, result);
    return result;
};
var _resolveBinding = function (requestScope, request, binding) {
    return _resolveInScope(requestScope, binding, function () {
        var result = _getResolvedFromBinding(requestScope, request, binding);
        if ((0,_utils_async__WEBPACK_IMPORTED_MODULE_6__.isPromise)(result)) {
            result = result.then(function (resolved) { return _onActivation(request, binding, resolved); });
        }
        else {
            result = _onActivation(request, binding, result);
        }
        return result;
    });
};
function _onActivation(request, binding, resolved) {
    var result = _bindingActivation(request.parentContext, binding, resolved);
    var containersIterator = _getContainersIterator(request.parentContext.container);
    var container;
    var containersIteratorResult = containersIterator.next();
    do {
        container = containersIteratorResult.value;
        var context_1 = request.parentContext;
        var serviceIdentifier = request.serviceIdentifier;
        var activationsIterator = _getContainerActivationsForService(container, serviceIdentifier);
        if ((0,_utils_async__WEBPACK_IMPORTED_MODULE_6__.isPromise)(result)) {
            result = _activateContainerAsync(activationsIterator, context_1, result);
        }
        else {
            result = _activateContainer(activationsIterator, context_1, result);
        }
        containersIteratorResult = containersIterator.next();
    } while (containersIteratorResult.done !== true && !(0,_planning_planner__WEBPACK_IMPORTED_MODULE_7__.getBindingDictionary)(container).hasKey(request.serviceIdentifier));
    return result;
}
var _bindingActivation = function (context, binding, previousResult) {
    var result;
    if (typeof binding.onActivation === "function") {
        result = binding.onActivation(context, previousResult);
    }
    else {
        result = previousResult;
    }
    return result;
};
var _activateContainer = function (activationsIterator, context, result) {
    var activation = activationsIterator.next();
    while (!activation.done) {
        result = activation.value(context, result);
        if ((0,_utils_async__WEBPACK_IMPORTED_MODULE_6__.isPromise)(result)) {
            return _activateContainerAsync(activationsIterator, context, result);
        }
        activation = activationsIterator.next();
    }
    return result;
};
var _activateContainerAsync = function (activationsIterator, context, resultPromise) { return __awaiter(void 0, void 0, void 0, function () {
    var result, activation;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0: return [4, resultPromise];
            case 1:
                result = _a.sent();
                activation = activationsIterator.next();
                _a.label = 2;
            case 2:
                if (!!activation.done) return [3, 4];
                return [4, activation.value(context, result)];
            case 3:
                result = _a.sent();
                activation = activationsIterator.next();
                return [3, 2];
            case 4: return [2, result];
        }
    });
}); };
var _getContainerActivationsForService = function (container, serviceIdentifier) {
    var activations = container._activations;
    return activations.hasKey(serviceIdentifier) ? activations.get(serviceIdentifier).values() : [].values();
};
var _getContainersIterator = function (container) {
    var containersStack = [container];
    var parent = container.parent;
    while (parent !== null) {
        containersStack.push(parent);
        parent = parent.parent;
    }
    var getNextContainer = function () {
        var nextContainer = containersStack.pop();
        if (nextContainer !== undefined) {
            return { done: false, value: nextContainer };
        }
        else {
            return { done: true, value: undefined };
        }
    };
    var containersIterator = {
        next: getNextContainer,
    };
    return containersIterator;
};
function resolve(context) {
    var _f = _resolveRequest(context.plan.rootRequest.requestScope);
    return _f(context.plan.rootRequest);
}



/***/ }),

/***/ "../../node_modules/inversify/es/scope/scope.js":
/*!******************************************************!*\
  !*** ../../node_modules/inversify/es/scope/scope.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   saveToScope: () => (/* binding */ saveToScope),
/* harmony export */   tryGetFromScope: () => (/* binding */ tryGetFromScope)
/* harmony export */ });
/* harmony import */ var _inversify__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../inversify */ "../../node_modules/inversify/es/constants/literal_types.js");
/* harmony import */ var _utils_async__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/async */ "../../node_modules/inversify/es/utils/async.js");
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (undefined && undefined.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};


var tryGetFromScope = function (requestScope, binding) {
    if ((binding.scope === _inversify__WEBPACK_IMPORTED_MODULE_0__.BindingScopeEnum.Singleton) && binding.activated) {
        return binding.cache;
    }
    if (binding.scope === _inversify__WEBPACK_IMPORTED_MODULE_0__.BindingScopeEnum.Request &&
        requestScope.has(binding.id)) {
        return requestScope.get(binding.id);
    }
    return null;
};
var saveToScope = function (requestScope, binding, result) {
    if (binding.scope === _inversify__WEBPACK_IMPORTED_MODULE_0__.BindingScopeEnum.Singleton) {
        _saveToSingletonScope(binding, result);
    }
    if (binding.scope === _inversify__WEBPACK_IMPORTED_MODULE_0__.BindingScopeEnum.Request) {
        _saveToRequestScope(requestScope, binding, result);
    }
};
var _saveToRequestScope = function (requestScope, binding, result) {
    if (!requestScope.has(binding.id)) {
        requestScope.set(binding.id, result);
    }
};
var _saveToSingletonScope = function (binding, result) {
    binding.cache = result;
    binding.activated = true;
    if ((0,_utils_async__WEBPACK_IMPORTED_MODULE_1__.isPromise)(result)) {
        void _saveAsyncResultToSingletonScope(binding, result);
    }
};
var _saveAsyncResultToSingletonScope = function (binding, asyncResult) { return __awaiter(void 0, void 0, void 0, function () {
    var result, ex_1;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                _a.trys.push([0, 2, , 3]);
                return [4, asyncResult];
            case 1:
                result = _a.sent();
                binding.cache = result;
                return [3, 3];
            case 2:
                ex_1 = _a.sent();
                binding.cache = null;
                binding.activated = false;
                throw ex_1;
            case 3: return [2];
        }
    });
}); };


/***/ }),

/***/ "../../node_modules/inversify/es/syntax/binding_in_syntax.js":
/*!*******************************************************************!*\
  !*** ../../node_modules/inversify/es/syntax/binding_in_syntax.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   BindingInSyntax: () => (/* binding */ BindingInSyntax)
/* harmony export */ });
/* harmony import */ var _constants_literal_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../constants/literal_types */ "../../node_modules/inversify/es/constants/literal_types.js");
/* harmony import */ var _binding_when_on_syntax__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./binding_when_on_syntax */ "../../node_modules/inversify/es/syntax/binding_when_on_syntax.js");


var BindingInSyntax = (function () {
    function BindingInSyntax(binding) {
        this._binding = binding;
    }
    BindingInSyntax.prototype.inRequestScope = function () {
        this._binding.scope = _constants_literal_types__WEBPACK_IMPORTED_MODULE_0__.BindingScopeEnum.Request;
        return new _binding_when_on_syntax__WEBPACK_IMPORTED_MODULE_1__.BindingWhenOnSyntax(this._binding);
    };
    BindingInSyntax.prototype.inSingletonScope = function () {
        this._binding.scope = _constants_literal_types__WEBPACK_IMPORTED_MODULE_0__.BindingScopeEnum.Singleton;
        return new _binding_when_on_syntax__WEBPACK_IMPORTED_MODULE_1__.BindingWhenOnSyntax(this._binding);
    };
    BindingInSyntax.prototype.inTransientScope = function () {
        this._binding.scope = _constants_literal_types__WEBPACK_IMPORTED_MODULE_0__.BindingScopeEnum.Transient;
        return new _binding_when_on_syntax__WEBPACK_IMPORTED_MODULE_1__.BindingWhenOnSyntax(this._binding);
    };
    return BindingInSyntax;
}());



/***/ }),

/***/ "../../node_modules/inversify/es/syntax/binding_in_when_on_syntax.js":
/*!***************************************************************************!*\
  !*** ../../node_modules/inversify/es/syntax/binding_in_when_on_syntax.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   BindingInWhenOnSyntax: () => (/* binding */ BindingInWhenOnSyntax)
/* harmony export */ });
/* harmony import */ var _binding_in_syntax__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./binding_in_syntax */ "../../node_modules/inversify/es/syntax/binding_in_syntax.js");
/* harmony import */ var _binding_on_syntax__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./binding_on_syntax */ "../../node_modules/inversify/es/syntax/binding_on_syntax.js");
/* harmony import */ var _binding_when_syntax__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./binding_when_syntax */ "../../node_modules/inversify/es/syntax/binding_when_syntax.js");



var BindingInWhenOnSyntax = (function () {
    function BindingInWhenOnSyntax(binding) {
        this._binding = binding;
        this._bindingWhenSyntax = new _binding_when_syntax__WEBPACK_IMPORTED_MODULE_0__.BindingWhenSyntax(this._binding);
        this._bindingOnSyntax = new _binding_on_syntax__WEBPACK_IMPORTED_MODULE_1__.BindingOnSyntax(this._binding);
        this._bindingInSyntax = new _binding_in_syntax__WEBPACK_IMPORTED_MODULE_2__.BindingInSyntax(binding);
    }
    BindingInWhenOnSyntax.prototype.inRequestScope = function () {
        return this._bindingInSyntax.inRequestScope();
    };
    BindingInWhenOnSyntax.prototype.inSingletonScope = function () {
        return this._bindingInSyntax.inSingletonScope();
    };
    BindingInWhenOnSyntax.prototype.inTransientScope = function () {
        return this._bindingInSyntax.inTransientScope();
    };
    BindingInWhenOnSyntax.prototype.when = function (constraint) {
        return this._bindingWhenSyntax.when(constraint);
    };
    BindingInWhenOnSyntax.prototype.whenTargetNamed = function (name) {
        return this._bindingWhenSyntax.whenTargetNamed(name);
    };
    BindingInWhenOnSyntax.prototype.whenTargetIsDefault = function () {
        return this._bindingWhenSyntax.whenTargetIsDefault();
    };
    BindingInWhenOnSyntax.prototype.whenTargetTagged = function (tag, value) {
        return this._bindingWhenSyntax.whenTargetTagged(tag, value);
    };
    BindingInWhenOnSyntax.prototype.whenInjectedInto = function (parent) {
        return this._bindingWhenSyntax.whenInjectedInto(parent);
    };
    BindingInWhenOnSyntax.prototype.whenParentNamed = function (name) {
        return this._bindingWhenSyntax.whenParentNamed(name);
    };
    BindingInWhenOnSyntax.prototype.whenParentTagged = function (tag, value) {
        return this._bindingWhenSyntax.whenParentTagged(tag, value);
    };
    BindingInWhenOnSyntax.prototype.whenAnyAncestorIs = function (ancestor) {
        return this._bindingWhenSyntax.whenAnyAncestorIs(ancestor);
    };
    BindingInWhenOnSyntax.prototype.whenNoAncestorIs = function (ancestor) {
        return this._bindingWhenSyntax.whenNoAncestorIs(ancestor);
    };
    BindingInWhenOnSyntax.prototype.whenAnyAncestorNamed = function (name) {
        return this._bindingWhenSyntax.whenAnyAncestorNamed(name);
    };
    BindingInWhenOnSyntax.prototype.whenAnyAncestorTagged = function (tag, value) {
        return this._bindingWhenSyntax.whenAnyAncestorTagged(tag, value);
    };
    BindingInWhenOnSyntax.prototype.whenNoAncestorNamed = function (name) {
        return this._bindingWhenSyntax.whenNoAncestorNamed(name);
    };
    BindingInWhenOnSyntax.prototype.whenNoAncestorTagged = function (tag, value) {
        return this._bindingWhenSyntax.whenNoAncestorTagged(tag, value);
    };
    BindingInWhenOnSyntax.prototype.whenAnyAncestorMatches = function (constraint) {
        return this._bindingWhenSyntax.whenAnyAncestorMatches(constraint);
    };
    BindingInWhenOnSyntax.prototype.whenNoAncestorMatches = function (constraint) {
        return this._bindingWhenSyntax.whenNoAncestorMatches(constraint);
    };
    BindingInWhenOnSyntax.prototype.onActivation = function (handler) {
        return this._bindingOnSyntax.onActivation(handler);
    };
    BindingInWhenOnSyntax.prototype.onDeactivation = function (handler) {
        return this._bindingOnSyntax.onDeactivation(handler);
    };
    return BindingInWhenOnSyntax;
}());



/***/ }),

/***/ "../../node_modules/inversify/es/syntax/binding_on_syntax.js":
/*!*******************************************************************!*\
  !*** ../../node_modules/inversify/es/syntax/binding_on_syntax.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   BindingOnSyntax: () => (/* binding */ BindingOnSyntax)
/* harmony export */ });
/* harmony import */ var _binding_when_syntax__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./binding_when_syntax */ "../../node_modules/inversify/es/syntax/binding_when_syntax.js");

var BindingOnSyntax = (function () {
    function BindingOnSyntax(binding) {
        this._binding = binding;
    }
    BindingOnSyntax.prototype.onActivation = function (handler) {
        this._binding.onActivation = handler;
        return new _binding_when_syntax__WEBPACK_IMPORTED_MODULE_0__.BindingWhenSyntax(this._binding);
    };
    BindingOnSyntax.prototype.onDeactivation = function (handler) {
        this._binding.onDeactivation = handler;
        return new _binding_when_syntax__WEBPACK_IMPORTED_MODULE_0__.BindingWhenSyntax(this._binding);
    };
    return BindingOnSyntax;
}());



/***/ }),

/***/ "../../node_modules/inversify/es/syntax/binding_to_syntax.js":
/*!*******************************************************************!*\
  !*** ../../node_modules/inversify/es/syntax/binding_to_syntax.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   BindingToSyntax: () => (/* binding */ BindingToSyntax)
/* harmony export */ });
/* harmony import */ var _constants_error_msgs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../constants/error_msgs */ "../../node_modules/inversify/es/constants/error_msgs.js");
/* harmony import */ var _constants_literal_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../constants/literal_types */ "../../node_modules/inversify/es/constants/literal_types.js");
/* harmony import */ var _binding_in_when_on_syntax__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./binding_in_when_on_syntax */ "../../node_modules/inversify/es/syntax/binding_in_when_on_syntax.js");
/* harmony import */ var _binding_when_on_syntax__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./binding_when_on_syntax */ "../../node_modules/inversify/es/syntax/binding_when_on_syntax.js");




var BindingToSyntax = (function () {
    function BindingToSyntax(binding) {
        this._binding = binding;
    }
    BindingToSyntax.prototype.to = function (constructor) {
        this._binding.type = _constants_literal_types__WEBPACK_IMPORTED_MODULE_0__.BindingTypeEnum.Instance;
        this._binding.implementationType = constructor;
        return new _binding_in_when_on_syntax__WEBPACK_IMPORTED_MODULE_1__.BindingInWhenOnSyntax(this._binding);
    };
    BindingToSyntax.prototype.toSelf = function () {
        if (typeof this._binding.serviceIdentifier !== "function") {
            throw new Error("" + _constants_error_msgs__WEBPACK_IMPORTED_MODULE_2__.INVALID_TO_SELF_VALUE);
        }
        var self = this._binding.serviceIdentifier;
        return this.to(self);
    };
    BindingToSyntax.prototype.toConstantValue = function (value) {
        this._binding.type = _constants_literal_types__WEBPACK_IMPORTED_MODULE_0__.BindingTypeEnum.ConstantValue;
        this._binding.cache = value;
        this._binding.dynamicValue = null;
        this._binding.implementationType = null;
        this._binding.scope = _constants_literal_types__WEBPACK_IMPORTED_MODULE_0__.BindingScopeEnum.Singleton;
        return new _binding_when_on_syntax__WEBPACK_IMPORTED_MODULE_3__.BindingWhenOnSyntax(this._binding);
    };
    BindingToSyntax.prototype.toDynamicValue = function (func) {
        this._binding.type = _constants_literal_types__WEBPACK_IMPORTED_MODULE_0__.BindingTypeEnum.DynamicValue;
        this._binding.cache = null;
        this._binding.dynamicValue = func;
        this._binding.implementationType = null;
        return new _binding_in_when_on_syntax__WEBPACK_IMPORTED_MODULE_1__.BindingInWhenOnSyntax(this._binding);
    };
    BindingToSyntax.prototype.toConstructor = function (constructor) {
        this._binding.type = _constants_literal_types__WEBPACK_IMPORTED_MODULE_0__.BindingTypeEnum.Constructor;
        this._binding.implementationType = constructor;
        this._binding.scope = _constants_literal_types__WEBPACK_IMPORTED_MODULE_0__.BindingScopeEnum.Singleton;
        return new _binding_when_on_syntax__WEBPACK_IMPORTED_MODULE_3__.BindingWhenOnSyntax(this._binding);
    };
    BindingToSyntax.prototype.toFactory = function (factory) {
        this._binding.type = _constants_literal_types__WEBPACK_IMPORTED_MODULE_0__.BindingTypeEnum.Factory;
        this._binding.factory = factory;
        this._binding.scope = _constants_literal_types__WEBPACK_IMPORTED_MODULE_0__.BindingScopeEnum.Singleton;
        return new _binding_when_on_syntax__WEBPACK_IMPORTED_MODULE_3__.BindingWhenOnSyntax(this._binding);
    };
    BindingToSyntax.prototype.toFunction = function (func) {
        if (typeof func !== "function") {
            throw new Error(_constants_error_msgs__WEBPACK_IMPORTED_MODULE_2__.INVALID_FUNCTION_BINDING);
        }
        var bindingWhenOnSyntax = this.toConstantValue(func);
        this._binding.type = _constants_literal_types__WEBPACK_IMPORTED_MODULE_0__.BindingTypeEnum.Function;
        this._binding.scope = _constants_literal_types__WEBPACK_IMPORTED_MODULE_0__.BindingScopeEnum.Singleton;
        return bindingWhenOnSyntax;
    };
    BindingToSyntax.prototype.toAutoFactory = function (serviceIdentifier) {
        this._binding.type = _constants_literal_types__WEBPACK_IMPORTED_MODULE_0__.BindingTypeEnum.Factory;
        this._binding.factory = function (context) {
            var autofactory = function () { return context.container.get(serviceIdentifier); };
            return autofactory;
        };
        this._binding.scope = _constants_literal_types__WEBPACK_IMPORTED_MODULE_0__.BindingScopeEnum.Singleton;
        return new _binding_when_on_syntax__WEBPACK_IMPORTED_MODULE_3__.BindingWhenOnSyntax(this._binding);
    };
    BindingToSyntax.prototype.toAutoNamedFactory = function (serviceIdentifier) {
        this._binding.type = _constants_literal_types__WEBPACK_IMPORTED_MODULE_0__.BindingTypeEnum.Factory;
        this._binding.factory = function (context) {
            return function (named) { return context.container.getNamed(serviceIdentifier, named); };
        };
        return new _binding_when_on_syntax__WEBPACK_IMPORTED_MODULE_3__.BindingWhenOnSyntax(this._binding);
    };
    BindingToSyntax.prototype.toProvider = function (provider) {
        this._binding.type = _constants_literal_types__WEBPACK_IMPORTED_MODULE_0__.BindingTypeEnum.Provider;
        this._binding.provider = provider;
        this._binding.scope = _constants_literal_types__WEBPACK_IMPORTED_MODULE_0__.BindingScopeEnum.Singleton;
        return new _binding_when_on_syntax__WEBPACK_IMPORTED_MODULE_3__.BindingWhenOnSyntax(this._binding);
    };
    BindingToSyntax.prototype.toService = function (service) {
        this.toDynamicValue(function (context) { return context.container.get(service); });
    };
    return BindingToSyntax;
}());



/***/ }),

/***/ "../../node_modules/inversify/es/syntax/binding_when_on_syntax.js":
/*!************************************************************************!*\
  !*** ../../node_modules/inversify/es/syntax/binding_when_on_syntax.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   BindingWhenOnSyntax: () => (/* binding */ BindingWhenOnSyntax)
/* harmony export */ });
/* harmony import */ var _binding_on_syntax__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./binding_on_syntax */ "../../node_modules/inversify/es/syntax/binding_on_syntax.js");
/* harmony import */ var _binding_when_syntax__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./binding_when_syntax */ "../../node_modules/inversify/es/syntax/binding_when_syntax.js");


var BindingWhenOnSyntax = (function () {
    function BindingWhenOnSyntax(binding) {
        this._binding = binding;
        this._bindingWhenSyntax = new _binding_when_syntax__WEBPACK_IMPORTED_MODULE_0__.BindingWhenSyntax(this._binding);
        this._bindingOnSyntax = new _binding_on_syntax__WEBPACK_IMPORTED_MODULE_1__.BindingOnSyntax(this._binding);
    }
    BindingWhenOnSyntax.prototype.when = function (constraint) {
        return this._bindingWhenSyntax.when(constraint);
    };
    BindingWhenOnSyntax.prototype.whenTargetNamed = function (name) {
        return this._bindingWhenSyntax.whenTargetNamed(name);
    };
    BindingWhenOnSyntax.prototype.whenTargetIsDefault = function () {
        return this._bindingWhenSyntax.whenTargetIsDefault();
    };
    BindingWhenOnSyntax.prototype.whenTargetTagged = function (tag, value) {
        return this._bindingWhenSyntax.whenTargetTagged(tag, value);
    };
    BindingWhenOnSyntax.prototype.whenInjectedInto = function (parent) {
        return this._bindingWhenSyntax.whenInjectedInto(parent);
    };
    BindingWhenOnSyntax.prototype.whenParentNamed = function (name) {
        return this._bindingWhenSyntax.whenParentNamed(name);
    };
    BindingWhenOnSyntax.prototype.whenParentTagged = function (tag, value) {
        return this._bindingWhenSyntax.whenParentTagged(tag, value);
    };
    BindingWhenOnSyntax.prototype.whenAnyAncestorIs = function (ancestor) {
        return this._bindingWhenSyntax.whenAnyAncestorIs(ancestor);
    };
    BindingWhenOnSyntax.prototype.whenNoAncestorIs = function (ancestor) {
        return this._bindingWhenSyntax.whenNoAncestorIs(ancestor);
    };
    BindingWhenOnSyntax.prototype.whenAnyAncestorNamed = function (name) {
        return this._bindingWhenSyntax.whenAnyAncestorNamed(name);
    };
    BindingWhenOnSyntax.prototype.whenAnyAncestorTagged = function (tag, value) {
        return this._bindingWhenSyntax.whenAnyAncestorTagged(tag, value);
    };
    BindingWhenOnSyntax.prototype.whenNoAncestorNamed = function (name) {
        return this._bindingWhenSyntax.whenNoAncestorNamed(name);
    };
    BindingWhenOnSyntax.prototype.whenNoAncestorTagged = function (tag, value) {
        return this._bindingWhenSyntax.whenNoAncestorTagged(tag, value);
    };
    BindingWhenOnSyntax.prototype.whenAnyAncestorMatches = function (constraint) {
        return this._bindingWhenSyntax.whenAnyAncestorMatches(constraint);
    };
    BindingWhenOnSyntax.prototype.whenNoAncestorMatches = function (constraint) {
        return this._bindingWhenSyntax.whenNoAncestorMatches(constraint);
    };
    BindingWhenOnSyntax.prototype.onActivation = function (handler) {
        return this._bindingOnSyntax.onActivation(handler);
    };
    BindingWhenOnSyntax.prototype.onDeactivation = function (handler) {
        return this._bindingOnSyntax.onDeactivation(handler);
    };
    return BindingWhenOnSyntax;
}());



/***/ }),

/***/ "../../node_modules/inversify/es/syntax/binding_when_syntax.js":
/*!*********************************************************************!*\
  !*** ../../node_modules/inversify/es/syntax/binding_when_syntax.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   BindingWhenSyntax: () => (/* binding */ BindingWhenSyntax)
/* harmony export */ });
/* harmony import */ var _binding_on_syntax__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./binding_on_syntax */ "../../node_modules/inversify/es/syntax/binding_on_syntax.js");
/* harmony import */ var _constraint_helpers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constraint_helpers */ "../../node_modules/inversify/es/syntax/constraint_helpers.js");


var BindingWhenSyntax = (function () {
    function BindingWhenSyntax(binding) {
        this._binding = binding;
    }
    BindingWhenSyntax.prototype.when = function (constraint) {
        this._binding.constraint = constraint;
        return new _binding_on_syntax__WEBPACK_IMPORTED_MODULE_0__.BindingOnSyntax(this._binding);
    };
    BindingWhenSyntax.prototype.whenTargetNamed = function (name) {
        this._binding.constraint = (0,_constraint_helpers__WEBPACK_IMPORTED_MODULE_1__.namedConstraint)(name);
        return new _binding_on_syntax__WEBPACK_IMPORTED_MODULE_0__.BindingOnSyntax(this._binding);
    };
    BindingWhenSyntax.prototype.whenTargetIsDefault = function () {
        this._binding.constraint = function (request) {
            if (request === null) {
                return false;
            }
            var targetIsDefault = (request.target !== null) &&
                (!request.target.isNamed()) &&
                (!request.target.isTagged());
            return targetIsDefault;
        };
        return new _binding_on_syntax__WEBPACK_IMPORTED_MODULE_0__.BindingOnSyntax(this._binding);
    };
    BindingWhenSyntax.prototype.whenTargetTagged = function (tag, value) {
        this._binding.constraint = (0,_constraint_helpers__WEBPACK_IMPORTED_MODULE_1__.taggedConstraint)(tag)(value);
        return new _binding_on_syntax__WEBPACK_IMPORTED_MODULE_0__.BindingOnSyntax(this._binding);
    };
    BindingWhenSyntax.prototype.whenInjectedInto = function (parent) {
        this._binding.constraint = function (request) {
            return request !== null && (0,_constraint_helpers__WEBPACK_IMPORTED_MODULE_1__.typeConstraint)(parent)(request.parentRequest);
        };
        return new _binding_on_syntax__WEBPACK_IMPORTED_MODULE_0__.BindingOnSyntax(this._binding);
    };
    BindingWhenSyntax.prototype.whenParentNamed = function (name) {
        this._binding.constraint = function (request) {
            return request !== null && (0,_constraint_helpers__WEBPACK_IMPORTED_MODULE_1__.namedConstraint)(name)(request.parentRequest);
        };
        return new _binding_on_syntax__WEBPACK_IMPORTED_MODULE_0__.BindingOnSyntax(this._binding);
    };
    BindingWhenSyntax.prototype.whenParentTagged = function (tag, value) {
        this._binding.constraint = function (request) {
            return request !== null && (0,_constraint_helpers__WEBPACK_IMPORTED_MODULE_1__.taggedConstraint)(tag)(value)(request.parentRequest);
        };
        return new _binding_on_syntax__WEBPACK_IMPORTED_MODULE_0__.BindingOnSyntax(this._binding);
    };
    BindingWhenSyntax.prototype.whenAnyAncestorIs = function (ancestor) {
        this._binding.constraint = function (request) {
            return request !== null && (0,_constraint_helpers__WEBPACK_IMPORTED_MODULE_1__.traverseAncerstors)(request, (0,_constraint_helpers__WEBPACK_IMPORTED_MODULE_1__.typeConstraint)(ancestor));
        };
        return new _binding_on_syntax__WEBPACK_IMPORTED_MODULE_0__.BindingOnSyntax(this._binding);
    };
    BindingWhenSyntax.prototype.whenNoAncestorIs = function (ancestor) {
        this._binding.constraint = function (request) {
            return request !== null && !(0,_constraint_helpers__WEBPACK_IMPORTED_MODULE_1__.traverseAncerstors)(request, (0,_constraint_helpers__WEBPACK_IMPORTED_MODULE_1__.typeConstraint)(ancestor));
        };
        return new _binding_on_syntax__WEBPACK_IMPORTED_MODULE_0__.BindingOnSyntax(this._binding);
    };
    BindingWhenSyntax.prototype.whenAnyAncestorNamed = function (name) {
        this._binding.constraint = function (request) {
            return request !== null && (0,_constraint_helpers__WEBPACK_IMPORTED_MODULE_1__.traverseAncerstors)(request, (0,_constraint_helpers__WEBPACK_IMPORTED_MODULE_1__.namedConstraint)(name));
        };
        return new _binding_on_syntax__WEBPACK_IMPORTED_MODULE_0__.BindingOnSyntax(this._binding);
    };
    BindingWhenSyntax.prototype.whenNoAncestorNamed = function (name) {
        this._binding.constraint = function (request) {
            return request !== null && !(0,_constraint_helpers__WEBPACK_IMPORTED_MODULE_1__.traverseAncerstors)(request, (0,_constraint_helpers__WEBPACK_IMPORTED_MODULE_1__.namedConstraint)(name));
        };
        return new _binding_on_syntax__WEBPACK_IMPORTED_MODULE_0__.BindingOnSyntax(this._binding);
    };
    BindingWhenSyntax.prototype.whenAnyAncestorTagged = function (tag, value) {
        this._binding.constraint = function (request) {
            return request !== null && (0,_constraint_helpers__WEBPACK_IMPORTED_MODULE_1__.traverseAncerstors)(request, (0,_constraint_helpers__WEBPACK_IMPORTED_MODULE_1__.taggedConstraint)(tag)(value));
        };
        return new _binding_on_syntax__WEBPACK_IMPORTED_MODULE_0__.BindingOnSyntax(this._binding);
    };
    BindingWhenSyntax.prototype.whenNoAncestorTagged = function (tag, value) {
        this._binding.constraint = function (request) {
            return request !== null && !(0,_constraint_helpers__WEBPACK_IMPORTED_MODULE_1__.traverseAncerstors)(request, (0,_constraint_helpers__WEBPACK_IMPORTED_MODULE_1__.taggedConstraint)(tag)(value));
        };
        return new _binding_on_syntax__WEBPACK_IMPORTED_MODULE_0__.BindingOnSyntax(this._binding);
    };
    BindingWhenSyntax.prototype.whenAnyAncestorMatches = function (constraint) {
        this._binding.constraint = function (request) {
            return request !== null && (0,_constraint_helpers__WEBPACK_IMPORTED_MODULE_1__.traverseAncerstors)(request, constraint);
        };
        return new _binding_on_syntax__WEBPACK_IMPORTED_MODULE_0__.BindingOnSyntax(this._binding);
    };
    BindingWhenSyntax.prototype.whenNoAncestorMatches = function (constraint) {
        this._binding.constraint = function (request) {
            return request !== null && !(0,_constraint_helpers__WEBPACK_IMPORTED_MODULE_1__.traverseAncerstors)(request, constraint);
        };
        return new _binding_on_syntax__WEBPACK_IMPORTED_MODULE_0__.BindingOnSyntax(this._binding);
    };
    return BindingWhenSyntax;
}());



/***/ }),

/***/ "../../node_modules/inversify/es/syntax/constraint_helpers.js":
/*!********************************************************************!*\
  !*** ../../node_modules/inversify/es/syntax/constraint_helpers.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   namedConstraint: () => (/* binding */ namedConstraint),
/* harmony export */   taggedConstraint: () => (/* binding */ taggedConstraint),
/* harmony export */   traverseAncerstors: () => (/* binding */ traverseAncerstors),
/* harmony export */   typeConstraint: () => (/* binding */ typeConstraint)
/* harmony export */ });
/* harmony import */ var _constants_metadata_keys__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../constants/metadata_keys */ "../../node_modules/inversify/es/constants/metadata_keys.js");
/* harmony import */ var _planning_metadata__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../planning/metadata */ "../../node_modules/inversify/es/planning/metadata.js");


var traverseAncerstors = function (request, constraint) {
    var parent = request.parentRequest;
    if (parent !== null) {
        return constraint(parent) ? true : traverseAncerstors(parent, constraint);
    }
    else {
        return false;
    }
};
var taggedConstraint = function (key) { return function (value) {
    var constraint = function (request) {
        return request !== null && request.target !== null && request.target.matchesTag(key)(value);
    };
    constraint.metaData = new _planning_metadata__WEBPACK_IMPORTED_MODULE_0__.Metadata(key, value);
    return constraint;
}; };
var namedConstraint = taggedConstraint(_constants_metadata_keys__WEBPACK_IMPORTED_MODULE_1__.NAMED_TAG);
var typeConstraint = function (type) { return function (request) {
    var binding = null;
    if (request !== null) {
        binding = request.bindings[0];
        if (typeof type === "string") {
            var serviceIdentifier = binding.serviceIdentifier;
            return serviceIdentifier === type;
        }
        else {
            var constructor = request.bindings[0].implementationType;
            return type === constructor;
        }
    }
    return false;
}; };



/***/ }),

/***/ "../../node_modules/inversify/es/utils/async.js":
/*!******************************************************!*\
  !*** ../../node_modules/inversify/es/utils/async.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   isPromise: () => (/* binding */ isPromise),
/* harmony export */   isPromiseOrContainsPromise: () => (/* binding */ isPromiseOrContainsPromise)
/* harmony export */ });
function isPromise(object) {
    var isObjectOrFunction = (typeof object === 'object' && object !== null) || typeof object === 'function';
    return isObjectOrFunction && typeof object.then === "function";
}
function isPromiseOrContainsPromise(object) {
    if (isPromise(object)) {
        return true;
    }
    return Array.isArray(object) && object.some(isPromise);
}



/***/ }),

/***/ "../../node_modules/inversify/es/utils/binding_utils.js":
/*!**************************************************************!*\
  !*** ../../node_modules/inversify/es/utils/binding_utils.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ensureFullyBound: () => (/* binding */ ensureFullyBound),
/* harmony export */   getFactoryDetails: () => (/* binding */ getFactoryDetails),
/* harmony export */   multiBindToService: () => (/* binding */ multiBindToService)
/* harmony export */ });
/* harmony import */ var _inversify__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../inversify */ "../../node_modules/inversify/es/utils/serialization.js");
/* harmony import */ var _constants_error_msgs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../constants/error_msgs */ "../../node_modules/inversify/es/constants/error_msgs.js");
/* harmony import */ var _constants_literal_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../constants/literal_types */ "../../node_modules/inversify/es/constants/literal_types.js");
/* harmony import */ var _factory_type__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./factory_type */ "../../node_modules/inversify/es/utils/factory_type.js");




var multiBindToService = function (container) {
    return function (service) {
        return function () {
            var types = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                types[_i] = arguments[_i];
            }
            return types.forEach(function (t) { return container.bind(t).toService(service); });
        };
    };
};
var ensureFullyBound = function (binding) {
    var boundValue = null;
    switch (binding.type) {
        case _constants_literal_types__WEBPACK_IMPORTED_MODULE_0__.BindingTypeEnum.ConstantValue:
        case _constants_literal_types__WEBPACK_IMPORTED_MODULE_0__.BindingTypeEnum.Function:
            boundValue = binding.cache;
            break;
        case _constants_literal_types__WEBPACK_IMPORTED_MODULE_0__.BindingTypeEnum.Constructor:
        case _constants_literal_types__WEBPACK_IMPORTED_MODULE_0__.BindingTypeEnum.Instance:
            boundValue = binding.implementationType;
            break;
        case _constants_literal_types__WEBPACK_IMPORTED_MODULE_0__.BindingTypeEnum.DynamicValue:
            boundValue = binding.dynamicValue;
            break;
        case _constants_literal_types__WEBPACK_IMPORTED_MODULE_0__.BindingTypeEnum.Provider:
            boundValue = binding.provider;
            break;
        case _constants_literal_types__WEBPACK_IMPORTED_MODULE_0__.BindingTypeEnum.Factory:
            boundValue = binding.factory;
            break;
    }
    if (boundValue === null) {
        var serviceIdentifierAsString = (0,_inversify__WEBPACK_IMPORTED_MODULE_1__.getServiceIdentifierAsString)(binding.serviceIdentifier);
        throw new Error(_constants_error_msgs__WEBPACK_IMPORTED_MODULE_2__.INVALID_BINDING_TYPE + " " + serviceIdentifierAsString);
    }
};
var getFactoryDetails = function (binding) {
    switch (binding.type) {
        case _constants_literal_types__WEBPACK_IMPORTED_MODULE_0__.BindingTypeEnum.Factory:
            return { factory: binding.factory, factoryType: _factory_type__WEBPACK_IMPORTED_MODULE_3__.FactoryType.Factory };
        case _constants_literal_types__WEBPACK_IMPORTED_MODULE_0__.BindingTypeEnum.Provider:
            return { factory: binding.provider, factoryType: _factory_type__WEBPACK_IMPORTED_MODULE_3__.FactoryType.Provider };
        case _constants_literal_types__WEBPACK_IMPORTED_MODULE_0__.BindingTypeEnum.DynamicValue:
            return { factory: binding.dynamicValue, factoryType: _factory_type__WEBPACK_IMPORTED_MODULE_3__.FactoryType.DynamicValue };
        default:
            throw new Error("Unexpected factory type " + binding.type);
    }
};


/***/ }),

/***/ "../../node_modules/inversify/es/utils/clonable.js":
/*!*********************************************************!*\
  !*** ../../node_modules/inversify/es/utils/clonable.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   isClonable: () => (/* binding */ isClonable)
/* harmony export */ });
function isClonable(obj) {
    return (typeof obj === 'object')
        && (obj !== null)
        && ('clone' in obj)
        && typeof obj.clone === 'function';
}



/***/ }),

/***/ "../../node_modules/inversify/es/utils/exceptions.js":
/*!***********************************************************!*\
  !*** ../../node_modules/inversify/es/utils/exceptions.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   isStackOverflowExeption: () => (/* binding */ isStackOverflowExeption),
/* harmony export */   tryAndThrowErrorIfStackOverflow: () => (/* binding */ tryAndThrowErrorIfStackOverflow)
/* harmony export */ });
/* harmony import */ var _constants_error_msgs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../constants/error_msgs */ "../../node_modules/inversify/es/constants/error_msgs.js");

function isStackOverflowExeption(error) {
    return (error instanceof RangeError ||
        error.message === _constants_error_msgs__WEBPACK_IMPORTED_MODULE_0__.STACK_OVERFLOW);
}
var tryAndThrowErrorIfStackOverflow = function (fn, errorCallback) {
    try {
        return fn();
    }
    catch (error) {
        if (isStackOverflowExeption(error)) {
            error = errorCallback();
        }
        throw error;
    }
};


/***/ }),

/***/ "../../node_modules/inversify/es/utils/factory_type.js":
/*!*************************************************************!*\
  !*** ../../node_modules/inversify/es/utils/factory_type.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   FactoryType: () => (/* binding */ FactoryType)
/* harmony export */ });
var FactoryType;
(function (FactoryType) {
    FactoryType["DynamicValue"] = "toDynamicValue";
    FactoryType["Factory"] = "toFactory";
    FactoryType["Provider"] = "toProvider";
})(FactoryType || (FactoryType = {}));


/***/ }),

/***/ "../../node_modules/inversify/es/utils/id.js":
/*!***************************************************!*\
  !*** ../../node_modules/inversify/es/utils/id.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   id: () => (/* binding */ id)
/* harmony export */ });
var idCounter = 0;
function id() {
    return idCounter++;
}



/***/ }),

/***/ "../../node_modules/inversify/es/utils/js.js":
/*!***************************************************!*\
  !*** ../../node_modules/inversify/es/utils/js.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getFirstArrayDuplicate: () => (/* binding */ getFirstArrayDuplicate)
/* harmony export */ });
function getFirstArrayDuplicate(array) {
    var seenValues = new Set();
    for (var _i = 0, array_1 = array; _i < array_1.length; _i++) {
        var entry = array_1[_i];
        if (seenValues.has(entry)) {
            return entry;
        }
        else {
            seenValues.add(entry);
        }
    }
    return undefined;
}


/***/ }),

/***/ "../../node_modules/inversify/es/utils/serialization.js":
/*!**************************************************************!*\
  !*** ../../node_modules/inversify/es/utils/serialization.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   circularDependencyToException: () => (/* binding */ circularDependencyToException),
/* harmony export */   getFunctionName: () => (/* binding */ getFunctionName),
/* harmony export */   getServiceIdentifierAsString: () => (/* binding */ getServiceIdentifierAsString),
/* harmony export */   getSymbolDescription: () => (/* binding */ getSymbolDescription),
/* harmony export */   listMetadataForTarget: () => (/* binding */ listMetadataForTarget),
/* harmony export */   listRegisteredBindingsForServiceIdentifier: () => (/* binding */ listRegisteredBindingsForServiceIdentifier)
/* harmony export */ });
/* harmony import */ var _constants_error_msgs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../constants/error_msgs */ "../../node_modules/inversify/es/constants/error_msgs.js");

function getServiceIdentifierAsString(serviceIdentifier) {
    if (typeof serviceIdentifier === "function") {
        var _serviceIdentifier = serviceIdentifier;
        return _serviceIdentifier.name;
    }
    else if (typeof serviceIdentifier === "symbol") {
        return serviceIdentifier.toString();
    }
    else {
        var _serviceIdentifier = serviceIdentifier;
        return _serviceIdentifier;
    }
}
function listRegisteredBindingsForServiceIdentifier(container, serviceIdentifier, getBindings) {
    var registeredBindingsList = "";
    var registeredBindings = getBindings(container, serviceIdentifier);
    if (registeredBindings.length !== 0) {
        registeredBindingsList = "\nRegistered bindings:";
        registeredBindings.forEach(function (binding) {
            var name = "Object";
            if (binding.implementationType !== null) {
                name = getFunctionName(binding.implementationType);
            }
            registeredBindingsList = registeredBindingsList + "\n " + name;
            if (binding.constraint.metaData) {
                registeredBindingsList = registeredBindingsList + " - " + binding.constraint.metaData;
            }
        });
    }
    return registeredBindingsList;
}
function alreadyDependencyChain(request, serviceIdentifier) {
    if (request.parentRequest === null) {
        return false;
    }
    else if (request.parentRequest.serviceIdentifier === serviceIdentifier) {
        return true;
    }
    else {
        return alreadyDependencyChain(request.parentRequest, serviceIdentifier);
    }
}
function dependencyChainToString(request) {
    function _createStringArr(req, result) {
        if (result === void 0) { result = []; }
        var serviceIdentifier = getServiceIdentifierAsString(req.serviceIdentifier);
        result.push(serviceIdentifier);
        if (req.parentRequest !== null) {
            return _createStringArr(req.parentRequest, result);
        }
        return result;
    }
    var stringArr = _createStringArr(request);
    return stringArr.reverse().join(" --> ");
}
function circularDependencyToException(request) {
    request.childRequests.forEach(function (childRequest) {
        if (alreadyDependencyChain(childRequest, childRequest.serviceIdentifier)) {
            var services = dependencyChainToString(childRequest);
            throw new Error(_constants_error_msgs__WEBPACK_IMPORTED_MODULE_0__.CIRCULAR_DEPENDENCY + " " + services);
        }
        else {
            circularDependencyToException(childRequest);
        }
    });
}
function listMetadataForTarget(serviceIdentifierString, target) {
    if (target.isTagged() || target.isNamed()) {
        var m_1 = "";
        var namedTag = target.getNamedTag();
        var otherTags = target.getCustomTags();
        if (namedTag !== null) {
            m_1 += namedTag.toString() + "\n";
        }
        if (otherTags !== null) {
            otherTags.forEach(function (tag) {
                m_1 += tag.toString() + "\n";
            });
        }
        return " " + serviceIdentifierString + "\n " + serviceIdentifierString + " - " + m_1;
    }
    else {
        return " " + serviceIdentifierString;
    }
}
function getFunctionName(func) {
    if (func.name) {
        return func.name;
    }
    else {
        var name_1 = func.toString();
        var match = name_1.match(/^function\s*([^\s(]+)/);
        return match ? match[1] : "Anonymous function: " + name_1;
    }
}
function getSymbolDescription(symbol) {
    return symbol.toString().slice(7, -1);
}



/***/ }),

/***/ "../../node_modules/lodash/lodash.js":
/*!*******************************************!*\
  !*** ../../node_modules/lodash/lodash.js ***!
  \*******************************************/
/***/ (function(module, exports, __webpack_require__) {

/* module decorator */ module = __webpack_require__.nmd(module);
var __WEBPACK_AMD_DEFINE_RESULT__;/**
 * @license
 * Lodash <https://lodash.com/>
 * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */
;(function() {

  /** Used as a safe reference for `undefined` in pre-ES5 environments. */
  var undefined;

  /** Used as the semantic version number. */
  var VERSION = '4.17.21';

  /** Used as the size to enable large array optimizations. */
  var LARGE_ARRAY_SIZE = 200;

  /** Error message constants. */
  var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.',
      FUNC_ERROR_TEXT = 'Expected a function',
      INVALID_TEMPL_VAR_ERROR_TEXT = 'Invalid `variable` option passed into `_.template`';

  /** Used to stand-in for `undefined` hash values. */
  var HASH_UNDEFINED = '__lodash_hash_undefined__';

  /** Used as the maximum memoize cache size. */
  var MAX_MEMOIZE_SIZE = 500;

  /** Used as the internal argument placeholder. */
  var PLACEHOLDER = '__lodash_placeholder__';

  /** Used to compose bitmasks for cloning. */
  var CLONE_DEEP_FLAG = 1,
      CLONE_FLAT_FLAG = 2,
      CLONE_SYMBOLS_FLAG = 4;

  /** Used to compose bitmasks for value comparisons. */
  var COMPARE_PARTIAL_FLAG = 1,
      COMPARE_UNORDERED_FLAG = 2;

  /** Used to compose bitmasks for function metadata. */
  var WRAP_BIND_FLAG = 1,
      WRAP_BIND_KEY_FLAG = 2,
      WRAP_CURRY_BOUND_FLAG = 4,
      WRAP_CURRY_FLAG = 8,
      WRAP_CURRY_RIGHT_FLAG = 16,
      WRAP_PARTIAL_FLAG = 32,
      WRAP_PARTIAL_RIGHT_FLAG = 64,
      WRAP_ARY_FLAG = 128,
      WRAP_REARG_FLAG = 256,
      WRAP_FLIP_FLAG = 512;

  /** Used as default options for `_.truncate`. */
  var DEFAULT_TRUNC_LENGTH = 30,
      DEFAULT_TRUNC_OMISSION = '...';

  /** Used to detect hot functions by number of calls within a span of milliseconds. */
  var HOT_COUNT = 800,
      HOT_SPAN = 16;

  /** Used to indicate the type of lazy iteratees. */
  var LAZY_FILTER_FLAG = 1,
      LAZY_MAP_FLAG = 2,
      LAZY_WHILE_FLAG = 3;

  /** Used as references for various `Number` constants. */
  var INFINITY = 1 / 0,
      MAX_SAFE_INTEGER = 9007199254740991,
      MAX_INTEGER = 1.7976931348623157e+308,
      NAN = 0 / 0;

  /** Used as references for the maximum length and index of an array. */
  var MAX_ARRAY_LENGTH = 4294967295,
      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,
      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;

  /** Used to associate wrap methods with their bit flags. */
  var wrapFlags = [
    ['ary', WRAP_ARY_FLAG],
    ['bind', WRAP_BIND_FLAG],
    ['bindKey', WRAP_BIND_KEY_FLAG],
    ['curry', WRAP_CURRY_FLAG],
    ['curryRight', WRAP_CURRY_RIGHT_FLAG],
    ['flip', WRAP_FLIP_FLAG],
    ['partial', WRAP_PARTIAL_FLAG],
    ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],
    ['rearg', WRAP_REARG_FLAG]
  ];

  /** `Object#toString` result references. */
  var argsTag = '[object Arguments]',
      arrayTag = '[object Array]',
      asyncTag = '[object AsyncFunction]',
      boolTag = '[object Boolean]',
      dateTag = '[object Date]',
      domExcTag = '[object DOMException]',
      errorTag = '[object Error]',
      funcTag = '[object Function]',
      genTag = '[object GeneratorFunction]',
      mapTag = '[object Map]',
      numberTag = '[object Number]',
      nullTag = '[object Null]',
      objectTag = '[object Object]',
      promiseTag = '[object Promise]',
      proxyTag = '[object Proxy]',
      regexpTag = '[object RegExp]',
      setTag = '[object Set]',
      stringTag = '[object String]',
      symbolTag = '[object Symbol]',
      undefinedTag = '[object Undefined]',
      weakMapTag = '[object WeakMap]',
      weakSetTag = '[object WeakSet]';

  var arrayBufferTag = '[object ArrayBuffer]',
      dataViewTag = '[object DataView]',
      float32Tag = '[object Float32Array]',
      float64Tag = '[object Float64Array]',
      int8Tag = '[object Int8Array]',
      int16Tag = '[object Int16Array]',
      int32Tag = '[object Int32Array]',
      uint8Tag = '[object Uint8Array]',
      uint8ClampedTag = '[object Uint8ClampedArray]',
      uint16Tag = '[object Uint16Array]',
      uint32Tag = '[object Uint32Array]';

  /** Used to match empty string literals in compiled template source. */
  var reEmptyStringLeading = /\b__p \+= '';/g,
      reEmptyStringMiddle = /\b(__p \+=) '' \+/g,
      reEmptyStringTrailing = /(__e\(.*?\)|\b__t\)) \+\n'';/g;

  /** Used to match HTML entities and HTML characters. */
  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,
      reUnescapedHtml = /[&<>"']/g,
      reHasEscapedHtml = RegExp(reEscapedHtml.source),
      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);

  /** Used to match template delimiters. */
  var reEscape = /<%-([\s\S]+?)%>/g,
      reEvaluate = /<%([\s\S]+?)%>/g,
      reInterpolate = /<%=([\s\S]+?)%>/g;

  /** Used to match property names within property paths. */
  var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
      reIsPlainProp = /^\w*$/,
      rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;

  /**
   * Used to match `RegExp`
   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
   */
  var reRegExpChar = /[\\^$.*+?()[\]{}|]/g,
      reHasRegExpChar = RegExp(reRegExpChar.source);

  /** Used to match leading whitespace. */
  var reTrimStart = /^\s+/;

  /** Used to match a single whitespace character. */
  var reWhitespace = /\s/;

  /** Used to match wrap detail comments. */
  var reWrapComment = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/,
      reWrapDetails = /\{\n\/\* \[wrapped with (.+)\] \*/,
      reSplitDetails = /,? & /;

  /** Used to match words composed of alphanumeric characters. */
  var reAsciiWord = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g;

  /**
   * Used to validate the `validate` option in `_.template` variable.
   *
   * Forbids characters which could potentially change the meaning of the function argument definition:
   * - "()," (modification of function parameters)
   * - "=" (default value)
   * - "[]{}" (destructuring of function parameters)
   * - "/" (beginning of a comment)
   * - whitespace
   */
  var reForbiddenIdentifierChars = /[()=,{}\[\]\/\s]/;

  /** Used to match backslashes in property paths. */
  var reEscapeChar = /\\(\\)?/g;

  /**
   * Used to match
   * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).
   */
  var reEsTemplate = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g;

  /** Used to match `RegExp` flags from their coerced string values. */
  var reFlags = /\w*$/;

  /** Used to detect bad signed hexadecimal string values. */
  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;

  /** Used to detect binary string values. */
  var reIsBinary = /^0b[01]+$/i;

  /** Used to detect host constructors (Safari). */
  var reIsHostCtor = /^\[object .+?Constructor\]$/;

  /** Used to detect octal string values. */
  var reIsOctal = /^0o[0-7]+$/i;

  /** Used to detect unsigned integer values. */
  var reIsUint = /^(?:0|[1-9]\d*)$/;

  /** Used to match Latin Unicode letters (excluding mathematical operators). */
  var reLatin = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g;

  /** Used to ensure capturing order of template delimiters. */
  var reNoMatch = /($^)/;

  /** Used to match unescaped characters in compiled string literals. */
  var reUnescapedString = /['\n\r\u2028\u2029\\]/g;

  /** Used to compose unicode character classes. */
  var rsAstralRange = '\\ud800-\\udfff',
      rsComboMarksRange = '\\u0300-\\u036f',
      reComboHalfMarksRange = '\\ufe20-\\ufe2f',
      rsComboSymbolsRange = '\\u20d0-\\u20ff',
      rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,
      rsDingbatRange = '\\u2700-\\u27bf',
      rsLowerRange = 'a-z\\xdf-\\xf6\\xf8-\\xff',
      rsMathOpRange = '\\xac\\xb1\\xd7\\xf7',
      rsNonCharRange = '\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf',
      rsPunctuationRange = '\\u2000-\\u206f',
      rsSpaceRange = ' \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000',
      rsUpperRange = 'A-Z\\xc0-\\xd6\\xd8-\\xde',
      rsVarRange = '\\ufe0e\\ufe0f',
      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;

  /** Used to compose unicode capture groups. */
  var rsApos = "['\u2019]",
      rsAstral = '[' + rsAstralRange + ']',
      rsBreak = '[' + rsBreakRange + ']',
      rsCombo = '[' + rsComboRange + ']',
      rsDigits = '\\d+',
      rsDingbat = '[' + rsDingbatRange + ']',
      rsLower = '[' + rsLowerRange + ']',
      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',
      rsFitz = '\\ud83c[\\udffb-\\udfff]',
      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',
      rsNonAstral = '[^' + rsAstralRange + ']',
      rsRegional = '(?:\\ud83c[\\udde6-\\uddff]){2}',
      rsSurrPair = '[\\ud800-\\udbff][\\udc00-\\udfff]',
      rsUpper = '[' + rsUpperRange + ']',
      rsZWJ = '\\u200d';

  /** Used to compose unicode regexes. */
  var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',
      rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',
      rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',
      rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',
      reOptMod = rsModifier + '?',
      rsOptVar = '[' + rsVarRange + ']?',
      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',
      rsOrdLower = '\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])',
      rsOrdUpper = '\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])',
      rsSeq = rsOptVar + reOptMod + rsOptJoin,
      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,
      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';

  /** Used to match apostrophes. */
  var reApos = RegExp(rsApos, 'g');

  /**
   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and
   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).
   */
  var reComboMark = RegExp(rsCombo, 'g');

  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */
  var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');

  /** Used to match complex or compound words. */
  var reUnicodeWord = RegExp([
    rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',
    rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',
    rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,
    rsUpper + '+' + rsOptContrUpper,
    rsOrdUpper,
    rsOrdLower,
    rsDigits,
    rsEmoji
  ].join('|'), 'g');

  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */
  var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');

  /** Used to detect strings that need a more robust regexp to match words. */
  var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;

  /** Used to assign default `context` object properties. */
  var contextProps = [
    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',
    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',
    'Promise', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array',
    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',
    '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'
  ];

  /** Used to make template sourceURLs easier to identify. */
  var templateCounter = -1;

  /** Used to identify `toStringTag` values of typed arrays. */
  var typedArrayTags = {};
  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =
  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =
  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =
  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =
  typedArrayTags[uint32Tag] = true;
  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =
  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =
  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =
  typedArrayTags[errorTag] = typedArrayTags[funcTag] =
  typedArrayTags[mapTag] = typedArrayTags[numberTag] =
  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =
  typedArrayTags[setTag] = typedArrayTags[stringTag] =
  typedArrayTags[weakMapTag] = false;

  /** Used to identify `toStringTag` values supported by `_.clone`. */
  var cloneableTags = {};
  cloneableTags[argsTag] = cloneableTags[arrayTag] =
  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =
  cloneableTags[boolTag] = cloneableTags[dateTag] =
  cloneableTags[float32Tag] = cloneableTags[float64Tag] =
  cloneableTags[int8Tag] = cloneableTags[int16Tag] =
  cloneableTags[int32Tag] = cloneableTags[mapTag] =
  cloneableTags[numberTag] = cloneableTags[objectTag] =
  cloneableTags[regexpTag] = cloneableTags[setTag] =
  cloneableTags[stringTag] = cloneableTags[symbolTag] =
  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =
  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
  cloneableTags[errorTag] = cloneableTags[funcTag] =
  cloneableTags[weakMapTag] = false;

  /** Used to map Latin Unicode letters to basic Latin letters. */
  var deburredLetters = {
    // Latin-1 Supplement block.
    '\xc0': 'A',  '\xc1': 'A', '\xc2': 'A', '\xc3': 'A', '\xc4': 'A', '\xc5': 'A',
    '\xe0': 'a',  '\xe1': 'a', '\xe2': 'a', '\xe3': 'a', '\xe4': 'a', '\xe5': 'a',
    '\xc7': 'C',  '\xe7': 'c',
    '\xd0': 'D',  '\xf0': 'd',
    '\xc8': 'E',  '\xc9': 'E', '\xca': 'E', '\xcb': 'E',
    '\xe8': 'e',  '\xe9': 'e', '\xea': 'e', '\xeb': 'e',
    '\xcc': 'I',  '\xcd': 'I', '\xce': 'I', '\xcf': 'I',
    '\xec': 'i',  '\xed': 'i', '\xee': 'i', '\xef': 'i',
    '\xd1': 'N',  '\xf1': 'n',
    '\xd2': 'O',  '\xd3': 'O', '\xd4': 'O', '\xd5': 'O', '\xd6': 'O', '\xd8': 'O',
    '\xf2': 'o',  '\xf3': 'o', '\xf4': 'o', '\xf5': 'o', '\xf6': 'o', '\xf8': 'o',
    '\xd9': 'U',  '\xda': 'U', '\xdb': 'U', '\xdc': 'U',
    '\xf9': 'u',  '\xfa': 'u', '\xfb': 'u', '\xfc': 'u',
    '\xdd': 'Y',  '\xfd': 'y', '\xff': 'y',
    '\xc6': 'Ae', '\xe6': 'ae',
    '\xde': 'Th', '\xfe': 'th',
    '\xdf': 'ss',
    // Latin Extended-A block.
    '\u0100': 'A',  '\u0102': 'A', '\u0104': 'A',
    '\u0101': 'a',  '\u0103': 'a', '\u0105': 'a',
    '\u0106': 'C',  '\u0108': 'C', '\u010a': 'C', '\u010c': 'C',
    '\u0107': 'c',  '\u0109': 'c', '\u010b': 'c', '\u010d': 'c',
    '\u010e': 'D',  '\u0110': 'D', '\u010f': 'd', '\u0111': 'd',
    '\u0112': 'E',  '\u0114': 'E', '\u0116': 'E', '\u0118': 'E', '\u011a': 'E',
    '\u0113': 'e',  '\u0115': 'e', '\u0117': 'e', '\u0119': 'e', '\u011b': 'e',
    '\u011c': 'G',  '\u011e': 'G', '\u0120': 'G', '\u0122': 'G',
    '\u011d': 'g',  '\u011f': 'g', '\u0121': 'g', '\u0123': 'g',
    '\u0124': 'H',  '\u0126': 'H', '\u0125': 'h', '\u0127': 'h',
    '\u0128': 'I',  '\u012a': 'I', '\u012c': 'I', '\u012e': 'I', '\u0130': 'I',
    '\u0129': 'i',  '\u012b': 'i', '\u012d': 'i', '\u012f': 'i', '\u0131': 'i',
    '\u0134': 'J',  '\u0135': 'j',
    '\u0136': 'K',  '\u0137': 'k', '\u0138': 'k',
    '\u0139': 'L',  '\u013b': 'L', '\u013d': 'L', '\u013f': 'L', '\u0141': 'L',
    '\u013a': 'l',  '\u013c': 'l', '\u013e': 'l', '\u0140': 'l', '\u0142': 'l',
    '\u0143': 'N',  '\u0145': 'N', '\u0147': 'N', '\u014a': 'N',
    '\u0144': 'n',  '\u0146': 'n', '\u0148': 'n', '\u014b': 'n',
    '\u014c': 'O',  '\u014e': 'O', '\u0150': 'O',
    '\u014d': 'o',  '\u014f': 'o', '\u0151': 'o',
    '\u0154': 'R',  '\u0156': 'R', '\u0158': 'R',
    '\u0155': 'r',  '\u0157': 'r', '\u0159': 'r',
    '\u015a': 'S',  '\u015c': 'S', '\u015e': 'S', '\u0160': 'S',
    '\u015b': 's',  '\u015d': 's', '\u015f': 's', '\u0161': 's',
    '\u0162': 'T',  '\u0164': 'T', '\u0166': 'T',
    '\u0163': 't',  '\u0165': 't', '\u0167': 't',
    '\u0168': 'U',  '\u016a': 'U', '\u016c': 'U', '\u016e': 'U', '\u0170': 'U', '\u0172': 'U',
    '\u0169': 'u',  '\u016b': 'u', '\u016d': 'u', '\u016f': 'u', '\u0171': 'u', '\u0173': 'u',
    '\u0174': 'W',  '\u0175': 'w',
    '\u0176': 'Y',  '\u0177': 'y', '\u0178': 'Y',
    '\u0179': 'Z',  '\u017b': 'Z', '\u017d': 'Z',
    '\u017a': 'z',  '\u017c': 'z', '\u017e': 'z',
    '\u0132': 'IJ', '\u0133': 'ij',
    '\u0152': 'Oe', '\u0153': 'oe',
    '\u0149': "'n", '\u017f': 's'
  };

  /** Used to map characters to HTML entities. */
  var htmlEscapes = {
    '&': '&amp;',
    '<': '&lt;',
    '>': '&gt;',
    '"': '&quot;',
    "'": '&#39;'
  };

  /** Used to map HTML entities to characters. */
  var htmlUnescapes = {
    '&amp;': '&',
    '&lt;': '<',
    '&gt;': '>',
    '&quot;': '"',
    '&#39;': "'"
  };

  /** Used to escape characters for inclusion in compiled string literals. */
  var stringEscapes = {
    '\\': '\\',
    "'": "'",
    '\n': 'n',
    '\r': 'r',
    '\u2028': 'u2028',
    '\u2029': 'u2029'
  };

  /** Built-in method references without a dependency on `root`. */
  var freeParseFloat = parseFloat,
      freeParseInt = parseInt;

  /** Detect free variable `global` from Node.js. */
  var freeGlobal = typeof __webpack_require__.g == 'object' && __webpack_require__.g && __webpack_require__.g.Object === Object && __webpack_require__.g;

  /** Detect free variable `self`. */
  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

  /** Used as a reference to the global object. */
  var root = freeGlobal || freeSelf || Function('return this')();

  /** Detect free variable `exports`. */
  var freeExports =  true && exports && !exports.nodeType && exports;

  /** Detect free variable `module`. */
  var freeModule = freeExports && "object" == 'object' && module && !module.nodeType && module;

  /** Detect the popular CommonJS extension `module.exports`. */
  var moduleExports = freeModule && freeModule.exports === freeExports;

  /** Detect free variable `process` from Node.js. */
  var freeProcess = moduleExports && freeGlobal.process;

  /** Used to access faster Node.js helpers. */
  var nodeUtil = (function() {
    try {
      // Use `util.types` for Node.js 10+.
      var types = freeModule && freeModule.require && freeModule.require('util').types;

      if (types) {
        return types;
      }

      // Legacy `process.binding('util')` for Node.js < 10.
      return freeProcess && freeProcess.binding && freeProcess.binding('util');
    } catch (e) {}
  }());

  /* Node.js helper references. */
  var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,
      nodeIsDate = nodeUtil && nodeUtil.isDate,
      nodeIsMap = nodeUtil && nodeUtil.isMap,
      nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,
      nodeIsSet = nodeUtil && nodeUtil.isSet,
      nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;

  /*--------------------------------------------------------------------------*/

  /**
   * A faster alternative to `Function#apply`, this function invokes `func`
   * with the `this` binding of `thisArg` and the arguments of `args`.
   *
   * @private
   * @param {Function} func The function to invoke.
   * @param {*} thisArg The `this` binding of `func`.
   * @param {Array} args The arguments to invoke `func` with.
   * @returns {*} Returns the result of `func`.
   */
  function apply(func, thisArg, args) {
    switch (args.length) {
      case 0: return func.call(thisArg);
      case 1: return func.call(thisArg, args[0]);
      case 2: return func.call(thisArg, args[0], args[1]);
      case 3: return func.call(thisArg, args[0], args[1], args[2]);
    }
    return func.apply(thisArg, args);
  }

  /**
   * A specialized version of `baseAggregator` for arrays.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} setter The function to set `accumulator` values.
   * @param {Function} iteratee The iteratee to transform keys.
   * @param {Object} accumulator The initial aggregated object.
   * @returns {Function} Returns `accumulator`.
   */
  function arrayAggregator(array, setter, iteratee, accumulator) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      var value = array[index];
      setter(accumulator, value, iteratee(value), array);
    }
    return accumulator;
  }

  /**
   * A specialized version of `_.forEach` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns `array`.
   */
  function arrayEach(array, iteratee) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (iteratee(array[index], index, array) === false) {
        break;
      }
    }
    return array;
  }

  /**
   * A specialized version of `_.forEachRight` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns `array`.
   */
  function arrayEachRight(array, iteratee) {
    var length = array == null ? 0 : array.length;

    while (length--) {
      if (iteratee(array[length], length, array) === false) {
        break;
      }
    }
    return array;
  }

  /**
   * A specialized version of `_.every` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} predicate The function invoked per iteration.
   * @returns {boolean} Returns `true` if all elements pass the predicate check,
   *  else `false`.
   */
  function arrayEvery(array, predicate) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (!predicate(array[index], index, array)) {
        return false;
      }
    }
    return true;
  }

  /**
   * A specialized version of `_.filter` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} predicate The function invoked per iteration.
   * @returns {Array} Returns the new filtered array.
   */
  function arrayFilter(array, predicate) {
    var index = -1,
        length = array == null ? 0 : array.length,
        resIndex = 0,
        result = [];

    while (++index < length) {
      var value = array[index];
      if (predicate(value, index, array)) {
        result[resIndex++] = value;
      }
    }
    return result;
  }

  /**
   * A specialized version of `_.includes` for arrays without support for
   * specifying an index to search from.
   *
   * @private
   * @param {Array} [array] The array to inspect.
   * @param {*} target The value to search for.
   * @returns {boolean} Returns `true` if `target` is found, else `false`.
   */
  function arrayIncludes(array, value) {
    var length = array == null ? 0 : array.length;
    return !!length && baseIndexOf(array, value, 0) > -1;
  }

  /**
   * This function is like `arrayIncludes` except that it accepts a comparator.
   *
   * @private
   * @param {Array} [array] The array to inspect.
   * @param {*} target The value to search for.
   * @param {Function} comparator The comparator invoked per element.
   * @returns {boolean} Returns `true` if `target` is found, else `false`.
   */
  function arrayIncludesWith(array, value, comparator) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (comparator(value, array[index])) {
        return true;
      }
    }
    return false;
  }

  /**
   * A specialized version of `_.map` for arrays without support for iteratee
   * shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns the new mapped array.
   */
  function arrayMap(array, iteratee) {
    var index = -1,
        length = array == null ? 0 : array.length,
        result = Array(length);

    while (++index < length) {
      result[index] = iteratee(array[index], index, array);
    }
    return result;
  }

  /**
   * Appends the elements of `values` to `array`.
   *
   * @private
   * @param {Array} array The array to modify.
   * @param {Array} values The values to append.
   * @returns {Array} Returns `array`.
   */
  function arrayPush(array, values) {
    var index = -1,
        length = values.length,
        offset = array.length;

    while (++index < length) {
      array[offset + index] = values[index];
    }
    return array;
  }

  /**
   * A specialized version of `_.reduce` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @param {*} [accumulator] The initial value.
   * @param {boolean} [initAccum] Specify using the first element of `array` as
   *  the initial value.
   * @returns {*} Returns the accumulated value.
   */
  function arrayReduce(array, iteratee, accumulator, initAccum) {
    var index = -1,
        length = array == null ? 0 : array.length;

    if (initAccum && length) {
      accumulator = array[++index];
    }
    while (++index < length) {
      accumulator = iteratee(accumulator, array[index], index, array);
    }
    return accumulator;
  }

  /**
   * A specialized version of `_.reduceRight` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @param {*} [accumulator] The initial value.
   * @param {boolean} [initAccum] Specify using the last element of `array` as
   *  the initial value.
   * @returns {*} Returns the accumulated value.
   */
  function arrayReduceRight(array, iteratee, accumulator, initAccum) {
    var length = array == null ? 0 : array.length;
    if (initAccum && length) {
      accumulator = array[--length];
    }
    while (length--) {
      accumulator = iteratee(accumulator, array[length], length, array);
    }
    return accumulator;
  }

  /**
   * A specialized version of `_.some` for arrays without support for iteratee
   * shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} predicate The function invoked per iteration.
   * @returns {boolean} Returns `true` if any element passes the predicate check,
   *  else `false`.
   */
  function arraySome(array, predicate) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (predicate(array[index], index, array)) {
        return true;
      }
    }
    return false;
  }

  /**
   * Gets the size of an ASCII `string`.
   *
   * @private
   * @param {string} string The string inspect.
   * @returns {number} Returns the string size.
   */
  var asciiSize = baseProperty('length');

  /**
   * Converts an ASCII `string` to an array.
   *
   * @private
   * @param {string} string The string to convert.
   * @returns {Array} Returns the converted array.
   */
  function asciiToArray(string) {
    return string.split('');
  }

  /**
   * Splits an ASCII `string` into an array of its words.
   *
   * @private
   * @param {string} The string to inspect.
   * @returns {Array} Returns the words of `string`.
   */
  function asciiWords(string) {
    return string.match(reAsciiWord) || [];
  }

  /**
   * The base implementation of methods like `_.findKey` and `_.findLastKey`,
   * without support for iteratee shorthands, which iterates over `collection`
   * using `eachFunc`.
   *
   * @private
   * @param {Array|Object} collection The collection to inspect.
   * @param {Function} predicate The function invoked per iteration.
   * @param {Function} eachFunc The function to iterate over `collection`.
   * @returns {*} Returns the found element or its key, else `undefined`.
   */
  function baseFindKey(collection, predicate, eachFunc) {
    var result;
    eachFunc(collection, function(value, key, collection) {
      if (predicate(value, key, collection)) {
        result = key;
        return false;
      }
    });
    return result;
  }

  /**
   * The base implementation of `_.findIndex` and `_.findLastIndex` without
   * support for iteratee shorthands.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {Function} predicate The function invoked per iteration.
   * @param {number} fromIndex The index to search from.
   * @param {boolean} [fromRight] Specify iterating from right to left.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function baseFindIndex(array, predicate, fromIndex, fromRight) {
    var length = array.length,
        index = fromIndex + (fromRight ? 1 : -1);

    while ((fromRight ? index-- : ++index < length)) {
      if (predicate(array[index], index, array)) {
        return index;
      }
    }
    return -1;
  }

  /**
   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function baseIndexOf(array, value, fromIndex) {
    return value === value
      ? strictIndexOf(array, value, fromIndex)
      : baseFindIndex(array, baseIsNaN, fromIndex);
  }

  /**
   * This function is like `baseIndexOf` except that it accepts a comparator.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @param {Function} comparator The comparator invoked per element.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function baseIndexOfWith(array, value, fromIndex, comparator) {
    var index = fromIndex - 1,
        length = array.length;

    while (++index < length) {
      if (comparator(array[index], value)) {
        return index;
      }
    }
    return -1;
  }

  /**
   * The base implementation of `_.isNaN` without support for number objects.
   *
   * @private
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
   */
  function baseIsNaN(value) {
    return value !== value;
  }

  /**
   * The base implementation of `_.mean` and `_.meanBy` without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} array The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {number} Returns the mean.
   */
  function baseMean(array, iteratee) {
    var length = array == null ? 0 : array.length;
    return length ? (baseSum(array, iteratee) / length) : NAN;
  }

  /**
   * The base implementation of `_.property` without support for deep paths.
   *
   * @private
   * @param {string} key The key of the property to get.
   * @returns {Function} Returns the new accessor function.
   */
  function baseProperty(key) {
    return function(object) {
      return object == null ? undefined : object[key];
    };
  }

  /**
   * The base implementation of `_.propertyOf` without support for deep paths.
   *
   * @private
   * @param {Object} object The object to query.
   * @returns {Function} Returns the new accessor function.
   */
  function basePropertyOf(object) {
    return function(key) {
      return object == null ? undefined : object[key];
    };
  }

  /**
   * The base implementation of `_.reduce` and `_.reduceRight`, without support
   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.
   *
   * @private
   * @param {Array|Object} collection The collection to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @param {*} accumulator The initial value.
   * @param {boolean} initAccum Specify using the first or last element of
   *  `collection` as the initial value.
   * @param {Function} eachFunc The function to iterate over `collection`.
   * @returns {*} Returns the accumulated value.
   */
  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {
    eachFunc(collection, function(value, index, collection) {
      accumulator = initAccum
        ? (initAccum = false, value)
        : iteratee(accumulator, value, index, collection);
    });
    return accumulator;
  }

  /**
   * The base implementation of `_.sortBy` which uses `comparer` to define the
   * sort order of `array` and replaces criteria objects with their corresponding
   * values.
   *
   * @private
   * @param {Array} array The array to sort.
   * @param {Function} comparer The function to define sort order.
   * @returns {Array} Returns `array`.
   */
  function baseSortBy(array, comparer) {
    var length = array.length;

    array.sort(comparer);
    while (length--) {
      array[length] = array[length].value;
    }
    return array;
  }

  /**
   * The base implementation of `_.sum` and `_.sumBy` without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} array The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {number} Returns the sum.
   */
  function baseSum(array, iteratee) {
    var result,
        index = -1,
        length = array.length;

    while (++index < length) {
      var current = iteratee(array[index]);
      if (current !== undefined) {
        result = result === undefined ? current : (result + current);
      }
    }
    return result;
  }

  /**
   * The base implementation of `_.times` without support for iteratee shorthands
   * or max array length checks.
   *
   * @private
   * @param {number} n The number of times to invoke `iteratee`.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns the array of results.
   */
  function baseTimes(n, iteratee) {
    var index = -1,
        result = Array(n);

    while (++index < n) {
      result[index] = iteratee(index);
    }
    return result;
  }

  /**
   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array
   * of key-value pairs for `object` corresponding to the property names of `props`.
   *
   * @private
   * @param {Object} object The object to query.
   * @param {Array} props The property names to get values for.
   * @returns {Object} Returns the key-value pairs.
   */
  function baseToPairs(object, props) {
    return arrayMap(props, function(key) {
      return [key, object[key]];
    });
  }

  /**
   * The base implementation of `_.trim`.
   *
   * @private
   * @param {string} string The string to trim.
   * @returns {string} Returns the trimmed string.
   */
  function baseTrim(string) {
    return string
      ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')
      : string;
  }

  /**
   * The base implementation of `_.unary` without support for storing metadata.
   *
   * @private
   * @param {Function} func The function to cap arguments for.
   * @returns {Function} Returns the new capped function.
   */
  function baseUnary(func) {
    return function(value) {
      return func(value);
    };
  }

  /**
   * The base implementation of `_.values` and `_.valuesIn` which creates an
   * array of `object` property values corresponding to the property names
   * of `props`.
   *
   * @private
   * @param {Object} object The object to query.
   * @param {Array} props The property names to get values for.
   * @returns {Object} Returns the array of property values.
   */
  function baseValues(object, props) {
    return arrayMap(props, function(key) {
      return object[key];
    });
  }

  /**
   * Checks if a `cache` value for `key` exists.
   *
   * @private
   * @param {Object} cache The cache to query.
   * @param {string} key The key of the entry to check.
   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
   */
  function cacheHas(cache, key) {
    return cache.has(key);
  }

  /**
   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol
   * that is not found in the character symbols.
   *
   * @private
   * @param {Array} strSymbols The string symbols to inspect.
   * @param {Array} chrSymbols The character symbols to find.
   * @returns {number} Returns the index of the first unmatched string symbol.
   */
  function charsStartIndex(strSymbols, chrSymbols) {
    var index = -1,
        length = strSymbols.length;

    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}
    return index;
  }

  /**
   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol
   * that is not found in the character symbols.
   *
   * @private
   * @param {Array} strSymbols The string symbols to inspect.
   * @param {Array} chrSymbols The character symbols to find.
   * @returns {number} Returns the index of the last unmatched string symbol.
   */
  function charsEndIndex(strSymbols, chrSymbols) {
    var index = strSymbols.length;

    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}
    return index;
  }

  /**
   * Gets the number of `placeholder` occurrences in `array`.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} placeholder The placeholder to search for.
   * @returns {number} Returns the placeholder count.
   */
  function countHolders(array, placeholder) {
    var length = array.length,
        result = 0;

    while (length--) {
      if (array[length] === placeholder) {
        ++result;
      }
    }
    return result;
  }

  /**
   * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A
   * letters to basic Latin letters.
   *
   * @private
   * @param {string} letter The matched letter to deburr.
   * @returns {string} Returns the deburred letter.
   */
  var deburrLetter = basePropertyOf(deburredLetters);

  /**
   * Used by `_.escape` to convert characters to HTML entities.
   *
   * @private
   * @param {string} chr The matched character to escape.
   * @returns {string} Returns the escaped character.
   */
  var escapeHtmlChar = basePropertyOf(htmlEscapes);

  /**
   * Used by `_.template` to escape characters for inclusion in compiled string literals.
   *
   * @private
   * @param {string} chr The matched character to escape.
   * @returns {string} Returns the escaped character.
   */
  function escapeStringChar(chr) {
    return '\\' + stringEscapes[chr];
  }

  /**
   * Gets the value at `key` of `object`.
   *
   * @private
   * @param {Object} [object] The object to query.
   * @param {string} key The key of the property to get.
   * @returns {*} Returns the property value.
   */
  function getValue(object, key) {
    return object == null ? undefined : object[key];
  }

  /**
   * Checks if `string` contains Unicode symbols.
   *
   * @private
   * @param {string} string The string to inspect.
   * @returns {boolean} Returns `true` if a symbol is found, else `false`.
   */
  function hasUnicode(string) {
    return reHasUnicode.test(string);
  }

  /**
   * Checks if `string` contains a word composed of Unicode symbols.
   *
   * @private
   * @param {string} string The string to inspect.
   * @returns {boolean} Returns `true` if a word is found, else `false`.
   */
  function hasUnicodeWord(string) {
    return reHasUnicodeWord.test(string);
  }

  /**
   * Converts `iterator` to an array.
   *
   * @private
   * @param {Object} iterator The iterator to convert.
   * @returns {Array} Returns the converted array.
   */
  function iteratorToArray(iterator) {
    var data,
        result = [];

    while (!(data = iterator.next()).done) {
      result.push(data.value);
    }
    return result;
  }

  /**
   * Converts `map` to its key-value pairs.
   *
   * @private
   * @param {Object} map The map to convert.
   * @returns {Array} Returns the key-value pairs.
   */
  function mapToArray(map) {
    var index = -1,
        result = Array(map.size);

    map.forEach(function(value, key) {
      result[++index] = [key, value];
    });
    return result;
  }

  /**
   * Creates a unary function that invokes `func` with its argument transformed.
   *
   * @private
   * @param {Function} func The function to wrap.
   * @param {Function} transform The argument transform.
   * @returns {Function} Returns the new function.
   */
  function overArg(func, transform) {
    return function(arg) {
      return func(transform(arg));
    };
  }

  /**
   * Replaces all `placeholder` elements in `array` with an internal placeholder
   * and returns an array of their indexes.
   *
   * @private
   * @param {Array} array The array to modify.
   * @param {*} placeholder The placeholder to replace.
   * @returns {Array} Returns the new array of placeholder indexes.
   */
  function replaceHolders(array, placeholder) {
    var index = -1,
        length = array.length,
        resIndex = 0,
        result = [];

    while (++index < length) {
      var value = array[index];
      if (value === placeholder || value === PLACEHOLDER) {
        array[index] = PLACEHOLDER;
        result[resIndex++] = index;
      }
    }
    return result;
  }

  /**
   * Converts `set` to an array of its values.
   *
   * @private
   * @param {Object} set The set to convert.
   * @returns {Array} Returns the values.
   */
  function setToArray(set) {
    var index = -1,
        result = Array(set.size);

    set.forEach(function(value) {
      result[++index] = value;
    });
    return result;
  }

  /**
   * Converts `set` to its value-value pairs.
   *
   * @private
   * @param {Object} set The set to convert.
   * @returns {Array} Returns the value-value pairs.
   */
  function setToPairs(set) {
    var index = -1,
        result = Array(set.size);

    set.forEach(function(value) {
      result[++index] = [value, value];
    });
    return result;
  }

  /**
   * A specialized version of `_.indexOf` which performs strict equality
   * comparisons of values, i.e. `===`.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function strictIndexOf(array, value, fromIndex) {
    var index = fromIndex - 1,
        length = array.length;

    while (++index < length) {
      if (array[index] === value) {
        return index;
      }
    }
    return -1;
  }

  /**
   * A specialized version of `_.lastIndexOf` which performs strict equality
   * comparisons of values, i.e. `===`.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function strictLastIndexOf(array, value, fromIndex) {
    var index = fromIndex + 1;
    while (index--) {
      if (array[index] === value) {
        return index;
      }
    }
    return index;
  }

  /**
   * Gets the number of symbols in `string`.
   *
   * @private
   * @param {string} string The string to inspect.
   * @returns {number} Returns the string size.
   */
  function stringSize(string) {
    return hasUnicode(string)
      ? unicodeSize(string)
      : asciiSize(string);
  }

  /**
   * Converts `string` to an array.
   *
   * @private
   * @param {string} string The string to convert.
   * @returns {Array} Returns the converted array.
   */
  function stringToArray(string) {
    return hasUnicode(string)
      ? unicodeToArray(string)
      : asciiToArray(string);
  }

  /**
   * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace
   * character of `string`.
   *
   * @private
   * @param {string} string The string to inspect.
   * @returns {number} Returns the index of the last non-whitespace character.
   */
  function trimmedEndIndex(string) {
    var index = string.length;

    while (index-- && reWhitespace.test(string.charAt(index))) {}
    return index;
  }

  /**
   * Used by `_.unescape` to convert HTML entities to characters.
   *
   * @private
   * @param {string} chr The matched character to unescape.
   * @returns {string} Returns the unescaped character.
   */
  var unescapeHtmlChar = basePropertyOf(htmlUnescapes);

  /**
   * Gets the size of a Unicode `string`.
   *
   * @private
   * @param {string} string The string inspect.
   * @returns {number} Returns the string size.
   */
  function unicodeSize(string) {
    var result = reUnicode.lastIndex = 0;
    while (reUnicode.test(string)) {
      ++result;
    }
    return result;
  }

  /**
   * Converts a Unicode `string` to an array.
   *
   * @private
   * @param {string} string The string to convert.
   * @returns {Array} Returns the converted array.
   */
  function unicodeToArray(string) {
    return string.match(reUnicode) || [];
  }

  /**
   * Splits a Unicode `string` into an array of its words.
   *
   * @private
   * @param {string} The string to inspect.
   * @returns {Array} Returns the words of `string`.
   */
  function unicodeWords(string) {
    return string.match(reUnicodeWord) || [];
  }

  /*--------------------------------------------------------------------------*/

  /**
   * Create a new pristine `lodash` function using the `context` object.
   *
   * @static
   * @memberOf _
   * @since 1.1.0
   * @category Util
   * @param {Object} [context=root] The context object.
   * @returns {Function} Returns a new `lodash` function.
   * @example
   *
   * _.mixin({ 'foo': _.constant('foo') });
   *
   * var lodash = _.runInContext();
   * lodash.mixin({ 'bar': lodash.constant('bar') });
   *
   * _.isFunction(_.foo);
   * // => true
   * _.isFunction(_.bar);
   * // => false
   *
   * lodash.isFunction(lodash.foo);
   * // => false
   * lodash.isFunction(lodash.bar);
   * // => true
   *
   * // Create a suped-up `defer` in Node.js.
   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;
   */
  var runInContext = (function runInContext(context) {
    context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));

    /** Built-in constructor references. */
    var Array = context.Array,
        Date = context.Date,
        Error = context.Error,
        Function = context.Function,
        Math = context.Math,
        Object = context.Object,
        RegExp = context.RegExp,
        String = context.String,
        TypeError = context.TypeError;

    /** Used for built-in method references. */
    var arrayProto = Array.prototype,
        funcProto = Function.prototype,
        objectProto = Object.prototype;

    /** Used to detect overreaching core-js shims. */
    var coreJsData = context['__core-js_shared__'];

    /** Used to resolve the decompiled source of functions. */
    var funcToString = funcProto.toString;

    /** Used to check objects for own properties. */
    var hasOwnProperty = objectProto.hasOwnProperty;

    /** Used to generate unique IDs. */
    var idCounter = 0;

    /** Used to detect methods masquerading as native. */
    var maskSrcKey = (function() {
      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
      return uid ? ('Symbol(src)_1.' + uid) : '';
    }());

    /**
     * Used to resolve the
     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
     * of values.
     */
    var nativeObjectToString = objectProto.toString;

    /** Used to infer the `Object` constructor. */
    var objectCtorString = funcToString.call(Object);

    /** Used to restore the original `_` reference in `_.noConflict`. */
    var oldDash = root._;

    /** Used to detect if a method is native. */
    var reIsNative = RegExp('^' +
      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&')
      .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
    );

    /** Built-in value references. */
    var Buffer = moduleExports ? context.Buffer : undefined,
        Symbol = context.Symbol,
        Uint8Array = context.Uint8Array,
        allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,
        getPrototype = overArg(Object.getPrototypeOf, Object),
        objectCreate = Object.create,
        propertyIsEnumerable = objectProto.propertyIsEnumerable,
        splice = arrayProto.splice,
        spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined,
        symIterator = Symbol ? Symbol.iterator : undefined,
        symToStringTag = Symbol ? Symbol.toStringTag : undefined;

    var defineProperty = (function() {
      try {
        var func = getNative(Object, 'defineProperty');
        func({}, '', {});
        return func;
      } catch (e) {}
    }());

    /** Mocked built-ins. */
    var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout,
        ctxNow = Date && Date.now !== root.Date.now && Date.now,
        ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;

    /* Built-in method references for those with the same name as other `lodash` methods. */
    var nativeCeil = Math.ceil,
        nativeFloor = Math.floor,
        nativeGetSymbols = Object.getOwnPropertySymbols,
        nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,
        nativeIsFinite = context.isFinite,
        nativeJoin = arrayProto.join,
        nativeKeys = overArg(Object.keys, Object),
        nativeMax = Math.max,
        nativeMin = Math.min,
        nativeNow = Date.now,
        nativeParseInt = context.parseInt,
        nativeRandom = Math.random,
        nativeReverse = arrayProto.reverse;

    /* Built-in method references that are verified to be native. */
    var DataView = getNative(context, 'DataView'),
        Map = getNative(context, 'Map'),
        Promise = getNative(context, 'Promise'),
        Set = getNative(context, 'Set'),
        WeakMap = getNative(context, 'WeakMap'),
        nativeCreate = getNative(Object, 'create');

    /** Used to store function metadata. */
    var metaMap = WeakMap && new WeakMap;

    /** Used to lookup unminified function names. */
    var realNames = {};

    /** Used to detect maps, sets, and weakmaps. */
    var dataViewCtorString = toSource(DataView),
        mapCtorString = toSource(Map),
        promiseCtorString = toSource(Promise),
        setCtorString = toSource(Set),
        weakMapCtorString = toSource(WeakMap);

    /** Used to convert symbols to primitives and strings. */
    var symbolProto = Symbol ? Symbol.prototype : undefined,
        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,
        symbolToString = symbolProto ? symbolProto.toString : undefined;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a `lodash` object which wraps `value` to enable implicit method
     * chain sequences. Methods that operate on and return arrays, collections,
     * and functions can be chained together. Methods that retrieve a single value
     * or may return a primitive value will automatically end the chain sequence
     * and return the unwrapped value. Otherwise, the value must be unwrapped
     * with `_#value`.
     *
     * Explicit chain sequences, which must be unwrapped with `_#value`, may be
     * enabled using `_.chain`.
     *
     * The execution of chained methods is lazy, that is, it's deferred until
     * `_#value` is implicitly or explicitly called.
     *
     * Lazy evaluation allows several methods to support shortcut fusion.
     * Shortcut fusion is an optimization to merge iteratee calls; this avoids
     * the creation of intermediate arrays and can greatly reduce the number of
     * iteratee executions. Sections of a chain sequence qualify for shortcut
     * fusion if the section is applied to an array and iteratees accept only
     * one argument. The heuristic for whether a section qualifies for shortcut
     * fusion is subject to change.
     *
     * Chaining is supported in custom builds as long as the `_#value` method is
     * directly or indirectly included in the build.
     *
     * In addition to lodash methods, wrappers have `Array` and `String` methods.
     *
     * The wrapper `Array` methods are:
     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`
     *
     * The wrapper `String` methods are:
     * `replace` and `split`
     *
     * The wrapper methods that support shortcut fusion are:
     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,
     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,
     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`
     *
     * The chainable wrapper methods are:
     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,
     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,
     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,
     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,
     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,
     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,
     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,
     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,
     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,
     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,
     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,
     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,
     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,
     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,
     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,
     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,
     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,
     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,
     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,
     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,
     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,
     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,
     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,
     * `zipObject`, `zipObjectDeep`, and `zipWith`
     *
     * The wrapper methods that are **not** chainable by default are:
     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,
     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,
     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,
     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,
     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,
     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,
     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,
     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,
     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,
     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,
     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,
     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,
     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,
     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,
     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,
     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,
     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,
     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,
     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,
     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,
     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,
     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,
     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,
     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,
     * `upperFirst`, `value`, and `words`
     *
     * @name _
     * @constructor
     * @category Seq
     * @param {*} value The value to wrap in a `lodash` instance.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var wrapped = _([1, 2, 3]);
     *
     * // Returns an unwrapped value.
     * wrapped.reduce(_.add);
     * // => 6
     *
     * // Returns a wrapped value.
     * var squares = wrapped.map(square);
     *
     * _.isArray(squares);
     * // => false
     *
     * _.isArray(squares.value());
     * // => true
     */
    function lodash(value) {
      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {
        if (value instanceof LodashWrapper) {
          return value;
        }
        if (hasOwnProperty.call(value, '__wrapped__')) {
          return wrapperClone(value);
        }
      }
      return new LodashWrapper(value);
    }

    /**
     * The base implementation of `_.create` without support for assigning
     * properties to the created object.
     *
     * @private
     * @param {Object} proto The object to inherit from.
     * @returns {Object} Returns the new object.
     */
    var baseCreate = (function() {
      function object() {}
      return function(proto) {
        if (!isObject(proto)) {
          return {};
        }
        if (objectCreate) {
          return objectCreate(proto);
        }
        object.prototype = proto;
        var result = new object;
        object.prototype = undefined;
        return result;
      };
    }());

    /**
     * The function whose prototype chain sequence wrappers inherit from.
     *
     * @private
     */
    function baseLodash() {
      // No operation performed.
    }

    /**
     * The base constructor for creating `lodash` wrapper objects.
     *
     * @private
     * @param {*} value The value to wrap.
     * @param {boolean} [chainAll] Enable explicit method chain sequences.
     */
    function LodashWrapper(value, chainAll) {
      this.__wrapped__ = value;
      this.__actions__ = [];
      this.__chain__ = !!chainAll;
      this.__index__ = 0;
      this.__values__ = undefined;
    }

    /**
     * By default, the template delimiters used by lodash are like those in
     * embedded Ruby (ERB) as well as ES2015 template strings. Change the
     * following template settings to use alternative delimiters.
     *
     * @static
     * @memberOf _
     * @type {Object}
     */
    lodash.templateSettings = {

      /**
       * Used to detect `data` property values to be HTML-escaped.
       *
       * @memberOf _.templateSettings
       * @type {RegExp}
       */
      'escape': reEscape,

      /**
       * Used to detect code to be evaluated.
       *
       * @memberOf _.templateSettings
       * @type {RegExp}
       */
      'evaluate': reEvaluate,

      /**
       * Used to detect `data` property values to inject.
       *
       * @memberOf _.templateSettings
       * @type {RegExp}
       */
      'interpolate': reInterpolate,

      /**
       * Used to reference the data object in the template text.
       *
       * @memberOf _.templateSettings
       * @type {string}
       */
      'variable': '',

      /**
       * Used to import variables into the compiled template.
       *
       * @memberOf _.templateSettings
       * @type {Object}
       */
      'imports': {

        /**
         * A reference to the `lodash` function.
         *
         * @memberOf _.templateSettings.imports
         * @type {Function}
         */
        '_': lodash
      }
    };

    // Ensure wrappers are instances of `baseLodash`.
    lodash.prototype = baseLodash.prototype;
    lodash.prototype.constructor = lodash;

    LodashWrapper.prototype = baseCreate(baseLodash.prototype);
    LodashWrapper.prototype.constructor = LodashWrapper;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.
     *
     * @private
     * @constructor
     * @param {*} value The value to wrap.
     */
    function LazyWrapper(value) {
      this.__wrapped__ = value;
      this.__actions__ = [];
      this.__dir__ = 1;
      this.__filtered__ = false;
      this.__iteratees__ = [];
      this.__takeCount__ = MAX_ARRAY_LENGTH;
      this.__views__ = [];
    }

    /**
     * Creates a clone of the lazy wrapper object.
     *
     * @private
     * @name clone
     * @memberOf LazyWrapper
     * @returns {Object} Returns the cloned `LazyWrapper` object.
     */
    function lazyClone() {
      var result = new LazyWrapper(this.__wrapped__);
      result.__actions__ = copyArray(this.__actions__);
      result.__dir__ = this.__dir__;
      result.__filtered__ = this.__filtered__;
      result.__iteratees__ = copyArray(this.__iteratees__);
      result.__takeCount__ = this.__takeCount__;
      result.__views__ = copyArray(this.__views__);
      return result;
    }

    /**
     * Reverses the direction of lazy iteration.
     *
     * @private
     * @name reverse
     * @memberOf LazyWrapper
     * @returns {Object} Returns the new reversed `LazyWrapper` object.
     */
    function lazyReverse() {
      if (this.__filtered__) {
        var result = new LazyWrapper(this);
        result.__dir__ = -1;
        result.__filtered__ = true;
      } else {
        result = this.clone();
        result.__dir__ *= -1;
      }
      return result;
    }

    /**
     * Extracts the unwrapped value from its lazy wrapper.
     *
     * @private
     * @name value
     * @memberOf LazyWrapper
     * @returns {*} Returns the unwrapped value.
     */
    function lazyValue() {
      var array = this.__wrapped__.value(),
          dir = this.__dir__,
          isArr = isArray(array),
          isRight = dir < 0,
          arrLength = isArr ? array.length : 0,
          view = getView(0, arrLength, this.__views__),
          start = view.start,
          end = view.end,
          length = end - start,
          index = isRight ? end : (start - 1),
          iteratees = this.__iteratees__,
          iterLength = iteratees.length,
          resIndex = 0,
          takeCount = nativeMin(length, this.__takeCount__);

      if (!isArr || (!isRight && arrLength == length && takeCount == length)) {
        return baseWrapperValue(array, this.__actions__);
      }
      var result = [];

      outer:
      while (length-- && resIndex < takeCount) {
        index += dir;

        var iterIndex = -1,
            value = array[index];

        while (++iterIndex < iterLength) {
          var data = iteratees[iterIndex],
              iteratee = data.iteratee,
              type = data.type,
              computed = iteratee(value);

          if (type == LAZY_MAP_FLAG) {
            value = computed;
          } else if (!computed) {
            if (type == LAZY_FILTER_FLAG) {
              continue outer;
            } else {
              break outer;
            }
          }
        }
        result[resIndex++] = value;
      }
      return result;
    }

    // Ensure `LazyWrapper` is an instance of `baseLodash`.
    LazyWrapper.prototype = baseCreate(baseLodash.prototype);
    LazyWrapper.prototype.constructor = LazyWrapper;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a hash object.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */
    function Hash(entries) {
      var index = -1,
          length = entries == null ? 0 : entries.length;

      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }

    /**
     * Removes all key-value entries from the hash.
     *
     * @private
     * @name clear
     * @memberOf Hash
     */
    function hashClear() {
      this.__data__ = nativeCreate ? nativeCreate(null) : {};
      this.size = 0;
    }

    /**
     * Removes `key` and its value from the hash.
     *
     * @private
     * @name delete
     * @memberOf Hash
     * @param {Object} hash The hash to modify.
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */
    function hashDelete(key) {
      var result = this.has(key) && delete this.__data__[key];
      this.size -= result ? 1 : 0;
      return result;
    }

    /**
     * Gets the hash value for `key`.
     *
     * @private
     * @name get
     * @memberOf Hash
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */
    function hashGet(key) {
      var data = this.__data__;
      if (nativeCreate) {
        var result = data[key];
        return result === HASH_UNDEFINED ? undefined : result;
      }
      return hasOwnProperty.call(data, key) ? data[key] : undefined;
    }

    /**
     * Checks if a hash value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf Hash
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */
    function hashHas(key) {
      var data = this.__data__;
      return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);
    }

    /**
     * Sets the hash `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf Hash
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the hash instance.
     */
    function hashSet(key, value) {
      var data = this.__data__;
      this.size += this.has(key) ? 0 : 1;
      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;
      return this;
    }

    // Add methods to `Hash`.
    Hash.prototype.clear = hashClear;
    Hash.prototype['delete'] = hashDelete;
    Hash.prototype.get = hashGet;
    Hash.prototype.has = hashHas;
    Hash.prototype.set = hashSet;

    /*------------------------------------------------------------------------*/

    /**
     * Creates an list cache object.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */
    function ListCache(entries) {
      var index = -1,
          length = entries == null ? 0 : entries.length;

      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }

    /**
     * Removes all key-value entries from the list cache.
     *
     * @private
     * @name clear
     * @memberOf ListCache
     */
    function listCacheClear() {
      this.__data__ = [];
      this.size = 0;
    }

    /**
     * Removes `key` and its value from the list cache.
     *
     * @private
     * @name delete
     * @memberOf ListCache
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */
    function listCacheDelete(key) {
      var data = this.__data__,
          index = assocIndexOf(data, key);

      if (index < 0) {
        return false;
      }
      var lastIndex = data.length - 1;
      if (index == lastIndex) {
        data.pop();
      } else {
        splice.call(data, index, 1);
      }
      --this.size;
      return true;
    }

    /**
     * Gets the list cache value for `key`.
     *
     * @private
     * @name get
     * @memberOf ListCache
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */
    function listCacheGet(key) {
      var data = this.__data__,
          index = assocIndexOf(data, key);

      return index < 0 ? undefined : data[index][1];
    }

    /**
     * Checks if a list cache value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf ListCache
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */
    function listCacheHas(key) {
      return assocIndexOf(this.__data__, key) > -1;
    }

    /**
     * Sets the list cache `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf ListCache
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the list cache instance.
     */
    function listCacheSet(key, value) {
      var data = this.__data__,
          index = assocIndexOf(data, key);

      if (index < 0) {
        ++this.size;
        data.push([key, value]);
      } else {
        data[index][1] = value;
      }
      return this;
    }

    // Add methods to `ListCache`.
    ListCache.prototype.clear = listCacheClear;
    ListCache.prototype['delete'] = listCacheDelete;
    ListCache.prototype.get = listCacheGet;
    ListCache.prototype.has = listCacheHas;
    ListCache.prototype.set = listCacheSet;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a map cache object to store key-value pairs.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */
    function MapCache(entries) {
      var index = -1,
          length = entries == null ? 0 : entries.length;

      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }

    /**
     * Removes all key-value entries from the map.
     *
     * @private
     * @name clear
     * @memberOf MapCache
     */
    function mapCacheClear() {
      this.size = 0;
      this.__data__ = {
        'hash': new Hash,
        'map': new (Map || ListCache),
        'string': new Hash
      };
    }

    /**
     * Removes `key` and its value from the map.
     *
     * @private
     * @name delete
     * @memberOf MapCache
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */
    function mapCacheDelete(key) {
      var result = getMapData(this, key)['delete'](key);
      this.size -= result ? 1 : 0;
      return result;
    }

    /**
     * Gets the map value for `key`.
     *
     * @private
     * @name get
     * @memberOf MapCache
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */
    function mapCacheGet(key) {
      return getMapData(this, key).get(key);
    }

    /**
     * Checks if a map value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf MapCache
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */
    function mapCacheHas(key) {
      return getMapData(this, key).has(key);
    }

    /**
     * Sets the map `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf MapCache
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the map cache instance.
     */
    function mapCacheSet(key, value) {
      var data = getMapData(this, key),
          size = data.size;

      data.set(key, value);
      this.size += data.size == size ? 0 : 1;
      return this;
    }

    // Add methods to `MapCache`.
    MapCache.prototype.clear = mapCacheClear;
    MapCache.prototype['delete'] = mapCacheDelete;
    MapCache.prototype.get = mapCacheGet;
    MapCache.prototype.has = mapCacheHas;
    MapCache.prototype.set = mapCacheSet;

    /*------------------------------------------------------------------------*/

    /**
     *
     * Creates an array cache object to store unique values.
     *
     * @private
     * @constructor
     * @param {Array} [values] The values to cache.
     */
    function SetCache(values) {
      var index = -1,
          length = values == null ? 0 : values.length;

      this.__data__ = new MapCache;
      while (++index < length) {
        this.add(values[index]);
      }
    }

    /**
     * Adds `value` to the array cache.
     *
     * @private
     * @name add
     * @memberOf SetCache
     * @alias push
     * @param {*} value The value to cache.
     * @returns {Object} Returns the cache instance.
     */
    function setCacheAdd(value) {
      this.__data__.set(value, HASH_UNDEFINED);
      return this;
    }

    /**
     * Checks if `value` is in the array cache.
     *
     * @private
     * @name has
     * @memberOf SetCache
     * @param {*} value The value to search for.
     * @returns {number} Returns `true` if `value` is found, else `false`.
     */
    function setCacheHas(value) {
      return this.__data__.has(value);
    }

    // Add methods to `SetCache`.
    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
    SetCache.prototype.has = setCacheHas;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a stack cache object to store key-value pairs.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */
    function Stack(entries) {
      var data = this.__data__ = new ListCache(entries);
      this.size = data.size;
    }

    /**
     * Removes all key-value entries from the stack.
     *
     * @private
     * @name clear
     * @memberOf Stack
     */
    function stackClear() {
      this.__data__ = new ListCache;
      this.size = 0;
    }

    /**
     * Removes `key` and its value from the stack.
     *
     * @private
     * @name delete
     * @memberOf Stack
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */
    function stackDelete(key) {
      var data = this.__data__,
          result = data['delete'](key);

      this.size = data.size;
      return result;
    }

    /**
     * Gets the stack value for `key`.
     *
     * @private
     * @name get
     * @memberOf Stack
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */
    function stackGet(key) {
      return this.__data__.get(key);
    }

    /**
     * Checks if a stack value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf Stack
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */
    function stackHas(key) {
      return this.__data__.has(key);
    }

    /**
     * Sets the stack `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf Stack
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the stack cache instance.
     */
    function stackSet(key, value) {
      var data = this.__data__;
      if (data instanceof ListCache) {
        var pairs = data.__data__;
        if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {
          pairs.push([key, value]);
          this.size = ++data.size;
          return this;
        }
        data = this.__data__ = new MapCache(pairs);
      }
      data.set(key, value);
      this.size = data.size;
      return this;
    }

    // Add methods to `Stack`.
    Stack.prototype.clear = stackClear;
    Stack.prototype['delete'] = stackDelete;
    Stack.prototype.get = stackGet;
    Stack.prototype.has = stackHas;
    Stack.prototype.set = stackSet;

    /*------------------------------------------------------------------------*/

    /**
     * Creates an array of the enumerable property names of the array-like `value`.
     *
     * @private
     * @param {*} value The value to query.
     * @param {boolean} inherited Specify returning inherited property names.
     * @returns {Array} Returns the array of property names.
     */
    function arrayLikeKeys(value, inherited) {
      var isArr = isArray(value),
          isArg = !isArr && isArguments(value),
          isBuff = !isArr && !isArg && isBuffer(value),
          isType = !isArr && !isArg && !isBuff && isTypedArray(value),
          skipIndexes = isArr || isArg || isBuff || isType,
          result = skipIndexes ? baseTimes(value.length, String) : [],
          length = result.length;

      for (var key in value) {
        if ((inherited || hasOwnProperty.call(value, key)) &&
            !(skipIndexes && (
               // Safari 9 has enumerable `arguments.length` in strict mode.
               key == 'length' ||
               // Node.js 0.10 has enumerable non-index properties on buffers.
               (isBuff && (key == 'offset' || key == 'parent')) ||
               // PhantomJS 2 has enumerable non-index properties on typed arrays.
               (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||
               // Skip index properties.
               isIndex(key, length)
            ))) {
          result.push(key);
        }
      }
      return result;
    }

    /**
     * A specialized version of `_.sample` for arrays.
     *
     * @private
     * @param {Array} array The array to sample.
     * @returns {*} Returns the random element.
     */
    function arraySample(array) {
      var length = array.length;
      return length ? array[baseRandom(0, length - 1)] : undefined;
    }

    /**
     * A specialized version of `_.sampleSize` for arrays.
     *
     * @private
     * @param {Array} array The array to sample.
     * @param {number} n The number of elements to sample.
     * @returns {Array} Returns the random elements.
     */
    function arraySampleSize(array, n) {
      return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));
    }

    /**
     * A specialized version of `_.shuffle` for arrays.
     *
     * @private
     * @param {Array} array The array to shuffle.
     * @returns {Array} Returns the new shuffled array.
     */
    function arrayShuffle(array) {
      return shuffleSelf(copyArray(array));
    }

    /**
     * This function is like `assignValue` except that it doesn't assign
     * `undefined` values.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {string} key The key of the property to assign.
     * @param {*} value The value to assign.
     */
    function assignMergeValue(object, key, value) {
      if ((value !== undefined && !eq(object[key], value)) ||
          (value === undefined && !(key in object))) {
        baseAssignValue(object, key, value);
      }
    }

    /**
     * Assigns `value` to `key` of `object` if the existing value is not equivalent
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {string} key The key of the property to assign.
     * @param {*} value The value to assign.
     */
    function assignValue(object, key, value) {
      var objValue = object[key];
      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||
          (value === undefined && !(key in object))) {
        baseAssignValue(object, key, value);
      }
    }

    /**
     * Gets the index at which the `key` is found in `array` of key-value pairs.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {*} key The key to search for.
     * @returns {number} Returns the index of the matched value, else `-1`.
     */
    function assocIndexOf(array, key) {
      var length = array.length;
      while (length--) {
        if (eq(array[length][0], key)) {
          return length;
        }
      }
      return -1;
    }

    /**
     * Aggregates elements of `collection` on `accumulator` with keys transformed
     * by `iteratee` and values set by `setter`.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} setter The function to set `accumulator` values.
     * @param {Function} iteratee The iteratee to transform keys.
     * @param {Object} accumulator The initial aggregated object.
     * @returns {Function} Returns `accumulator`.
     */
    function baseAggregator(collection, setter, iteratee, accumulator) {
      baseEach(collection, function(value, key, collection) {
        setter(accumulator, value, iteratee(value), collection);
      });
      return accumulator;
    }

    /**
     * The base implementation of `_.assign` without support for multiple sources
     * or `customizer` functions.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @returns {Object} Returns `object`.
     */
    function baseAssign(object, source) {
      return object && copyObject(source, keys(source), object);
    }

    /**
     * The base implementation of `_.assignIn` without support for multiple sources
     * or `customizer` functions.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @returns {Object} Returns `object`.
     */
    function baseAssignIn(object, source) {
      return object && copyObject(source, keysIn(source), object);
    }

    /**
     * The base implementation of `assignValue` and `assignMergeValue` without
     * value checks.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {string} key The key of the property to assign.
     * @param {*} value The value to assign.
     */
    function baseAssignValue(object, key, value) {
      if (key == '__proto__' && defineProperty) {
        defineProperty(object, key, {
          'configurable': true,
          'enumerable': true,
          'value': value,
          'writable': true
        });
      } else {
        object[key] = value;
      }
    }

    /**
     * The base implementation of `_.at` without support for individual paths.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {string[]} paths The property paths to pick.
     * @returns {Array} Returns the picked elements.
     */
    function baseAt(object, paths) {
      var index = -1,
          length = paths.length,
          result = Array(length),
          skip = object == null;

      while (++index < length) {
        result[index] = skip ? undefined : get(object, paths[index]);
      }
      return result;
    }

    /**
     * The base implementation of `_.clamp` which doesn't coerce arguments.
     *
     * @private
     * @param {number} number The number to clamp.
     * @param {number} [lower] The lower bound.
     * @param {number} upper The upper bound.
     * @returns {number} Returns the clamped number.
     */
    function baseClamp(number, lower, upper) {
      if (number === number) {
        if (upper !== undefined) {
          number = number <= upper ? number : upper;
        }
        if (lower !== undefined) {
          number = number >= lower ? number : lower;
        }
      }
      return number;
    }

    /**
     * The base implementation of `_.clone` and `_.cloneDeep` which tracks
     * traversed objects.
     *
     * @private
     * @param {*} value The value to clone.
     * @param {boolean} bitmask The bitmask flags.
     *  1 - Deep clone
     *  2 - Flatten inherited properties
     *  4 - Clone symbols
     * @param {Function} [customizer] The function to customize cloning.
     * @param {string} [key] The key of `value`.
     * @param {Object} [object] The parent object of `value`.
     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.
     * @returns {*} Returns the cloned value.
     */
    function baseClone(value, bitmask, customizer, key, object, stack) {
      var result,
          isDeep = bitmask & CLONE_DEEP_FLAG,
          isFlat = bitmask & CLONE_FLAT_FLAG,
          isFull = bitmask & CLONE_SYMBOLS_FLAG;

      if (customizer) {
        result = object ? customizer(value, key, object, stack) : customizer(value);
      }
      if (result !== undefined) {
        return result;
      }
      if (!isObject(value)) {
        return value;
      }
      var isArr = isArray(value);
      if (isArr) {
        result = initCloneArray(value);
        if (!isDeep) {
          return copyArray(value, result);
        }
      } else {
        var tag = getTag(value),
            isFunc = tag == funcTag || tag == genTag;

        if (isBuffer(value)) {
          return cloneBuffer(value, isDeep);
        }
        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {
          result = (isFlat || isFunc) ? {} : initCloneObject(value);
          if (!isDeep) {
            return isFlat
              ? copySymbolsIn(value, baseAssignIn(result, value))
              : copySymbols(value, baseAssign(result, value));
          }
        } else {
          if (!cloneableTags[tag]) {
            return object ? value : {};
          }
          result = initCloneByTag(value, tag, isDeep);
        }
      }
      // Check for circular references and return its corresponding clone.
      stack || (stack = new Stack);
      var stacked = stack.get(value);
      if (stacked) {
        return stacked;
      }
      stack.set(value, result);

      if (isSet(value)) {
        value.forEach(function(subValue) {
          result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));
        });
      } else if (isMap(value)) {
        value.forEach(function(subValue, key) {
          result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));
        });
      }

      var keysFunc = isFull
        ? (isFlat ? getAllKeysIn : getAllKeys)
        : (isFlat ? keysIn : keys);

      var props = isArr ? undefined : keysFunc(value);
      arrayEach(props || value, function(subValue, key) {
        if (props) {
          key = subValue;
          subValue = value[key];
        }
        // Recursively populate clone (susceptible to call stack limits).
        assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));
      });
      return result;
    }

    /**
     * The base implementation of `_.conforms` which doesn't clone `source`.
     *
     * @private
     * @param {Object} source The object of property predicates to conform to.
     * @returns {Function} Returns the new spec function.
     */
    function baseConforms(source) {
      var props = keys(source);
      return function(object) {
        return baseConformsTo(object, source, props);
      };
    }

    /**
     * The base implementation of `_.conformsTo` which accepts `props` to check.
     *
     * @private
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property predicates to conform to.
     * @returns {boolean} Returns `true` if `object` conforms, else `false`.
     */
    function baseConformsTo(object, source, props) {
      var length = props.length;
      if (object == null) {
        return !length;
      }
      object = Object(object);
      while (length--) {
        var key = props[length],
            predicate = source[key],
            value = object[key];

        if ((value === undefined && !(key in object)) || !predicate(value)) {
          return false;
        }
      }
      return true;
    }

    /**
     * The base implementation of `_.delay` and `_.defer` which accepts `args`
     * to provide to `func`.
     *
     * @private
     * @param {Function} func The function to delay.
     * @param {number} wait The number of milliseconds to delay invocation.
     * @param {Array} args The arguments to provide to `func`.
     * @returns {number|Object} Returns the timer id or timeout object.
     */
    function baseDelay(func, wait, args) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      return setTimeout(function() { func.apply(undefined, args); }, wait);
    }

    /**
     * The base implementation of methods like `_.difference` without support
     * for excluding multiple arrays or iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {Array} values The values to exclude.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     */
    function baseDifference(array, values, iteratee, comparator) {
      var index = -1,
          includes = arrayIncludes,
          isCommon = true,
          length = array.length,
          result = [],
          valuesLength = values.length;

      if (!length) {
        return result;
      }
      if (iteratee) {
        values = arrayMap(values, baseUnary(iteratee));
      }
      if (comparator) {
        includes = arrayIncludesWith;
        isCommon = false;
      }
      else if (values.length >= LARGE_ARRAY_SIZE) {
        includes = cacheHas;
        isCommon = false;
        values = new SetCache(values);
      }
      outer:
      while (++index < length) {
        var value = array[index],
            computed = iteratee == null ? value : iteratee(value);

        value = (comparator || value !== 0) ? value : 0;
        if (isCommon && computed === computed) {
          var valuesIndex = valuesLength;
          while (valuesIndex--) {
            if (values[valuesIndex] === computed) {
              continue outer;
            }
          }
          result.push(value);
        }
        else if (!includes(values, computed, comparator)) {
          result.push(value);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.forEach` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     */
    var baseEach = createBaseEach(baseForOwn);

    /**
     * The base implementation of `_.forEachRight` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     */
    var baseEachRight = createBaseEach(baseForOwnRight, true);

    /**
     * The base implementation of `_.every` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} predicate The function invoked per iteration.
     * @returns {boolean} Returns `true` if all elements pass the predicate check,
     *  else `false`
     */
    function baseEvery(collection, predicate) {
      var result = true;
      baseEach(collection, function(value, index, collection) {
        result = !!predicate(value, index, collection);
        return result;
      });
      return result;
    }

    /**
     * The base implementation of methods like `_.max` and `_.min` which accepts a
     * `comparator` to determine the extremum value.
     *
     * @private
     * @param {Array} array The array to iterate over.
     * @param {Function} iteratee The iteratee invoked per iteration.
     * @param {Function} comparator The comparator used to compare values.
     * @returns {*} Returns the extremum value.
     */
    function baseExtremum(array, iteratee, comparator) {
      var index = -1,
          length = array.length;

      while (++index < length) {
        var value = array[index],
            current = iteratee(value);

        if (current != null && (computed === undefined
              ? (current === current && !isSymbol(current))
              : comparator(current, computed)
            )) {
          var computed = current,
              result = value;
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.fill` without an iteratee call guard.
     *
     * @private
     * @param {Array} array The array to fill.
     * @param {*} value The value to fill `array` with.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns `array`.
     */
    function baseFill(array, value, start, end) {
      var length = array.length;

      start = toInteger(start);
      if (start < 0) {
        start = -start > length ? 0 : (length + start);
      }
      end = (end === undefined || end > length) ? length : toInteger(end);
      if (end < 0) {
        end += length;
      }
      end = start > end ? 0 : toLength(end);
      while (start < end) {
        array[start++] = value;
      }
      return array;
    }

    /**
     * The base implementation of `_.filter` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} predicate The function invoked per iteration.
     * @returns {Array} Returns the new filtered array.
     */
    function baseFilter(collection, predicate) {
      var result = [];
      baseEach(collection, function(value, index, collection) {
        if (predicate(value, index, collection)) {
          result.push(value);
        }
      });
      return result;
    }

    /**
     * The base implementation of `_.flatten` with support for restricting flattening.
     *
     * @private
     * @param {Array} array The array to flatten.
     * @param {number} depth The maximum recursion depth.
     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.
     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.
     * @param {Array} [result=[]] The initial result value.
     * @returns {Array} Returns the new flattened array.
     */
    function baseFlatten(array, depth, predicate, isStrict, result) {
      var index = -1,
          length = array.length;

      predicate || (predicate = isFlattenable);
      result || (result = []);

      while (++index < length) {
        var value = array[index];
        if (depth > 0 && predicate(value)) {
          if (depth > 1) {
            // Recursively flatten arrays (susceptible to call stack limits).
            baseFlatten(value, depth - 1, predicate, isStrict, result);
          } else {
            arrayPush(result, value);
          }
        } else if (!isStrict) {
          result[result.length] = value;
        }
      }
      return result;
    }

    /**
     * The base implementation of `baseForOwn` which iterates over `object`
     * properties returned by `keysFunc` and invokes `iteratee` for each property.
     * Iteratee functions may exit iteration early by explicitly returning `false`.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @param {Function} keysFunc The function to get the keys of `object`.
     * @returns {Object} Returns `object`.
     */
    var baseFor = createBaseFor();

    /**
     * This function is like `baseFor` except that it iterates over properties
     * in the opposite order.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @param {Function} keysFunc The function to get the keys of `object`.
     * @returns {Object} Returns `object`.
     */
    var baseForRight = createBaseFor(true);

    /**
     * The base implementation of `_.forOwn` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Object} Returns `object`.
     */
    function baseForOwn(object, iteratee) {
      return object && baseFor(object, iteratee, keys);
    }

    /**
     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Object} Returns `object`.
     */
    function baseForOwnRight(object, iteratee) {
      return object && baseForRight(object, iteratee, keys);
    }

    /**
     * The base implementation of `_.functions` which creates an array of
     * `object` function property names filtered from `props`.
     *
     * @private
     * @param {Object} object The object to inspect.
     * @param {Array} props The property names to filter.
     * @returns {Array} Returns the function names.
     */
    function baseFunctions(object, props) {
      return arrayFilter(props, function(key) {
        return isFunction(object[key]);
      });
    }

    /**
     * The base implementation of `_.get` without support for default values.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the property to get.
     * @returns {*} Returns the resolved value.
     */
    function baseGet(object, path) {
      path = castPath(path, object);

      var index = 0,
          length = path.length;

      while (object != null && index < length) {
        object = object[toKey(path[index++])];
      }
      return (index && index == length) ? object : undefined;
    }

    /**
     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses
     * `keysFunc` and `symbolsFunc` to get the enumerable property names and
     * symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Function} keysFunc The function to get the keys of `object`.
     * @param {Function} symbolsFunc The function to get the symbols of `object`.
     * @returns {Array} Returns the array of property names and symbols.
     */
    function baseGetAllKeys(object, keysFunc, symbolsFunc) {
      var result = keysFunc(object);
      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
    }

    /**
     * The base implementation of `getTag` without fallbacks for buggy environments.
     *
     * @private
     * @param {*} value The value to query.
     * @returns {string} Returns the `toStringTag`.
     */
    function baseGetTag(value) {
      if (value == null) {
        return value === undefined ? undefinedTag : nullTag;
      }
      return (symToStringTag && symToStringTag in Object(value))
        ? getRawTag(value)
        : objectToString(value);
    }

    /**
     * The base implementation of `_.gt` which doesn't coerce arguments.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is greater than `other`,
     *  else `false`.
     */
    function baseGt(value, other) {
      return value > other;
    }

    /**
     * The base implementation of `_.has` without support for deep paths.
     *
     * @private
     * @param {Object} [object] The object to query.
     * @param {Array|string} key The key to check.
     * @returns {boolean} Returns `true` if `key` exists, else `false`.
     */
    function baseHas(object, key) {
      return object != null && hasOwnProperty.call(object, key);
    }

    /**
     * The base implementation of `_.hasIn` without support for deep paths.
     *
     * @private
     * @param {Object} [object] The object to query.
     * @param {Array|string} key The key to check.
     * @returns {boolean} Returns `true` if `key` exists, else `false`.
     */
    function baseHasIn(object, key) {
      return object != null && key in Object(object);
    }

    /**
     * The base implementation of `_.inRange` which doesn't coerce arguments.
     *
     * @private
     * @param {number} number The number to check.
     * @param {number} start The start of the range.
     * @param {number} end The end of the range.
     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.
     */
    function baseInRange(number, start, end) {
      return number >= nativeMin(start, end) && number < nativeMax(start, end);
    }

    /**
     * The base implementation of methods like `_.intersection`, without support
     * for iteratee shorthands, that accepts an array of arrays to inspect.
     *
     * @private
     * @param {Array} arrays The arrays to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of shared values.
     */
    function baseIntersection(arrays, iteratee, comparator) {
      var includes = comparator ? arrayIncludesWith : arrayIncludes,
          length = arrays[0].length,
          othLength = arrays.length,
          othIndex = othLength,
          caches = Array(othLength),
          maxLength = Infinity,
          result = [];

      while (othIndex--) {
        var array = arrays[othIndex];
        if (othIndex && iteratee) {
          array = arrayMap(array, baseUnary(iteratee));
        }
        maxLength = nativeMin(array.length, maxLength);
        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))
          ? new SetCache(othIndex && array)
          : undefined;
      }
      array = arrays[0];

      var index = -1,
          seen = caches[0];

      outer:
      while (++index < length && result.length < maxLength) {
        var value = array[index],
            computed = iteratee ? iteratee(value) : value;

        value = (comparator || value !== 0) ? value : 0;
        if (!(seen
              ? cacheHas(seen, computed)
              : includes(result, computed, comparator)
            )) {
          othIndex = othLength;
          while (--othIndex) {
            var cache = caches[othIndex];
            if (!(cache
                  ? cacheHas(cache, computed)
                  : includes(arrays[othIndex], computed, comparator))
                ) {
              continue outer;
            }
          }
          if (seen) {
            seen.push(computed);
          }
          result.push(value);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.invert` and `_.invertBy` which inverts
     * `object` with values transformed by `iteratee` and set by `setter`.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} setter The function to set `accumulator` values.
     * @param {Function} iteratee The iteratee to transform values.
     * @param {Object} accumulator The initial inverted object.
     * @returns {Function} Returns `accumulator`.
     */
    function baseInverter(object, setter, iteratee, accumulator) {
      baseForOwn(object, function(value, key, object) {
        setter(accumulator, iteratee(value), key, object);
      });
      return accumulator;
    }

    /**
     * The base implementation of `_.invoke` without support for individual
     * method arguments.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the method to invoke.
     * @param {Array} args The arguments to invoke the method with.
     * @returns {*} Returns the result of the invoked method.
     */
    function baseInvoke(object, path, args) {
      path = castPath(path, object);
      object = parent(object, path);
      var func = object == null ? object : object[toKey(last(path))];
      return func == null ? undefined : apply(func, object, args);
    }

    /**
     * The base implementation of `_.isArguments`.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an `arguments` object,
     */
    function baseIsArguments(value) {
      return isObjectLike(value) && baseGetTag(value) == argsTag;
    }

    /**
     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.
     */
    function baseIsArrayBuffer(value) {
      return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;
    }

    /**
     * The base implementation of `_.isDate` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.
     */
    function baseIsDate(value) {
      return isObjectLike(value) && baseGetTag(value) == dateTag;
    }

    /**
     * The base implementation of `_.isEqual` which supports partial comparisons
     * and tracks traversed objects.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @param {boolean} bitmask The bitmask flags.
     *  1 - Unordered comparison
     *  2 - Partial comparison
     * @param {Function} [customizer] The function to customize comparisons.
     * @param {Object} [stack] Tracks traversed `value` and `other` objects.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     */
    function baseIsEqual(value, other, bitmask, customizer, stack) {
      if (value === other) {
        return true;
      }
      if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {
        return value !== value && other !== other;
      }
      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
    }

    /**
     * A specialized version of `baseIsEqual` for arrays and objects which performs
     * deep comparisons and tracks traversed objects enabling objects with circular
     * references to be compared.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} [stack] Tracks traversed `object` and `other` objects.
     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
     */
    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
      var objIsArr = isArray(object),
          othIsArr = isArray(other),
          objTag = objIsArr ? arrayTag : getTag(object),
          othTag = othIsArr ? arrayTag : getTag(other);

      objTag = objTag == argsTag ? objectTag : objTag;
      othTag = othTag == argsTag ? objectTag : othTag;

      var objIsObj = objTag == objectTag,
          othIsObj = othTag == objectTag,
          isSameTag = objTag == othTag;

      if (isSameTag && isBuffer(object)) {
        if (!isBuffer(other)) {
          return false;
        }
        objIsArr = true;
        objIsObj = false;
      }
      if (isSameTag && !objIsObj) {
        stack || (stack = new Stack);
        return (objIsArr || isTypedArray(object))
          ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)
          : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
      }
      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),
            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');

        if (objIsWrapped || othIsWrapped) {
          var objUnwrapped = objIsWrapped ? object.value() : object,
              othUnwrapped = othIsWrapped ? other.value() : other;

          stack || (stack = new Stack);
          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
        }
      }
      if (!isSameTag) {
        return false;
      }
      stack || (stack = new Stack);
      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
    }

    /**
     * The base implementation of `_.isMap` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a map, else `false`.
     */
    function baseIsMap(value) {
      return isObjectLike(value) && getTag(value) == mapTag;
    }

    /**
     * The base implementation of `_.isMatch` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property values to match.
     * @param {Array} matchData The property names, values, and compare flags to match.
     * @param {Function} [customizer] The function to customize comparisons.
     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
     */
    function baseIsMatch(object, source, matchData, customizer) {
      var index = matchData.length,
          length = index,
          noCustomizer = !customizer;

      if (object == null) {
        return !length;
      }
      object = Object(object);
      while (index--) {
        var data = matchData[index];
        if ((noCustomizer && data[2])
              ? data[1] !== object[data[0]]
              : !(data[0] in object)
            ) {
          return false;
        }
      }
      while (++index < length) {
        data = matchData[index];
        var key = data[0],
            objValue = object[key],
            srcValue = data[1];

        if (noCustomizer && data[2]) {
          if (objValue === undefined && !(key in object)) {
            return false;
          }
        } else {
          var stack = new Stack;
          if (customizer) {
            var result = customizer(objValue, srcValue, key, object, source, stack);
          }
          if (!(result === undefined
                ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)
                : result
              )) {
            return false;
          }
        }
      }
      return true;
    }

    /**
     * The base implementation of `_.isNative` without bad shim checks.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a native function,
     *  else `false`.
     */
    function baseIsNative(value) {
      if (!isObject(value) || isMasked(value)) {
        return false;
      }
      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
      return pattern.test(toSource(value));
    }

    /**
     * The base implementation of `_.isRegExp` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.
     */
    function baseIsRegExp(value) {
      return isObjectLike(value) && baseGetTag(value) == regexpTag;
    }

    /**
     * The base implementation of `_.isSet` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a set, else `false`.
     */
    function baseIsSet(value) {
      return isObjectLike(value) && getTag(value) == setTag;
    }

    /**
     * The base implementation of `_.isTypedArray` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
     */
    function baseIsTypedArray(value) {
      return isObjectLike(value) &&
        isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
    }

    /**
     * The base implementation of `_.iteratee`.
     *
     * @private
     * @param {*} [value=_.identity] The value to convert to an iteratee.
     * @returns {Function} Returns the iteratee.
     */
    function baseIteratee(value) {
      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.
      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.
      if (typeof value == 'function') {
        return value;
      }
      if (value == null) {
        return identity;
      }
      if (typeof value == 'object') {
        return isArray(value)
          ? baseMatchesProperty(value[0], value[1])
          : baseMatches(value);
      }
      return property(value);
    }

    /**
     * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     */
    function baseKeys(object) {
      if (!isPrototype(object)) {
        return nativeKeys(object);
      }
      var result = [];
      for (var key in Object(object)) {
        if (hasOwnProperty.call(object, key) && key != 'constructor') {
          result.push(key);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     */
    function baseKeysIn(object) {
      if (!isObject(object)) {
        return nativeKeysIn(object);
      }
      var isProto = isPrototype(object),
          result = [];

      for (var key in object) {
        if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {
          result.push(key);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.lt` which doesn't coerce arguments.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is less than `other`,
     *  else `false`.
     */
    function baseLt(value, other) {
      return value < other;
    }

    /**
     * The base implementation of `_.map` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Array} Returns the new mapped array.
     */
    function baseMap(collection, iteratee) {
      var index = -1,
          result = isArrayLike(collection) ? Array(collection.length) : [];

      baseEach(collection, function(value, key, collection) {
        result[++index] = iteratee(value, key, collection);
      });
      return result;
    }

    /**
     * The base implementation of `_.matches` which doesn't clone `source`.
     *
     * @private
     * @param {Object} source The object of property values to match.
     * @returns {Function} Returns the new spec function.
     */
    function baseMatches(source) {
      var matchData = getMatchData(source);
      if (matchData.length == 1 && matchData[0][2]) {
        return matchesStrictComparable(matchData[0][0], matchData[0][1]);
      }
      return function(object) {
        return object === source || baseIsMatch(object, source, matchData);
      };
    }

    /**
     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.
     *
     * @private
     * @param {string} path The path of the property to get.
     * @param {*} srcValue The value to match.
     * @returns {Function} Returns the new spec function.
     */
    function baseMatchesProperty(path, srcValue) {
      if (isKey(path) && isStrictComparable(srcValue)) {
        return matchesStrictComparable(toKey(path), srcValue);
      }
      return function(object) {
        var objValue = get(object, path);
        return (objValue === undefined && objValue === srcValue)
          ? hasIn(object, path)
          : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);
      };
    }

    /**
     * The base implementation of `_.merge` without support for multiple sources.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @param {number} srcIndex The index of `source`.
     * @param {Function} [customizer] The function to customize merged values.
     * @param {Object} [stack] Tracks traversed source values and their merged
     *  counterparts.
     */
    function baseMerge(object, source, srcIndex, customizer, stack) {
      if (object === source) {
        return;
      }
      baseFor(source, function(srcValue, key) {
        stack || (stack = new Stack);
        if (isObject(srcValue)) {
          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);
        }
        else {
          var newValue = customizer
            ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)
            : undefined;

          if (newValue === undefined) {
            newValue = srcValue;
          }
          assignMergeValue(object, key, newValue);
        }
      }, keysIn);
    }

    /**
     * A specialized version of `baseMerge` for arrays and objects which performs
     * deep merges and tracks traversed objects enabling objects with circular
     * references to be merged.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @param {string} key The key of the value to merge.
     * @param {number} srcIndex The index of `source`.
     * @param {Function} mergeFunc The function to merge values.
     * @param {Function} [customizer] The function to customize assigned values.
     * @param {Object} [stack] Tracks traversed source values and their merged
     *  counterparts.
     */
    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {
      var objValue = safeGet(object, key),
          srcValue = safeGet(source, key),
          stacked = stack.get(srcValue);

      if (stacked) {
        assignMergeValue(object, key, stacked);
        return;
      }
      var newValue = customizer
        ? customizer(objValue, srcValue, (key + ''), object, source, stack)
        : undefined;

      var isCommon = newValue === undefined;

      if (isCommon) {
        var isArr = isArray(srcValue),
            isBuff = !isArr && isBuffer(srcValue),
            isTyped = !isArr && !isBuff && isTypedArray(srcValue);

        newValue = srcValue;
        if (isArr || isBuff || isTyped) {
          if (isArray(objValue)) {
            newValue = objValue;
          }
          else if (isArrayLikeObject(objValue)) {
            newValue = copyArray(objValue);
          }
          else if (isBuff) {
            isCommon = false;
            newValue = cloneBuffer(srcValue, true);
          }
          else if (isTyped) {
            isCommon = false;
            newValue = cloneTypedArray(srcValue, true);
          }
          else {
            newValue = [];
          }
        }
        else if (isPlainObject(srcValue) || isArguments(srcValue)) {
          newValue = objValue;
          if (isArguments(objValue)) {
            newValue = toPlainObject(objValue);
          }
          else if (!isObject(objValue) || isFunction(objValue)) {
            newValue = initCloneObject(srcValue);
          }
        }
        else {
          isCommon = false;
        }
      }
      if (isCommon) {
        // Recursively merge objects and arrays (susceptible to call stack limits).
        stack.set(srcValue, newValue);
        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);
        stack['delete'](srcValue);
      }
      assignMergeValue(object, key, newValue);
    }

    /**
     * The base implementation of `_.nth` which doesn't coerce arguments.
     *
     * @private
     * @param {Array} array The array to query.
     * @param {number} n The index of the element to return.
     * @returns {*} Returns the nth element of `array`.
     */
    function baseNth(array, n) {
      var length = array.length;
      if (!length) {
        return;
      }
      n += n < 0 ? length : 0;
      return isIndex(n, length) ? array[n] : undefined;
    }

    /**
     * The base implementation of `_.orderBy` without param guards.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.
     * @param {string[]} orders The sort orders of `iteratees`.
     * @returns {Array} Returns the new sorted array.
     */
    function baseOrderBy(collection, iteratees, orders) {
      if (iteratees.length) {
        iteratees = arrayMap(iteratees, function(iteratee) {
          if (isArray(iteratee)) {
            return function(value) {
              return baseGet(value, iteratee.length === 1 ? iteratee[0] : iteratee);
            }
          }
          return iteratee;
        });
      } else {
        iteratees = [identity];
      }

      var index = -1;
      iteratees = arrayMap(iteratees, baseUnary(getIteratee()));

      var result = baseMap(collection, function(value, key, collection) {
        var criteria = arrayMap(iteratees, function(iteratee) {
          return iteratee(value);
        });
        return { 'criteria': criteria, 'index': ++index, 'value': value };
      });

      return baseSortBy(result, function(object, other) {
        return compareMultiple(object, other, orders);
      });
    }

    /**
     * The base implementation of `_.pick` without support for individual
     * property identifiers.
     *
     * @private
     * @param {Object} object The source object.
     * @param {string[]} paths The property paths to pick.
     * @returns {Object} Returns the new object.
     */
    function basePick(object, paths) {
      return basePickBy(object, paths, function(value, path) {
        return hasIn(object, path);
      });
    }

    /**
     * The base implementation of  `_.pickBy` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The source object.
     * @param {string[]} paths The property paths to pick.
     * @param {Function} predicate The function invoked per property.
     * @returns {Object} Returns the new object.
     */
    function basePickBy(object, paths, predicate) {
      var index = -1,
          length = paths.length,
          result = {};

      while (++index < length) {
        var path = paths[index],
            value = baseGet(object, path);

        if (predicate(value, path)) {
          baseSet(result, castPath(path, object), value);
        }
      }
      return result;
    }

    /**
     * A specialized version of `baseProperty` which supports deep paths.
     *
     * @private
     * @param {Array|string} path The path of the property to get.
     * @returns {Function} Returns the new accessor function.
     */
    function basePropertyDeep(path) {
      return function(object) {
        return baseGet(object, path);
      };
    }

    /**
     * The base implementation of `_.pullAllBy` without support for iteratee
     * shorthands.
     *
     * @private
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns `array`.
     */
    function basePullAll(array, values, iteratee, comparator) {
      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,
          index = -1,
          length = values.length,
          seen = array;

      if (array === values) {
        values = copyArray(values);
      }
      if (iteratee) {
        seen = arrayMap(array, baseUnary(iteratee));
      }
      while (++index < length) {
        var fromIndex = 0,
            value = values[index],
            computed = iteratee ? iteratee(value) : value;

        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {
          if (seen !== array) {
            splice.call(seen, fromIndex, 1);
          }
          splice.call(array, fromIndex, 1);
        }
      }
      return array;
    }

    /**
     * The base implementation of `_.pullAt` without support for individual
     * indexes or capturing the removed elements.
     *
     * @private
     * @param {Array} array The array to modify.
     * @param {number[]} indexes The indexes of elements to remove.
     * @returns {Array} Returns `array`.
     */
    function basePullAt(array, indexes) {
      var length = array ? indexes.length : 0,
          lastIndex = length - 1;

      while (length--) {
        var index = indexes[length];
        if (length == lastIndex || index !== previous) {
          var previous = index;
          if (isIndex(index)) {
            splice.call(array, index, 1);
          } else {
            baseUnset(array, index);
          }
        }
      }
      return array;
    }

    /**
     * The base implementation of `_.random` without support for returning
     * floating-point numbers.
     *
     * @private
     * @param {number} lower The lower bound.
     * @param {number} upper The upper bound.
     * @returns {number} Returns the random number.
     */
    function baseRandom(lower, upper) {
      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));
    }

    /**
     * The base implementation of `_.range` and `_.rangeRight` which doesn't
     * coerce arguments.
     *
     * @private
     * @param {number} start The start of the range.
     * @param {number} end The end of the range.
     * @param {number} step The value to increment or decrement by.
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Array} Returns the range of numbers.
     */
    function baseRange(start, end, step, fromRight) {
      var index = -1,
          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),
          result = Array(length);

      while (length--) {
        result[fromRight ? length : ++index] = start;
        start += step;
      }
      return result;
    }

    /**
     * The base implementation of `_.repeat` which doesn't coerce arguments.
     *
     * @private
     * @param {string} string The string to repeat.
     * @param {number} n The number of times to repeat the string.
     * @returns {string} Returns the repeated string.
     */
    function baseRepeat(string, n) {
      var result = '';
      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {
        return result;
      }
      // Leverage the exponentiation by squaring algorithm for a faster repeat.
      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.
      do {
        if (n % 2) {
          result += string;
        }
        n = nativeFloor(n / 2);
        if (n) {
          string += string;
        }
      } while (n);

      return result;
    }

    /**
     * The base implementation of `_.rest` which doesn't validate or coerce arguments.
     *
     * @private
     * @param {Function} func The function to apply a rest parameter to.
     * @param {number} [start=func.length-1] The start position of the rest parameter.
     * @returns {Function} Returns the new function.
     */
    function baseRest(func, start) {
      return setToString(overRest(func, start, identity), func + '');
    }

    /**
     * The base implementation of `_.sample`.
     *
     * @private
     * @param {Array|Object} collection The collection to sample.
     * @returns {*} Returns the random element.
     */
    function baseSample(collection) {
      return arraySample(values(collection));
    }

    /**
     * The base implementation of `_.sampleSize` without param guards.
     *
     * @private
     * @param {Array|Object} collection The collection to sample.
     * @param {number} n The number of elements to sample.
     * @returns {Array} Returns the random elements.
     */
    function baseSampleSize(collection, n) {
      var array = values(collection);
      return shuffleSelf(array, baseClamp(n, 0, array.length));
    }

    /**
     * The base implementation of `_.set`.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {*} value The value to set.
     * @param {Function} [customizer] The function to customize path creation.
     * @returns {Object} Returns `object`.
     */
    function baseSet(object, path, value, customizer) {
      if (!isObject(object)) {
        return object;
      }
      path = castPath(path, object);

      var index = -1,
          length = path.length,
          lastIndex = length - 1,
          nested = object;

      while (nested != null && ++index < length) {
        var key = toKey(path[index]),
            newValue = value;

        if (key === '__proto__' || key === 'constructor' || key === 'prototype') {
          return object;
        }

        if (index != lastIndex) {
          var objValue = nested[key];
          newValue = customizer ? customizer(objValue, key, nested) : undefined;
          if (newValue === undefined) {
            newValue = isObject(objValue)
              ? objValue
              : (isIndex(path[index + 1]) ? [] : {});
          }
        }
        assignValue(nested, key, newValue);
        nested = nested[key];
      }
      return object;
    }

    /**
     * The base implementation of `setData` without support for hot loop shorting.
     *
     * @private
     * @param {Function} func The function to associate metadata with.
     * @param {*} data The metadata.
     * @returns {Function} Returns `func`.
     */
    var baseSetData = !metaMap ? identity : function(func, data) {
      metaMap.set(func, data);
      return func;
    };

    /**
     * The base implementation of `setToString` without support for hot loop shorting.
     *
     * @private
     * @param {Function} func The function to modify.
     * @param {Function} string The `toString` result.
     * @returns {Function} Returns `func`.
     */
    var baseSetToString = !defineProperty ? identity : function(func, string) {
      return defineProperty(func, 'toString', {
        'configurable': true,
        'enumerable': false,
        'value': constant(string),
        'writable': true
      });
    };

    /**
     * The base implementation of `_.shuffle`.
     *
     * @private
     * @param {Array|Object} collection The collection to shuffle.
     * @returns {Array} Returns the new shuffled array.
     */
    function baseShuffle(collection) {
      return shuffleSelf(values(collection));
    }

    /**
     * The base implementation of `_.slice` without an iteratee call guard.
     *
     * @private
     * @param {Array} array The array to slice.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns the slice of `array`.
     */
    function baseSlice(array, start, end) {
      var index = -1,
          length = array.length;

      if (start < 0) {
        start = -start > length ? 0 : (length + start);
      }
      end = end > length ? length : end;
      if (end < 0) {
        end += length;
      }
      length = start > end ? 0 : ((end - start) >>> 0);
      start >>>= 0;

      var result = Array(length);
      while (++index < length) {
        result[index] = array[index + start];
      }
      return result;
    }

    /**
     * The base implementation of `_.some` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} predicate The function invoked per iteration.
     * @returns {boolean} Returns `true` if any element passes the predicate check,
     *  else `false`.
     */
    function baseSome(collection, predicate) {
      var result;

      baseEach(collection, function(value, index, collection) {
        result = predicate(value, index, collection);
        return !result;
      });
      return !!result;
    }

    /**
     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which
     * performs a binary search of `array` to determine the index at which `value`
     * should be inserted into `array` in order to maintain its sort order.
     *
     * @private
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {boolean} [retHighest] Specify returning the highest qualified index.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     */
    function baseSortedIndex(array, value, retHighest) {
      var low = 0,
          high = array == null ? low : array.length;

      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {
        while (low < high) {
          var mid = (low + high) >>> 1,
              computed = array[mid];

          if (computed !== null && !isSymbol(computed) &&
              (retHighest ? (computed <= value) : (computed < value))) {
            low = mid + 1;
          } else {
            high = mid;
          }
        }
        return high;
      }
      return baseSortedIndexBy(array, value, identity, retHighest);
    }

    /**
     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`
     * which invokes `iteratee` for `value` and each element of `array` to compute
     * their sort ranking. The iteratee is invoked with one argument; (value).
     *
     * @private
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {Function} iteratee The iteratee invoked per element.
     * @param {boolean} [retHighest] Specify returning the highest qualified index.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     */
    function baseSortedIndexBy(array, value, iteratee, retHighest) {
      var low = 0,
          high = array == null ? 0 : array.length;
      if (high === 0) {
        return 0;
      }

      value = iteratee(value);
      var valIsNaN = value !== value,
          valIsNull = value === null,
          valIsSymbol = isSymbol(value),
          valIsUndefined = value === undefined;

      while (low < high) {
        var mid = nativeFloor((low + high) / 2),
            computed = iteratee(array[mid]),
            othIsDefined = computed !== undefined,
            othIsNull = computed === null,
            othIsReflexive = computed === computed,
            othIsSymbol = isSymbol(computed);

        if (valIsNaN) {
          var setLow = retHighest || othIsReflexive;
        } else if (valIsUndefined) {
          setLow = othIsReflexive && (retHighest || othIsDefined);
        } else if (valIsNull) {
          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);
        } else if (valIsSymbol) {
          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);
        } else if (othIsNull || othIsSymbol) {
          setLow = false;
        } else {
          setLow = retHighest ? (computed <= value) : (computed < value);
        }
        if (setLow) {
          low = mid + 1;
        } else {
          high = mid;
        }
      }
      return nativeMin(high, MAX_ARRAY_INDEX);
    }

    /**
     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without
     * support for iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     */
    function baseSortedUniq(array, iteratee) {
      var index = -1,
          length = array.length,
          resIndex = 0,
          result = [];

      while (++index < length) {
        var value = array[index],
            computed = iteratee ? iteratee(value) : value;

        if (!index || !eq(computed, seen)) {
          var seen = computed;
          result[resIndex++] = value === 0 ? 0 : value;
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.toNumber` which doesn't ensure correct
     * conversions of binary, hexadecimal, or octal string values.
     *
     * @private
     * @param {*} value The value to process.
     * @returns {number} Returns the number.
     */
    function baseToNumber(value) {
      if (typeof value == 'number') {
        return value;
      }
      if (isSymbol(value)) {
        return NAN;
      }
      return +value;
    }

    /**
     * The base implementation of `_.toString` which doesn't convert nullish
     * values to empty strings.
     *
     * @private
     * @param {*} value The value to process.
     * @returns {string} Returns the string.
     */
    function baseToString(value) {
      // Exit early for strings to avoid a performance hit in some environments.
      if (typeof value == 'string') {
        return value;
      }
      if (isArray(value)) {
        // Recursively convert values (susceptible to call stack limits).
        return arrayMap(value, baseToString) + '';
      }
      if (isSymbol(value)) {
        return symbolToString ? symbolToString.call(value) : '';
      }
      var result = (value + '');
      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
    }

    /**
     * The base implementation of `_.uniqBy` without support for iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     */
    function baseUniq(array, iteratee, comparator) {
      var index = -1,
          includes = arrayIncludes,
          length = array.length,
          isCommon = true,
          result = [],
          seen = result;

      if (comparator) {
        isCommon = false;
        includes = arrayIncludesWith;
      }
      else if (length >= LARGE_ARRAY_SIZE) {
        var set = iteratee ? null : createSet(array);
        if (set) {
          return setToArray(set);
        }
        isCommon = false;
        includes = cacheHas;
        seen = new SetCache;
      }
      else {
        seen = iteratee ? [] : result;
      }
      outer:
      while (++index < length) {
        var value = array[index],
            computed = iteratee ? iteratee(value) : value;

        value = (comparator || value !== 0) ? value : 0;
        if (isCommon && computed === computed) {
          var seenIndex = seen.length;
          while (seenIndex--) {
            if (seen[seenIndex] === computed) {
              continue outer;
            }
          }
          if (iteratee) {
            seen.push(computed);
          }
          result.push(value);
        }
        else if (!includes(seen, computed, comparator)) {
          if (seen !== result) {
            seen.push(computed);
          }
          result.push(value);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.unset`.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {Array|string} path The property path to unset.
     * @returns {boolean} Returns `true` if the property is deleted, else `false`.
     */
    function baseUnset(object, path) {
      path = castPath(path, object);
      object = parent(object, path);
      return object == null || delete object[toKey(last(path))];
    }

    /**
     * The base implementation of `_.update`.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to update.
     * @param {Function} updater The function to produce the updated value.
     * @param {Function} [customizer] The function to customize path creation.
     * @returns {Object} Returns `object`.
     */
    function baseUpdate(object, path, updater, customizer) {
      return baseSet(object, path, updater(baseGet(object, path)), customizer);
    }

    /**
     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`
     * without support for iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to query.
     * @param {Function} predicate The function invoked per iteration.
     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Array} Returns the slice of `array`.
     */
    function baseWhile(array, predicate, isDrop, fromRight) {
      var length = array.length,
          index = fromRight ? length : -1;

      while ((fromRight ? index-- : ++index < length) &&
        predicate(array[index], index, array)) {}

      return isDrop
        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))
        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));
    }

    /**
     * The base implementation of `wrapperValue` which returns the result of
     * performing a sequence of actions on the unwrapped `value`, where each
     * successive action is supplied the return value of the previous.
     *
     * @private
     * @param {*} value The unwrapped value.
     * @param {Array} actions Actions to perform to resolve the unwrapped value.
     * @returns {*} Returns the resolved value.
     */
    function baseWrapperValue(value, actions) {
      var result = value;
      if (result instanceof LazyWrapper) {
        result = result.value();
      }
      return arrayReduce(actions, function(result, action) {
        return action.func.apply(action.thisArg, arrayPush([result], action.args));
      }, result);
    }

    /**
     * The base implementation of methods like `_.xor`, without support for
     * iteratee shorthands, that accepts an array of arrays to inspect.
     *
     * @private
     * @param {Array} arrays The arrays to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of values.
     */
    function baseXor(arrays, iteratee, comparator) {
      var length = arrays.length;
      if (length < 2) {
        return length ? baseUniq(arrays[0]) : [];
      }
      var index = -1,
          result = Array(length);

      while (++index < length) {
        var array = arrays[index],
            othIndex = -1;

        while (++othIndex < length) {
          if (othIndex != index) {
            result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);
          }
        }
      }
      return baseUniq(baseFlatten(result, 1), iteratee, comparator);
    }

    /**
     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.
     *
     * @private
     * @param {Array} props The property identifiers.
     * @param {Array} values The property values.
     * @param {Function} assignFunc The function to assign values.
     * @returns {Object} Returns the new object.
     */
    function baseZipObject(props, values, assignFunc) {
      var index = -1,
          length = props.length,
          valsLength = values.length,
          result = {};

      while (++index < length) {
        var value = index < valsLength ? values[index] : undefined;
        assignFunc(result, props[index], value);
      }
      return result;
    }

    /**
     * Casts `value` to an empty array if it's not an array like object.
     *
     * @private
     * @param {*} value The value to inspect.
     * @returns {Array|Object} Returns the cast array-like object.
     */
    function castArrayLikeObject(value) {
      return isArrayLikeObject(value) ? value : [];
    }

    /**
     * Casts `value` to `identity` if it's not a function.
     *
     * @private
     * @param {*} value The value to inspect.
     * @returns {Function} Returns cast function.
     */
    function castFunction(value) {
      return typeof value == 'function' ? value : identity;
    }

    /**
     * Casts `value` to a path array if it's not one.
     *
     * @private
     * @param {*} value The value to inspect.
     * @param {Object} [object] The object to query keys on.
     * @returns {Array} Returns the cast property path array.
     */
    function castPath(value, object) {
      if (isArray(value)) {
        return value;
      }
      return isKey(value, object) ? [value] : stringToPath(toString(value));
    }

    /**
     * A `baseRest` alias which can be replaced with `identity` by module
     * replacement plugins.
     *
     * @private
     * @type {Function}
     * @param {Function} func The function to apply a rest parameter to.
     * @returns {Function} Returns the new function.
     */
    var castRest = baseRest;

    /**
     * Casts `array` to a slice if it's needed.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {number} start The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns the cast slice.
     */
    function castSlice(array, start, end) {
      var length = array.length;
      end = end === undefined ? length : end;
      return (!start && end >= length) ? array : baseSlice(array, start, end);
    }

    /**
     * A simple wrapper around the global [`clearTimeout`](https://mdn.io/clearTimeout).
     *
     * @private
     * @param {number|Object} id The timer id or timeout object of the timer to clear.
     */
    var clearTimeout = ctxClearTimeout || function(id) {
      return root.clearTimeout(id);
    };

    /**
     * Creates a clone of  `buffer`.
     *
     * @private
     * @param {Buffer} buffer The buffer to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Buffer} Returns the cloned buffer.
     */
    function cloneBuffer(buffer, isDeep) {
      if (isDeep) {
        return buffer.slice();
      }
      var length = buffer.length,
          result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);

      buffer.copy(result);
      return result;
    }

    /**
     * Creates a clone of `arrayBuffer`.
     *
     * @private
     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.
     * @returns {ArrayBuffer} Returns the cloned array buffer.
     */
    function cloneArrayBuffer(arrayBuffer) {
      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
      new Uint8Array(result).set(new Uint8Array(arrayBuffer));
      return result;
    }

    /**
     * Creates a clone of `dataView`.
     *
     * @private
     * @param {Object} dataView The data view to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Object} Returns the cloned data view.
     */
    function cloneDataView(dataView, isDeep) {
      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;
      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
    }

    /**
     * Creates a clone of `regexp`.
     *
     * @private
     * @param {Object} regexp The regexp to clone.
     * @returns {Object} Returns the cloned regexp.
     */
    function cloneRegExp(regexp) {
      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));
      result.lastIndex = regexp.lastIndex;
      return result;
    }

    /**
     * Creates a clone of the `symbol` object.
     *
     * @private
     * @param {Object} symbol The symbol object to clone.
     * @returns {Object} Returns the cloned symbol object.
     */
    function cloneSymbol(symbol) {
      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};
    }

    /**
     * Creates a clone of `typedArray`.
     *
     * @private
     * @param {Object} typedArray The typed array to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Object} Returns the cloned typed array.
     */
    function cloneTypedArray(typedArray, isDeep) {
      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
    }

    /**
     * Compares values to sort them in ascending order.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {number} Returns the sort order indicator for `value`.
     */
    function compareAscending(value, other) {
      if (value !== other) {
        var valIsDefined = value !== undefined,
            valIsNull = value === null,
            valIsReflexive = value === value,
            valIsSymbol = isSymbol(value);

        var othIsDefined = other !== undefined,
            othIsNull = other === null,
            othIsReflexive = other === other,
            othIsSymbol = isSymbol(other);

        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||
            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||
            (valIsNull && othIsDefined && othIsReflexive) ||
            (!valIsDefined && othIsReflexive) ||
            !valIsReflexive) {
          return 1;
        }
        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||
            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||
            (othIsNull && valIsDefined && valIsReflexive) ||
            (!othIsDefined && valIsReflexive) ||
            !othIsReflexive) {
          return -1;
        }
      }
      return 0;
    }

    /**
     * Used by `_.orderBy` to compare multiple properties of a value to another
     * and stable sort them.
     *
     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,
     * specify an order of "desc" for descending or "asc" for ascending sort order
     * of corresponding values.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {boolean[]|string[]} orders The order to sort by for each property.
     * @returns {number} Returns the sort order indicator for `object`.
     */
    function compareMultiple(object, other, orders) {
      var index = -1,
          objCriteria = object.criteria,
          othCriteria = other.criteria,
          length = objCriteria.length,
          ordersLength = orders.length;

      while (++index < length) {
        var result = compareAscending(objCriteria[index], othCriteria[index]);
        if (result) {
          if (index >= ordersLength) {
            return result;
          }
          var order = orders[index];
          return result * (order == 'desc' ? -1 : 1);
        }
      }
      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications
      // that causes it, under certain circumstances, to provide the same value for
      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247
      // for more details.
      //
      // This also ensures a stable sort in V8 and other engines.
      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.
      return object.index - other.index;
    }

    /**
     * Creates an array that is the composition of partially applied arguments,
     * placeholders, and provided arguments into a single array of arguments.
     *
     * @private
     * @param {Array} args The provided arguments.
     * @param {Array} partials The arguments to prepend to those provided.
     * @param {Array} holders The `partials` placeholder indexes.
     * @params {boolean} [isCurried] Specify composing for a curried function.
     * @returns {Array} Returns the new array of composed arguments.
     */
    function composeArgs(args, partials, holders, isCurried) {
      var argsIndex = -1,
          argsLength = args.length,
          holdersLength = holders.length,
          leftIndex = -1,
          leftLength = partials.length,
          rangeLength = nativeMax(argsLength - holdersLength, 0),
          result = Array(leftLength + rangeLength),
          isUncurried = !isCurried;

      while (++leftIndex < leftLength) {
        result[leftIndex] = partials[leftIndex];
      }
      while (++argsIndex < holdersLength) {
        if (isUncurried || argsIndex < argsLength) {
          result[holders[argsIndex]] = args[argsIndex];
        }
      }
      while (rangeLength--) {
        result[leftIndex++] = args[argsIndex++];
      }
      return result;
    }

    /**
     * This function is like `composeArgs` except that the arguments composition
     * is tailored for `_.partialRight`.
     *
     * @private
     * @param {Array} args The provided arguments.
     * @param {Array} partials The arguments to append to those provided.
     * @param {Array} holders The `partials` placeholder indexes.
     * @params {boolean} [isCurried] Specify composing for a curried function.
     * @returns {Array} Returns the new array of composed arguments.
     */
    function composeArgsRight(args, partials, holders, isCurried) {
      var argsIndex = -1,
          argsLength = args.length,
          holdersIndex = -1,
          holdersLength = holders.length,
          rightIndex = -1,
          rightLength = partials.length,
          rangeLength = nativeMax(argsLength - holdersLength, 0),
          result = Array(rangeLength + rightLength),
          isUncurried = !isCurried;

      while (++argsIndex < rangeLength) {
        result[argsIndex] = args[argsIndex];
      }
      var offset = argsIndex;
      while (++rightIndex < rightLength) {
        result[offset + rightIndex] = partials[rightIndex];
      }
      while (++holdersIndex < holdersLength) {
        if (isUncurried || argsIndex < argsLength) {
          result[offset + holders[holdersIndex]] = args[argsIndex++];
        }
      }
      return result;
    }

    /**
     * Copies the values of `source` to `array`.
     *
     * @private
     * @param {Array} source The array to copy values from.
     * @param {Array} [array=[]] The array to copy values to.
     * @returns {Array} Returns `array`.
     */
    function copyArray(source, array) {
      var index = -1,
          length = source.length;

      array || (array = Array(length));
      while (++index < length) {
        array[index] = source[index];
      }
      return array;
    }

    /**
     * Copies properties of `source` to `object`.
     *
     * @private
     * @param {Object} source The object to copy properties from.
     * @param {Array} props The property identifiers to copy.
     * @param {Object} [object={}] The object to copy properties to.
     * @param {Function} [customizer] The function to customize copied values.
     * @returns {Object} Returns `object`.
     */
    function copyObject(source, props, object, customizer) {
      var isNew = !object;
      object || (object = {});

      var index = -1,
          length = props.length;

      while (++index < length) {
        var key = props[index];

        var newValue = customizer
          ? customizer(object[key], source[key], key, object, source)
          : undefined;

        if (newValue === undefined) {
          newValue = source[key];
        }
        if (isNew) {
          baseAssignValue(object, key, newValue);
        } else {
          assignValue(object, key, newValue);
        }
      }
      return object;
    }

    /**
     * Copies own symbols of `source` to `object`.
     *
     * @private
     * @param {Object} source The object to copy symbols from.
     * @param {Object} [object={}] The object to copy symbols to.
     * @returns {Object} Returns `object`.
     */
    function copySymbols(source, object) {
      return copyObject(source, getSymbols(source), object);
    }

    /**
     * Copies own and inherited symbols of `source` to `object`.
     *
     * @private
     * @param {Object} source The object to copy symbols from.
     * @param {Object} [object={}] The object to copy symbols to.
     * @returns {Object} Returns `object`.
     */
    function copySymbolsIn(source, object) {
      return copyObject(source, getSymbolsIn(source), object);
    }

    /**
     * Creates a function like `_.groupBy`.
     *
     * @private
     * @param {Function} setter The function to set accumulator values.
     * @param {Function} [initializer] The accumulator object initializer.
     * @returns {Function} Returns the new aggregator function.
     */
    function createAggregator(setter, initializer) {
      return function(collection, iteratee) {
        var func = isArray(collection) ? arrayAggregator : baseAggregator,
            accumulator = initializer ? initializer() : {};

        return func(collection, setter, getIteratee(iteratee, 2), accumulator);
      };
    }

    /**
     * Creates a function like `_.assign`.
     *
     * @private
     * @param {Function} assigner The function to assign values.
     * @returns {Function} Returns the new assigner function.
     */
    function createAssigner(assigner) {
      return baseRest(function(object, sources) {
        var index = -1,
            length = sources.length,
            customizer = length > 1 ? sources[length - 1] : undefined,
            guard = length > 2 ? sources[2] : undefined;

        customizer = (assigner.length > 3 && typeof customizer == 'function')
          ? (length--, customizer)
          : undefined;

        if (guard && isIterateeCall(sources[0], sources[1], guard)) {
          customizer = length < 3 ? undefined : customizer;
          length = 1;
        }
        object = Object(object);
        while (++index < length) {
          var source = sources[index];
          if (source) {
            assigner(object, source, index, customizer);
          }
        }
        return object;
      });
    }

    /**
     * Creates a `baseEach` or `baseEachRight` function.
     *
     * @private
     * @param {Function} eachFunc The function to iterate over a collection.
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new base function.
     */
    function createBaseEach(eachFunc, fromRight) {
      return function(collection, iteratee) {
        if (collection == null) {
          return collection;
        }
        if (!isArrayLike(collection)) {
          return eachFunc(collection, iteratee);
        }
        var length = collection.length,
            index = fromRight ? length : -1,
            iterable = Object(collection);

        while ((fromRight ? index-- : ++index < length)) {
          if (iteratee(iterable[index], index, iterable) === false) {
            break;
          }
        }
        return collection;
      };
    }

    /**
     * Creates a base function for methods like `_.forIn` and `_.forOwn`.
     *
     * @private
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new base function.
     */
    function createBaseFor(fromRight) {
      return function(object, iteratee, keysFunc) {
        var index = -1,
            iterable = Object(object),
            props = keysFunc(object),
            length = props.length;

        while (length--) {
          var key = props[fromRight ? length : ++index];
          if (iteratee(iterable[key], key, iterable) === false) {
            break;
          }
        }
        return object;
      };
    }

    /**
     * Creates a function that wraps `func` to invoke it with the optional `this`
     * binding of `thisArg`.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {*} [thisArg] The `this` binding of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createBind(func, bitmask, thisArg) {
      var isBind = bitmask & WRAP_BIND_FLAG,
          Ctor = createCtor(func);

      function wrapper() {
        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;
        return fn.apply(isBind ? thisArg : this, arguments);
      }
      return wrapper;
    }

    /**
     * Creates a function like `_.lowerFirst`.
     *
     * @private
     * @param {string} methodName The name of the `String` case method to use.
     * @returns {Function} Returns the new case function.
     */
    function createCaseFirst(methodName) {
      return function(string) {
        string = toString(string);

        var strSymbols = hasUnicode(string)
          ? stringToArray(string)
          : undefined;

        var chr = strSymbols
          ? strSymbols[0]
          : string.charAt(0);

        var trailing = strSymbols
          ? castSlice(strSymbols, 1).join('')
          : string.slice(1);

        return chr[methodName]() + trailing;
      };
    }

    /**
     * Creates a function like `_.camelCase`.
     *
     * @private
     * @param {Function} callback The function to combine each word.
     * @returns {Function} Returns the new compounder function.
     */
    function createCompounder(callback) {
      return function(string) {
        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');
      };
    }

    /**
     * Creates a function that produces an instance of `Ctor` regardless of
     * whether it was invoked as part of a `new` expression or by `call` or `apply`.
     *
     * @private
     * @param {Function} Ctor The constructor to wrap.
     * @returns {Function} Returns the new wrapped function.
     */
    function createCtor(Ctor) {
      return function() {
        // Use a `switch` statement to work with class constructors. See
        // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist
        // for more details.
        var args = arguments;
        switch (args.length) {
          case 0: return new Ctor;
          case 1: return new Ctor(args[0]);
          case 2: return new Ctor(args[0], args[1]);
          case 3: return new Ctor(args[0], args[1], args[2]);
          case 4: return new Ctor(args[0], args[1], args[2], args[3]);
          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);
          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);
          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);
        }
        var thisBinding = baseCreate(Ctor.prototype),
            result = Ctor.apply(thisBinding, args);

        // Mimic the constructor's `return` behavior.
        // See https://es5.github.io/#x13.2.2 for more details.
        return isObject(result) ? result : thisBinding;
      };
    }

    /**
     * Creates a function that wraps `func` to enable currying.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {number} arity The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createCurry(func, bitmask, arity) {
      var Ctor = createCtor(func);

      function wrapper() {
        var length = arguments.length,
            args = Array(length),
            index = length,
            placeholder = getHolder(wrapper);

        while (index--) {
          args[index] = arguments[index];
        }
        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)
          ? []
          : replaceHolders(args, placeholder);

        length -= holders.length;
        if (length < arity) {
          return createRecurry(
            func, bitmask, createHybrid, wrapper.placeholder, undefined,
            args, holders, undefined, undefined, arity - length);
        }
        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;
        return apply(fn, this, args);
      }
      return wrapper;
    }

    /**
     * Creates a `_.find` or `_.findLast` function.
     *
     * @private
     * @param {Function} findIndexFunc The function to find the collection index.
     * @returns {Function} Returns the new find function.
     */
    function createFind(findIndexFunc) {
      return function(collection, predicate, fromIndex) {
        var iterable = Object(collection);
        if (!isArrayLike(collection)) {
          var iteratee = getIteratee(predicate, 3);
          collection = keys(collection);
          predicate = function(key) { return iteratee(iterable[key], key, iterable); };
        }
        var index = findIndexFunc(collection, predicate, fromIndex);
        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;
      };
    }

    /**
     * Creates a `_.flow` or `_.flowRight` function.
     *
     * @private
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new flow function.
     */
    function createFlow(fromRight) {
      return flatRest(function(funcs) {
        var length = funcs.length,
            index = length,
            prereq = LodashWrapper.prototype.thru;

        if (fromRight) {
          funcs.reverse();
        }
        while (index--) {
          var func = funcs[index];
          if (typeof func != 'function') {
            throw new TypeError(FUNC_ERROR_TEXT);
          }
          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {
            var wrapper = new LodashWrapper([], true);
          }
        }
        index = wrapper ? index : length;
        while (++index < length) {
          func = funcs[index];

          var funcName = getFuncName(func),
              data = funcName == 'wrapper' ? getData(func) : undefined;

          if (data && isLaziable(data[0]) &&
                data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) &&
                !data[4].length && data[9] == 1
              ) {
            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);
          } else {
            wrapper = (func.length == 1 && isLaziable(func))
              ? wrapper[funcName]()
              : wrapper.thru(func);
          }
        }
        return function() {
          var args = arguments,
              value = args[0];

          if (wrapper && args.length == 1 && isArray(value)) {
            return wrapper.plant(value).value();
          }
          var index = 0,
              result = length ? funcs[index].apply(this, args) : value;

          while (++index < length) {
            result = funcs[index].call(this, result);
          }
          return result;
        };
      });
    }

    /**
     * Creates a function that wraps `func` to invoke it with optional `this`
     * binding of `thisArg`, partial application, and currying.
     *
     * @private
     * @param {Function|string} func The function or method name to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {*} [thisArg] The `this` binding of `func`.
     * @param {Array} [partials] The arguments to prepend to those provided to
     *  the new function.
     * @param {Array} [holders] The `partials` placeholder indexes.
     * @param {Array} [partialsRight] The arguments to append to those provided
     *  to the new function.
     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.
     * @param {Array} [argPos] The argument positions of the new function.
     * @param {number} [ary] The arity cap of `func`.
     * @param {number} [arity] The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {
      var isAry = bitmask & WRAP_ARY_FLAG,
          isBind = bitmask & WRAP_BIND_FLAG,
          isBindKey = bitmask & WRAP_BIND_KEY_FLAG,
          isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),
          isFlip = bitmask & WRAP_FLIP_FLAG,
          Ctor = isBindKey ? undefined : createCtor(func);

      function wrapper() {
        var length = arguments.length,
            args = Array(length),
            index = length;

        while (index--) {
          args[index] = arguments[index];
        }
        if (isCurried) {
          var placeholder = getHolder(wrapper),
              holdersCount = countHolders(args, placeholder);
        }
        if (partials) {
          args = composeArgs(args, partials, holders, isCurried);
        }
        if (partialsRight) {
          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);
        }
        length -= holdersCount;
        if (isCurried && length < arity) {
          var newHolders = replaceHolders(args, placeholder);
          return createRecurry(
            func, bitmask, createHybrid, wrapper.placeholder, thisArg,
            args, newHolders, argPos, ary, arity - length
          );
        }
        var thisBinding = isBind ? thisArg : this,
            fn = isBindKey ? thisBinding[func] : func;

        length = args.length;
        if (argPos) {
          args = reorder(args, argPos);
        } else if (isFlip && length > 1) {
          args.reverse();
        }
        if (isAry && ary < length) {
          args.length = ary;
        }
        if (this && this !== root && this instanceof wrapper) {
          fn = Ctor || createCtor(fn);
        }
        return fn.apply(thisBinding, args);
      }
      return wrapper;
    }

    /**
     * Creates a function like `_.invertBy`.
     *
     * @private
     * @param {Function} setter The function to set accumulator values.
     * @param {Function} toIteratee The function to resolve iteratees.
     * @returns {Function} Returns the new inverter function.
     */
    function createInverter(setter, toIteratee) {
      return function(object, iteratee) {
        return baseInverter(object, setter, toIteratee(iteratee), {});
      };
    }

    /**
     * Creates a function that performs a mathematical operation on two values.
     *
     * @private
     * @param {Function} operator The function to perform the operation.
     * @param {number} [defaultValue] The value used for `undefined` arguments.
     * @returns {Function} Returns the new mathematical operation function.
     */
    function createMathOperation(operator, defaultValue) {
      return function(value, other) {
        var result;
        if (value === undefined && other === undefined) {
          return defaultValue;
        }
        if (value !== undefined) {
          result = value;
        }
        if (other !== undefined) {
          if (result === undefined) {
            return other;
          }
          if (typeof value == 'string' || typeof other == 'string') {
            value = baseToString(value);
            other = baseToString(other);
          } else {
            value = baseToNumber(value);
            other = baseToNumber(other);
          }
          result = operator(value, other);
        }
        return result;
      };
    }

    /**
     * Creates a function like `_.over`.
     *
     * @private
     * @param {Function} arrayFunc The function to iterate over iteratees.
     * @returns {Function} Returns the new over function.
     */
    function createOver(arrayFunc) {
      return flatRest(function(iteratees) {
        iteratees = arrayMap(iteratees, baseUnary(getIteratee()));
        return baseRest(function(args) {
          var thisArg = this;
          return arrayFunc(iteratees, function(iteratee) {
            return apply(iteratee, thisArg, args);
          });
        });
      });
    }

    /**
     * Creates the padding for `string` based on `length`. The `chars` string
     * is truncated if the number of characters exceeds `length`.
     *
     * @private
     * @param {number} length The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padding for `string`.
     */
    function createPadding(length, chars) {
      chars = chars === undefined ? ' ' : baseToString(chars);

      var charsLength = chars.length;
      if (charsLength < 2) {
        return charsLength ? baseRepeat(chars, length) : chars;
      }
      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));
      return hasUnicode(chars)
        ? castSlice(stringToArray(result), 0, length).join('')
        : result.slice(0, length);
    }

    /**
     * Creates a function that wraps `func` to invoke it with the `this` binding
     * of `thisArg` and `partials` prepended to the arguments it receives.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {*} thisArg The `this` binding of `func`.
     * @param {Array} partials The arguments to prepend to those provided to
     *  the new function.
     * @returns {Function} Returns the new wrapped function.
     */
    function createPartial(func, bitmask, thisArg, partials) {
      var isBind = bitmask & WRAP_BIND_FLAG,
          Ctor = createCtor(func);

      function wrapper() {
        var argsIndex = -1,
            argsLength = arguments.length,
            leftIndex = -1,
            leftLength = partials.length,
            args = Array(leftLength + argsLength),
            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;

        while (++leftIndex < leftLength) {
          args[leftIndex] = partials[leftIndex];
        }
        while (argsLength--) {
          args[leftIndex++] = arguments[++argsIndex];
        }
        return apply(fn, isBind ? thisArg : this, args);
      }
      return wrapper;
    }

    /**
     * Creates a `_.range` or `_.rangeRight` function.
     *
     * @private
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new range function.
     */
    function createRange(fromRight) {
      return function(start, end, step) {
        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {
          end = step = undefined;
        }
        // Ensure the sign of `-0` is preserved.
        start = toFinite(start);
        if (end === undefined) {
          end = start;
          start = 0;
        } else {
          end = toFinite(end);
        }
        step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);
        return baseRange(start, end, step, fromRight);
      };
    }

    /**
     * Creates a function that performs a relational operation on two values.
     *
     * @private
     * @param {Function} operator The function to perform the operation.
     * @returns {Function} Returns the new relational operation function.
     */
    function createRelationalOperation(operator) {
      return function(value, other) {
        if (!(typeof value == 'string' && typeof other == 'string')) {
          value = toNumber(value);
          other = toNumber(other);
        }
        return operator(value, other);
      };
    }

    /**
     * Creates a function that wraps `func` to continue currying.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {Function} wrapFunc The function to create the `func` wrapper.
     * @param {*} placeholder The placeholder value.
     * @param {*} [thisArg] The `this` binding of `func`.
     * @param {Array} [partials] The arguments to prepend to those provided to
     *  the new function.
     * @param {Array} [holders] The `partials` placeholder indexes.
     * @param {Array} [argPos] The argument positions of the new function.
     * @param {number} [ary] The arity cap of `func`.
     * @param {number} [arity] The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {
      var isCurry = bitmask & WRAP_CURRY_FLAG,
          newHolders = isCurry ? holders : undefined,
          newHoldersRight = isCurry ? undefined : holders,
          newPartials = isCurry ? partials : undefined,
          newPartialsRight = isCurry ? undefined : partials;

      bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);
      bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);

      if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {
        bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);
      }
      var newData = [
        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,
        newHoldersRight, argPos, ary, arity
      ];

      var result = wrapFunc.apply(undefined, newData);
      if (isLaziable(func)) {
        setData(result, newData);
      }
      result.placeholder = placeholder;
      return setWrapToString(result, func, bitmask);
    }

    /**
     * Creates a function like `_.round`.
     *
     * @private
     * @param {string} methodName The name of the `Math` method to use when rounding.
     * @returns {Function} Returns the new round function.
     */
    function createRound(methodName) {
      var func = Math[methodName];
      return function(number, precision) {
        number = toNumber(number);
        precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);
        if (precision && nativeIsFinite(number)) {
          // Shift with exponential notation to avoid floating-point issues.
          // See [MDN](https://mdn.io/round#Examples) for more details.
          var pair = (toString(number) + 'e').split('e'),
              value = func(pair[0] + 'e' + (+pair[1] + precision));

          pair = (toString(value) + 'e').split('e');
          return +(pair[0] + 'e' + (+pair[1] - precision));
        }
        return func(number);
      };
    }

    /**
     * Creates a set object of `values`.
     *
     * @private
     * @param {Array} values The values to add to the set.
     * @returns {Object} Returns the new set.
     */
    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {
      return new Set(values);
    };

    /**
     * Creates a `_.toPairs` or `_.toPairsIn` function.
     *
     * @private
     * @param {Function} keysFunc The function to get the keys of a given object.
     * @returns {Function} Returns the new pairs function.
     */
    function createToPairs(keysFunc) {
      return function(object) {
        var tag = getTag(object);
        if (tag == mapTag) {
          return mapToArray(object);
        }
        if (tag == setTag) {
          return setToPairs(object);
        }
        return baseToPairs(object, keysFunc(object));
      };
    }

    /**
     * Creates a function that either curries or invokes `func` with optional
     * `this` binding and partially applied arguments.
     *
     * @private
     * @param {Function|string} func The function or method name to wrap.
     * @param {number} bitmask The bitmask flags.
     *    1 - `_.bind`
     *    2 - `_.bindKey`
     *    4 - `_.curry` or `_.curryRight` of a bound function
     *    8 - `_.curry`
     *   16 - `_.curryRight`
     *   32 - `_.partial`
     *   64 - `_.partialRight`
     *  128 - `_.rearg`
     *  256 - `_.ary`
     *  512 - `_.flip`
     * @param {*} [thisArg] The `this` binding of `func`.
     * @param {Array} [partials] The arguments to be partially applied.
     * @param {Array} [holders] The `partials` placeholder indexes.
     * @param {Array} [argPos] The argument positions of the new function.
     * @param {number} [ary] The arity cap of `func`.
     * @param {number} [arity] The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {
      var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;
      if (!isBindKey && typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      var length = partials ? partials.length : 0;
      if (!length) {
        bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);
        partials = holders = undefined;
      }
      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);
      arity = arity === undefined ? arity : toInteger(arity);
      length -= holders ? holders.length : 0;

      if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {
        var partialsRight = partials,
            holdersRight = holders;

        partials = holders = undefined;
      }
      var data = isBindKey ? undefined : getData(func);

      var newData = [
        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,
        argPos, ary, arity
      ];

      if (data) {
        mergeData(newData, data);
      }
      func = newData[0];
      bitmask = newData[1];
      thisArg = newData[2];
      partials = newData[3];
      holders = newData[4];
      arity = newData[9] = newData[9] === undefined
        ? (isBindKey ? 0 : func.length)
        : nativeMax(newData[9] - length, 0);

      if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {
        bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);
      }
      if (!bitmask || bitmask == WRAP_BIND_FLAG) {
        var result = createBind(func, bitmask, thisArg);
      } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {
        result = createCurry(func, bitmask, arity);
      } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {
        result = createPartial(func, bitmask, thisArg, partials);
      } else {
        result = createHybrid.apply(undefined, newData);
      }
      var setter = data ? baseSetData : setData;
      return setWrapToString(setter(result, newData), func, bitmask);
    }

    /**
     * Used by `_.defaults` to customize its `_.assignIn` use to assign properties
     * of source objects to the destination object for all destination properties
     * that resolve to `undefined`.
     *
     * @private
     * @param {*} objValue The destination value.
     * @param {*} srcValue The source value.
     * @param {string} key The key of the property to assign.
     * @param {Object} object The parent object of `objValue`.
     * @returns {*} Returns the value to assign.
     */
    function customDefaultsAssignIn(objValue, srcValue, key, object) {
      if (objValue === undefined ||
          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {
        return srcValue;
      }
      return objValue;
    }

    /**
     * Used by `_.defaultsDeep` to customize its `_.merge` use to merge source
     * objects into destination objects that are passed thru.
     *
     * @private
     * @param {*} objValue The destination value.
     * @param {*} srcValue The source value.
     * @param {string} key The key of the property to merge.
     * @param {Object} object The parent object of `objValue`.
     * @param {Object} source The parent object of `srcValue`.
     * @param {Object} [stack] Tracks traversed source values and their merged
     *  counterparts.
     * @returns {*} Returns the value to assign.
     */
    function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {
      if (isObject(objValue) && isObject(srcValue)) {
        // Recursively merge objects and arrays (susceptible to call stack limits).
        stack.set(srcValue, objValue);
        baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);
        stack['delete'](srcValue);
      }
      return objValue;
    }

    /**
     * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain
     * objects.
     *
     * @private
     * @param {*} value The value to inspect.
     * @param {string} key The key of the property to inspect.
     * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.
     */
    function customOmitClone(value) {
      return isPlainObject(value) ? undefined : value;
    }

    /**
     * A specialized version of `baseIsEqualDeep` for arrays with support for
     * partial deep comparisons.
     *
     * @private
     * @param {Array} array The array to compare.
     * @param {Array} other The other array to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} stack Tracks traversed `array` and `other` objects.
     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.
     */
    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
          arrLength = array.length,
          othLength = other.length;

      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
        return false;
      }
      // Check that cyclic values are equal.
      var arrStacked = stack.get(array);
      var othStacked = stack.get(other);
      if (arrStacked && othStacked) {
        return arrStacked == other && othStacked == array;
      }
      var index = -1,
          result = true,
          seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;

      stack.set(array, other);
      stack.set(other, array);

      // Ignore non-index properties.
      while (++index < arrLength) {
        var arrValue = array[index],
            othValue = other[index];

        if (customizer) {
          var compared = isPartial
            ? customizer(othValue, arrValue, index, other, array, stack)
            : customizer(arrValue, othValue, index, array, other, stack);
        }
        if (compared !== undefined) {
          if (compared) {
            continue;
          }
          result = false;
          break;
        }
        // Recursively compare arrays (susceptible to call stack limits).
        if (seen) {
          if (!arraySome(other, function(othValue, othIndex) {
                if (!cacheHas(seen, othIndex) &&
                    (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
                  return seen.push(othIndex);
                }
              })) {
            result = false;
            break;
          }
        } else if (!(
              arrValue === othValue ||
                equalFunc(arrValue, othValue, bitmask, customizer, stack)
            )) {
          result = false;
          break;
        }
      }
      stack['delete'](array);
      stack['delete'](other);
      return result;
    }

    /**
     * A specialized version of `baseIsEqualDeep` for comparing objects of
     * the same `toStringTag`.
     *
     * **Note:** This function only supports comparing values with tags of
     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {string} tag The `toStringTag` of the objects to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} stack Tracks traversed `object` and `other` objects.
     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
     */
    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
      switch (tag) {
        case dataViewTag:
          if ((object.byteLength != other.byteLength) ||
              (object.byteOffset != other.byteOffset)) {
            return false;
          }
          object = object.buffer;
          other = other.buffer;

        case arrayBufferTag:
          if ((object.byteLength != other.byteLength) ||
              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {
            return false;
          }
          return true;

        case boolTag:
        case dateTag:
        case numberTag:
          // Coerce booleans to `1` or `0` and dates to milliseconds.
          // Invalid dates are coerced to `NaN`.
          return eq(+object, +other);

        case errorTag:
          return object.name == other.name && object.message == other.message;

        case regexpTag:
        case stringTag:
          // Coerce regexes to strings and treat strings, primitives and objects,
          // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring
          // for more details.
          return object == (other + '');

        case mapTag:
          var convert = mapToArray;

        case setTag:
          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;
          convert || (convert = setToArray);

          if (object.size != other.size && !isPartial) {
            return false;
          }
          // Assume cyclic values are equal.
          var stacked = stack.get(object);
          if (stacked) {
            return stacked == other;
          }
          bitmask |= COMPARE_UNORDERED_FLAG;

          // Recursively compare objects (susceptible to call stack limits).
          stack.set(object, other);
          var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
          stack['delete'](object);
          return result;

        case symbolTag:
          if (symbolValueOf) {
            return symbolValueOf.call(object) == symbolValueOf.call(other);
          }
      }
      return false;
    }

    /**
     * A specialized version of `baseIsEqualDeep` for objects with support for
     * partial deep comparisons.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} stack Tracks traversed `object` and `other` objects.
     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
     */
    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
          objProps = getAllKeys(object),
          objLength = objProps.length,
          othProps = getAllKeys(other),
          othLength = othProps.length;

      if (objLength != othLength && !isPartial) {
        return false;
      }
      var index = objLength;
      while (index--) {
        var key = objProps[index];
        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {
          return false;
        }
      }
      // Check that cyclic values are equal.
      var objStacked = stack.get(object);
      var othStacked = stack.get(other);
      if (objStacked && othStacked) {
        return objStacked == other && othStacked == object;
      }
      var result = true;
      stack.set(object, other);
      stack.set(other, object);

      var skipCtor = isPartial;
      while (++index < objLength) {
        key = objProps[index];
        var objValue = object[key],
            othValue = other[key];

        if (customizer) {
          var compared = isPartial
            ? customizer(othValue, objValue, key, other, object, stack)
            : customizer(objValue, othValue, key, object, other, stack);
        }
        // Recursively compare objects (susceptible to call stack limits).
        if (!(compared === undefined
              ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))
              : compared
            )) {
          result = false;
          break;
        }
        skipCtor || (skipCtor = key == 'constructor');
      }
      if (result && !skipCtor) {
        var objCtor = object.constructor,
            othCtor = other.constructor;

        // Non `Object` object instances with different constructors are not equal.
        if (objCtor != othCtor &&
            ('constructor' in object && 'constructor' in other) &&
            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&
              typeof othCtor == 'function' && othCtor instanceof othCtor)) {
          result = false;
        }
      }
      stack['delete'](object);
      stack['delete'](other);
      return result;
    }

    /**
     * A specialized version of `baseRest` which flattens the rest array.
     *
     * @private
     * @param {Function} func The function to apply a rest parameter to.
     * @returns {Function} Returns the new function.
     */
    function flatRest(func) {
      return setToString(overRest(func, undefined, flatten), func + '');
    }

    /**
     * Creates an array of own enumerable property names and symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names and symbols.
     */
    function getAllKeys(object) {
      return baseGetAllKeys(object, keys, getSymbols);
    }

    /**
     * Creates an array of own and inherited enumerable property names and
     * symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names and symbols.
     */
    function getAllKeysIn(object) {
      return baseGetAllKeys(object, keysIn, getSymbolsIn);
    }

    /**
     * Gets metadata for `func`.
     *
     * @private
     * @param {Function} func The function to query.
     * @returns {*} Returns the metadata for `func`.
     */
    var getData = !metaMap ? noop : function(func) {
      return metaMap.get(func);
    };

    /**
     * Gets the name of `func`.
     *
     * @private
     * @param {Function} func The function to query.
     * @returns {string} Returns the function name.
     */
    function getFuncName(func) {
      var result = (func.name + ''),
          array = realNames[result],
          length = hasOwnProperty.call(realNames, result) ? array.length : 0;

      while (length--) {
        var data = array[length],
            otherFunc = data.func;
        if (otherFunc == null || otherFunc == func) {
          return data.name;
        }
      }
      return result;
    }

    /**
     * Gets the argument placeholder value for `func`.
     *
     * @private
     * @param {Function} func The function to inspect.
     * @returns {*} Returns the placeholder value.
     */
    function getHolder(func) {
      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;
      return object.placeholder;
    }

    /**
     * Gets the appropriate "iteratee" function. If `_.iteratee` is customized,
     * this function returns the custom method, otherwise it returns `baseIteratee`.
     * If arguments are provided, the chosen function is invoked with them and
     * its result is returned.
     *
     * @private
     * @param {*} [value] The value to convert to an iteratee.
     * @param {number} [arity] The arity of the created iteratee.
     * @returns {Function} Returns the chosen function or its result.
     */
    function getIteratee() {
      var result = lodash.iteratee || iteratee;
      result = result === iteratee ? baseIteratee : result;
      return arguments.length ? result(arguments[0], arguments[1]) : result;
    }

    /**
     * Gets the data for `map`.
     *
     * @private
     * @param {Object} map The map to query.
     * @param {string} key The reference key.
     * @returns {*} Returns the map data.
     */
    function getMapData(map, key) {
      var data = map.__data__;
      return isKeyable(key)
        ? data[typeof key == 'string' ? 'string' : 'hash']
        : data.map;
    }

    /**
     * Gets the property names, values, and compare flags of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the match data of `object`.
     */
    function getMatchData(object) {
      var result = keys(object),
          length = result.length;

      while (length--) {
        var key = result[length],
            value = object[key];

        result[length] = [key, value, isStrictComparable(value)];
      }
      return result;
    }

    /**
     * Gets the native function at `key` of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {string} key The key of the method to get.
     * @returns {*} Returns the function if it's native, else `undefined`.
     */
    function getNative(object, key) {
      var value = getValue(object, key);
      return baseIsNative(value) ? value : undefined;
    }

    /**
     * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
     *
     * @private
     * @param {*} value The value to query.
     * @returns {string} Returns the raw `toStringTag`.
     */
    function getRawTag(value) {
      var isOwn = hasOwnProperty.call(value, symToStringTag),
          tag = value[symToStringTag];

      try {
        value[symToStringTag] = undefined;
        var unmasked = true;
      } catch (e) {}

      var result = nativeObjectToString.call(value);
      if (unmasked) {
        if (isOwn) {
          value[symToStringTag] = tag;
        } else {
          delete value[symToStringTag];
        }
      }
      return result;
    }

    /**
     * Creates an array of the own enumerable symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of symbols.
     */
    var getSymbols = !nativeGetSymbols ? stubArray : function(object) {
      if (object == null) {
        return [];
      }
      object = Object(object);
      return arrayFilter(nativeGetSymbols(object), function(symbol) {
        return propertyIsEnumerable.call(object, symbol);
      });
    };

    /**
     * Creates an array of the own and inherited enumerable symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of symbols.
     */
    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {
      var result = [];
      while (object) {
        arrayPush(result, getSymbols(object));
        object = getPrototype(object);
      }
      return result;
    };

    /**
     * Gets the `toStringTag` of `value`.
     *
     * @private
     * @param {*} value The value to query.
     * @returns {string} Returns the `toStringTag`.
     */
    var getTag = baseGetTag;

    // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.
    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||
        (Map && getTag(new Map) != mapTag) ||
        (Promise && getTag(Promise.resolve()) != promiseTag) ||
        (Set && getTag(new Set) != setTag) ||
        (WeakMap && getTag(new WeakMap) != weakMapTag)) {
      getTag = function(value) {
        var result = baseGetTag(value),
            Ctor = result == objectTag ? value.constructor : undefined,
            ctorString = Ctor ? toSource(Ctor) : '';

        if (ctorString) {
          switch (ctorString) {
            case dataViewCtorString: return dataViewTag;
            case mapCtorString: return mapTag;
            case promiseCtorString: return promiseTag;
            case setCtorString: return setTag;
            case weakMapCtorString: return weakMapTag;
          }
        }
        return result;
      };
    }

    /**
     * Gets the view, applying any `transforms` to the `start` and `end` positions.
     *
     * @private
     * @param {number} start The start of the view.
     * @param {number} end The end of the view.
     * @param {Array} transforms The transformations to apply to the view.
     * @returns {Object} Returns an object containing the `start` and `end`
     *  positions of the view.
     */
    function getView(start, end, transforms) {
      var index = -1,
          length = transforms.length;

      while (++index < length) {
        var data = transforms[index],
            size = data.size;

        switch (data.type) {
          case 'drop':      start += size; break;
          case 'dropRight': end -= size; break;
          case 'take':      end = nativeMin(end, start + size); break;
          case 'takeRight': start = nativeMax(start, end - size); break;
        }
      }
      return { 'start': start, 'end': end };
    }

    /**
     * Extracts wrapper details from the `source` body comment.
     *
     * @private
     * @param {string} source The source to inspect.
     * @returns {Array} Returns the wrapper details.
     */
    function getWrapDetails(source) {
      var match = source.match(reWrapDetails);
      return match ? match[1].split(reSplitDetails) : [];
    }

    /**
     * Checks if `path` exists on `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array|string} path The path to check.
     * @param {Function} hasFunc The function to check properties.
     * @returns {boolean} Returns `true` if `path` exists, else `false`.
     */
    function hasPath(object, path, hasFunc) {
      path = castPath(path, object);

      var index = -1,
          length = path.length,
          result = false;

      while (++index < length) {
        var key = toKey(path[index]);
        if (!(result = object != null && hasFunc(object, key))) {
          break;
        }
        object = object[key];
      }
      if (result || ++index != length) {
        return result;
      }
      length = object == null ? 0 : object.length;
      return !!length && isLength(length) && isIndex(key, length) &&
        (isArray(object) || isArguments(object));
    }

    /**
     * Initializes an array clone.
     *
     * @private
     * @param {Array} array The array to clone.
     * @returns {Array} Returns the initialized clone.
     */
    function initCloneArray(array) {
      var length = array.length,
          result = new array.constructor(length);

      // Add properties assigned by `RegExp#exec`.
      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {
        result.index = array.index;
        result.input = array.input;
      }
      return result;
    }

    /**
     * Initializes an object clone.
     *
     * @private
     * @param {Object} object The object to clone.
     * @returns {Object} Returns the initialized clone.
     */
    function initCloneObject(object) {
      return (typeof object.constructor == 'function' && !isPrototype(object))
        ? baseCreate(getPrototype(object))
        : {};
    }

    /**
     * Initializes an object clone based on its `toStringTag`.
     *
     * **Note:** This function only supports cloning values with tags of
     * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.
     *
     * @private
     * @param {Object} object The object to clone.
     * @param {string} tag The `toStringTag` of the object to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Object} Returns the initialized clone.
     */
    function initCloneByTag(object, tag, isDeep) {
      var Ctor = object.constructor;
      switch (tag) {
        case arrayBufferTag:
          return cloneArrayBuffer(object);

        case boolTag:
        case dateTag:
          return new Ctor(+object);

        case dataViewTag:
          return cloneDataView(object, isDeep);

        case float32Tag: case float64Tag:
        case int8Tag: case int16Tag: case int32Tag:
        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:
          return cloneTypedArray(object, isDeep);

        case mapTag:
          return new Ctor;

        case numberTag:
        case stringTag:
          return new Ctor(object);

        case regexpTag:
          return cloneRegExp(object);

        case setTag:
          return new Ctor;

        case symbolTag:
          return cloneSymbol(object);
      }
    }

    /**
     * Inserts wrapper `details` in a comment at the top of the `source` body.
     *
     * @private
     * @param {string} source The source to modify.
     * @returns {Array} details The details to insert.
     * @returns {string} Returns the modified source.
     */
    function insertWrapDetails(source, details) {
      var length = details.length;
      if (!length) {
        return source;
      }
      var lastIndex = length - 1;
      details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];
      details = details.join(length > 2 ? ', ' : ' ');
      return source.replace(reWrapComment, '{\n/* [wrapped with ' + details + '] */\n');
    }

    /**
     * Checks if `value` is a flattenable `arguments` object or array.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.
     */
    function isFlattenable(value) {
      return isArray(value) || isArguments(value) ||
        !!(spreadableSymbol && value && value[spreadableSymbol]);
    }

    /**
     * Checks if `value` is a valid array-like index.
     *
     * @private
     * @param {*} value The value to check.
     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
     */
    function isIndex(value, length) {
      var type = typeof value;
      length = length == null ? MAX_SAFE_INTEGER : length;

      return !!length &&
        (type == 'number' ||
          (type != 'symbol' && reIsUint.test(value))) &&
            (value > -1 && value % 1 == 0 && value < length);
    }

    /**
     * Checks if the given arguments are from an iteratee call.
     *
     * @private
     * @param {*} value The potential iteratee value argument.
     * @param {*} index The potential iteratee index or key argument.
     * @param {*} object The potential iteratee object argument.
     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,
     *  else `false`.
     */
    function isIterateeCall(value, index, object) {
      if (!isObject(object)) {
        return false;
      }
      var type = typeof index;
      if (type == 'number'
            ? (isArrayLike(object) && isIndex(index, object.length))
            : (type == 'string' && index in object)
          ) {
        return eq(object[index], value);
      }
      return false;
    }

    /**
     * Checks if `value` is a property name and not a property path.
     *
     * @private
     * @param {*} value The value to check.
     * @param {Object} [object] The object to query keys on.
     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.
     */
    function isKey(value, object) {
      if (isArray(value)) {
        return false;
      }
      var type = typeof value;
      if (type == 'number' || type == 'symbol' || type == 'boolean' ||
          value == null || isSymbol(value)) {
        return true;
      }
      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||
        (object != null && value in Object(object));
    }

    /**
     * Checks if `value` is suitable for use as unique object key.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
     */
    function isKeyable(value) {
      var type = typeof value;
      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')
        ? (value !== '__proto__')
        : (value === null);
    }

    /**
     * Checks if `func` has a lazy counterpart.
     *
     * @private
     * @param {Function} func The function to check.
     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,
     *  else `false`.
     */
    function isLaziable(func) {
      var funcName = getFuncName(func),
          other = lodash[funcName];

      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {
        return false;
      }
      if (func === other) {
        return true;
      }
      var data = getData(other);
      return !!data && func === data[0];
    }

    /**
     * Checks if `func` has its source masked.
     *
     * @private
     * @param {Function} func The function to check.
     * @returns {boolean} Returns `true` if `func` is masked, else `false`.
     */
    function isMasked(func) {
      return !!maskSrcKey && (maskSrcKey in func);
    }

    /**
     * Checks if `func` is capable of being masked.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.
     */
    var isMaskable = coreJsData ? isFunction : stubFalse;

    /**
     * Checks if `value` is likely a prototype object.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
     */
    function isPrototype(value) {
      var Ctor = value && value.constructor,
          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;

      return value === proto;
    }

    /**
     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` if suitable for strict
     *  equality comparisons, else `false`.
     */
    function isStrictComparable(value) {
      return value === value && !isObject(value);
    }

    /**
     * A specialized version of `matchesProperty` for source values suitable
     * for strict equality comparisons, i.e. `===`.
     *
     * @private
     * @param {string} key The key of the property to get.
     * @param {*} srcValue The value to match.
     * @returns {Function} Returns the new spec function.
     */
    function matchesStrictComparable(key, srcValue) {
      return function(object) {
        if (object == null) {
          return false;
        }
        return object[key] === srcValue &&
          (srcValue !== undefined || (key in Object(object)));
      };
    }

    /**
     * A specialized version of `_.memoize` which clears the memoized function's
     * cache when it exceeds `MAX_MEMOIZE_SIZE`.
     *
     * @private
     * @param {Function} func The function to have its output memoized.
     * @returns {Function} Returns the new memoized function.
     */
    function memoizeCapped(func) {
      var result = memoize(func, function(key) {
        if (cache.size === MAX_MEMOIZE_SIZE) {
          cache.clear();
        }
        return key;
      });

      var cache = result.cache;
      return result;
    }

    /**
     * Merges the function metadata of `source` into `data`.
     *
     * Merging metadata reduces the number of wrappers used to invoke a function.
     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`
     * may be applied regardless of execution order. Methods like `_.ary` and
     * `_.rearg` modify function arguments, making the order in which they are
     * executed important, preventing the merging of metadata. However, we make
     * an exception for a safe combined case where curried functions have `_.ary`
     * and or `_.rearg` applied.
     *
     * @private
     * @param {Array} data The destination metadata.
     * @param {Array} source The source metadata.
     * @returns {Array} Returns `data`.
     */
    function mergeData(data, source) {
      var bitmask = data[1],
          srcBitmask = source[1],
          newBitmask = bitmask | srcBitmask,
          isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);

      var isCombo =
        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||
        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||
        ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));

      // Exit early if metadata can't be merged.
      if (!(isCommon || isCombo)) {
        return data;
      }
      // Use source `thisArg` if available.
      if (srcBitmask & WRAP_BIND_FLAG) {
        data[2] = source[2];
        // Set when currying a bound function.
        newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;
      }
      // Compose partial arguments.
      var value = source[3];
      if (value) {
        var partials = data[3];
        data[3] = partials ? composeArgs(partials, value, source[4]) : value;
        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];
      }
      // Compose partial right arguments.
      value = source[5];
      if (value) {
        partials = data[5];
        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;
        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];
      }
      // Use source `argPos` if available.
      value = source[7];
      if (value) {
        data[7] = value;
      }
      // Use source `ary` if it's smaller.
      if (srcBitmask & WRAP_ARY_FLAG) {
        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);
      }
      // Use source `arity` if one is not provided.
      if (data[9] == null) {
        data[9] = source[9];
      }
      // Use source `func` and merge bitmasks.
      data[0] = source[0];
      data[1] = newBitmask;

      return data;
    }

    /**
     * This function is like
     * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
     * except that it includes inherited enumerable properties.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     */
    function nativeKeysIn(object) {
      var result = [];
      if (object != null) {
        for (var key in Object(object)) {
          result.push(key);
        }
      }
      return result;
    }

    /**
     * Converts `value` to a string using `Object.prototype.toString`.
     *
     * @private
     * @param {*} value The value to convert.
     * @returns {string} Returns the converted string.
     */
    function objectToString(value) {
      return nativeObjectToString.call(value);
    }

    /**
     * A specialized version of `baseRest` which transforms the rest array.
     *
     * @private
     * @param {Function} func The function to apply a rest parameter to.
     * @param {number} [start=func.length-1] The start position of the rest parameter.
     * @param {Function} transform The rest array transform.
     * @returns {Function} Returns the new function.
     */
    function overRest(func, start, transform) {
      start = nativeMax(start === undefined ? (func.length - 1) : start, 0);
      return function() {
        var args = arguments,
            index = -1,
            length = nativeMax(args.length - start, 0),
            array = Array(length);

        while (++index < length) {
          array[index] = args[start + index];
        }
        index = -1;
        var otherArgs = Array(start + 1);
        while (++index < start) {
          otherArgs[index] = args[index];
        }
        otherArgs[start] = transform(array);
        return apply(func, this, otherArgs);
      };
    }

    /**
     * Gets the parent value at `path` of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array} path The path to get the parent value of.
     * @returns {*} Returns the parent value.
     */
    function parent(object, path) {
      return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));
    }

    /**
     * Reorder `array` according to the specified indexes where the element at
     * the first index is assigned as the first element, the element at
     * the second index is assigned as the second element, and so on.
     *
     * @private
     * @param {Array} array The array to reorder.
     * @param {Array} indexes The arranged array indexes.
     * @returns {Array} Returns `array`.
     */
    function reorder(array, indexes) {
      var arrLength = array.length,
          length = nativeMin(indexes.length, arrLength),
          oldArray = copyArray(array);

      while (length--) {
        var index = indexes[length];
        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;
      }
      return array;
    }

    /**
     * Gets the value at `key`, unless `key` is "__proto__" or "constructor".
     *
     * @private
     * @param {Object} object The object to query.
     * @param {string} key The key of the property to get.
     * @returns {*} Returns the property value.
     */
    function safeGet(object, key) {
      if (key === 'constructor' && typeof object[key] === 'function') {
        return;
      }

      if (key == '__proto__') {
        return;
      }

      return object[key];
    }

    /**
     * Sets metadata for `func`.
     *
     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short
     * period of time, it will trip its breaker and transition to an identity
     * function to avoid garbage collection pauses in V8. See
     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)
     * for more details.
     *
     * @private
     * @param {Function} func The function to associate metadata with.
     * @param {*} data The metadata.
     * @returns {Function} Returns `func`.
     */
    var setData = shortOut(baseSetData);

    /**
     * A simple wrapper around the global [`setTimeout`](https://mdn.io/setTimeout).
     *
     * @private
     * @param {Function} func The function to delay.
     * @param {number} wait The number of milliseconds to delay invocation.
     * @returns {number|Object} Returns the timer id or timeout object.
     */
    var setTimeout = ctxSetTimeout || function(func, wait) {
      return root.setTimeout(func, wait);
    };

    /**
     * Sets the `toString` method of `func` to return `string`.
     *
     * @private
     * @param {Function} func The function to modify.
     * @param {Function} string The `toString` result.
     * @returns {Function} Returns `func`.
     */
    var setToString = shortOut(baseSetToString);

    /**
     * Sets the `toString` method of `wrapper` to mimic the source of `reference`
     * with wrapper details in a comment at the top of the source body.
     *
     * @private
     * @param {Function} wrapper The function to modify.
     * @param {Function} reference The reference function.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @returns {Function} Returns `wrapper`.
     */
    function setWrapToString(wrapper, reference, bitmask) {
      var source = (reference + '');
      return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));
    }

    /**
     * Creates a function that'll short out and invoke `identity` instead
     * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`
     * milliseconds.
     *
     * @private
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new shortable function.
     */
    function shortOut(func) {
      var count = 0,
          lastCalled = 0;

      return function() {
        var stamp = nativeNow(),
            remaining = HOT_SPAN - (stamp - lastCalled);

        lastCalled = stamp;
        if (remaining > 0) {
          if (++count >= HOT_COUNT) {
            return arguments[0];
          }
        } else {
          count = 0;
        }
        return func.apply(undefined, arguments);
      };
    }

    /**
     * A specialized version of `_.shuffle` which mutates and sets the size of `array`.
     *
     * @private
     * @param {Array} array The array to shuffle.
     * @param {number} [size=array.length] The size of `array`.
     * @returns {Array} Returns `array`.
     */
    function shuffleSelf(array, size) {
      var index = -1,
          length = array.length,
          lastIndex = length - 1;

      size = size === undefined ? length : size;
      while (++index < size) {
        var rand = baseRandom(index, lastIndex),
            value = array[rand];

        array[rand] = array[index];
        array[index] = value;
      }
      array.length = size;
      return array;
    }

    /**
     * Converts `string` to a property path array.
     *
     * @private
     * @param {string} string The string to convert.
     * @returns {Array} Returns the property path array.
     */
    var stringToPath = memoizeCapped(function(string) {
      var result = [];
      if (string.charCodeAt(0) === 46 /* . */) {
        result.push('');
      }
      string.replace(rePropName, function(match, number, quote, subString) {
        result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));
      });
      return result;
    });

    /**
     * Converts `value` to a string key if it's not a string or symbol.
     *
     * @private
     * @param {*} value The value to inspect.
     * @returns {string|symbol} Returns the key.
     */
    function toKey(value) {
      if (typeof value == 'string' || isSymbol(value)) {
        return value;
      }
      var result = (value + '');
      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
    }

    /**
     * Converts `func` to its source code.
     *
     * @private
     * @param {Function} func The function to convert.
     * @returns {string} Returns the source code.
     */
    function toSource(func) {
      if (func != null) {
        try {
          return funcToString.call(func);
        } catch (e) {}
        try {
          return (func + '');
        } catch (e) {}
      }
      return '';
    }

    /**
     * Updates wrapper `details` based on `bitmask` flags.
     *
     * @private
     * @returns {Array} details The details to modify.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @returns {Array} Returns `details`.
     */
    function updateWrapDetails(details, bitmask) {
      arrayEach(wrapFlags, function(pair) {
        var value = '_.' + pair[0];
        if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {
          details.push(value);
        }
      });
      return details.sort();
    }

    /**
     * Creates a clone of `wrapper`.
     *
     * @private
     * @param {Object} wrapper The wrapper to clone.
     * @returns {Object} Returns the cloned wrapper.
     */
    function wrapperClone(wrapper) {
      if (wrapper instanceof LazyWrapper) {
        return wrapper.clone();
      }
      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);
      result.__actions__ = copyArray(wrapper.__actions__);
      result.__index__  = wrapper.__index__;
      result.__values__ = wrapper.__values__;
      return result;
    }

    /*------------------------------------------------------------------------*/

    /**
     * Creates an array of elements split into groups the length of `size`.
     * If `array` can't be split evenly, the final chunk will be the remaining
     * elements.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to process.
     * @param {number} [size=1] The length of each chunk
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the new array of chunks.
     * @example
     *
     * _.chunk(['a', 'b', 'c', 'd'], 2);
     * // => [['a', 'b'], ['c', 'd']]
     *
     * _.chunk(['a', 'b', 'c', 'd'], 3);
     * // => [['a', 'b', 'c'], ['d']]
     */
    function chunk(array, size, guard) {
      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {
        size = 1;
      } else {
        size = nativeMax(toInteger(size), 0);
      }
      var length = array == null ? 0 : array.length;
      if (!length || size < 1) {
        return [];
      }
      var index = 0,
          resIndex = 0,
          result = Array(nativeCeil(length / size));

      while (index < length) {
        result[resIndex++] = baseSlice(array, index, (index += size));
      }
      return result;
    }

    /**
     * Creates an array with all falsey values removed. The values `false`, `null`,
     * `0`, `""`, `undefined`, and `NaN` are falsey.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to compact.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * _.compact([0, 1, false, 2, '', 3]);
     * // => [1, 2, 3]
     */
    function compact(array) {
      var index = -1,
          length = array == null ? 0 : array.length,
          resIndex = 0,
          result = [];

      while (++index < length) {
        var value = array[index];
        if (value) {
          result[resIndex++] = value;
        }
      }
      return result;
    }

    /**
     * Creates a new array concatenating `array` with any additional arrays
     * and/or values.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to concatenate.
     * @param {...*} [values] The values to concatenate.
     * @returns {Array} Returns the new concatenated array.
     * @example
     *
     * var array = [1];
     * var other = _.concat(array, 2, [3], [[4]]);
     *
     * console.log(other);
     * // => [1, 2, 3, [4]]
     *
     * console.log(array);
     * // => [1]
     */
    function concat() {
      var length = arguments.length;
      if (!length) {
        return [];
      }
      var args = Array(length - 1),
          array = arguments[0],
          index = length;

      while (index--) {
        args[index - 1] = arguments[index];
      }
      return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));
    }

    /**
     * Creates an array of `array` values not included in the other given arrays
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons. The order and references of result values are
     * determined by the first array.
     *
     * **Note:** Unlike `_.pullAll`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...Array} [values] The values to exclude.
     * @returns {Array} Returns the new array of filtered values.
     * @see _.without, _.xor
     * @example
     *
     * _.difference([2, 1], [2, 3]);
     * // => [1]
     */
    var difference = baseRest(function(array, values) {
      return isArrayLikeObject(array)
        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))
        : [];
    });

    /**
     * This method is like `_.difference` except that it accepts `iteratee` which
     * is invoked for each element of `array` and `values` to generate the criterion
     * by which they're compared. The order and references of result values are
     * determined by the first array. The iteratee is invoked with one argument:
     * (value).
     *
     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...Array} [values] The values to exclude.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);
     * // => [1.2]
     *
     * // The `_.property` iteratee shorthand.
     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');
     * // => [{ 'x': 2 }]
     */
    var differenceBy = baseRest(function(array, values) {
      var iteratee = last(values);
      if (isArrayLikeObject(iteratee)) {
        iteratee = undefined;
      }
      return isArrayLikeObject(array)
        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2))
        : [];
    });

    /**
     * This method is like `_.difference` except that it accepts `comparator`
     * which is invoked to compare elements of `array` to `values`. The order and
     * references of result values are determined by the first array. The comparator
     * is invoked with two arguments: (arrVal, othVal).
     *
     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...Array} [values] The values to exclude.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     *
     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);
     * // => [{ 'x': 2, 'y': 1 }]
     */
    var differenceWith = baseRest(function(array, values) {
      var comparator = last(values);
      if (isArrayLikeObject(comparator)) {
        comparator = undefined;
      }
      return isArrayLikeObject(array)
        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)
        : [];
    });

    /**
     * Creates a slice of `array` with `n` elements dropped from the beginning.
     *
     * @static
     * @memberOf _
     * @since 0.5.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to drop.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.drop([1, 2, 3]);
     * // => [2, 3]
     *
     * _.drop([1, 2, 3], 2);
     * // => [3]
     *
     * _.drop([1, 2, 3], 5);
     * // => []
     *
     * _.drop([1, 2, 3], 0);
     * // => [1, 2, 3]
     */
    function drop(array, n, guard) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      n = (guard || n === undefined) ? 1 : toInteger(n);
      return baseSlice(array, n < 0 ? 0 : n, length);
    }

    /**
     * Creates a slice of `array` with `n` elements dropped from the end.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to drop.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.dropRight([1, 2, 3]);
     * // => [1, 2]
     *
     * _.dropRight([1, 2, 3], 2);
     * // => [1]
     *
     * _.dropRight([1, 2, 3], 5);
     * // => []
     *
     * _.dropRight([1, 2, 3], 0);
     * // => [1, 2, 3]
     */
    function dropRight(array, n, guard) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      n = (guard || n === undefined) ? 1 : toInteger(n);
      n = length - n;
      return baseSlice(array, 0, n < 0 ? 0 : n);
    }

    /**
     * Creates a slice of `array` excluding elements dropped from the end.
     * Elements are dropped until `predicate` returns falsey. The predicate is
     * invoked with three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': true },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': false }
     * ];
     *
     * _.dropRightWhile(users, function(o) { return !o.active; });
     * // => objects for ['barney']
     *
     * // The `_.matches` iteratee shorthand.
     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });
     * // => objects for ['barney', 'fred']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.dropRightWhile(users, ['active', false]);
     * // => objects for ['barney']
     *
     * // The `_.property` iteratee shorthand.
     * _.dropRightWhile(users, 'active');
     * // => objects for ['barney', 'fred', 'pebbles']
     */
    function dropRightWhile(array, predicate) {
      return (array && array.length)
        ? baseWhile(array, getIteratee(predicate, 3), true, true)
        : [];
    }

    /**
     * Creates a slice of `array` excluding elements dropped from the beginning.
     * Elements are dropped until `predicate` returns falsey. The predicate is
     * invoked with three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': false },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': true }
     * ];
     *
     * _.dropWhile(users, function(o) { return !o.active; });
     * // => objects for ['pebbles']
     *
     * // The `_.matches` iteratee shorthand.
     * _.dropWhile(users, { 'user': 'barney', 'active': false });
     * // => objects for ['fred', 'pebbles']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.dropWhile(users, ['active', false]);
     * // => objects for ['pebbles']
     *
     * // The `_.property` iteratee shorthand.
     * _.dropWhile(users, 'active');
     * // => objects for ['barney', 'fred', 'pebbles']
     */
    function dropWhile(array, predicate) {
      return (array && array.length)
        ? baseWhile(array, getIteratee(predicate, 3), true)
        : [];
    }

    /**
     * Fills elements of `array` with `value` from `start` up to, but not
     * including, `end`.
     *
     * **Note:** This method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 3.2.0
     * @category Array
     * @param {Array} array The array to fill.
     * @param {*} value The value to fill `array` with.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [1, 2, 3];
     *
     * _.fill(array, 'a');
     * console.log(array);
     * // => ['a', 'a', 'a']
     *
     * _.fill(Array(3), 2);
     * // => [2, 2, 2]
     *
     * _.fill([4, 6, 8, 10], '*', 1, 3);
     * // => [4, '*', '*', 10]
     */
    function fill(array, value, start, end) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {
        start = 0;
        end = length;
      }
      return baseFill(array, value, start, end);
    }

    /**
     * This method is like `_.find` except that it returns the index of the first
     * element `predicate` returns truthy for instead of the element itself.
     *
     * @static
     * @memberOf _
     * @since 1.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=0] The index to search from.
     * @returns {number} Returns the index of the found element, else `-1`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': false },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': true }
     * ];
     *
     * _.findIndex(users, function(o) { return o.user == 'barney'; });
     * // => 0
     *
     * // The `_.matches` iteratee shorthand.
     * _.findIndex(users, { 'user': 'fred', 'active': false });
     * // => 1
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findIndex(users, ['active', false]);
     * // => 0
     *
     * // The `_.property` iteratee shorthand.
     * _.findIndex(users, 'active');
     * // => 2
     */
    function findIndex(array, predicate, fromIndex) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return -1;
      }
      var index = fromIndex == null ? 0 : toInteger(fromIndex);
      if (index < 0) {
        index = nativeMax(length + index, 0);
      }
      return baseFindIndex(array, getIteratee(predicate, 3), index);
    }

    /**
     * This method is like `_.findIndex` except that it iterates over elements
     * of `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=array.length-1] The index to search from.
     * @returns {number} Returns the index of the found element, else `-1`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': true },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': false }
     * ];
     *
     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });
     * // => 2
     *
     * // The `_.matches` iteratee shorthand.
     * _.findLastIndex(users, { 'user': 'barney', 'active': true });
     * // => 0
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findLastIndex(users, ['active', false]);
     * // => 2
     *
     * // The `_.property` iteratee shorthand.
     * _.findLastIndex(users, 'active');
     * // => 0
     */
    function findLastIndex(array, predicate, fromIndex) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return -1;
      }
      var index = length - 1;
      if (fromIndex !== undefined) {
        index = toInteger(fromIndex);
        index = fromIndex < 0
          ? nativeMax(length + index, 0)
          : nativeMin(index, length - 1);
      }
      return baseFindIndex(array, getIteratee(predicate, 3), index, true);
    }

    /**
     * Flattens `array` a single level deep.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to flatten.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * _.flatten([1, [2, [3, [4]], 5]]);
     * // => [1, 2, [3, [4]], 5]
     */
    function flatten(array) {
      var length = array == null ? 0 : array.length;
      return length ? baseFlatten(array, 1) : [];
    }

    /**
     * Recursively flattens `array`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to flatten.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * _.flattenDeep([1, [2, [3, [4]], 5]]);
     * // => [1, 2, 3, 4, 5]
     */
    function flattenDeep(array) {
      var length = array == null ? 0 : array.length;
      return length ? baseFlatten(array, INFINITY) : [];
    }

    /**
     * Recursively flatten `array` up to `depth` times.
     *
     * @static
     * @memberOf _
     * @since 4.4.0
     * @category Array
     * @param {Array} array The array to flatten.
     * @param {number} [depth=1] The maximum recursion depth.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * var array = [1, [2, [3, [4]], 5]];
     *
     * _.flattenDepth(array, 1);
     * // => [1, 2, [3, [4]], 5]
     *
     * _.flattenDepth(array, 2);
     * // => [1, 2, 3, [4], 5]
     */
    function flattenDepth(array, depth) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      depth = depth === undefined ? 1 : toInteger(depth);
      return baseFlatten(array, depth);
    }

    /**
     * The inverse of `_.toPairs`; this method returns an object composed
     * from key-value `pairs`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} pairs The key-value pairs.
     * @returns {Object} Returns the new object.
     * @example
     *
     * _.fromPairs([['a', 1], ['b', 2]]);
     * // => { 'a': 1, 'b': 2 }
     */
    function fromPairs(pairs) {
      var index = -1,
          length = pairs == null ? 0 : pairs.length,
          result = {};

      while (++index < length) {
        var pair = pairs[index];
        result[pair[0]] = pair[1];
      }
      return result;
    }

    /**
     * Gets the first element of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @alias first
     * @category Array
     * @param {Array} array The array to query.
     * @returns {*} Returns the first element of `array`.
     * @example
     *
     * _.head([1, 2, 3]);
     * // => 1
     *
     * _.head([]);
     * // => undefined
     */
    function head(array) {
      return (array && array.length) ? array[0] : undefined;
    }

    /**
     * Gets the index at which the first occurrence of `value` is found in `array`
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons. If `fromIndex` is negative, it's used as the
     * offset from the end of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @param {number} [fromIndex=0] The index to search from.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.indexOf([1, 2, 1, 2], 2);
     * // => 1
     *
     * // Search from the `fromIndex`.
     * _.indexOf([1, 2, 1, 2], 2, 2);
     * // => 3
     */
    function indexOf(array, value, fromIndex) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return -1;
      }
      var index = fromIndex == null ? 0 : toInteger(fromIndex);
      if (index < 0) {
        index = nativeMax(length + index, 0);
      }
      return baseIndexOf(array, value, index);
    }

    /**
     * Gets all but the last element of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to query.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.initial([1, 2, 3]);
     * // => [1, 2]
     */
    function initial(array) {
      var length = array == null ? 0 : array.length;
      return length ? baseSlice(array, 0, -1) : [];
    }

    /**
     * Creates an array of unique values that are included in all given arrays
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons. The order and references of result values are
     * determined by the first array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @returns {Array} Returns the new array of intersecting values.
     * @example
     *
     * _.intersection([2, 1], [2, 3]);
     * // => [2]
     */
    var intersection = baseRest(function(arrays) {
      var mapped = arrayMap(arrays, castArrayLikeObject);
      return (mapped.length && mapped[0] === arrays[0])
        ? baseIntersection(mapped)
        : [];
    });

    /**
     * This method is like `_.intersection` except that it accepts `iteratee`
     * which is invoked for each element of each `arrays` to generate the criterion
     * by which they're compared. The order and references of result values are
     * determined by the first array. The iteratee is invoked with one argument:
     * (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of intersecting values.
     * @example
     *
     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);
     * // => [2.1]
     *
     * // The `_.property` iteratee shorthand.
     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 1 }]
     */
    var intersectionBy = baseRest(function(arrays) {
      var iteratee = last(arrays),
          mapped = arrayMap(arrays, castArrayLikeObject);

      if (iteratee === last(mapped)) {
        iteratee = undefined;
      } else {
        mapped.pop();
      }
      return (mapped.length && mapped[0] === arrays[0])
        ? baseIntersection(mapped, getIteratee(iteratee, 2))
        : [];
    });

    /**
     * This method is like `_.intersection` except that it accepts `comparator`
     * which is invoked to compare elements of `arrays`. The order and references
     * of result values are determined by the first array. The comparator is
     * invoked with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of intersecting values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.intersectionWith(objects, others, _.isEqual);
     * // => [{ 'x': 1, 'y': 2 }]
     */
    var intersectionWith = baseRest(function(arrays) {
      var comparator = last(arrays),
          mapped = arrayMap(arrays, castArrayLikeObject);

      comparator = typeof comparator == 'function' ? comparator : undefined;
      if (comparator) {
        mapped.pop();
      }
      return (mapped.length && mapped[0] === arrays[0])
        ? baseIntersection(mapped, undefined, comparator)
        : [];
    });

    /**
     * Converts all elements in `array` into a string separated by `separator`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to convert.
     * @param {string} [separator=','] The element separator.
     * @returns {string} Returns the joined string.
     * @example
     *
     * _.join(['a', 'b', 'c'], '~');
     * // => 'a~b~c'
     */
    function join(array, separator) {
      return array == null ? '' : nativeJoin.call(array, separator);
    }

    /**
     * Gets the last element of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to query.
     * @returns {*} Returns the last element of `array`.
     * @example
     *
     * _.last([1, 2, 3]);
     * // => 3
     */
    function last(array) {
      var length = array == null ? 0 : array.length;
      return length ? array[length - 1] : undefined;
    }

    /**
     * This method is like `_.indexOf` except that it iterates over elements of
     * `array` from right to left.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @param {number} [fromIndex=array.length-1] The index to search from.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.lastIndexOf([1, 2, 1, 2], 2);
     * // => 3
     *
     * // Search from the `fromIndex`.
     * _.lastIndexOf([1, 2, 1, 2], 2, 2);
     * // => 1
     */
    function lastIndexOf(array, value, fromIndex) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return -1;
      }
      var index = length;
      if (fromIndex !== undefined) {
        index = toInteger(fromIndex);
        index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);
      }
      return value === value
        ? strictLastIndexOf(array, value, index)
        : baseFindIndex(array, baseIsNaN, index, true);
    }

    /**
     * Gets the element at index `n` of `array`. If `n` is negative, the nth
     * element from the end is returned.
     *
     * @static
     * @memberOf _
     * @since 4.11.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=0] The index of the element to return.
     * @returns {*} Returns the nth element of `array`.
     * @example
     *
     * var array = ['a', 'b', 'c', 'd'];
     *
     * _.nth(array, 1);
     * // => 'b'
     *
     * _.nth(array, -2);
     * // => 'c';
     */
    function nth(array, n) {
      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;
    }

    /**
     * Removes all given values from `array` using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`
     * to remove elements from an array by predicate.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {...*} [values] The values to remove.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];
     *
     * _.pull(array, 'a', 'c');
     * console.log(array);
     * // => ['b', 'b']
     */
    var pull = baseRest(pullAll);

    /**
     * This method is like `_.pull` except that it accepts an array of values to remove.
     *
     * **Note:** Unlike `_.difference`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];
     *
     * _.pullAll(array, ['a', 'c']);
     * console.log(array);
     * // => ['b', 'b']
     */
    function pullAll(array, values) {
      return (array && array.length && values && values.length)
        ? basePullAll(array, values)
        : array;
    }

    /**
     * This method is like `_.pullAll` except that it accepts `iteratee` which is
     * invoked for each element of `array` and `values` to generate the criterion
     * by which they're compared. The iteratee is invoked with one argument: (value).
     *
     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];
     *
     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');
     * console.log(array);
     * // => [{ 'x': 2 }]
     */
    function pullAllBy(array, values, iteratee) {
      return (array && array.length && values && values.length)
        ? basePullAll(array, values, getIteratee(iteratee, 2))
        : array;
    }

    /**
     * This method is like `_.pullAll` except that it accepts `comparator` which
     * is invoked to compare elements of `array` to `values`. The comparator is
     * invoked with two arguments: (arrVal, othVal).
     *
     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 4.6.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];
     *
     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);
     * console.log(array);
     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]
     */
    function pullAllWith(array, values, comparator) {
      return (array && array.length && values && values.length)
        ? basePullAll(array, values, undefined, comparator)
        : array;
    }

    /**
     * Removes elements from `array` corresponding to `indexes` and returns an
     * array of removed elements.
     *
     * **Note:** Unlike `_.at`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {...(number|number[])} [indexes] The indexes of elements to remove.
     * @returns {Array} Returns the new array of removed elements.
     * @example
     *
     * var array = ['a', 'b', 'c', 'd'];
     * var pulled = _.pullAt(array, [1, 3]);
     *
     * console.log(array);
     * // => ['a', 'c']
     *
     * console.log(pulled);
     * // => ['b', 'd']
     */
    var pullAt = flatRest(function(array, indexes) {
      var length = array == null ? 0 : array.length,
          result = baseAt(array, indexes);

      basePullAt(array, arrayMap(indexes, function(index) {
        return isIndex(index, length) ? +index : index;
      }).sort(compareAscending));

      return result;
    });

    /**
     * Removes all elements from `array` that `predicate` returns truthy for
     * and returns an array of the removed elements. The predicate is invoked
     * with three arguments: (value, index, array).
     *
     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`
     * to pull elements from an array by value.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new array of removed elements.
     * @example
     *
     * var array = [1, 2, 3, 4];
     * var evens = _.remove(array, function(n) {
     *   return n % 2 == 0;
     * });
     *
     * console.log(array);
     * // => [1, 3]
     *
     * console.log(evens);
     * // => [2, 4]
     */
    function remove(array, predicate) {
      var result = [];
      if (!(array && array.length)) {
        return result;
      }
      var index = -1,
          indexes = [],
          length = array.length;

      predicate = getIteratee(predicate, 3);
      while (++index < length) {
        var value = array[index];
        if (predicate(value, index, array)) {
          result.push(value);
          indexes.push(index);
        }
      }
      basePullAt(array, indexes);
      return result;
    }

    /**
     * Reverses `array` so that the first element becomes the last, the second
     * element becomes the second to last, and so on.
     *
     * **Note:** This method mutates `array` and is based on
     * [`Array#reverse`](https://mdn.io/Array/reverse).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [1, 2, 3];
     *
     * _.reverse(array);
     * // => [3, 2, 1]
     *
     * console.log(array);
     * // => [3, 2, 1]
     */
    function reverse(array) {
      return array == null ? array : nativeReverse.call(array);
    }

    /**
     * Creates a slice of `array` from `start` up to, but not including, `end`.
     *
     * **Note:** This method is used instead of
     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are
     * returned.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to slice.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns the slice of `array`.
     */
    function slice(array, start, end) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {
        start = 0;
        end = length;
      }
      else {
        start = start == null ? 0 : toInteger(start);
        end = end === undefined ? length : toInteger(end);
      }
      return baseSlice(array, start, end);
    }

    /**
     * Uses a binary search to determine the lowest index at which `value`
     * should be inserted into `array` in order to maintain its sort order.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * _.sortedIndex([30, 50], 40);
     * // => 1
     */
    function sortedIndex(array, value) {
      return baseSortedIndex(array, value);
    }

    /**
     * This method is like `_.sortedIndex` except that it accepts `iteratee`
     * which is invoked for `value` and each element of `array` to compute their
     * sort ranking. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * var objects = [{ 'x': 4 }, { 'x': 5 }];
     *
     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });
     * // => 0
     *
     * // The `_.property` iteratee shorthand.
     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');
     * // => 0
     */
    function sortedIndexBy(array, value, iteratee) {
      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));
    }

    /**
     * This method is like `_.indexOf` except that it performs a binary
     * search on a sorted `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);
     * // => 1
     */
    function sortedIndexOf(array, value) {
      var length = array == null ? 0 : array.length;
      if (length) {
        var index = baseSortedIndex(array, value);
        if (index < length && eq(array[index], value)) {
          return index;
        }
      }
      return -1;
    }

    /**
     * This method is like `_.sortedIndex` except that it returns the highest
     * index at which `value` should be inserted into `array` in order to
     * maintain its sort order.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);
     * // => 4
     */
    function sortedLastIndex(array, value) {
      return baseSortedIndex(array, value, true);
    }

    /**
     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`
     * which is invoked for `value` and each element of `array` to compute their
     * sort ranking. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * var objects = [{ 'x': 4 }, { 'x': 5 }];
     *
     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });
     * // => 1
     *
     * // The `_.property` iteratee shorthand.
     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');
     * // => 1
     */
    function sortedLastIndexBy(array, value, iteratee) {
      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);
    }

    /**
     * This method is like `_.lastIndexOf` except that it performs a binary
     * search on a sorted `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);
     * // => 3
     */
    function sortedLastIndexOf(array, value) {
      var length = array == null ? 0 : array.length;
      if (length) {
        var index = baseSortedIndex(array, value, true) - 1;
        if (eq(array[index], value)) {
          return index;
        }
      }
      return -1;
    }

    /**
     * This method is like `_.uniq` except that it's designed and optimized
     * for sorted arrays.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.sortedUniq([1, 1, 2]);
     * // => [1, 2]
     */
    function sortedUniq(array) {
      return (array && array.length)
        ? baseSortedUniq(array)
        : [];
    }

    /**
     * This method is like `_.uniqBy` except that it's designed and optimized
     * for sorted arrays.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);
     * // => [1.1, 2.3]
     */
    function sortedUniqBy(array, iteratee) {
      return (array && array.length)
        ? baseSortedUniq(array, getIteratee(iteratee, 2))
        : [];
    }

    /**
     * Gets all but the first element of `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.tail([1, 2, 3]);
     * // => [2, 3]
     */
    function tail(array) {
      var length = array == null ? 0 : array.length;
      return length ? baseSlice(array, 1, length) : [];
    }

    /**
     * Creates a slice of `array` with `n` elements taken from the beginning.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to take.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.take([1, 2, 3]);
     * // => [1]
     *
     * _.take([1, 2, 3], 2);
     * // => [1, 2]
     *
     * _.take([1, 2, 3], 5);
     * // => [1, 2, 3]
     *
     * _.take([1, 2, 3], 0);
     * // => []
     */
    function take(array, n, guard) {
      if (!(array && array.length)) {
        return [];
      }
      n = (guard || n === undefined) ? 1 : toInteger(n);
      return baseSlice(array, 0, n < 0 ? 0 : n);
    }

    /**
     * Creates a slice of `array` with `n` elements taken from the end.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to take.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.takeRight([1, 2, 3]);
     * // => [3]
     *
     * _.takeRight([1, 2, 3], 2);
     * // => [2, 3]
     *
     * _.takeRight([1, 2, 3], 5);
     * // => [1, 2, 3]
     *
     * _.takeRight([1, 2, 3], 0);
     * // => []
     */
    function takeRight(array, n, guard) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      n = (guard || n === undefined) ? 1 : toInteger(n);
      n = length - n;
      return baseSlice(array, n < 0 ? 0 : n, length);
    }

    /**
     * Creates a slice of `array` with elements taken from the end. Elements are
     * taken until `predicate` returns falsey. The predicate is invoked with
     * three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': true },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': false }
     * ];
     *
     * _.takeRightWhile(users, function(o) { return !o.active; });
     * // => objects for ['fred', 'pebbles']
     *
     * // The `_.matches` iteratee shorthand.
     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });
     * // => objects for ['pebbles']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.takeRightWhile(users, ['active', false]);
     * // => objects for ['fred', 'pebbles']
     *
     * // The `_.property` iteratee shorthand.
     * _.takeRightWhile(users, 'active');
     * // => []
     */
    function takeRightWhile(array, predicate) {
      return (array && array.length)
        ? baseWhile(array, getIteratee(predicate, 3), false, true)
        : [];
    }

    /**
     * Creates a slice of `array` with elements taken from the beginning. Elements
     * are taken until `predicate` returns falsey. The predicate is invoked with
     * three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': false },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': true }
     * ];
     *
     * _.takeWhile(users, function(o) { return !o.active; });
     * // => objects for ['barney', 'fred']
     *
     * // The `_.matches` iteratee shorthand.
     * _.takeWhile(users, { 'user': 'barney', 'active': false });
     * // => objects for ['barney']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.takeWhile(users, ['active', false]);
     * // => objects for ['barney', 'fred']
     *
     * // The `_.property` iteratee shorthand.
     * _.takeWhile(users, 'active');
     * // => []
     */
    function takeWhile(array, predicate) {
      return (array && array.length)
        ? baseWhile(array, getIteratee(predicate, 3))
        : [];
    }

    /**
     * Creates an array of unique values, in order, from all given arrays using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @returns {Array} Returns the new array of combined values.
     * @example
     *
     * _.union([2], [1, 2]);
     * // => [2, 1]
     */
    var union = baseRest(function(arrays) {
      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));
    });

    /**
     * This method is like `_.union` except that it accepts `iteratee` which is
     * invoked for each element of each `arrays` to generate the criterion by
     * which uniqueness is computed. Result values are chosen from the first
     * array in which the value occurs. The iteratee is invoked with one argument:
     * (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of combined values.
     * @example
     *
     * _.unionBy([2.1], [1.2, 2.3], Math.floor);
     * // => [2.1, 1.2]
     *
     * // The `_.property` iteratee shorthand.
     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 1 }, { 'x': 2 }]
     */
    var unionBy = baseRest(function(arrays) {
      var iteratee = last(arrays);
      if (isArrayLikeObject(iteratee)) {
        iteratee = undefined;
      }
      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));
    });

    /**
     * This method is like `_.union` except that it accepts `comparator` which
     * is invoked to compare elements of `arrays`. Result values are chosen from
     * the first array in which the value occurs. The comparator is invoked
     * with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of combined values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.unionWith(objects, others, _.isEqual);
     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]
     */
    var unionWith = baseRest(function(arrays) {
      var comparator = last(arrays);
      comparator = typeof comparator == 'function' ? comparator : undefined;
      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);
    });

    /**
     * Creates a duplicate-free version of an array, using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons, in which only the first occurrence of each element
     * is kept. The order of result values is determined by the order they occur
     * in the array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.uniq([2, 1, 2]);
     * // => [2, 1]
     */
    function uniq(array) {
      return (array && array.length) ? baseUniq(array) : [];
    }

    /**
     * This method is like `_.uniq` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the criterion by which
     * uniqueness is computed. The order of result values is determined by the
     * order they occur in the array. The iteratee is invoked with one argument:
     * (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);
     * // => [2.1, 1.2]
     *
     * // The `_.property` iteratee shorthand.
     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 1 }, { 'x': 2 }]
     */
    function uniqBy(array, iteratee) {
      return (array && array.length) ? baseUniq(array, getIteratee(iteratee, 2)) : [];
    }

    /**
     * This method is like `_.uniq` except that it accepts `comparator` which
     * is invoked to compare elements of `array`. The order of result values is
     * determined by the order they occur in the array.The comparator is invoked
     * with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.uniqWith(objects, _.isEqual);
     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]
     */
    function uniqWith(array, comparator) {
      comparator = typeof comparator == 'function' ? comparator : undefined;
      return (array && array.length) ? baseUniq(array, undefined, comparator) : [];
    }

    /**
     * This method is like `_.zip` except that it accepts an array of grouped
     * elements and creates an array regrouping the elements to their pre-zip
     * configuration.
     *
     * @static
     * @memberOf _
     * @since 1.2.0
     * @category Array
     * @param {Array} array The array of grouped elements to process.
     * @returns {Array} Returns the new array of regrouped elements.
     * @example
     *
     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);
     * // => [['a', 1, true], ['b', 2, false]]
     *
     * _.unzip(zipped);
     * // => [['a', 'b'], [1, 2], [true, false]]
     */
    function unzip(array) {
      if (!(array && array.length)) {
        return [];
      }
      var length = 0;
      array = arrayFilter(array, function(group) {
        if (isArrayLikeObject(group)) {
          length = nativeMax(group.length, length);
          return true;
        }
      });
      return baseTimes(length, function(index) {
        return arrayMap(array, baseProperty(index));
      });
    }

    /**
     * This method is like `_.unzip` except that it accepts `iteratee` to specify
     * how regrouped values should be combined. The iteratee is invoked with the
     * elements of each group: (...group).
     *
     * @static
     * @memberOf _
     * @since 3.8.0
     * @category Array
     * @param {Array} array The array of grouped elements to process.
     * @param {Function} [iteratee=_.identity] The function to combine
     *  regrouped values.
     * @returns {Array} Returns the new array of regrouped elements.
     * @example
     *
     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);
     * // => [[1, 10, 100], [2, 20, 200]]
     *
     * _.unzipWith(zipped, _.add);
     * // => [3, 30, 300]
     */
    function unzipWith(array, iteratee) {
      if (!(array && array.length)) {
        return [];
      }
      var result = unzip(array);
      if (iteratee == null) {
        return result;
      }
      return arrayMap(result, function(group) {
        return apply(iteratee, undefined, group);
      });
    }

    /**
     * Creates an array excluding all given values using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * **Note:** Unlike `_.pull`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...*} [values] The values to exclude.
     * @returns {Array} Returns the new array of filtered values.
     * @see _.difference, _.xor
     * @example
     *
     * _.without([2, 1, 2, 3], 1, 2);
     * // => [3]
     */
    var without = baseRest(function(array, values) {
      return isArrayLikeObject(array)
        ? baseDifference(array, values)
        : [];
    });

    /**
     * Creates an array of unique values that is the
     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)
     * of the given arrays. The order of result values is determined by the order
     * they occur in the arrays.
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @returns {Array} Returns the new array of filtered values.
     * @see _.difference, _.without
     * @example
     *
     * _.xor([2, 1], [2, 3]);
     * // => [1, 3]
     */
    var xor = baseRest(function(arrays) {
      return baseXor(arrayFilter(arrays, isArrayLikeObject));
    });

    /**
     * This method is like `_.xor` except that it accepts `iteratee` which is
     * invoked for each element of each `arrays` to generate the criterion by
     * which by which they're compared. The order of result values is determined
     * by the order they occur in the arrays. The iteratee is invoked with one
     * argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);
     * // => [1.2, 3.4]
     *
     * // The `_.property` iteratee shorthand.
     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 2 }]
     */
    var xorBy = baseRest(function(arrays) {
      var iteratee = last(arrays);
      if (isArrayLikeObject(iteratee)) {
        iteratee = undefined;
      }
      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));
    });

    /**
     * This method is like `_.xor` except that it accepts `comparator` which is
     * invoked to compare elements of `arrays`. The order of result values is
     * determined by the order they occur in the arrays. The comparator is invoked
     * with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.xorWith(objects, others, _.isEqual);
     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]
     */
    var xorWith = baseRest(function(arrays) {
      var comparator = last(arrays);
      comparator = typeof comparator == 'function' ? comparator : undefined;
      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);
    });

    /**
     * Creates an array of grouped elements, the first of which contains the
     * first elements of the given arrays, the second of which contains the
     * second elements of the given arrays, and so on.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {...Array} [arrays] The arrays to process.
     * @returns {Array} Returns the new array of grouped elements.
     * @example
     *
     * _.zip(['a', 'b'], [1, 2], [true, false]);
     * // => [['a', 1, true], ['b', 2, false]]
     */
    var zip = baseRest(unzip);

    /**
     * This method is like `_.fromPairs` except that it accepts two arrays,
     * one of property identifiers and one of corresponding values.
     *
     * @static
     * @memberOf _
     * @since 0.4.0
     * @category Array
     * @param {Array} [props=[]] The property identifiers.
     * @param {Array} [values=[]] The property values.
     * @returns {Object} Returns the new object.
     * @example
     *
     * _.zipObject(['a', 'b'], [1, 2]);
     * // => { 'a': 1, 'b': 2 }
     */
    function zipObject(props, values) {
      return baseZipObject(props || [], values || [], assignValue);
    }

    /**
     * This method is like `_.zipObject` except that it supports property paths.
     *
     * @static
     * @memberOf _
     * @since 4.1.0
     * @category Array
     * @param {Array} [props=[]] The property identifiers.
     * @param {Array} [values=[]] The property values.
     * @returns {Object} Returns the new object.
     * @example
     *
     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);
     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }
     */
    function zipObjectDeep(props, values) {
      return baseZipObject(props || [], values || [], baseSet);
    }

    /**
     * This method is like `_.zip` except that it accepts `iteratee` to specify
     * how grouped values should be combined. The iteratee is invoked with the
     * elements of each group: (...group).
     *
     * @static
     * @memberOf _
     * @since 3.8.0
     * @category Array
     * @param {...Array} [arrays] The arrays to process.
     * @param {Function} [iteratee=_.identity] The function to combine
     *  grouped values.
     * @returns {Array} Returns the new array of grouped elements.
     * @example
     *
     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {
     *   return a + b + c;
     * });
     * // => [111, 222]
     */
    var zipWith = baseRest(function(arrays) {
      var length = arrays.length,
          iteratee = length > 1 ? arrays[length - 1] : undefined;

      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;
      return unzipWith(arrays, iteratee);
    });

    /*------------------------------------------------------------------------*/

    /**
     * Creates a `lodash` wrapper instance that wraps `value` with explicit method
     * chain sequences enabled. The result of such sequences must be unwrapped
     * with `_#value`.
     *
     * @static
     * @memberOf _
     * @since 1.3.0
     * @category Seq
     * @param {*} value The value to wrap.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'age': 36 },
     *   { 'user': 'fred',    'age': 40 },
     *   { 'user': 'pebbles', 'age': 1 }
     * ];
     *
     * var youngest = _
     *   .chain(users)
     *   .sortBy('age')
     *   .map(function(o) {
     *     return o.user + ' is ' + o.age;
     *   })
     *   .head()
     *   .value();
     * // => 'pebbles is 1'
     */
    function chain(value) {
      var result = lodash(value);
      result.__chain__ = true;
      return result;
    }

    /**
     * This method invokes `interceptor` and returns `value`. The interceptor
     * is invoked with one argument; (value). The purpose of this method is to
     * "tap into" a method chain sequence in order to modify intermediate results.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Seq
     * @param {*} value The value to provide to `interceptor`.
     * @param {Function} interceptor The function to invoke.
     * @returns {*} Returns `value`.
     * @example
     *
     * _([1, 2, 3])
     *  .tap(function(array) {
     *    // Mutate input array.
     *    array.pop();
     *  })
     *  .reverse()
     *  .value();
     * // => [2, 1]
     */
    function tap(value, interceptor) {
      interceptor(value);
      return value;
    }

    /**
     * This method is like `_.tap` except that it returns the result of `interceptor`.
     * The purpose of this method is to "pass thru" values replacing intermediate
     * results in a method chain sequence.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Seq
     * @param {*} value The value to provide to `interceptor`.
     * @param {Function} interceptor The function to invoke.
     * @returns {*} Returns the result of `interceptor`.
     * @example
     *
     * _('  abc  ')
     *  .chain()
     *  .trim()
     *  .thru(function(value) {
     *    return [value];
     *  })
     *  .value();
     * // => ['abc']
     */
    function thru(value, interceptor) {
      return interceptor(value);
    }

    /**
     * This method is the wrapper version of `_.at`.
     *
     * @name at
     * @memberOf _
     * @since 1.0.0
     * @category Seq
     * @param {...(string|string[])} [paths] The property paths to pick.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };
     *
     * _(object).at(['a[0].b.c', 'a[1]']).value();
     * // => [3, 4]
     */
    var wrapperAt = flatRest(function(paths) {
      var length = paths.length,
          start = length ? paths[0] : 0,
          value = this.__wrapped__,
          interceptor = function(object) { return baseAt(object, paths); };

      if (length > 1 || this.__actions__.length ||
          !(value instanceof LazyWrapper) || !isIndex(start)) {
        return this.thru(interceptor);
      }
      value = value.slice(start, +start + (length ? 1 : 0));
      value.__actions__.push({
        'func': thru,
        'args': [interceptor],
        'thisArg': undefined
      });
      return new LodashWrapper(value, this.__chain__).thru(function(array) {
        if (length && !array.length) {
          array.push(undefined);
        }
        return array;
      });
    });

    /**
     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.
     *
     * @name chain
     * @memberOf _
     * @since 0.1.0
     * @category Seq
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36 },
     *   { 'user': 'fred',   'age': 40 }
     * ];
     *
     * // A sequence without explicit chaining.
     * _(users).head();
     * // => { 'user': 'barney', 'age': 36 }
     *
     * // A sequence with explicit chaining.
     * _(users)
     *   .chain()
     *   .head()
     *   .pick('user')
     *   .value();
     * // => { 'user': 'barney' }
     */
    function wrapperChain() {
      return chain(this);
    }

    /**
     * Executes the chain sequence and returns the wrapped result.
     *
     * @name commit
     * @memberOf _
     * @since 3.2.0
     * @category Seq
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var array = [1, 2];
     * var wrapped = _(array).push(3);
     *
     * console.log(array);
     * // => [1, 2]
     *
     * wrapped = wrapped.commit();
     * console.log(array);
     * // => [1, 2, 3]
     *
     * wrapped.last();
     * // => 3
     *
     * console.log(array);
     * // => [1, 2, 3]
     */
    function wrapperCommit() {
      return new LodashWrapper(this.value(), this.__chain__);
    }

    /**
     * Gets the next value on a wrapped object following the
     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).
     *
     * @name next
     * @memberOf _
     * @since 4.0.0
     * @category Seq
     * @returns {Object} Returns the next iterator value.
     * @example
     *
     * var wrapped = _([1, 2]);
     *
     * wrapped.next();
     * // => { 'done': false, 'value': 1 }
     *
     * wrapped.next();
     * // => { 'done': false, 'value': 2 }
     *
     * wrapped.next();
     * // => { 'done': true, 'value': undefined }
     */
    function wrapperNext() {
      if (this.__values__ === undefined) {
        this.__values__ = toArray(this.value());
      }
      var done = this.__index__ >= this.__values__.length,
          value = done ? undefined : this.__values__[this.__index__++];

      return { 'done': done, 'value': value };
    }

    /**
     * Enables the wrapper to be iterable.
     *
     * @name Symbol.iterator
     * @memberOf _
     * @since 4.0.0
     * @category Seq
     * @returns {Object} Returns the wrapper object.
     * @example
     *
     * var wrapped = _([1, 2]);
     *
     * wrapped[Symbol.iterator]() === wrapped;
     * // => true
     *
     * Array.from(wrapped);
     * // => [1, 2]
     */
    function wrapperToIterator() {
      return this;
    }

    /**
     * Creates a clone of the chain sequence planting `value` as the wrapped value.
     *
     * @name plant
     * @memberOf _
     * @since 3.2.0
     * @category Seq
     * @param {*} value The value to plant.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var wrapped = _([1, 2]).map(square);
     * var other = wrapped.plant([3, 4]);
     *
     * other.value();
     * // => [9, 16]
     *
     * wrapped.value();
     * // => [1, 4]
     */
    function wrapperPlant(value) {
      var result,
          parent = this;

      while (parent instanceof baseLodash) {
        var clone = wrapperClone(parent);
        clone.__index__ = 0;
        clone.__values__ = undefined;
        if (result) {
          previous.__wrapped__ = clone;
        } else {
          result = clone;
        }
        var previous = clone;
        parent = parent.__wrapped__;
      }
      previous.__wrapped__ = value;
      return result;
    }

    /**
     * This method is the wrapper version of `_.reverse`.
     *
     * **Note:** This method mutates the wrapped array.
     *
     * @name reverse
     * @memberOf _
     * @since 0.1.0
     * @category Seq
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var array = [1, 2, 3];
     *
     * _(array).reverse().value()
     * // => [3, 2, 1]
     *
     * console.log(array);
     * // => [3, 2, 1]
     */
    function wrapperReverse() {
      var value = this.__wrapped__;
      if (value instanceof LazyWrapper) {
        var wrapped = value;
        if (this.__actions__.length) {
          wrapped = new LazyWrapper(this);
        }
        wrapped = wrapped.reverse();
        wrapped.__actions__.push({
          'func': thru,
          'args': [reverse],
          'thisArg': undefined
        });
        return new LodashWrapper(wrapped, this.__chain__);
      }
      return this.thru(reverse);
    }

    /**
     * Executes the chain sequence to resolve the unwrapped value.
     *
     * @name value
     * @memberOf _
     * @since 0.1.0
     * @alias toJSON, valueOf
     * @category Seq
     * @returns {*} Returns the resolved unwrapped value.
     * @example
     *
     * _([1, 2, 3]).value();
     * // => [1, 2, 3]
     */
    function wrapperValue() {
      return baseWrapperValue(this.__wrapped__, this.__actions__);
    }

    /*------------------------------------------------------------------------*/

    /**
     * Creates an object composed of keys generated from the results of running
     * each element of `collection` thru `iteratee`. The corresponding value of
     * each key is the number of times the key was returned by `iteratee`. The
     * iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 0.5.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
     * @returns {Object} Returns the composed aggregate object.
     * @example
     *
     * _.countBy([6.1, 4.2, 6.3], Math.floor);
     * // => { '4': 1, '6': 2 }
     *
     * // The `_.property` iteratee shorthand.
     * _.countBy(['one', 'two', 'three'], 'length');
     * // => { '3': 2, '5': 1 }
     */
    var countBy = createAggregator(function(result, value, key) {
      if (hasOwnProperty.call(result, key)) {
        ++result[key];
      } else {
        baseAssignValue(result, key, 1);
      }
    });

    /**
     * Checks if `predicate` returns truthy for **all** elements of `collection`.
     * Iteration is stopped once `predicate` returns falsey. The predicate is
     * invoked with three arguments: (value, index|key, collection).
     *
     * **Note:** This method returns `true` for
     * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because
     * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of
     * elements of empty collections.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {boolean} Returns `true` if all elements pass the predicate check,
     *  else `false`.
     * @example
     *
     * _.every([true, 1, null, 'yes'], Boolean);
     * // => false
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': false },
     *   { 'user': 'fred',   'age': 40, 'active': false }
     * ];
     *
     * // The `_.matches` iteratee shorthand.
     * _.every(users, { 'user': 'barney', 'active': false });
     * // => false
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.every(users, ['active', false]);
     * // => true
     *
     * // The `_.property` iteratee shorthand.
     * _.every(users, 'active');
     * // => false
     */
    function every(collection, predicate, guard) {
      var func = isArray(collection) ? arrayEvery : baseEvery;
      if (guard && isIterateeCall(collection, predicate, guard)) {
        predicate = undefined;
      }
      return func(collection, getIteratee(predicate, 3));
    }

    /**
     * Iterates over elements of `collection`, returning an array of all elements
     * `predicate` returns truthy for. The predicate is invoked with three
     * arguments: (value, index|key, collection).
     *
     * **Note:** Unlike `_.remove`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new filtered array.
     * @see _.reject
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': true },
     *   { 'user': 'fred',   'age': 40, 'active': false }
     * ];
     *
     * _.filter(users, function(o) { return !o.active; });
     * // => objects for ['fred']
     *
     * // The `_.matches` iteratee shorthand.
     * _.filter(users, { 'age': 36, 'active': true });
     * // => objects for ['barney']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.filter(users, ['active', false]);
     * // => objects for ['fred']
     *
     * // The `_.property` iteratee shorthand.
     * _.filter(users, 'active');
     * // => objects for ['barney']
     *
     * // Combining several predicates using `_.overEvery` or `_.overSome`.
     * _.filter(users, _.overSome([{ 'age': 36 }, ['age', 40]]));
     * // => objects for ['fred', 'barney']
     */
    function filter(collection, predicate) {
      var func = isArray(collection) ? arrayFilter : baseFilter;
      return func(collection, getIteratee(predicate, 3));
    }

    /**
     * Iterates over elements of `collection`, returning the first element
     * `predicate` returns truthy for. The predicate is invoked with three
     * arguments: (value, index|key, collection).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=0] The index to search from.
     * @returns {*} Returns the matched element, else `undefined`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'age': 36, 'active': true },
     *   { 'user': 'fred',    'age': 40, 'active': false },
     *   { 'user': 'pebbles', 'age': 1,  'active': true }
     * ];
     *
     * _.find(users, function(o) { return o.age < 40; });
     * // => object for 'barney'
     *
     * // The `_.matches` iteratee shorthand.
     * _.find(users, { 'age': 1, 'active': true });
     * // => object for 'pebbles'
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.find(users, ['active', false]);
     * // => object for 'fred'
     *
     * // The `_.property` iteratee shorthand.
     * _.find(users, 'active');
     * // => object for 'barney'
     */
    var find = createFind(findIndex);

    /**
     * This method is like `_.find` except that it iterates over elements of
     * `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=collection.length-1] The index to search from.
     * @returns {*} Returns the matched element, else `undefined`.
     * @example
     *
     * _.findLast([1, 2, 3, 4], function(n) {
     *   return n % 2 == 1;
     * });
     * // => 3
     */
    var findLast = createFind(findLastIndex);

    /**
     * Creates a flattened array of values by running each element in `collection`
     * thru `iteratee` and flattening the mapped results. The iteratee is invoked
     * with three arguments: (value, index|key, collection).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * function duplicate(n) {
     *   return [n, n];
     * }
     *
     * _.flatMap([1, 2], duplicate);
     * // => [1, 1, 2, 2]
     */
    function flatMap(collection, iteratee) {
      return baseFlatten(map(collection, iteratee), 1);
    }

    /**
     * This method is like `_.flatMap` except that it recursively flattens the
     * mapped results.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * function duplicate(n) {
     *   return [[[n, n]]];
     * }
     *
     * _.flatMapDeep([1, 2], duplicate);
     * // => [1, 1, 2, 2]
     */
    function flatMapDeep(collection, iteratee) {
      return baseFlatten(map(collection, iteratee), INFINITY);
    }

    /**
     * This method is like `_.flatMap` except that it recursively flattens the
     * mapped results up to `depth` times.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {number} [depth=1] The maximum recursion depth.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * function duplicate(n) {
     *   return [[[n, n]]];
     * }
     *
     * _.flatMapDepth([1, 2], duplicate, 2);
     * // => [[1, 1], [2, 2]]
     */
    function flatMapDepth(collection, iteratee, depth) {
      depth = depth === undefined ? 1 : toInteger(depth);
      return baseFlatten(map(collection, iteratee), depth);
    }

    /**
     * Iterates over elements of `collection` and invokes `iteratee` for each element.
     * The iteratee is invoked with three arguments: (value, index|key, collection).
     * Iteratee functions may exit iteration early by explicitly returning `false`.
     *
     * **Note:** As with other "Collections" methods, objects with a "length"
     * property are iterated like arrays. To avoid this behavior use `_.forIn`
     * or `_.forOwn` for object iteration.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @alias each
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     * @see _.forEachRight
     * @example
     *
     * _.forEach([1, 2], function(value) {
     *   console.log(value);
     * });
     * // => Logs `1` then `2`.
     *
     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'a' then 'b' (iteration order is not guaranteed).
     */
    function forEach(collection, iteratee) {
      var func = isArray(collection) ? arrayEach : baseEach;
      return func(collection, getIteratee(iteratee, 3));
    }

    /**
     * This method is like `_.forEach` except that it iterates over elements of
     * `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @alias eachRight
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     * @see _.forEach
     * @example
     *
     * _.forEachRight([1, 2], function(value) {
     *   console.log(value);
     * });
     * // => Logs `2` then `1`.
     */
    function forEachRight(collection, iteratee) {
      var func = isArray(collection) ? arrayEachRight : baseEachRight;
      return func(collection, getIteratee(iteratee, 3));
    }

    /**
     * Creates an object composed of keys generated from the results of running
     * each element of `collection` thru `iteratee`. The order of grouped values
     * is determined by the order they occur in `collection`. The corresponding
     * value of each key is an array of elements responsible for generating the
     * key. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
     * @returns {Object} Returns the composed aggregate object.
     * @example
     *
     * _.groupBy([6.1, 4.2, 6.3], Math.floor);
     * // => { '4': [4.2], '6': [6.1, 6.3] }
     *
     * // The `_.property` iteratee shorthand.
     * _.groupBy(['one', 'two', 'three'], 'length');
     * // => { '3': ['one', 'two'], '5': ['three'] }
     */
    var groupBy = createAggregator(function(result, value, key) {
      if (hasOwnProperty.call(result, key)) {
        result[key].push(value);
      } else {
        baseAssignValue(result, key, [value]);
      }
    });

    /**
     * Checks if `value` is in `collection`. If `collection` is a string, it's
     * checked for a substring of `value`, otherwise
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * is used for equality comparisons. If `fromIndex` is negative, it's used as
     * the offset from the end of `collection`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object|string} collection The collection to inspect.
     * @param {*} value The value to search for.
     * @param {number} [fromIndex=0] The index to search from.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.
     * @returns {boolean} Returns `true` if `value` is found, else `false`.
     * @example
     *
     * _.includes([1, 2, 3], 1);
     * // => true
     *
     * _.includes([1, 2, 3], 1, 2);
     * // => false
     *
     * _.includes({ 'a': 1, 'b': 2 }, 1);
     * // => true
     *
     * _.includes('abcd', 'bc');
     * // => true
     */
    function includes(collection, value, fromIndex, guard) {
      collection = isArrayLike(collection) ? collection : values(collection);
      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;

      var length = collection.length;
      if (fromIndex < 0) {
        fromIndex = nativeMax(length + fromIndex, 0);
      }
      return isString(collection)
        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)
        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);
    }

    /**
     * Invokes the method at `path` of each element in `collection`, returning
     * an array of the results of each invoked method. Any additional arguments
     * are provided to each invoked method. If `path` is a function, it's invoked
     * for, and `this` bound to, each element in `collection`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Array|Function|string} path The path of the method to invoke or
     *  the function invoked per iteration.
     * @param {...*} [args] The arguments to invoke each method with.
     * @returns {Array} Returns the array of results.
     * @example
     *
     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');
     * // => [[1, 5, 7], [1, 2, 3]]
     *
     * _.invokeMap([123, 456], String.prototype.split, '');
     * // => [['1', '2', '3'], ['4', '5', '6']]
     */
    var invokeMap = baseRest(function(collection, path, args) {
      var index = -1,
          isFunc = typeof path == 'function',
          result = isArrayLike(collection) ? Array(collection.length) : [];

      baseEach(collection, function(value) {
        result[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);
      });
      return result;
    });

    /**
     * Creates an object composed of keys generated from the results of running
     * each element of `collection` thru `iteratee`. The corresponding value of
     * each key is the last element responsible for generating the key. The
     * iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
     * @returns {Object} Returns the composed aggregate object.
     * @example
     *
     * var array = [
     *   { 'dir': 'left', 'code': 97 },
     *   { 'dir': 'right', 'code': 100 }
     * ];
     *
     * _.keyBy(array, function(o) {
     *   return String.fromCharCode(o.code);
     * });
     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }
     *
     * _.keyBy(array, 'dir');
     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }
     */
    var keyBy = createAggregator(function(result, value, key) {
      baseAssignValue(result, key, value);
    });

    /**
     * Creates an array of values by running each element in `collection` thru
     * `iteratee`. The iteratee is invoked with three arguments:
     * (value, index|key, collection).
     *
     * Many lodash methods are guarded to work as iteratees for methods like
     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.
     *
     * The guarded methods are:
     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,
     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,
     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,
     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new mapped array.
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * _.map([4, 8], square);
     * // => [16, 64]
     *
     * _.map({ 'a': 4, 'b': 8 }, square);
     * // => [16, 64] (iteration order is not guaranteed)
     *
     * var users = [
     *   { 'user': 'barney' },
     *   { 'user': 'fred' }
     * ];
     *
     * // The `_.property` iteratee shorthand.
     * _.map(users, 'user');
     * // => ['barney', 'fred']
     */
    function map(collection, iteratee) {
      var func = isArray(collection) ? arrayMap : baseMap;
      return func(collection, getIteratee(iteratee, 3));
    }

    /**
     * This method is like `_.sortBy` except that it allows specifying the sort
     * orders of the iteratees to sort by. If `orders` is unspecified, all values
     * are sorted in ascending order. Otherwise, specify an order of "desc" for
     * descending or "asc" for ascending sort order of corresponding values.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]
     *  The iteratees to sort by.
     * @param {string[]} [orders] The sort orders of `iteratees`.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.
     * @returns {Array} Returns the new sorted array.
     * @example
     *
     * var users = [
     *   { 'user': 'fred',   'age': 48 },
     *   { 'user': 'barney', 'age': 34 },
     *   { 'user': 'fred',   'age': 40 },
     *   { 'user': 'barney', 'age': 36 }
     * ];
     *
     * // Sort by `user` in ascending order and by `age` in descending order.
     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);
     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]
     */
    function orderBy(collection, iteratees, orders, guard) {
      if (collection == null) {
        return [];
      }
      if (!isArray(iteratees)) {
        iteratees = iteratees == null ? [] : [iteratees];
      }
      orders = guard ? undefined : orders;
      if (!isArray(orders)) {
        orders = orders == null ? [] : [orders];
      }
      return baseOrderBy(collection, iteratees, orders);
    }

    /**
     * Creates an array of elements split into two groups, the first of which
     * contains elements `predicate` returns truthy for, the second of which
     * contains elements `predicate` returns falsey for. The predicate is
     * invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the array of grouped elements.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'age': 36, 'active': false },
     *   { 'user': 'fred',    'age': 40, 'active': true },
     *   { 'user': 'pebbles', 'age': 1,  'active': false }
     * ];
     *
     * _.partition(users, function(o) { return o.active; });
     * // => objects for [['fred'], ['barney', 'pebbles']]
     *
     * // The `_.matches` iteratee shorthand.
     * _.partition(users, { 'age': 1, 'active': false });
     * // => objects for [['pebbles'], ['barney', 'fred']]
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.partition(users, ['active', false]);
     * // => objects for [['barney', 'pebbles'], ['fred']]
     *
     * // The `_.property` iteratee shorthand.
     * _.partition(users, 'active');
     * // => objects for [['fred'], ['barney', 'pebbles']]
     */
    var partition = createAggregator(function(result, value, key) {
      result[key ? 0 : 1].push(value);
    }, function() { return [[], []]; });

    /**
     * Reduces `collection` to a value which is the accumulated result of running
     * each element in `collection` thru `iteratee`, where each successive
     * invocation is supplied the return value of the previous. If `accumulator`
     * is not given, the first element of `collection` is used as the initial
     * value. The iteratee is invoked with four arguments:
     * (accumulator, value, index|key, collection).
     *
     * Many lodash methods are guarded to work as iteratees for methods like
     * `_.reduce`, `_.reduceRight`, and `_.transform`.
     *
     * The guarded methods are:
     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,
     * and `sortBy`
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {*} [accumulator] The initial value.
     * @returns {*} Returns the accumulated value.
     * @see _.reduceRight
     * @example
     *
     * _.reduce([1, 2], function(sum, n) {
     *   return sum + n;
     * }, 0);
     * // => 3
     *
     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
     *   (result[value] || (result[value] = [])).push(key);
     *   return result;
     * }, {});
     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)
     */
    function reduce(collection, iteratee, accumulator) {
      var func = isArray(collection) ? arrayReduce : baseReduce,
          initAccum = arguments.length < 3;

      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);
    }

    /**
     * This method is like `_.reduce` except that it iterates over elements of
     * `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {*} [accumulator] The initial value.
     * @returns {*} Returns the accumulated value.
     * @see _.reduce
     * @example
     *
     * var array = [[0, 1], [2, 3], [4, 5]];
     *
     * _.reduceRight(array, function(flattened, other) {
     *   return flattened.concat(other);
     * }, []);
     * // => [4, 5, 2, 3, 0, 1]
     */
    function reduceRight(collection, iteratee, accumulator) {
      var func = isArray(collection) ? arrayReduceRight : baseReduce,
          initAccum = arguments.length < 3;

      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);
    }

    /**
     * The opposite of `_.filter`; this method returns the elements of `collection`
     * that `predicate` does **not** return truthy for.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new filtered array.
     * @see _.filter
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': false },
     *   { 'user': 'fred',   'age': 40, 'active': true }
     * ];
     *
     * _.reject(users, function(o) { return !o.active; });
     * // => objects for ['fred']
     *
     * // The `_.matches` iteratee shorthand.
     * _.reject(users, { 'age': 40, 'active': true });
     * // => objects for ['barney']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.reject(users, ['active', false]);
     * // => objects for ['fred']
     *
     * // The `_.property` iteratee shorthand.
     * _.reject(users, 'active');
     * // => objects for ['barney']
     */
    function reject(collection, predicate) {
      var func = isArray(collection) ? arrayFilter : baseFilter;
      return func(collection, negate(getIteratee(predicate, 3)));
    }

    /**
     * Gets a random element from `collection`.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to sample.
     * @returns {*} Returns the random element.
     * @example
     *
     * _.sample([1, 2, 3, 4]);
     * // => 2
     */
    function sample(collection) {
      var func = isArray(collection) ? arraySample : baseSample;
      return func(collection);
    }

    /**
     * Gets `n` random elements at unique keys from `collection` up to the
     * size of `collection`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to sample.
     * @param {number} [n=1] The number of elements to sample.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the random elements.
     * @example
     *
     * _.sampleSize([1, 2, 3], 2);
     * // => [3, 1]
     *
     * _.sampleSize([1, 2, 3], 4);
     * // => [2, 3, 1]
     */
    function sampleSize(collection, n, guard) {
      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {
        n = 1;
      } else {
        n = toInteger(n);
      }
      var func = isArray(collection) ? arraySampleSize : baseSampleSize;
      return func(collection, n);
    }

    /**
     * Creates an array of shuffled values, using a version of the
     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to shuffle.
     * @returns {Array} Returns the new shuffled array.
     * @example
     *
     * _.shuffle([1, 2, 3, 4]);
     * // => [4, 1, 3, 2]
     */
    function shuffle(collection) {
      var func = isArray(collection) ? arrayShuffle : baseShuffle;
      return func(collection);
    }

    /**
     * Gets the size of `collection` by returning its length for array-like
     * values or the number of own enumerable string keyed properties for objects.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object|string} collection The collection to inspect.
     * @returns {number} Returns the collection size.
     * @example
     *
     * _.size([1, 2, 3]);
     * // => 3
     *
     * _.size({ 'a': 1, 'b': 2 });
     * // => 2
     *
     * _.size('pebbles');
     * // => 7
     */
    function size(collection) {
      if (collection == null) {
        return 0;
      }
      if (isArrayLike(collection)) {
        return isString(collection) ? stringSize(collection) : collection.length;
      }
      var tag = getTag(collection);
      if (tag == mapTag || tag == setTag) {
        return collection.size;
      }
      return baseKeys(collection).length;
    }

    /**
     * Checks if `predicate` returns truthy for **any** element of `collection`.
     * Iteration is stopped once `predicate` returns truthy. The predicate is
     * invoked with three arguments: (value, index|key, collection).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {boolean} Returns `true` if any element passes the predicate check,
     *  else `false`.
     * @example
     *
     * _.some([null, 0, 'yes', false], Boolean);
     * // => true
     *
     * var users = [
     *   { 'user': 'barney', 'active': true },
     *   { 'user': 'fred',   'active': false }
     * ];
     *
     * // The `_.matches` iteratee shorthand.
     * _.some(users, { 'user': 'barney', 'active': false });
     * // => false
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.some(users, ['active', false]);
     * // => true
     *
     * // The `_.property` iteratee shorthand.
     * _.some(users, 'active');
     * // => true
     */
    function some(collection, predicate, guard) {
      var func = isArray(collection) ? arraySome : baseSome;
      if (guard && isIterateeCall(collection, predicate, guard)) {
        predicate = undefined;
      }
      return func(collection, getIteratee(predicate, 3));
    }

    /**
     * Creates an array of elements, sorted in ascending order by the results of
     * running each element in a collection thru each iteratee. This method
     * performs a stable sort, that is, it preserves the original sort order of
     * equal elements. The iteratees are invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {...(Function|Function[])} [iteratees=[_.identity]]
     *  The iteratees to sort by.
     * @returns {Array} Returns the new sorted array.
     * @example
     *
     * var users = [
     *   { 'user': 'fred',   'age': 48 },
     *   { 'user': 'barney', 'age': 36 },
     *   { 'user': 'fred',   'age': 30 },
     *   { 'user': 'barney', 'age': 34 }
     * ];
     *
     * _.sortBy(users, [function(o) { return o.user; }]);
     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 30]]
     *
     * _.sortBy(users, ['user', 'age']);
     * // => objects for [['barney', 34], ['barney', 36], ['fred', 30], ['fred', 48]]
     */
    var sortBy = baseRest(function(collection, iteratees) {
      if (collection == null) {
        return [];
      }
      var length = iteratees.length;
      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {
        iteratees = [];
      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {
        iteratees = [iteratees[0]];
      }
      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);
    });

    /*------------------------------------------------------------------------*/

    /**
     * Gets the timestamp of the number of milliseconds that have elapsed since
     * the Unix epoch (1 January 1970 00:00:00 UTC).
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Date
     * @returns {number} Returns the timestamp.
     * @example
     *
     * _.defer(function(stamp) {
     *   console.log(_.now() - stamp);
     * }, _.now());
     * // => Logs the number of milliseconds it took for the deferred invocation.
     */
    var now = ctxNow || function() {
      return root.Date.now();
    };

    /*------------------------------------------------------------------------*/

    /**
     * The opposite of `_.before`; this method creates a function that invokes
     * `func` once it's called `n` or more times.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {number} n The number of calls before `func` is invoked.
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new restricted function.
     * @example
     *
     * var saves = ['profile', 'settings'];
     *
     * var done = _.after(saves.length, function() {
     *   console.log('done saving!');
     * });
     *
     * _.forEach(saves, function(type) {
     *   asyncSave({ 'type': type, 'complete': done });
     * });
     * // => Logs 'done saving!' after the two async saves have completed.
     */
    function after(n, func) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      n = toInteger(n);
      return function() {
        if (--n < 1) {
          return func.apply(this, arguments);
        }
      };
    }

    /**
     * Creates a function that invokes `func`, with up to `n` arguments,
     * ignoring any additional arguments.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} func The function to cap arguments for.
     * @param {number} [n=func.length] The arity cap.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the new capped function.
     * @example
     *
     * _.map(['6', '8', '10'], _.ary(parseInt, 1));
     * // => [6, 8, 10]
     */
    function ary(func, n, guard) {
      n = guard ? undefined : n;
      n = (func && n == null) ? func.length : n;
      return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);
    }

    /**
     * Creates a function that invokes `func`, with the `this` binding and arguments
     * of the created function, while it's called less than `n` times. Subsequent
     * calls to the created function return the result of the last `func` invocation.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {number} n The number of calls at which `func` is no longer invoked.
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new restricted function.
     * @example
     *
     * jQuery(element).on('click', _.before(5, addContactToList));
     * // => Allows adding up to 4 contacts to the list.
     */
    function before(n, func) {
      var result;
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      n = toInteger(n);
      return function() {
        if (--n > 0) {
          result = func.apply(this, arguments);
        }
        if (n <= 1) {
          func = undefined;
        }
        return result;
      };
    }

    /**
     * Creates a function that invokes `func` with the `this` binding of `thisArg`
     * and `partials` prepended to the arguments it receives.
     *
     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,
     * may be used as a placeholder for partially applied arguments.
     *
     * **Note:** Unlike native `Function#bind`, this method doesn't set the "length"
     * property of bound functions.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to bind.
     * @param {*} thisArg The `this` binding of `func`.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new bound function.
     * @example
     *
     * function greet(greeting, punctuation) {
     *   return greeting + ' ' + this.user + punctuation;
     * }
     *
     * var object = { 'user': 'fred' };
     *
     * var bound = _.bind(greet, object, 'hi');
     * bound('!');
     * // => 'hi fred!'
     *
     * // Bound with placeholders.
     * var bound = _.bind(greet, object, _, '!');
     * bound('hi');
     * // => 'hi fred!'
     */
    var bind = baseRest(function(func, thisArg, partials) {
      var bitmask = WRAP_BIND_FLAG;
      if (partials.length) {
        var holders = replaceHolders(partials, getHolder(bind));
        bitmask |= WRAP_PARTIAL_FLAG;
      }
      return createWrap(func, bitmask, thisArg, partials, holders);
    });

    /**
     * Creates a function that invokes the method at `object[key]` with `partials`
     * prepended to the arguments it receives.
     *
     * This method differs from `_.bind` by allowing bound functions to reference
     * methods that may be redefined or don't yet exist. See
     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)
     * for more details.
     *
     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for partially applied arguments.
     *
     * @static
     * @memberOf _
     * @since 0.10.0
     * @category Function
     * @param {Object} object The object to invoke the method on.
     * @param {string} key The key of the method.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new bound function.
     * @example
     *
     * var object = {
     *   'user': 'fred',
     *   'greet': function(greeting, punctuation) {
     *     return greeting + ' ' + this.user + punctuation;
     *   }
     * };
     *
     * var bound = _.bindKey(object, 'greet', 'hi');
     * bound('!');
     * // => 'hi fred!'
     *
     * object.greet = function(greeting, punctuation) {
     *   return greeting + 'ya ' + this.user + punctuation;
     * };
     *
     * bound('!');
     * // => 'hiya fred!'
     *
     * // Bound with placeholders.
     * var bound = _.bindKey(object, 'greet', _, '!');
     * bound('hi');
     * // => 'hiya fred!'
     */
    var bindKey = baseRest(function(object, key, partials) {
      var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;
      if (partials.length) {
        var holders = replaceHolders(partials, getHolder(bindKey));
        bitmask |= WRAP_PARTIAL_FLAG;
      }
      return createWrap(key, bitmask, object, partials, holders);
    });

    /**
     * Creates a function that accepts arguments of `func` and either invokes
     * `func` returning its result, if at least `arity` number of arguments have
     * been provided, or returns a function that accepts the remaining `func`
     * arguments, and so on. The arity of `func` may be specified if `func.length`
     * is not sufficient.
     *
     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,
     * may be used as a placeholder for provided arguments.
     *
     * **Note:** This method doesn't set the "length" property of curried functions.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Function
     * @param {Function} func The function to curry.
     * @param {number} [arity=func.length] The arity of `func`.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the new curried function.
     * @example
     *
     * var abc = function(a, b, c) {
     *   return [a, b, c];
     * };
     *
     * var curried = _.curry(abc);
     *
     * curried(1)(2)(3);
     * // => [1, 2, 3]
     *
     * curried(1, 2)(3);
     * // => [1, 2, 3]
     *
     * curried(1, 2, 3);
     * // => [1, 2, 3]
     *
     * // Curried with placeholders.
     * curried(1)(_, 3)(2);
     * // => [1, 2, 3]
     */
    function curry(func, arity, guard) {
      arity = guard ? undefined : arity;
      var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);
      result.placeholder = curry.placeholder;
      return result;
    }

    /**
     * This method is like `_.curry` except that arguments are applied to `func`
     * in the manner of `_.partialRight` instead of `_.partial`.
     *
     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for provided arguments.
     *
     * **Note:** This method doesn't set the "length" property of curried functions.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} func The function to curry.
     * @param {number} [arity=func.length] The arity of `func`.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the new curried function.
     * @example
     *
     * var abc = function(a, b, c) {
     *   return [a, b, c];
     * };
     *
     * var curried = _.curryRight(abc);
     *
     * curried(3)(2)(1);
     * // => [1, 2, 3]
     *
     * curried(2, 3)(1);
     * // => [1, 2, 3]
     *
     * curried(1, 2, 3);
     * // => [1, 2, 3]
     *
     * // Curried with placeholders.
     * curried(3)(1, _)(2);
     * // => [1, 2, 3]
     */
    function curryRight(func, arity, guard) {
      arity = guard ? undefined : arity;
      var result = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);
      result.placeholder = curryRight.placeholder;
      return result;
    }

    /**
     * Creates a debounced function that delays invoking `func` until after `wait`
     * milliseconds have elapsed since the last time the debounced function was
     * invoked. The debounced function comes with a `cancel` method to cancel
     * delayed `func` invocations and a `flush` method to immediately invoke them.
     * Provide `options` to indicate whether `func` should be invoked on the
     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked
     * with the last arguments provided to the debounced function. Subsequent
     * calls to the debounced function return the result of the last `func`
     * invocation.
     *
     * **Note:** If `leading` and `trailing` options are `true`, `func` is
     * invoked on the trailing edge of the timeout only if the debounced function
     * is invoked more than once during the `wait` timeout.
     *
     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
     * until to the next tick, similar to `setTimeout` with a timeout of `0`.
     *
     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
     * for details over the differences between `_.debounce` and `_.throttle`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to debounce.
     * @param {number} [wait=0] The number of milliseconds to delay.
     * @param {Object} [options={}] The options object.
     * @param {boolean} [options.leading=false]
     *  Specify invoking on the leading edge of the timeout.
     * @param {number} [options.maxWait]
     *  The maximum time `func` is allowed to be delayed before it's invoked.
     * @param {boolean} [options.trailing=true]
     *  Specify invoking on the trailing edge of the timeout.
     * @returns {Function} Returns the new debounced function.
     * @example
     *
     * // Avoid costly calculations while the window size is in flux.
     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
     *
     * // Invoke `sendMail` when clicked, debouncing subsequent calls.
     * jQuery(element).on('click', _.debounce(sendMail, 300, {
     *   'leading': true,
     *   'trailing': false
     * }));
     *
     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.
     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });
     * var source = new EventSource('/stream');
     * jQuery(source).on('message', debounced);
     *
     * // Cancel the trailing debounced invocation.
     * jQuery(window).on('popstate', debounced.cancel);
     */
    function debounce(func, wait, options) {
      var lastArgs,
          lastThis,
          maxWait,
          result,
          timerId,
          lastCallTime,
          lastInvokeTime = 0,
          leading = false,
          maxing = false,
          trailing = true;

      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      wait = toNumber(wait) || 0;
      if (isObject(options)) {
        leading = !!options.leading;
        maxing = 'maxWait' in options;
        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
        trailing = 'trailing' in options ? !!options.trailing : trailing;
      }

      function invokeFunc(time) {
        var args = lastArgs,
            thisArg = lastThis;

        lastArgs = lastThis = undefined;
        lastInvokeTime = time;
        result = func.apply(thisArg, args);
        return result;
      }

      function leadingEdge(time) {
        // Reset any `maxWait` timer.
        lastInvokeTime = time;
        // Start the timer for the trailing edge.
        timerId = setTimeout(timerExpired, wait);
        // Invoke the leading edge.
        return leading ? invokeFunc(time) : result;
      }

      function remainingWait(time) {
        var timeSinceLastCall = time - lastCallTime,
            timeSinceLastInvoke = time - lastInvokeTime,
            timeWaiting = wait - timeSinceLastCall;

        return maxing
          ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)
          : timeWaiting;
      }

      function shouldInvoke(time) {
        var timeSinceLastCall = time - lastCallTime,
            timeSinceLastInvoke = time - lastInvokeTime;

        // Either this is the first call, activity has stopped and we're at the
        // trailing edge, the system time has gone backwards and we're treating
        // it as the trailing edge, or we've hit the `maxWait` limit.
        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||
          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));
      }

      function timerExpired() {
        var time = now();
        if (shouldInvoke(time)) {
          return trailingEdge(time);
        }
        // Restart the timer.
        timerId = setTimeout(timerExpired, remainingWait(time));
      }

      function trailingEdge(time) {
        timerId = undefined;

        // Only invoke if we have `lastArgs` which means `func` has been
        // debounced at least once.
        if (trailing && lastArgs) {
          return invokeFunc(time);
        }
        lastArgs = lastThis = undefined;
        return result;
      }

      function cancel() {
        if (timerId !== undefined) {
          clearTimeout(timerId);
        }
        lastInvokeTime = 0;
        lastArgs = lastCallTime = lastThis = timerId = undefined;
      }

      function flush() {
        return timerId === undefined ? result : trailingEdge(now());
      }

      function debounced() {
        var time = now(),
            isInvoking = shouldInvoke(time);

        lastArgs = arguments;
        lastThis = this;
        lastCallTime = time;

        if (isInvoking) {
          if (timerId === undefined) {
            return leadingEdge(lastCallTime);
          }
          if (maxing) {
            // Handle invocations in a tight loop.
            clearTimeout(timerId);
            timerId = setTimeout(timerExpired, wait);
            return invokeFunc(lastCallTime);
          }
        }
        if (timerId === undefined) {
          timerId = setTimeout(timerExpired, wait);
        }
        return result;
      }
      debounced.cancel = cancel;
      debounced.flush = flush;
      return debounced;
    }

    /**
     * Defers invoking the `func` until the current call stack has cleared. Any
     * additional arguments are provided to `func` when it's invoked.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to defer.
     * @param {...*} [args] The arguments to invoke `func` with.
     * @returns {number} Returns the timer id.
     * @example
     *
     * _.defer(function(text) {
     *   console.log(text);
     * }, 'deferred');
     * // => Logs 'deferred' after one millisecond.
     */
    var defer = baseRest(function(func, args) {
      return baseDelay(func, 1, args);
    });

    /**
     * Invokes `func` after `wait` milliseconds. Any additional arguments are
     * provided to `func` when it's invoked.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to delay.
     * @param {number} wait The number of milliseconds to delay invocation.
     * @param {...*} [args] The arguments to invoke `func` with.
     * @returns {number} Returns the timer id.
     * @example
     *
     * _.delay(function(text) {
     *   console.log(text);
     * }, 1000, 'later');
     * // => Logs 'later' after one second.
     */
    var delay = baseRest(function(func, wait, args) {
      return baseDelay(func, toNumber(wait) || 0, args);
    });

    /**
     * Creates a function that invokes `func` with arguments reversed.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Function
     * @param {Function} func The function to flip arguments for.
     * @returns {Function} Returns the new flipped function.
     * @example
     *
     * var flipped = _.flip(function() {
     *   return _.toArray(arguments);
     * });
     *
     * flipped('a', 'b', 'c', 'd');
     * // => ['d', 'c', 'b', 'a']
     */
    function flip(func) {
      return createWrap(func, WRAP_FLIP_FLAG);
    }

    /**
     * Creates a function that memoizes the result of `func`. If `resolver` is
     * provided, it determines the cache key for storing the result based on the
     * arguments provided to the memoized function. By default, the first argument
     * provided to the memoized function is used as the map cache key. The `func`
     * is invoked with the `this` binding of the memoized function.
     *
     * **Note:** The cache is exposed as the `cache` property on the memoized
     * function. Its creation may be customized by replacing the `_.memoize.Cache`
     * constructor with one whose instances implement the
     * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)
     * method interface of `clear`, `delete`, `get`, `has`, and `set`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to have its output memoized.
     * @param {Function} [resolver] The function to resolve the cache key.
     * @returns {Function} Returns the new memoized function.
     * @example
     *
     * var object = { 'a': 1, 'b': 2 };
     * var other = { 'c': 3, 'd': 4 };
     *
     * var values = _.memoize(_.values);
     * values(object);
     * // => [1, 2]
     *
     * values(other);
     * // => [3, 4]
     *
     * object.a = 2;
     * values(object);
     * // => [1, 2]
     *
     * // Modify the result cache.
     * values.cache.set(object, ['a', 'b']);
     * values(object);
     * // => ['a', 'b']
     *
     * // Replace `_.memoize.Cache`.
     * _.memoize.Cache = WeakMap;
     */
    function memoize(func, resolver) {
      if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      var memoized = function() {
        var args = arguments,
            key = resolver ? resolver.apply(this, args) : args[0],
            cache = memoized.cache;

        if (cache.has(key)) {
          return cache.get(key);
        }
        var result = func.apply(this, args);
        memoized.cache = cache.set(key, result) || cache;
        return result;
      };
      memoized.cache = new (memoize.Cache || MapCache);
      return memoized;
    }

    // Expose `MapCache`.
    memoize.Cache = MapCache;

    /**
     * Creates a function that negates the result of the predicate `func`. The
     * `func` predicate is invoked with the `this` binding and arguments of the
     * created function.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} predicate The predicate to negate.
     * @returns {Function} Returns the new negated function.
     * @example
     *
     * function isEven(n) {
     *   return n % 2 == 0;
     * }
     *
     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));
     * // => [1, 3, 5]
     */
    function negate(predicate) {
      if (typeof predicate != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      return function() {
        var args = arguments;
        switch (args.length) {
          case 0: return !predicate.call(this);
          case 1: return !predicate.call(this, args[0]);
          case 2: return !predicate.call(this, args[0], args[1]);
          case 3: return !predicate.call(this, args[0], args[1], args[2]);
        }
        return !predicate.apply(this, args);
      };
    }

    /**
     * Creates a function that is restricted to invoking `func` once. Repeat calls
     * to the function return the value of the first invocation. The `func` is
     * invoked with the `this` binding and arguments of the created function.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new restricted function.
     * @example
     *
     * var initialize = _.once(createApplication);
     * initialize();
     * initialize();
     * // => `createApplication` is invoked once
     */
    function once(func) {
      return before(2, func);
    }

    /**
     * Creates a function that invokes `func` with its arguments transformed.
     *
     * @static
     * @since 4.0.0
     * @memberOf _
     * @category Function
     * @param {Function} func The function to wrap.
     * @param {...(Function|Function[])} [transforms=[_.identity]]
     *  The argument transforms.
     * @returns {Function} Returns the new function.
     * @example
     *
     * function doubled(n) {
     *   return n * 2;
     * }
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var func = _.overArgs(function(x, y) {
     *   return [x, y];
     * }, [square, doubled]);
     *
     * func(9, 3);
     * // => [81, 6]
     *
     * func(10, 5);
     * // => [100, 10]
     */
    var overArgs = castRest(function(func, transforms) {
      transforms = (transforms.length == 1 && isArray(transforms[0]))
        ? arrayMap(transforms[0], baseUnary(getIteratee()))
        : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));

      var funcsLength = transforms.length;
      return baseRest(function(args) {
        var index = -1,
            length = nativeMin(args.length, funcsLength);

        while (++index < length) {
          args[index] = transforms[index].call(this, args[index]);
        }
        return apply(func, this, args);
      });
    });

    /**
     * Creates a function that invokes `func` with `partials` prepended to the
     * arguments it receives. This method is like `_.bind` except it does **not**
     * alter the `this` binding.
     *
     * The `_.partial.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for partially applied arguments.
     *
     * **Note:** This method doesn't set the "length" property of partially
     * applied functions.
     *
     * @static
     * @memberOf _
     * @since 0.2.0
     * @category Function
     * @param {Function} func The function to partially apply arguments to.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new partially applied function.
     * @example
     *
     * function greet(greeting, name) {
     *   return greeting + ' ' + name;
     * }
     *
     * var sayHelloTo = _.partial(greet, 'hello');
     * sayHelloTo('fred');
     * // => 'hello fred'
     *
     * // Partially applied with placeholders.
     * var greetFred = _.partial(greet, _, 'fred');
     * greetFred('hi');
     * // => 'hi fred'
     */
    var partial = baseRest(function(func, partials) {
      var holders = replaceHolders(partials, getHolder(partial));
      return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);
    });

    /**
     * This method is like `_.partial` except that partially applied arguments
     * are appended to the arguments it receives.
     *
     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for partially applied arguments.
     *
     * **Note:** This method doesn't set the "length" property of partially
     * applied functions.
     *
     * @static
     * @memberOf _
     * @since 1.0.0
     * @category Function
     * @param {Function} func The function to partially apply arguments to.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new partially applied function.
     * @example
     *
     * function greet(greeting, name) {
     *   return greeting + ' ' + name;
     * }
     *
     * var greetFred = _.partialRight(greet, 'fred');
     * greetFred('hi');
     * // => 'hi fred'
     *
     * // Partially applied with placeholders.
     * var sayHelloTo = _.partialRight(greet, 'hello', _);
     * sayHelloTo('fred');
     * // => 'hello fred'
     */
    var partialRight = baseRest(function(func, partials) {
      var holders = replaceHolders(partials, getHolder(partialRight));
      return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);
    });

    /**
     * Creates a function that invokes `func` with arguments arranged according
     * to the specified `indexes` where the argument value at the first index is
     * provided as the first argument, the argument value at the second index is
     * provided as the second argument, and so on.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} func The function to rearrange arguments for.
     * @param {...(number|number[])} indexes The arranged argument indexes.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var rearged = _.rearg(function(a, b, c) {
     *   return [a, b, c];
     * }, [2, 0, 1]);
     *
     * rearged('b', 'c', 'a')
     * // => ['a', 'b', 'c']
     */
    var rearg = flatRest(function(func, indexes) {
      return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);
    });

    /**
     * Creates a function that invokes `func` with the `this` binding of the
     * created function and arguments from `start` and beyond provided as
     * an array.
     *
     * **Note:** This method is based on the
     * [rest parameter](https://mdn.io/rest_parameters).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Function
     * @param {Function} func The function to apply a rest parameter to.
     * @param {number} [start=func.length-1] The start position of the rest parameter.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var say = _.rest(function(what, names) {
     *   return what + ' ' + _.initial(names).join(', ') +
     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);
     * });
     *
     * say('hello', 'fred', 'barney', 'pebbles');
     * // => 'hello fred, barney, & pebbles'
     */
    function rest(func, start) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      start = start === undefined ? start : toInteger(start);
      return baseRest(func, start);
    }

    /**
     * Creates a function that invokes `func` with the `this` binding of the
     * create function and an array of arguments much like
     * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).
     *
     * **Note:** This method is based on the
     * [spread operator](https://mdn.io/spread_operator).
     *
     * @static
     * @memberOf _
     * @since 3.2.0
     * @category Function
     * @param {Function} func The function to spread arguments over.
     * @param {number} [start=0] The start position of the spread.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var say = _.spread(function(who, what) {
     *   return who + ' says ' + what;
     * });
     *
     * say(['fred', 'hello']);
     * // => 'fred says hello'
     *
     * var numbers = Promise.all([
     *   Promise.resolve(40),
     *   Promise.resolve(36)
     * ]);
     *
     * numbers.then(_.spread(function(x, y) {
     *   return x + y;
     * }));
     * // => a Promise of 76
     */
    function spread(func, start) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      start = start == null ? 0 : nativeMax(toInteger(start), 0);
      return baseRest(function(args) {
        var array = args[start],
            otherArgs = castSlice(args, 0, start);

        if (array) {
          arrayPush(otherArgs, array);
        }
        return apply(func, this, otherArgs);
      });
    }

    /**
     * Creates a throttled function that only invokes `func` at most once per
     * every `wait` milliseconds. The throttled function comes with a `cancel`
     * method to cancel delayed `func` invocations and a `flush` method to
     * immediately invoke them. Provide `options` to indicate whether `func`
     * should be invoked on the leading and/or trailing edge of the `wait`
     * timeout. The `func` is invoked with the last arguments provided to the
     * throttled function. Subsequent calls to the throttled function return the
     * result of the last `func` invocation.
     *
     * **Note:** If `leading` and `trailing` options are `true`, `func` is
     * invoked on the trailing edge of the timeout only if the throttled function
     * is invoked more than once during the `wait` timeout.
     *
     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
     * until to the next tick, similar to `setTimeout` with a timeout of `0`.
     *
     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
     * for details over the differences between `_.throttle` and `_.debounce`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to throttle.
     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.
     * @param {Object} [options={}] The options object.
     * @param {boolean} [options.leading=true]
     *  Specify invoking on the leading edge of the timeout.
     * @param {boolean} [options.trailing=true]
     *  Specify invoking on the trailing edge of the timeout.
     * @returns {Function} Returns the new throttled function.
     * @example
     *
     * // Avoid excessively updating the position while scrolling.
     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));
     *
     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.
     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });
     * jQuery(element).on('click', throttled);
     *
     * // Cancel the trailing throttled invocation.
     * jQuery(window).on('popstate', throttled.cancel);
     */
    function throttle(func, wait, options) {
      var leading = true,
          trailing = true;

      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      if (isObject(options)) {
        leading = 'leading' in options ? !!options.leading : leading;
        trailing = 'trailing' in options ? !!options.trailing : trailing;
      }
      return debounce(func, wait, {
        'leading': leading,
        'maxWait': wait,
        'trailing': trailing
      });
    }

    /**
     * Creates a function that accepts up to one argument, ignoring any
     * additional arguments.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Function
     * @param {Function} func The function to cap arguments for.
     * @returns {Function} Returns the new capped function.
     * @example
     *
     * _.map(['6', '8', '10'], _.unary(parseInt));
     * // => [6, 8, 10]
     */
    function unary(func) {
      return ary(func, 1);
    }

    /**
     * Creates a function that provides `value` to `wrapper` as its first
     * argument. Any additional arguments provided to the function are appended
     * to those provided to the `wrapper`. The wrapper is invoked with the `this`
     * binding of the created function.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {*} value The value to wrap.
     * @param {Function} [wrapper=identity] The wrapper function.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var p = _.wrap(_.escape, function(func, text) {
     *   return '<p>' + func(text) + '</p>';
     * });
     *
     * p('fred, barney, & pebbles');
     * // => '<p>fred, barney, &amp; pebbles</p>'
     */
    function wrap(value, wrapper) {
      return partial(castFunction(wrapper), value);
    }

    /*------------------------------------------------------------------------*/

    /**
     * Casts `value` as an array if it's not one.
     *
     * @static
     * @memberOf _
     * @since 4.4.0
     * @category Lang
     * @param {*} value The value to inspect.
     * @returns {Array} Returns the cast array.
     * @example
     *
     * _.castArray(1);
     * // => [1]
     *
     * _.castArray({ 'a': 1 });
     * // => [{ 'a': 1 }]
     *
     * _.castArray('abc');
     * // => ['abc']
     *
     * _.castArray(null);
     * // => [null]
     *
     * _.castArray(undefined);
     * // => [undefined]
     *
     * _.castArray();
     * // => []
     *
     * var array = [1, 2, 3];
     * console.log(_.castArray(array) === array);
     * // => true
     */
    function castArray() {
      if (!arguments.length) {
        return [];
      }
      var value = arguments[0];
      return isArray(value) ? value : [value];
    }

    /**
     * Creates a shallow clone of `value`.
     *
     * **Note:** This method is loosely based on the
     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)
     * and supports cloning arrays, array buffers, booleans, date objects, maps,
     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed
     * arrays. The own enumerable properties of `arguments` objects are cloned
     * as plain objects. An empty object is returned for uncloneable values such
     * as error objects, functions, DOM nodes, and WeakMaps.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to clone.
     * @returns {*} Returns the cloned value.
     * @see _.cloneDeep
     * @example
     *
     * var objects = [{ 'a': 1 }, { 'b': 2 }];
     *
     * var shallow = _.clone(objects);
     * console.log(shallow[0] === objects[0]);
     * // => true
     */
    function clone(value) {
      return baseClone(value, CLONE_SYMBOLS_FLAG);
    }

    /**
     * This method is like `_.clone` except that it accepts `customizer` which
     * is invoked to produce the cloned value. If `customizer` returns `undefined`,
     * cloning is handled by the method instead. The `customizer` is invoked with
     * up to four arguments; (value [, index|key, object, stack]).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to clone.
     * @param {Function} [customizer] The function to customize cloning.
     * @returns {*} Returns the cloned value.
     * @see _.cloneDeepWith
     * @example
     *
     * function customizer(value) {
     *   if (_.isElement(value)) {
     *     return value.cloneNode(false);
     *   }
     * }
     *
     * var el = _.cloneWith(document.body, customizer);
     *
     * console.log(el === document.body);
     * // => false
     * console.log(el.nodeName);
     * // => 'BODY'
     * console.log(el.childNodes.length);
     * // => 0
     */
    function cloneWith(value, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);
    }

    /**
     * This method is like `_.clone` except that it recursively clones `value`.
     *
     * @static
     * @memberOf _
     * @since 1.0.0
     * @category Lang
     * @param {*} value The value to recursively clone.
     * @returns {*} Returns the deep cloned value.
     * @see _.clone
     * @example
     *
     * var objects = [{ 'a': 1 }, { 'b': 2 }];
     *
     * var deep = _.cloneDeep(objects);
     * console.log(deep[0] === objects[0]);
     * // => false
     */
    function cloneDeep(value) {
      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);
    }

    /**
     * This method is like `_.cloneWith` except that it recursively clones `value`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to recursively clone.
     * @param {Function} [customizer] The function to customize cloning.
     * @returns {*} Returns the deep cloned value.
     * @see _.cloneWith
     * @example
     *
     * function customizer(value) {
     *   if (_.isElement(value)) {
     *     return value.cloneNode(true);
     *   }
     * }
     *
     * var el = _.cloneDeepWith(document.body, customizer);
     *
     * console.log(el === document.body);
     * // => false
     * console.log(el.nodeName);
     * // => 'BODY'
     * console.log(el.childNodes.length);
     * // => 20
     */
    function cloneDeepWith(value, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);
    }

    /**
     * Checks if `object` conforms to `source` by invoking the predicate
     * properties of `source` with the corresponding property values of `object`.
     *
     * **Note:** This method is equivalent to `_.conforms` when `source` is
     * partially applied.
     *
     * @static
     * @memberOf _
     * @since 4.14.0
     * @category Lang
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property predicates to conform to.
     * @returns {boolean} Returns `true` if `object` conforms, else `false`.
     * @example
     *
     * var object = { 'a': 1, 'b': 2 };
     *
     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });
     * // => true
     *
     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });
     * // => false
     */
    function conformsTo(object, source) {
      return source == null || baseConformsTo(object, source, keys(source));
    }

    /**
     * Performs a
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * comparison between two values to determine if they are equivalent.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     * @example
     *
     * var object = { 'a': 1 };
     * var other = { 'a': 1 };
     *
     * _.eq(object, object);
     * // => true
     *
     * _.eq(object, other);
     * // => false
     *
     * _.eq('a', 'a');
     * // => true
     *
     * _.eq('a', Object('a'));
     * // => false
     *
     * _.eq(NaN, NaN);
     * // => true
     */
    function eq(value, other) {
      return value === other || (value !== value && other !== other);
    }

    /**
     * Checks if `value` is greater than `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is greater than `other`,
     *  else `false`.
     * @see _.lt
     * @example
     *
     * _.gt(3, 1);
     * // => true
     *
     * _.gt(3, 3);
     * // => false
     *
     * _.gt(1, 3);
     * // => false
     */
    var gt = createRelationalOperation(baseGt);

    /**
     * Checks if `value` is greater than or equal to `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is greater than or equal to
     *  `other`, else `false`.
     * @see _.lte
     * @example
     *
     * _.gte(3, 1);
     * // => true
     *
     * _.gte(3, 3);
     * // => true
     *
     * _.gte(1, 3);
     * // => false
     */
    var gte = createRelationalOperation(function(value, other) {
      return value >= other;
    });

    /**
     * Checks if `value` is likely an `arguments` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an `arguments` object,
     *  else `false`.
     * @example
     *
     * _.isArguments(function() { return arguments; }());
     * // => true
     *
     * _.isArguments([1, 2, 3]);
     * // => false
     */
    var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {
      return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&
        !propertyIsEnumerable.call(value, 'callee');
    };

    /**
     * Checks if `value` is classified as an `Array` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array, else `false`.
     * @example
     *
     * _.isArray([1, 2, 3]);
     * // => true
     *
     * _.isArray(document.body.children);
     * // => false
     *
     * _.isArray('abc');
     * // => false
     *
     * _.isArray(_.noop);
     * // => false
     */
    var isArray = Array.isArray;

    /**
     * Checks if `value` is classified as an `ArrayBuffer` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.
     * @example
     *
     * _.isArrayBuffer(new ArrayBuffer(2));
     * // => true
     *
     * _.isArrayBuffer(new Array(2));
     * // => false
     */
    var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;

    /**
     * Checks if `value` is array-like. A value is considered array-like if it's
     * not a function and has a `value.length` that's an integer greater than or
     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
     * @example
     *
     * _.isArrayLike([1, 2, 3]);
     * // => true
     *
     * _.isArrayLike(document.body.children);
     * // => true
     *
     * _.isArrayLike('abc');
     * // => true
     *
     * _.isArrayLike(_.noop);
     * // => false
     */
    function isArrayLike(value) {
      return value != null && isLength(value.length) && !isFunction(value);
    }

    /**
     * This method is like `_.isArrayLike` except that it also checks if `value`
     * is an object.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array-like object,
     *  else `false`.
     * @example
     *
     * _.isArrayLikeObject([1, 2, 3]);
     * // => true
     *
     * _.isArrayLikeObject(document.body.children);
     * // => true
     *
     * _.isArrayLikeObject('abc');
     * // => false
     *
     * _.isArrayLikeObject(_.noop);
     * // => false
     */
    function isArrayLikeObject(value) {
      return isObjectLike(value) && isArrayLike(value);
    }

    /**
     * Checks if `value` is classified as a boolean primitive or object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.
     * @example
     *
     * _.isBoolean(false);
     * // => true
     *
     * _.isBoolean(null);
     * // => false
     */
    function isBoolean(value) {
      return value === true || value === false ||
        (isObjectLike(value) && baseGetTag(value) == boolTag);
    }

    /**
     * Checks if `value` is a buffer.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
     * @example
     *
     * _.isBuffer(new Buffer(2));
     * // => true
     *
     * _.isBuffer(new Uint8Array(2));
     * // => false
     */
    var isBuffer = nativeIsBuffer || stubFalse;

    /**
     * Checks if `value` is classified as a `Date` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.
     * @example
     *
     * _.isDate(new Date);
     * // => true
     *
     * _.isDate('Mon April 23 2012');
     * // => false
     */
    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;

    /**
     * Checks if `value` is likely a DOM element.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.
     * @example
     *
     * _.isElement(document.body);
     * // => true
     *
     * _.isElement('<body>');
     * // => false
     */
    function isElement(value) {
      return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);
    }

    /**
     * Checks if `value` is an empty object, collection, map, or set.
     *
     * Objects are considered empty if they have no own enumerable string keyed
     * properties.
     *
     * Array-like values such as `arguments` objects, arrays, buffers, strings, or
     * jQuery-like collections are considered empty if they have a `length` of `0`.
     * Similarly, maps and sets are considered empty if they have a `size` of `0`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is empty, else `false`.
     * @example
     *
     * _.isEmpty(null);
     * // => true
     *
     * _.isEmpty(true);
     * // => true
     *
     * _.isEmpty(1);
     * // => true
     *
     * _.isEmpty([1, 2, 3]);
     * // => false
     *
     * _.isEmpty({ 'a': 1 });
     * // => false
     */
    function isEmpty(value) {
      if (value == null) {
        return true;
      }
      if (isArrayLike(value) &&
          (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||
            isBuffer(value) || isTypedArray(value) || isArguments(value))) {
        return !value.length;
      }
      var tag = getTag(value);
      if (tag == mapTag || tag == setTag) {
        return !value.size;
      }
      if (isPrototype(value)) {
        return !baseKeys(value).length;
      }
      for (var key in value) {
        if (hasOwnProperty.call(value, key)) {
          return false;
        }
      }
      return true;
    }

    /**
     * Performs a deep comparison between two values to determine if they are
     * equivalent.
     *
     * **Note:** This method supports comparing arrays, array buffers, booleans,
     * date objects, error objects, maps, numbers, `Object` objects, regexes,
     * sets, strings, symbols, and typed arrays. `Object` objects are compared
     * by their own, not inherited, enumerable properties. Functions and DOM
     * nodes are compared by strict equality, i.e. `===`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     * @example
     *
     * var object = { 'a': 1 };
     * var other = { 'a': 1 };
     *
     * _.isEqual(object, other);
     * // => true
     *
     * object === other;
     * // => false
     */
    function isEqual(value, other) {
      return baseIsEqual(value, other);
    }

    /**
     * This method is like `_.isEqual` except that it accepts `customizer` which
     * is invoked to compare values. If `customizer` returns `undefined`, comparisons
     * are handled by the method instead. The `customizer` is invoked with up to
     * six arguments: (objValue, othValue [, index|key, object, other, stack]).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @param {Function} [customizer] The function to customize comparisons.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     * @example
     *
     * function isGreeting(value) {
     *   return /^h(?:i|ello)$/.test(value);
     * }
     *
     * function customizer(objValue, othValue) {
     *   if (isGreeting(objValue) && isGreeting(othValue)) {
     *     return true;
     *   }
     * }
     *
     * var array = ['hello', 'goodbye'];
     * var other = ['hi', 'goodbye'];
     *
     * _.isEqualWith(array, other, customizer);
     * // => true
     */
    function isEqualWith(value, other, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      var result = customizer ? customizer(value, other) : undefined;
      return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;
    }

    /**
     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,
     * `SyntaxError`, `TypeError`, or `URIError` object.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.
     * @example
     *
     * _.isError(new Error);
     * // => true
     *
     * _.isError(Error);
     * // => false
     */
    function isError(value) {
      if (!isObjectLike(value)) {
        return false;
      }
      var tag = baseGetTag(value);
      return tag == errorTag || tag == domExcTag ||
        (typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value));
    }

    /**
     * Checks if `value` is a finite primitive number.
     *
     * **Note:** This method is based on
     * [`Number.isFinite`](https://mdn.io/Number/isFinite).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.
     * @example
     *
     * _.isFinite(3);
     * // => true
     *
     * _.isFinite(Number.MIN_VALUE);
     * // => true
     *
     * _.isFinite(Infinity);
     * // => false
     *
     * _.isFinite('3');
     * // => false
     */
    function isFinite(value) {
      return typeof value == 'number' && nativeIsFinite(value);
    }

    /**
     * Checks if `value` is classified as a `Function` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a function, else `false`.
     * @example
     *
     * _.isFunction(_);
     * // => true
     *
     * _.isFunction(/abc/);
     * // => false
     */
    function isFunction(value) {
      if (!isObject(value)) {
        return false;
      }
      // The use of `Object#toString` avoids issues with the `typeof` operator
      // in Safari 9 which returns 'object' for typed arrays and other constructors.
      var tag = baseGetTag(value);
      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
    }

    /**
     * Checks if `value` is an integer.
     *
     * **Note:** This method is based on
     * [`Number.isInteger`](https://mdn.io/Number/isInteger).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.
     * @example
     *
     * _.isInteger(3);
     * // => true
     *
     * _.isInteger(Number.MIN_VALUE);
     * // => false
     *
     * _.isInteger(Infinity);
     * // => false
     *
     * _.isInteger('3');
     * // => false
     */
    function isInteger(value) {
      return typeof value == 'number' && value == toInteger(value);
    }

    /**
     * Checks if `value` is a valid array-like length.
     *
     * **Note:** This method is loosely based on
     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
     * @example
     *
     * _.isLength(3);
     * // => true
     *
     * _.isLength(Number.MIN_VALUE);
     * // => false
     *
     * _.isLength(Infinity);
     * // => false
     *
     * _.isLength('3');
     * // => false
     */
    function isLength(value) {
      return typeof value == 'number' &&
        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
    }

    /**
     * Checks if `value` is the
     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an object, else `false`.
     * @example
     *
     * _.isObject({});
     * // => true
     *
     * _.isObject([1, 2, 3]);
     * // => true
     *
     * _.isObject(_.noop);
     * // => true
     *
     * _.isObject(null);
     * // => false
     */
    function isObject(value) {
      var type = typeof value;
      return value != null && (type == 'object' || type == 'function');
    }

    /**
     * Checks if `value` is object-like. A value is object-like if it's not `null`
     * and has a `typeof` result of "object".
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
     * @example
     *
     * _.isObjectLike({});
     * // => true
     *
     * _.isObjectLike([1, 2, 3]);
     * // => true
     *
     * _.isObjectLike(_.noop);
     * // => false
     *
     * _.isObjectLike(null);
     * // => false
     */
    function isObjectLike(value) {
      return value != null && typeof value == 'object';
    }

    /**
     * Checks if `value` is classified as a `Map` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a map, else `false`.
     * @example
     *
     * _.isMap(new Map);
     * // => true
     *
     * _.isMap(new WeakMap);
     * // => false
     */
    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;

    /**
     * Performs a partial deep comparison between `object` and `source` to
     * determine if `object` contains equivalent property values.
     *
     * **Note:** This method is equivalent to `_.matches` when `source` is
     * partially applied.
     *
     * Partial comparisons will match empty array and empty object `source`
     * values against any array or object value, respectively. See `_.isEqual`
     * for a list of supported value comparisons.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property values to match.
     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
     * @example
     *
     * var object = { 'a': 1, 'b': 2 };
     *
     * _.isMatch(object, { 'b': 2 });
     * // => true
     *
     * _.isMatch(object, { 'b': 1 });
     * // => false
     */
    function isMatch(object, source) {
      return object === source || baseIsMatch(object, source, getMatchData(source));
    }

    /**
     * This method is like `_.isMatch` except that it accepts `customizer` which
     * is invoked to compare values. If `customizer` returns `undefined`, comparisons
     * are handled by the method instead. The `customizer` is invoked with five
     * arguments: (objValue, srcValue, index|key, object, source).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property values to match.
     * @param {Function} [customizer] The function to customize comparisons.
     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
     * @example
     *
     * function isGreeting(value) {
     *   return /^h(?:i|ello)$/.test(value);
     * }
     *
     * function customizer(objValue, srcValue) {
     *   if (isGreeting(objValue) && isGreeting(srcValue)) {
     *     return true;
     *   }
     * }
     *
     * var object = { 'greeting': 'hello' };
     * var source = { 'greeting': 'hi' };
     *
     * _.isMatchWith(object, source, customizer);
     * // => true
     */
    function isMatchWith(object, source, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return baseIsMatch(object, source, getMatchData(source), customizer);
    }

    /**
     * Checks if `value` is `NaN`.
     *
     * **Note:** This method is based on
     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as
     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for
     * `undefined` and other non-number values.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
     * @example
     *
     * _.isNaN(NaN);
     * // => true
     *
     * _.isNaN(new Number(NaN));
     * // => true
     *
     * isNaN(undefined);
     * // => true
     *
     * _.isNaN(undefined);
     * // => false
     */
    function isNaN(value) {
      // An `NaN` primitive is the only value that is not equal to itself.
      // Perform the `toStringTag` check first to avoid errors with some
      // ActiveX objects in IE.
      return isNumber(value) && value != +value;
    }

    /**
     * Checks if `value` is a pristine native function.
     *
     * **Note:** This method can't reliably detect native functions in the presence
     * of the core-js package because core-js circumvents this kind of detection.
     * Despite multiple requests, the core-js maintainer has made it clear: any
     * attempt to fix the detection will be obstructed. As a result, we're left
     * with little choice but to throw an error. Unfortunately, this also affects
     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),
     * which rely on core-js.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a native function,
     *  else `false`.
     * @example
     *
     * _.isNative(Array.prototype.push);
     * // => true
     *
     * _.isNative(_);
     * // => false
     */
    function isNative(value) {
      if (isMaskable(value)) {
        throw new Error(CORE_ERROR_TEXT);
      }
      return baseIsNative(value);
    }

    /**
     * Checks if `value` is `null`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.
     * @example
     *
     * _.isNull(null);
     * // => true
     *
     * _.isNull(void 0);
     * // => false
     */
    function isNull(value) {
      return value === null;
    }

    /**
     * Checks if `value` is `null` or `undefined`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.
     * @example
     *
     * _.isNil(null);
     * // => true
     *
     * _.isNil(void 0);
     * // => true
     *
     * _.isNil(NaN);
     * // => false
     */
    function isNil(value) {
      return value == null;
    }

    /**
     * Checks if `value` is classified as a `Number` primitive or object.
     *
     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are
     * classified as numbers, use the `_.isFinite` method.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a number, else `false`.
     * @example
     *
     * _.isNumber(3);
     * // => true
     *
     * _.isNumber(Number.MIN_VALUE);
     * // => true
     *
     * _.isNumber(Infinity);
     * // => true
     *
     * _.isNumber('3');
     * // => false
     */
    function isNumber(value) {
      return typeof value == 'number' ||
        (isObjectLike(value) && baseGetTag(value) == numberTag);
    }

    /**
     * Checks if `value` is a plain object, that is, an object created by the
     * `Object` constructor or one with a `[[Prototype]]` of `null`.
     *
     * @static
     * @memberOf _
     * @since 0.8.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     * }
     *
     * _.isPlainObject(new Foo);
     * // => false
     *
     * _.isPlainObject([1, 2, 3]);
     * // => false
     *
     * _.isPlainObject({ 'x': 0, 'y': 0 });
     * // => true
     *
     * _.isPlainObject(Object.create(null));
     * // => true
     */
    function isPlainObject(value) {
      if (!isObjectLike(value) || baseGetTag(value) != objectTag) {
        return false;
      }
      var proto = getPrototype(value);
      if (proto === null) {
        return true;
      }
      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;
      return typeof Ctor == 'function' && Ctor instanceof Ctor &&
        funcToString.call(Ctor) == objectCtorString;
    }

    /**
     * Checks if `value` is classified as a `RegExp` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.
     * @example
     *
     * _.isRegExp(/abc/);
     * // => true
     *
     * _.isRegExp('/abc/');
     * // => false
     */
    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;

    /**
     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754
     * double precision number which isn't the result of a rounded unsafe integer.
     *
     * **Note:** This method is based on
     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.
     * @example
     *
     * _.isSafeInteger(3);
     * // => true
     *
     * _.isSafeInteger(Number.MIN_VALUE);
     * // => false
     *
     * _.isSafeInteger(Infinity);
     * // => false
     *
     * _.isSafeInteger('3');
     * // => false
     */
    function isSafeInteger(value) {
      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;
    }

    /**
     * Checks if `value` is classified as a `Set` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a set, else `false`.
     * @example
     *
     * _.isSet(new Set);
     * // => true
     *
     * _.isSet(new WeakSet);
     * // => false
     */
    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;

    /**
     * Checks if `value` is classified as a `String` primitive or object.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a string, else `false`.
     * @example
     *
     * _.isString('abc');
     * // => true
     *
     * _.isString(1);
     * // => false
     */
    function isString(value) {
      return typeof value == 'string' ||
        (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);
    }

    /**
     * Checks if `value` is classified as a `Symbol` primitive or object.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
     * @example
     *
     * _.isSymbol(Symbol.iterator);
     * // => true
     *
     * _.isSymbol('abc');
     * // => false
     */
    function isSymbol(value) {
      return typeof value == 'symbol' ||
        (isObjectLike(value) && baseGetTag(value) == symbolTag);
    }

    /**
     * Checks if `value` is classified as a typed array.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
     * @example
     *
     * _.isTypedArray(new Uint8Array);
     * // => true
     *
     * _.isTypedArray([]);
     * // => false
     */
    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;

    /**
     * Checks if `value` is `undefined`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.
     * @example
     *
     * _.isUndefined(void 0);
     * // => true
     *
     * _.isUndefined(null);
     * // => false
     */
    function isUndefined(value) {
      return value === undefined;
    }

    /**
     * Checks if `value` is classified as a `WeakMap` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.
     * @example
     *
     * _.isWeakMap(new WeakMap);
     * // => true
     *
     * _.isWeakMap(new Map);
     * // => false
     */
    function isWeakMap(value) {
      return isObjectLike(value) && getTag(value) == weakMapTag;
    }

    /**
     * Checks if `value` is classified as a `WeakSet` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.
     * @example
     *
     * _.isWeakSet(new WeakSet);
     * // => true
     *
     * _.isWeakSet(new Set);
     * // => false
     */
    function isWeakSet(value) {
      return isObjectLike(value) && baseGetTag(value) == weakSetTag;
    }

    /**
     * Checks if `value` is less than `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is less than `other`,
     *  else `false`.
     * @see _.gt
     * @example
     *
     * _.lt(1, 3);
     * // => true
     *
     * _.lt(3, 3);
     * // => false
     *
     * _.lt(3, 1);
     * // => false
     */
    var lt = createRelationalOperation(baseLt);

    /**
     * Checks if `value` is less than or equal to `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is less than or equal to
     *  `other`, else `false`.
     * @see _.gte
     * @example
     *
     * _.lte(1, 3);
     * // => true
     *
     * _.lte(3, 3);
     * // => true
     *
     * _.lte(3, 1);
     * // => false
     */
    var lte = createRelationalOperation(function(value, other) {
      return value <= other;
    });

    /**
     * Converts `value` to an array.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {Array} Returns the converted array.
     * @example
     *
     * _.toArray({ 'a': 1, 'b': 2 });
     * // => [1, 2]
     *
     * _.toArray('abc');
     * // => ['a', 'b', 'c']
     *
     * _.toArray(1);
     * // => []
     *
     * _.toArray(null);
     * // => []
     */
    function toArray(value) {
      if (!value) {
        return [];
      }
      if (isArrayLike(value)) {
        return isString(value) ? stringToArray(value) : copyArray(value);
      }
      if (symIterator && value[symIterator]) {
        return iteratorToArray(value[symIterator]());
      }
      var tag = getTag(value),
          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);

      return func(value);
    }

    /**
     * Converts `value` to a finite number.
     *
     * @static
     * @memberOf _
     * @since 4.12.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted number.
     * @example
     *
     * _.toFinite(3.2);
     * // => 3.2
     *
     * _.toFinite(Number.MIN_VALUE);
     * // => 5e-324
     *
     * _.toFinite(Infinity);
     * // => 1.7976931348623157e+308
     *
     * _.toFinite('3.2');
     * // => 3.2
     */
    function toFinite(value) {
      if (!value) {
        return value === 0 ? value : 0;
      }
      value = toNumber(value);
      if (value === INFINITY || value === -INFINITY) {
        var sign = (value < 0 ? -1 : 1);
        return sign * MAX_INTEGER;
      }
      return value === value ? value : 0;
    }

    /**
     * Converts `value` to an integer.
     *
     * **Note:** This method is loosely based on
     * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.toInteger(3.2);
     * // => 3
     *
     * _.toInteger(Number.MIN_VALUE);
     * // => 0
     *
     * _.toInteger(Infinity);
     * // => 1.7976931348623157e+308
     *
     * _.toInteger('3.2');
     * // => 3
     */
    function toInteger(value) {
      var result = toFinite(value),
          remainder = result % 1;

      return result === result ? (remainder ? result - remainder : result) : 0;
    }

    /**
     * Converts `value` to an integer suitable for use as the length of an
     * array-like object.
     *
     * **Note:** This method is based on
     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.toLength(3.2);
     * // => 3
     *
     * _.toLength(Number.MIN_VALUE);
     * // => 0
     *
     * _.toLength(Infinity);
     * // => 4294967295
     *
     * _.toLength('3.2');
     * // => 3
     */
    function toLength(value) {
      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;
    }

    /**
     * Converts `value` to a number.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to process.
     * @returns {number} Returns the number.
     * @example
     *
     * _.toNumber(3.2);
     * // => 3.2
     *
     * _.toNumber(Number.MIN_VALUE);
     * // => 5e-324
     *
     * _.toNumber(Infinity);
     * // => Infinity
     *
     * _.toNumber('3.2');
     * // => 3.2
     */
    function toNumber(value) {
      if (typeof value == 'number') {
        return value;
      }
      if (isSymbol(value)) {
        return NAN;
      }
      if (isObject(value)) {
        var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
        value = isObject(other) ? (other + '') : other;
      }
      if (typeof value != 'string') {
        return value === 0 ? value : +value;
      }
      value = baseTrim(value);
      var isBinary = reIsBinary.test(value);
      return (isBinary || reIsOctal.test(value))
        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
        : (reIsBadHex.test(value) ? NAN : +value);
    }

    /**
     * Converts `value` to a plain object flattening inherited enumerable string
     * keyed properties of `value` to own properties of the plain object.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {Object} Returns the converted plain object.
     * @example
     *
     * function Foo() {
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.assign({ 'a': 1 }, new Foo);
     * // => { 'a': 1, 'b': 2 }
     *
     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));
     * // => { 'a': 1, 'b': 2, 'c': 3 }
     */
    function toPlainObject(value) {
      return copyObject(value, keysIn(value));
    }

    /**
     * Converts `value` to a safe integer. A safe integer can be compared and
     * represented correctly.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.toSafeInteger(3.2);
     * // => 3
     *
     * _.toSafeInteger(Number.MIN_VALUE);
     * // => 0
     *
     * _.toSafeInteger(Infinity);
     * // => 9007199254740991
     *
     * _.toSafeInteger('3.2');
     * // => 3
     */
    function toSafeInteger(value) {
      return value
        ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER)
        : (value === 0 ? value : 0);
    }

    /**
     * Converts `value` to a string. An empty string is returned for `null`
     * and `undefined` values. The sign of `-0` is preserved.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {string} Returns the converted string.
     * @example
     *
     * _.toString(null);
     * // => ''
     *
     * _.toString(-0);
     * // => '-0'
     *
     * _.toString([1, 2, 3]);
     * // => '1,2,3'
     */
    function toString(value) {
      return value == null ? '' : baseToString(value);
    }

    /*------------------------------------------------------------------------*/

    /**
     * Assigns own enumerable string keyed properties of source objects to the
     * destination object. Source objects are applied from left to right.
     * Subsequent sources overwrite property assignments of previous sources.
     *
     * **Note:** This method mutates `object` and is loosely based on
     * [`Object.assign`](https://mdn.io/Object/assign).
     *
     * @static
     * @memberOf _
     * @since 0.10.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.assignIn
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     * }
     *
     * function Bar() {
     *   this.c = 3;
     * }
     *
     * Foo.prototype.b = 2;
     * Bar.prototype.d = 4;
     *
     * _.assign({ 'a': 0 }, new Foo, new Bar);
     * // => { 'a': 1, 'c': 3 }
     */
    var assign = createAssigner(function(object, source) {
      if (isPrototype(source) || isArrayLike(source)) {
        copyObject(source, keys(source), object);
        return;
      }
      for (var key in source) {
        if (hasOwnProperty.call(source, key)) {
          assignValue(object, key, source[key]);
        }
      }
    });

    /**
     * This method is like `_.assign` except that it iterates over own and
     * inherited source properties.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias extend
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.assign
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     * }
     *
     * function Bar() {
     *   this.c = 3;
     * }
     *
     * Foo.prototype.b = 2;
     * Bar.prototype.d = 4;
     *
     * _.assignIn({ 'a': 0 }, new Foo, new Bar);
     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }
     */
    var assignIn = createAssigner(function(object, source) {
      copyObject(source, keysIn(source), object);
    });

    /**
     * This method is like `_.assignIn` except that it accepts `customizer`
     * which is invoked to produce the assigned values. If `customizer` returns
     * `undefined`, assignment is handled by the method instead. The `customizer`
     * is invoked with five arguments: (objValue, srcValue, key, object, source).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias extendWith
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} sources The source objects.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @see _.assignWith
     * @example
     *
     * function customizer(objValue, srcValue) {
     *   return _.isUndefined(objValue) ? srcValue : objValue;
     * }
     *
     * var defaults = _.partialRight(_.assignInWith, customizer);
     *
     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
     * // => { 'a': 1, 'b': 2 }
     */
    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {
      copyObject(source, keysIn(source), object, customizer);
    });

    /**
     * This method is like `_.assign` except that it accepts `customizer`
     * which is invoked to produce the assigned values. If `customizer` returns
     * `undefined`, assignment is handled by the method instead. The `customizer`
     * is invoked with five arguments: (objValue, srcValue, key, object, source).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} sources The source objects.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @see _.assignInWith
     * @example
     *
     * function customizer(objValue, srcValue) {
     *   return _.isUndefined(objValue) ? srcValue : objValue;
     * }
     *
     * var defaults = _.partialRight(_.assignWith, customizer);
     *
     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
     * // => { 'a': 1, 'b': 2 }
     */
    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {
      copyObject(source, keys(source), object, customizer);
    });

    /**
     * Creates an array of values corresponding to `paths` of `object`.
     *
     * @static
     * @memberOf _
     * @since 1.0.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {...(string|string[])} [paths] The property paths to pick.
     * @returns {Array} Returns the picked values.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };
     *
     * _.at(object, ['a[0].b.c', 'a[1]']);
     * // => [3, 4]
     */
    var at = flatRest(baseAt);

    /**
     * Creates an object that inherits from the `prototype` object. If a
     * `properties` object is given, its own enumerable string keyed properties
     * are assigned to the created object.
     *
     * @static
     * @memberOf _
     * @since 2.3.0
     * @category Object
     * @param {Object} prototype The object to inherit from.
     * @param {Object} [properties] The properties to assign to the object.
     * @returns {Object} Returns the new object.
     * @example
     *
     * function Shape() {
     *   this.x = 0;
     *   this.y = 0;
     * }
     *
     * function Circle() {
     *   Shape.call(this);
     * }
     *
     * Circle.prototype = _.create(Shape.prototype, {
     *   'constructor': Circle
     * });
     *
     * var circle = new Circle;
     * circle instanceof Circle;
     * // => true
     *
     * circle instanceof Shape;
     * // => true
     */
    function create(prototype, properties) {
      var result = baseCreate(prototype);
      return properties == null ? result : baseAssign(result, properties);
    }

    /**
     * Assigns own and inherited enumerable string keyed properties of source
     * objects to the destination object for all destination properties that
     * resolve to `undefined`. Source objects are applied from left to right.
     * Once a property is set, additional values of the same property are ignored.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.defaultsDeep
     * @example
     *
     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
     * // => { 'a': 1, 'b': 2 }
     */
    var defaults = baseRest(function(object, sources) {
      object = Object(object);

      var index = -1;
      var length = sources.length;
      var guard = length > 2 ? sources[2] : undefined;

      if (guard && isIterateeCall(sources[0], sources[1], guard)) {
        length = 1;
      }

      while (++index < length) {
        var source = sources[index];
        var props = keysIn(source);
        var propsIndex = -1;
        var propsLength = props.length;

        while (++propsIndex < propsLength) {
          var key = props[propsIndex];
          var value = object[key];

          if (value === undefined ||
              (eq(value, objectProto[key]) && !hasOwnProperty.call(object, key))) {
            object[key] = source[key];
          }
        }
      }

      return object;
    });

    /**
     * This method is like `_.defaults` except that it recursively assigns
     * default properties.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.defaults
     * @example
     *
     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });
     * // => { 'a': { 'b': 2, 'c': 3 } }
     */
    var defaultsDeep = baseRest(function(args) {
      args.push(undefined, customDefaultsMerge);
      return apply(mergeWith, undefined, args);
    });

    /**
     * This method is like `_.find` except that it returns the key of the first
     * element `predicate` returns truthy for instead of the element itself.
     *
     * @static
     * @memberOf _
     * @since 1.1.0
     * @category Object
     * @param {Object} object The object to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {string|undefined} Returns the key of the matched element,
     *  else `undefined`.
     * @example
     *
     * var users = {
     *   'barney':  { 'age': 36, 'active': true },
     *   'fred':    { 'age': 40, 'active': false },
     *   'pebbles': { 'age': 1,  'active': true }
     * };
     *
     * _.findKey(users, function(o) { return o.age < 40; });
     * // => 'barney' (iteration order is not guaranteed)
     *
     * // The `_.matches` iteratee shorthand.
     * _.findKey(users, { 'age': 1, 'active': true });
     * // => 'pebbles'
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findKey(users, ['active', false]);
     * // => 'fred'
     *
     * // The `_.property` iteratee shorthand.
     * _.findKey(users, 'active');
     * // => 'barney'
     */
    function findKey(object, predicate) {
      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);
    }

    /**
     * This method is like `_.findKey` except that it iterates over elements of
     * a collection in the opposite order.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Object
     * @param {Object} object The object to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {string|undefined} Returns the key of the matched element,
     *  else `undefined`.
     * @example
     *
     * var users = {
     *   'barney':  { 'age': 36, 'active': true },
     *   'fred':    { 'age': 40, 'active': false },
     *   'pebbles': { 'age': 1,  'active': true }
     * };
     *
     * _.findLastKey(users, function(o) { return o.age < 40; });
     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'
     *
     * // The `_.matches` iteratee shorthand.
     * _.findLastKey(users, { 'age': 36, 'active': true });
     * // => 'barney'
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findLastKey(users, ['active', false]);
     * // => 'fred'
     *
     * // The `_.property` iteratee shorthand.
     * _.findLastKey(users, 'active');
     * // => 'pebbles'
     */
    function findLastKey(object, predicate) {
      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);
    }

    /**
     * Iterates over own and inherited enumerable string keyed properties of an
     * object and invokes `iteratee` for each property. The iteratee is invoked
     * with three arguments: (value, key, object). Iteratee functions may exit
     * iteration early by explicitly returning `false`.
     *
     * @static
     * @memberOf _
     * @since 0.3.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forInRight
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forIn(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).
     */
    function forIn(object, iteratee) {
      return object == null
        ? object
        : baseFor(object, getIteratee(iteratee, 3), keysIn);
    }

    /**
     * This method is like `_.forIn` except that it iterates over properties of
     * `object` in the opposite order.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forIn
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forInRight(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.
     */
    function forInRight(object, iteratee) {
      return object == null
        ? object
        : baseForRight(object, getIteratee(iteratee, 3), keysIn);
    }

    /**
     * Iterates over own enumerable string keyed properties of an object and
     * invokes `iteratee` for each property. The iteratee is invoked with three
     * arguments: (value, key, object). Iteratee functions may exit iteration
     * early by explicitly returning `false`.
     *
     * @static
     * @memberOf _
     * @since 0.3.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forOwnRight
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forOwn(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'a' then 'b' (iteration order is not guaranteed).
     */
    function forOwn(object, iteratee) {
      return object && baseForOwn(object, getIteratee(iteratee, 3));
    }

    /**
     * This method is like `_.forOwn` except that it iterates over properties of
     * `object` in the opposite order.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forOwn
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forOwnRight(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.
     */
    function forOwnRight(object, iteratee) {
      return object && baseForOwnRight(object, getIteratee(iteratee, 3));
    }

    /**
     * Creates an array of function property names from own enumerable properties
     * of `object`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to inspect.
     * @returns {Array} Returns the function names.
     * @see _.functionsIn
     * @example
     *
     * function Foo() {
     *   this.a = _.constant('a');
     *   this.b = _.constant('b');
     * }
     *
     * Foo.prototype.c = _.constant('c');
     *
     * _.functions(new Foo);
     * // => ['a', 'b']
     */
    function functions(object) {
      return object == null ? [] : baseFunctions(object, keys(object));
    }

    /**
     * Creates an array of function property names from own and inherited
     * enumerable properties of `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to inspect.
     * @returns {Array} Returns the function names.
     * @see _.functions
     * @example
     *
     * function Foo() {
     *   this.a = _.constant('a');
     *   this.b = _.constant('b');
     * }
     *
     * Foo.prototype.c = _.constant('c');
     *
     * _.functionsIn(new Foo);
     * // => ['a', 'b', 'c']
     */
    function functionsIn(object) {
      return object == null ? [] : baseFunctions(object, keysIn(object));
    }

    /**
     * Gets the value at `path` of `object`. If the resolved value is
     * `undefined`, the `defaultValue` is returned in its place.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the property to get.
     * @param {*} [defaultValue] The value returned for `undefined` resolved values.
     * @returns {*} Returns the resolved value.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
     *
     * _.get(object, 'a[0].b.c');
     * // => 3
     *
     * _.get(object, ['a', '0', 'b', 'c']);
     * // => 3
     *
     * _.get(object, 'a.b.c', 'default');
     * // => 'default'
     */
    function get(object, path, defaultValue) {
      var result = object == null ? undefined : baseGet(object, path);
      return result === undefined ? defaultValue : result;
    }

    /**
     * Checks if `path` is a direct property of `object`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path to check.
     * @returns {boolean} Returns `true` if `path` exists, else `false`.
     * @example
     *
     * var object = { 'a': { 'b': 2 } };
     * var other = _.create({ 'a': _.create({ 'b': 2 }) });
     *
     * _.has(object, 'a');
     * // => true
     *
     * _.has(object, 'a.b');
     * // => true
     *
     * _.has(object, ['a', 'b']);
     * // => true
     *
     * _.has(other, 'a');
     * // => false
     */
    function has(object, path) {
      return object != null && hasPath(object, path, baseHas);
    }

    /**
     * Checks if `path` is a direct or inherited property of `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path to check.
     * @returns {boolean} Returns `true` if `path` exists, else `false`.
     * @example
     *
     * var object = _.create({ 'a': _.create({ 'b': 2 }) });
     *
     * _.hasIn(object, 'a');
     * // => true
     *
     * _.hasIn(object, 'a.b');
     * // => true
     *
     * _.hasIn(object, ['a', 'b']);
     * // => true
     *
     * _.hasIn(object, 'b');
     * // => false
     */
    function hasIn(object, path) {
      return object != null && hasPath(object, path, baseHasIn);
    }

    /**
     * Creates an object composed of the inverted keys and values of `object`.
     * If `object` contains duplicate values, subsequent values overwrite
     * property assignments of previous values.
     *
     * @static
     * @memberOf _
     * @since 0.7.0
     * @category Object
     * @param {Object} object The object to invert.
     * @returns {Object} Returns the new inverted object.
     * @example
     *
     * var object = { 'a': 1, 'b': 2, 'c': 1 };
     *
     * _.invert(object);
     * // => { '1': 'c', '2': 'b' }
     */
    var invert = createInverter(function(result, value, key) {
      if (value != null &&
          typeof value.toString != 'function') {
        value = nativeObjectToString.call(value);
      }

      result[value] = key;
    }, constant(identity));

    /**
     * This method is like `_.invert` except that the inverted object is generated
     * from the results of running each element of `object` thru `iteratee`. The
     * corresponding inverted value of each inverted key is an array of keys
     * responsible for generating the inverted value. The iteratee is invoked
     * with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.1.0
     * @category Object
     * @param {Object} object The object to invert.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Object} Returns the new inverted object.
     * @example
     *
     * var object = { 'a': 1, 'b': 2, 'c': 1 };
     *
     * _.invertBy(object);
     * // => { '1': ['a', 'c'], '2': ['b'] }
     *
     * _.invertBy(object, function(value) {
     *   return 'group' + value;
     * });
     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }
     */
    var invertBy = createInverter(function(result, value, key) {
      if (value != null &&
          typeof value.toString != 'function') {
        value = nativeObjectToString.call(value);
      }

      if (hasOwnProperty.call(result, value)) {
        result[value].push(key);
      } else {
        result[value] = [key];
      }
    }, getIteratee);

    /**
     * Invokes the method at `path` of `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the method to invoke.
     * @param {...*} [args] The arguments to invoke the method with.
     * @returns {*} Returns the result of the invoked method.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };
     *
     * _.invoke(object, 'a[0].b.c.slice', 1, 3);
     * // => [2, 3]
     */
    var invoke = baseRest(baseInvoke);

    /**
     * Creates an array of the own enumerable property names of `object`.
     *
     * **Note:** Non-object values are coerced to objects. See the
     * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
     * for more details.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.keys(new Foo);
     * // => ['a', 'b'] (iteration order is not guaranteed)
     *
     * _.keys('hi');
     * // => ['0', '1']
     */
    function keys(object) {
      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
    }

    /**
     * Creates an array of the own and inherited enumerable property names of `object`.
     *
     * **Note:** Non-object values are coerced to objects.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.keysIn(new Foo);
     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)
     */
    function keysIn(object) {
      return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);
    }

    /**
     * The opposite of `_.mapValues`; this method creates an object with the
     * same values as `object` and keys generated by running each own enumerable
     * string keyed property of `object` thru `iteratee`. The iteratee is invoked
     * with three arguments: (value, key, object).
     *
     * @static
     * @memberOf _
     * @since 3.8.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns the new mapped object.
     * @see _.mapValues
     * @example
     *
     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {
     *   return key + value;
     * });
     * // => { 'a1': 1, 'b2': 2 }
     */
    function mapKeys(object, iteratee) {
      var result = {};
      iteratee = getIteratee(iteratee, 3);

      baseForOwn(object, function(value, key, object) {
        baseAssignValue(result, iteratee(value, key, object), value);
      });
      return result;
    }

    /**
     * Creates an object with the same keys as `object` and values generated
     * by running each own enumerable string keyed property of `object` thru
     * `iteratee`. The iteratee is invoked with three arguments:
     * (value, key, object).
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns the new mapped object.
     * @see _.mapKeys
     * @example
     *
     * var users = {
     *   'fred':    { 'user': 'fred',    'age': 40 },
     *   'pebbles': { 'user': 'pebbles', 'age': 1 }
     * };
     *
     * _.mapValues(users, function(o) { return o.age; });
     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
     *
     * // The `_.property` iteratee shorthand.
     * _.mapValues(users, 'age');
     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
     */
    function mapValues(object, iteratee) {
      var result = {};
      iteratee = getIteratee(iteratee, 3);

      baseForOwn(object, function(value, key, object) {
        baseAssignValue(result, key, iteratee(value, key, object));
      });
      return result;
    }

    /**
     * This method is like `_.assign` except that it recursively merges own and
     * inherited enumerable string keyed properties of source objects into the
     * destination object. Source properties that resolve to `undefined` are
     * skipped if a destination value exists. Array and plain object properties
     * are merged recursively. Other objects and value types are overridden by
     * assignment. Source objects are applied from left to right. Subsequent
     * sources overwrite property assignments of previous sources.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 0.5.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = {
     *   'a': [{ 'b': 2 }, { 'd': 4 }]
     * };
     *
     * var other = {
     *   'a': [{ 'c': 3 }, { 'e': 5 }]
     * };
     *
     * _.merge(object, other);
     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }
     */
    var merge = createAssigner(function(object, source, srcIndex) {
      baseMerge(object, source, srcIndex);
    });

    /**
     * This method is like `_.merge` except that it accepts `customizer` which
     * is invoked to produce the merged values of the destination and source
     * properties. If `customizer` returns `undefined`, merging is handled by the
     * method instead. The `customizer` is invoked with six arguments:
     * (objValue, srcValue, key, object, source, stack).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} sources The source objects.
     * @param {Function} customizer The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @example
     *
     * function customizer(objValue, srcValue) {
     *   if (_.isArray(objValue)) {
     *     return objValue.concat(srcValue);
     *   }
     * }
     *
     * var object = { 'a': [1], 'b': [2] };
     * var other = { 'a': [3], 'b': [4] };
     *
     * _.mergeWith(object, other, customizer);
     * // => { 'a': [1, 3], 'b': [2, 4] }
     */
    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {
      baseMerge(object, source, srcIndex, customizer);
    });

    /**
     * The opposite of `_.pick`; this method creates an object composed of the
     * own and inherited enumerable property paths of `object` that are not omitted.
     *
     * **Note:** This method is considerably slower than `_.pick`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The source object.
     * @param {...(string|string[])} [paths] The property paths to omit.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.omit(object, ['a', 'c']);
     * // => { 'b': '2' }
     */
    var omit = flatRest(function(object, paths) {
      var result = {};
      if (object == null) {
        return result;
      }
      var isDeep = false;
      paths = arrayMap(paths, function(path) {
        path = castPath(path, object);
        isDeep || (isDeep = path.length > 1);
        return path;
      });
      copyObject(object, getAllKeysIn(object), result);
      if (isDeep) {
        result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);
      }
      var length = paths.length;
      while (length--) {
        baseUnset(result, paths[length]);
      }
      return result;
    });

    /**
     * The opposite of `_.pickBy`; this method creates an object composed of
     * the own and inherited enumerable string keyed properties of `object` that
     * `predicate` doesn't return truthy for. The predicate is invoked with two
     * arguments: (value, key).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The source object.
     * @param {Function} [predicate=_.identity] The function invoked per property.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.omitBy(object, _.isNumber);
     * // => { 'b': '2' }
     */
    function omitBy(object, predicate) {
      return pickBy(object, negate(getIteratee(predicate)));
    }

    /**
     * Creates an object composed of the picked `object` properties.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The source object.
     * @param {...(string|string[])} [paths] The property paths to pick.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.pick(object, ['a', 'c']);
     * // => { 'a': 1, 'c': 3 }
     */
    var pick = flatRest(function(object, paths) {
      return object == null ? {} : basePick(object, paths);
    });

    /**
     * Creates an object composed of the `object` properties `predicate` returns
     * truthy for. The predicate is invoked with two arguments: (value, key).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The source object.
     * @param {Function} [predicate=_.identity] The function invoked per property.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.pickBy(object, _.isNumber);
     * // => { 'a': 1, 'c': 3 }
     */
    function pickBy(object, predicate) {
      if (object == null) {
        return {};
      }
      var props = arrayMap(getAllKeysIn(object), function(prop) {
        return [prop];
      });
      predicate = getIteratee(predicate);
      return basePickBy(object, props, function(value, path) {
        return predicate(value, path[0]);
      });
    }

    /**
     * This method is like `_.get` except that if the resolved value is a
     * function it's invoked with the `this` binding of its parent object and
     * its result is returned.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the property to resolve.
     * @param {*} [defaultValue] The value returned for `undefined` resolved values.
     * @returns {*} Returns the resolved value.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };
     *
     * _.result(object, 'a[0].b.c1');
     * // => 3
     *
     * _.result(object, 'a[0].b.c2');
     * // => 4
     *
     * _.result(object, 'a[0].b.c3', 'default');
     * // => 'default'
     *
     * _.result(object, 'a[0].b.c3', _.constant('default'));
     * // => 'default'
     */
    function result(object, path, defaultValue) {
      path = castPath(path, object);

      var index = -1,
          length = path.length;

      // Ensure the loop is entered when path is empty.
      if (!length) {
        length = 1;
        object = undefined;
      }
      while (++index < length) {
        var value = object == null ? undefined : object[toKey(path[index])];
        if (value === undefined) {
          index = length;
          value = defaultValue;
        }
        object = isFunction(value) ? value.call(object) : value;
      }
      return object;
    }

    /**
     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,
     * it's created. Arrays are created for missing index properties while objects
     * are created for all other missing properties. Use `_.setWith` to customize
     * `path` creation.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
     *
     * _.set(object, 'a[0].b.c', 4);
     * console.log(object.a[0].b.c);
     * // => 4
     *
     * _.set(object, ['x', '0', 'y', 'z'], 5);
     * console.log(object.x[0].y.z);
     * // => 5
     */
    function set(object, path, value) {
      return object == null ? object : baseSet(object, path, value);
    }

    /**
     * This method is like `_.set` except that it accepts `customizer` which is
     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`
     * path creation is handled by the method instead. The `customizer` is invoked
     * with three arguments: (nsValue, key, nsObject).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {*} value The value to set.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = {};
     *
     * _.setWith(object, '[0][1]', 'a', Object);
     * // => { '0': { '1': 'a' } }
     */
    function setWith(object, path, value, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return object == null ? object : baseSet(object, path, value, customizer);
    }

    /**
     * Creates an array of own enumerable string keyed-value pairs for `object`
     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its
     * entries are returned.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias entries
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the key-value pairs.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.toPairs(new Foo);
     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)
     */
    var toPairs = createToPairs(keys);

    /**
     * Creates an array of own and inherited enumerable string keyed-value pairs
     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map
     * or set, its entries are returned.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias entriesIn
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the key-value pairs.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.toPairsIn(new Foo);
     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)
     */
    var toPairsIn = createToPairs(keysIn);

    /**
     * An alternative to `_.reduce`; this method transforms `object` to a new
     * `accumulator` object which is the result of running each of its own
     * enumerable string keyed properties thru `iteratee`, with each invocation
     * potentially mutating the `accumulator` object. If `accumulator` is not
     * provided, a new object with the same `[[Prototype]]` will be used. The
     * iteratee is invoked with four arguments: (accumulator, value, key, object).
     * Iteratee functions may exit iteration early by explicitly returning `false`.
     *
     * @static
     * @memberOf _
     * @since 1.3.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {*} [accumulator] The custom accumulator value.
     * @returns {*} Returns the accumulated value.
     * @example
     *
     * _.transform([2, 3, 4], function(result, n) {
     *   result.push(n *= n);
     *   return n % 2 == 0;
     * }, []);
     * // => [4, 9]
     *
     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
     *   (result[value] || (result[value] = [])).push(key);
     * }, {});
     * // => { '1': ['a', 'c'], '2': ['b'] }
     */
    function transform(object, iteratee, accumulator) {
      var isArr = isArray(object),
          isArrLike = isArr || isBuffer(object) || isTypedArray(object);

      iteratee = getIteratee(iteratee, 4);
      if (accumulator == null) {
        var Ctor = object && object.constructor;
        if (isArrLike) {
          accumulator = isArr ? new Ctor : [];
        }
        else if (isObject(object)) {
          accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};
        }
        else {
          accumulator = {};
        }
      }
      (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {
        return iteratee(accumulator, value, index, object);
      });
      return accumulator;
    }

    /**
     * Removes the property at `path` of `object`.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to unset.
     * @returns {boolean} Returns `true` if the property is deleted, else `false`.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 7 } }] };
     * _.unset(object, 'a[0].b.c');
     * // => true
     *
     * console.log(object);
     * // => { 'a': [{ 'b': {} }] };
     *
     * _.unset(object, ['a', '0', 'b', 'c']);
     * // => true
     *
     * console.log(object);
     * // => { 'a': [{ 'b': {} }] };
     */
    function unset(object, path) {
      return object == null ? true : baseUnset(object, path);
    }

    /**
     * This method is like `_.set` except that accepts `updater` to produce the
     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`
     * is invoked with one argument: (value).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.6.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {Function} updater The function to produce the updated value.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
     *
     * _.update(object, 'a[0].b.c', function(n) { return n * n; });
     * console.log(object.a[0].b.c);
     * // => 9
     *
     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });
     * console.log(object.x[0].y.z);
     * // => 0
     */
    function update(object, path, updater) {
      return object == null ? object : baseUpdate(object, path, castFunction(updater));
    }

    /**
     * This method is like `_.update` except that it accepts `customizer` which is
     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`
     * path creation is handled by the method instead. The `customizer` is invoked
     * with three arguments: (nsValue, key, nsObject).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.6.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {Function} updater The function to produce the updated value.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = {};
     *
     * _.updateWith(object, '[0][1]', _.constant('a'), Object);
     * // => { '0': { '1': 'a' } }
     */
    function updateWith(object, path, updater, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);
    }

    /**
     * Creates an array of the own enumerable string keyed property values of `object`.
     *
     * **Note:** Non-object values are coerced to objects.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property values.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.values(new Foo);
     * // => [1, 2] (iteration order is not guaranteed)
     *
     * _.values('hi');
     * // => ['h', 'i']
     */
    function values(object) {
      return object == null ? [] : baseValues(object, keys(object));
    }

    /**
     * Creates an array of the own and inherited enumerable string keyed property
     * values of `object`.
     *
     * **Note:** Non-object values are coerced to objects.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property values.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.valuesIn(new Foo);
     * // => [1, 2, 3] (iteration order is not guaranteed)
     */
    function valuesIn(object) {
      return object == null ? [] : baseValues(object, keysIn(object));
    }

    /*------------------------------------------------------------------------*/

    /**
     * Clamps `number` within the inclusive `lower` and `upper` bounds.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Number
     * @param {number} number The number to clamp.
     * @param {number} [lower] The lower bound.
     * @param {number} upper The upper bound.
     * @returns {number} Returns the clamped number.
     * @example
     *
     * _.clamp(-10, -5, 5);
     * // => -5
     *
     * _.clamp(10, -5, 5);
     * // => 5
     */
    function clamp(number, lower, upper) {
      if (upper === undefined) {
        upper = lower;
        lower = undefined;
      }
      if (upper !== undefined) {
        upper = toNumber(upper);
        upper = upper === upper ? upper : 0;
      }
      if (lower !== undefined) {
        lower = toNumber(lower);
        lower = lower === lower ? lower : 0;
      }
      return baseClamp(toNumber(number), lower, upper);
    }

    /**
     * Checks if `n` is between `start` and up to, but not including, `end`. If
     * `end` is not specified, it's set to `start` with `start` then set to `0`.
     * If `start` is greater than `end` the params are swapped to support
     * negative ranges.
     *
     * @static
     * @memberOf _
     * @since 3.3.0
     * @category Number
     * @param {number} number The number to check.
     * @param {number} [start=0] The start of the range.
     * @param {number} end The end of the range.
     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.
     * @see _.range, _.rangeRight
     * @example
     *
     * _.inRange(3, 2, 4);
     * // => true
     *
     * _.inRange(4, 8);
     * // => true
     *
     * _.inRange(4, 2);
     * // => false
     *
     * _.inRange(2, 2);
     * // => false
     *
     * _.inRange(1.2, 2);
     * // => true
     *
     * _.inRange(5.2, 4);
     * // => false
     *
     * _.inRange(-3, -2, -6);
     * // => true
     */
    function inRange(number, start, end) {
      start = toFinite(start);
      if (end === undefined) {
        end = start;
        start = 0;
      } else {
        end = toFinite(end);
      }
      number = toNumber(number);
      return baseInRange(number, start, end);
    }

    /**
     * Produces a random number between the inclusive `lower` and `upper` bounds.
     * If only one argument is provided a number between `0` and the given number
     * is returned. If `floating` is `true`, or either `lower` or `upper` are
     * floats, a floating-point number is returned instead of an integer.
     *
     * **Note:** JavaScript follows the IEEE-754 standard for resolving
     * floating-point values which can produce unexpected results.
     *
     * @static
     * @memberOf _
     * @since 0.7.0
     * @category Number
     * @param {number} [lower=0] The lower bound.
     * @param {number} [upper=1] The upper bound.
     * @param {boolean} [floating] Specify returning a floating-point number.
     * @returns {number} Returns the random number.
     * @example
     *
     * _.random(0, 5);
     * // => an integer between 0 and 5
     *
     * _.random(5);
     * // => also an integer between 0 and 5
     *
     * _.random(5, true);
     * // => a floating-point number between 0 and 5
     *
     * _.random(1.2, 5.2);
     * // => a floating-point number between 1.2 and 5.2
     */
    function random(lower, upper, floating) {
      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {
        upper = floating = undefined;
      }
      if (floating === undefined) {
        if (typeof upper == 'boolean') {
          floating = upper;
          upper = undefined;
        }
        else if (typeof lower == 'boolean') {
          floating = lower;
          lower = undefined;
        }
      }
      if (lower === undefined && upper === undefined) {
        lower = 0;
        upper = 1;
      }
      else {
        lower = toFinite(lower);
        if (upper === undefined) {
          upper = lower;
          lower = 0;
        } else {
          upper = toFinite(upper);
        }
      }
      if (lower > upper) {
        var temp = lower;
        lower = upper;
        upper = temp;
      }
      if (floating || lower % 1 || upper % 1) {
        var rand = nativeRandom();
        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);
      }
      return baseRandom(lower, upper);
    }

    /*------------------------------------------------------------------------*/

    /**
     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the camel cased string.
     * @example
     *
     * _.camelCase('Foo Bar');
     * // => 'fooBar'
     *
     * _.camelCase('--foo-bar--');
     * // => 'fooBar'
     *
     * _.camelCase('__FOO_BAR__');
     * // => 'fooBar'
     */
    var camelCase = createCompounder(function(result, word, index) {
      word = word.toLowerCase();
      return result + (index ? capitalize(word) : word);
    });

    /**
     * Converts the first character of `string` to upper case and the remaining
     * to lower case.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to capitalize.
     * @returns {string} Returns the capitalized string.
     * @example
     *
     * _.capitalize('FRED');
     * // => 'Fred'
     */
    function capitalize(string) {
      return upperFirst(toString(string).toLowerCase());
    }

    /**
     * Deburrs `string` by converting
     * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)
     * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)
     * letters to basic Latin letters and removing
     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to deburr.
     * @returns {string} Returns the deburred string.
     * @example
     *
     * _.deburr('déjà vu');
     * // => 'deja vu'
     */
    function deburr(string) {
      string = toString(string);
      return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');
    }

    /**
     * Checks if `string` ends with the given target string.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to inspect.
     * @param {string} [target] The string to search for.
     * @param {number} [position=string.length] The position to search up to.
     * @returns {boolean} Returns `true` if `string` ends with `target`,
     *  else `false`.
     * @example
     *
     * _.endsWith('abc', 'c');
     * // => true
     *
     * _.endsWith('abc', 'b');
     * // => false
     *
     * _.endsWith('abc', 'b', 2);
     * // => true
     */
    function endsWith(string, target, position) {
      string = toString(string);
      target = baseToString(target);

      var length = string.length;
      position = position === undefined
        ? length
        : baseClamp(toInteger(position), 0, length);

      var end = position;
      position -= target.length;
      return position >= 0 && string.slice(position, end) == target;
    }

    /**
     * Converts the characters "&", "<", ">", '"', and "'" in `string` to their
     * corresponding HTML entities.
     *
     * **Note:** No other characters are escaped. To escape additional
     * characters use a third-party library like [_he_](https://mths.be/he).
     *
     * Though the ">" character is escaped for symmetry, characters like
     * ">" and "/" don't need escaping in HTML and have no special meaning
     * unless they're part of a tag or unquoted attribute value. See
     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)
     * (under "semi-related fun fact") for more details.
     *
     * When working with HTML you should always
     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce
     * XSS vectors.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category String
     * @param {string} [string=''] The string to escape.
     * @returns {string} Returns the escaped string.
     * @example
     *
     * _.escape('fred, barney, & pebbles');
     * // => 'fred, barney, &amp; pebbles'
     */
    function escape(string) {
      string = toString(string);
      return (string && reHasUnescapedHtml.test(string))
        ? string.replace(reUnescapedHtml, escapeHtmlChar)
        : string;
    }

    /**
     * Escapes the `RegExp` special characters "^", "$", "\", ".", "*", "+",
     * "?", "(", ")", "[", "]", "{", "}", and "|" in `string`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to escape.
     * @returns {string} Returns the escaped string.
     * @example
     *
     * _.escapeRegExp('[lodash](https://lodash.com/)');
     * // => '\[lodash\]\(https://lodash\.com/\)'
     */
    function escapeRegExp(string) {
      string = toString(string);
      return (string && reHasRegExpChar.test(string))
        ? string.replace(reRegExpChar, '\\$&')
        : string;
    }

    /**
     * Converts `string` to
     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the kebab cased string.
     * @example
     *
     * _.kebabCase('Foo Bar');
     * // => 'foo-bar'
     *
     * _.kebabCase('fooBar');
     * // => 'foo-bar'
     *
     * _.kebabCase('__FOO_BAR__');
     * // => 'foo-bar'
     */
    var kebabCase = createCompounder(function(result, word, index) {
      return result + (index ? '-' : '') + word.toLowerCase();
    });

    /**
     * Converts `string`, as space separated words, to lower case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the lower cased string.
     * @example
     *
     * _.lowerCase('--Foo-Bar--');
     * // => 'foo bar'
     *
     * _.lowerCase('fooBar');
     * // => 'foo bar'
     *
     * _.lowerCase('__FOO_BAR__');
     * // => 'foo bar'
     */
    var lowerCase = createCompounder(function(result, word, index) {
      return result + (index ? ' ' : '') + word.toLowerCase();
    });

    /**
     * Converts the first character of `string` to lower case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the converted string.
     * @example
     *
     * _.lowerFirst('Fred');
     * // => 'fred'
     *
     * _.lowerFirst('FRED');
     * // => 'fRED'
     */
    var lowerFirst = createCaseFirst('toLowerCase');

    /**
     * Pads `string` on the left and right sides if it's shorter than `length`.
     * Padding characters are truncated if they can't be evenly divided by `length`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to pad.
     * @param {number} [length=0] The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padded string.
     * @example
     *
     * _.pad('abc', 8);
     * // => '  abc   '
     *
     * _.pad('abc', 8, '_-');
     * // => '_-abc_-_'
     *
     * _.pad('abc', 3);
     * // => 'abc'
     */
    function pad(string, length, chars) {
      string = toString(string);
      length = toInteger(length);

      var strLength = length ? stringSize(string) : 0;
      if (!length || strLength >= length) {
        return string;
      }
      var mid = (length - strLength) / 2;
      return (
        createPadding(nativeFloor(mid), chars) +
        string +
        createPadding(nativeCeil(mid), chars)
      );
    }

    /**
     * Pads `string` on the right side if it's shorter than `length`. Padding
     * characters are truncated if they exceed `length`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to pad.
     * @param {number} [length=0] The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padded string.
     * @example
     *
     * _.padEnd('abc', 6);
     * // => 'abc   '
     *
     * _.padEnd('abc', 6, '_-');
     * // => 'abc_-_'
     *
     * _.padEnd('abc', 3);
     * // => 'abc'
     */
    function padEnd(string, length, chars) {
      string = toString(string);
      length = toInteger(length);

      var strLength = length ? stringSize(string) : 0;
      return (length && strLength < length)
        ? (string + createPadding(length - strLength, chars))
        : string;
    }

    /**
     * Pads `string` on the left side if it's shorter than `length`. Padding
     * characters are truncated if they exceed `length`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to pad.
     * @param {number} [length=0] The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padded string.
     * @example
     *
     * _.padStart('abc', 6);
     * // => '   abc'
     *
     * _.padStart('abc', 6, '_-');
     * // => '_-_abc'
     *
     * _.padStart('abc', 3);
     * // => 'abc'
     */
    function padStart(string, length, chars) {
      string = toString(string);
      length = toInteger(length);

      var strLength = length ? stringSize(string) : 0;
      return (length && strLength < length)
        ? (createPadding(length - strLength, chars) + string)
        : string;
    }

    /**
     * Converts `string` to an integer of the specified radix. If `radix` is
     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a
     * hexadecimal, in which case a `radix` of `16` is used.
     *
     * **Note:** This method aligns with the
     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.
     *
     * @static
     * @memberOf _
     * @since 1.1.0
     * @category String
     * @param {string} string The string to convert.
     * @param {number} [radix=10] The radix to interpret `value` by.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.parseInt('08');
     * // => 8
     *
     * _.map(['6', '08', '10'], _.parseInt);
     * // => [6, 8, 10]
     */
    function parseInt(string, radix, guard) {
      if (guard || radix == null) {
        radix = 0;
      } else if (radix) {
        radix = +radix;
      }
      return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);
    }

    /**
     * Repeats the given string `n` times.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to repeat.
     * @param {number} [n=1] The number of times to repeat the string.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the repeated string.
     * @example
     *
     * _.repeat('*', 3);
     * // => '***'
     *
     * _.repeat('abc', 2);
     * // => 'abcabc'
     *
     * _.repeat('abc', 0);
     * // => ''
     */
    function repeat(string, n, guard) {
      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {
        n = 1;
      } else {
        n = toInteger(n);
      }
      return baseRepeat(toString(string), n);
    }

    /**
     * Replaces matches for `pattern` in `string` with `replacement`.
     *
     * **Note:** This method is based on
     * [`String#replace`](https://mdn.io/String/replace).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to modify.
     * @param {RegExp|string} pattern The pattern to replace.
     * @param {Function|string} replacement The match replacement.
     * @returns {string} Returns the modified string.
     * @example
     *
     * _.replace('Hi Fred', 'Fred', 'Barney');
     * // => 'Hi Barney'
     */
    function replace() {
      var args = arguments,
          string = toString(args[0]);

      return args.length < 3 ? string : string.replace(args[1], args[2]);
    }

    /**
     * Converts `string` to
     * [snake case](https://en.wikipedia.org/wiki/Snake_case).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the snake cased string.
     * @example
     *
     * _.snakeCase('Foo Bar');
     * // => 'foo_bar'
     *
     * _.snakeCase('fooBar');
     * // => 'foo_bar'
     *
     * _.snakeCase('--FOO-BAR--');
     * // => 'foo_bar'
     */
    var snakeCase = createCompounder(function(result, word, index) {
      return result + (index ? '_' : '') + word.toLowerCase();
    });

    /**
     * Splits `string` by `separator`.
     *
     * **Note:** This method is based on
     * [`String#split`](https://mdn.io/String/split).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to split.
     * @param {RegExp|string} separator The separator pattern to split by.
     * @param {number} [limit] The length to truncate results to.
     * @returns {Array} Returns the string segments.
     * @example
     *
     * _.split('a-b-c', '-', 2);
     * // => ['a', 'b']
     */
    function split(string, separator, limit) {
      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {
        separator = limit = undefined;
      }
      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;
      if (!limit) {
        return [];
      }
      string = toString(string);
      if (string && (
            typeof separator == 'string' ||
            (separator != null && !isRegExp(separator))
          )) {
        separator = baseToString(separator);
        if (!separator && hasUnicode(string)) {
          return castSlice(stringToArray(string), 0, limit);
        }
      }
      return string.split(separator, limit);
    }

    /**
     * Converts `string` to
     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).
     *
     * @static
     * @memberOf _
     * @since 3.1.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the start cased string.
     * @example
     *
     * _.startCase('--foo-bar--');
     * // => 'Foo Bar'
     *
     * _.startCase('fooBar');
     * // => 'Foo Bar'
     *
     * _.startCase('__FOO_BAR__');
     * // => 'FOO BAR'
     */
    var startCase = createCompounder(function(result, word, index) {
      return result + (index ? ' ' : '') + upperFirst(word);
    });

    /**
     * Checks if `string` starts with the given target string.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to inspect.
     * @param {string} [target] The string to search for.
     * @param {number} [position=0] The position to search from.
     * @returns {boolean} Returns `true` if `string` starts with `target`,
     *  else `false`.
     * @example
     *
     * _.startsWith('abc', 'a');
     * // => true
     *
     * _.startsWith('abc', 'b');
     * // => false
     *
     * _.startsWith('abc', 'b', 1);
     * // => true
     */
    function startsWith(string, target, position) {
      string = toString(string);
      position = position == null
        ? 0
        : baseClamp(toInteger(position), 0, string.length);

      target = baseToString(target);
      return string.slice(position, position + target.length) == target;
    }

    /**
     * Creates a compiled template function that can interpolate data properties
     * in "interpolate" delimiters, HTML-escape interpolated data properties in
     * "escape" delimiters, and execute JavaScript in "evaluate" delimiters. Data
     * properties may be accessed as free variables in the template. If a setting
     * object is given, it takes precedence over `_.templateSettings` values.
     *
     * **Note:** In the development build `_.template` utilizes
     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)
     * for easier debugging.
     *
     * For more information on precompiling templates see
     * [lodash's custom builds documentation](https://lodash.com/custom-builds).
     *
     * For more information on Chrome extension sandboxes see
     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category String
     * @param {string} [string=''] The template string.
     * @param {Object} [options={}] The options object.
     * @param {RegExp} [options.escape=_.templateSettings.escape]
     *  The HTML "escape" delimiter.
     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]
     *  The "evaluate" delimiter.
     * @param {Object} [options.imports=_.templateSettings.imports]
     *  An object to import into the template as free variables.
     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]
     *  The "interpolate" delimiter.
     * @param {string} [options.sourceURL='lodash.templateSources[n]']
     *  The sourceURL of the compiled template.
     * @param {string} [options.variable='obj']
     *  The data object variable name.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the compiled template function.
     * @example
     *
     * // Use the "interpolate" delimiter to create a compiled template.
     * var compiled = _.template('hello <%= user %>!');
     * compiled({ 'user': 'fred' });
     * // => 'hello fred!'
     *
     * // Use the HTML "escape" delimiter to escape data property values.
     * var compiled = _.template('<b><%- value %></b>');
     * compiled({ 'value': '<script>' });
     * // => '<b>&lt;script&gt;</b>'
     *
     * // Use the "evaluate" delimiter to execute JavaScript and generate HTML.
     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');
     * compiled({ 'users': ['fred', 'barney'] });
     * // => '<li>fred</li><li>barney</li>'
     *
     * // Use the internal `print` function in "evaluate" delimiters.
     * var compiled = _.template('<% print("hello " + user); %>!');
     * compiled({ 'user': 'barney' });
     * // => 'hello barney!'
     *
     * // Use the ES template literal delimiter as an "interpolate" delimiter.
     * // Disable support by replacing the "interpolate" delimiter.
     * var compiled = _.template('hello ${ user }!');
     * compiled({ 'user': 'pebbles' });
     * // => 'hello pebbles!'
     *
     * // Use backslashes to treat delimiters as plain text.
     * var compiled = _.template('<%= "\\<%- value %\\>" %>');
     * compiled({ 'value': 'ignored' });
     * // => '<%- value %>'
     *
     * // Use the `imports` option to import `jQuery` as `jq`.
     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';
     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });
     * compiled({ 'users': ['fred', 'barney'] });
     * // => '<li>fred</li><li>barney</li>'
     *
     * // Use the `sourceURL` option to specify a custom sourceURL for the template.
     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });
     * compiled(data);
     * // => Find the source of "greeting.jst" under the Sources tab or Resources panel of the web inspector.
     *
     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.
     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });
     * compiled.source;
     * // => function(data) {
     * //   var __t, __p = '';
     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';
     * //   return __p;
     * // }
     *
     * // Use custom template delimiters.
     * _.templateSettings.interpolate = /{{([\s\S]+?)}}/g;
     * var compiled = _.template('hello {{ user }}!');
     * compiled({ 'user': 'mustache' });
     * // => 'hello mustache!'
     *
     * // Use the `source` property to inline compiled templates for meaningful
     * // line numbers in error messages and stack traces.
     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\
     *   var JST = {\
     *     "main": ' + _.template(mainText).source + '\
     *   };\
     * ');
     */
    function template(string, options, guard) {
      // Based on John Resig's `tmpl` implementation
      // (http://ejohn.org/blog/javascript-micro-templating/)
      // and Laura Doktorova's doT.js (https://github.com/olado/doT).
      var settings = lodash.templateSettings;

      if (guard && isIterateeCall(string, options, guard)) {
        options = undefined;
      }
      string = toString(string);
      options = assignInWith({}, options, settings, customDefaultsAssignIn);

      var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn),
          importsKeys = keys(imports),
          importsValues = baseValues(imports, importsKeys);

      var isEscaping,
          isEvaluating,
          index = 0,
          interpolate = options.interpolate || reNoMatch,
          source = "__p += '";

      // Compile the regexp to match each delimiter.
      var reDelimiters = RegExp(
        (options.escape || reNoMatch).source + '|' +
        interpolate.source + '|' +
        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +
        (options.evaluate || reNoMatch).source + '|$'
      , 'g');

      // Use a sourceURL for easier debugging.
      // The sourceURL gets injected into the source that's eval-ed, so be careful
      // to normalize all kinds of whitespace, so e.g. newlines (and unicode versions of it) can't sneak in
      // and escape the comment, thus injecting code that gets evaled.
      var sourceURL = '//# sourceURL=' +
        (hasOwnProperty.call(options, 'sourceURL')
          ? (options.sourceURL + '').replace(/\s/g, ' ')
          : ('lodash.templateSources[' + (++templateCounter) + ']')
        ) + '\n';

      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {
        interpolateValue || (interpolateValue = esTemplateValue);

        // Escape characters that can't be included in string literals.
        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);

        // Replace delimiters with snippets.
        if (escapeValue) {
          isEscaping = true;
          source += "' +\n__e(" + escapeValue + ") +\n'";
        }
        if (evaluateValue) {
          isEvaluating = true;
          source += "';\n" + evaluateValue + ";\n__p += '";
        }
        if (interpolateValue) {
          source += "' +\n((__t = (" + interpolateValue + ")) == null ? '' : __t) +\n'";
        }
        index = offset + match.length;

        // The JS engine embedded in Adobe products needs `match` returned in
        // order to produce the correct `offset` value.
        return match;
      });

      source += "';\n";

      // If `variable` is not specified wrap a with-statement around the generated
      // code to add the data object to the top of the scope chain.
      var variable = hasOwnProperty.call(options, 'variable') && options.variable;
      if (!variable) {
        source = 'with (obj) {\n' + source + '\n}\n';
      }
      // Throw an error if a forbidden character was found in `variable`, to prevent
      // potential command injection attacks.
      else if (reForbiddenIdentifierChars.test(variable)) {
        throw new Error(INVALID_TEMPL_VAR_ERROR_TEXT);
      }

      // Cleanup code by stripping empty strings.
      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)
        .replace(reEmptyStringMiddle, '$1')
        .replace(reEmptyStringTrailing, '$1;');

      // Frame code as the function body.
      source = 'function(' + (variable || 'obj') + ') {\n' +
        (variable
          ? ''
          : 'obj || (obj = {});\n'
        ) +
        "var __t, __p = ''" +
        (isEscaping
           ? ', __e = _.escape'
           : ''
        ) +
        (isEvaluating
          ? ', __j = Array.prototype.join;\n' +
            "function print() { __p += __j.call(arguments, '') }\n"
          : ';\n'
        ) +
        source +
        'return __p\n}';

      var result = attempt(function() {
        return Function(importsKeys, sourceURL + 'return ' + source)
          .apply(undefined, importsValues);
      });

      // Provide the compiled function's source by its `toString` method or
      // the `source` property as a convenience for inlining compiled templates.
      result.source = source;
      if (isError(result)) {
        throw result;
      }
      return result;
    }

    /**
     * Converts `string`, as a whole, to lower case just like
     * [String#toLowerCase](https://mdn.io/toLowerCase).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the lower cased string.
     * @example
     *
     * _.toLower('--Foo-Bar--');
     * // => '--foo-bar--'
     *
     * _.toLower('fooBar');
     * // => 'foobar'
     *
     * _.toLower('__FOO_BAR__');
     * // => '__foo_bar__'
     */
    function toLower(value) {
      return toString(value).toLowerCase();
    }

    /**
     * Converts `string`, as a whole, to upper case just like
     * [String#toUpperCase](https://mdn.io/toUpperCase).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the upper cased string.
     * @example
     *
     * _.toUpper('--foo-bar--');
     * // => '--FOO-BAR--'
     *
     * _.toUpper('fooBar');
     * // => 'FOOBAR'
     *
     * _.toUpper('__foo_bar__');
     * // => '__FOO_BAR__'
     */
    function toUpper(value) {
      return toString(value).toUpperCase();
    }

    /**
     * Removes leading and trailing whitespace or specified characters from `string`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to trim.
     * @param {string} [chars=whitespace] The characters to trim.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the trimmed string.
     * @example
     *
     * _.trim('  abc  ');
     * // => 'abc'
     *
     * _.trim('-_-abc-_-', '_-');
     * // => 'abc'
     *
     * _.map(['  foo  ', '  bar  '], _.trim);
     * // => ['foo', 'bar']
     */
    function trim(string, chars, guard) {
      string = toString(string);
      if (string && (guard || chars === undefined)) {
        return baseTrim(string);
      }
      if (!string || !(chars = baseToString(chars))) {
        return string;
      }
      var strSymbols = stringToArray(string),
          chrSymbols = stringToArray(chars),
          start = charsStartIndex(strSymbols, chrSymbols),
          end = charsEndIndex(strSymbols, chrSymbols) + 1;

      return castSlice(strSymbols, start, end).join('');
    }

    /**
     * Removes trailing whitespace or specified characters from `string`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to trim.
     * @param {string} [chars=whitespace] The characters to trim.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the trimmed string.
     * @example
     *
     * _.trimEnd('  abc  ');
     * // => '  abc'
     *
     * _.trimEnd('-_-abc-_-', '_-');
     * // => '-_-abc'
     */
    function trimEnd(string, chars, guard) {
      string = toString(string);
      if (string && (guard || chars === undefined)) {
        return string.slice(0, trimmedEndIndex(string) + 1);
      }
      if (!string || !(chars = baseToString(chars))) {
        return string;
      }
      var strSymbols = stringToArray(string),
          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;

      return castSlice(strSymbols, 0, end).join('');
    }

    /**
     * Removes leading whitespace or specified characters from `string`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to trim.
     * @param {string} [chars=whitespace] The characters to trim.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the trimmed string.
     * @example
     *
     * _.trimStart('  abc  ');
     * // => 'abc  '
     *
     * _.trimStart('-_-abc-_-', '_-');
     * // => 'abc-_-'
     */
    function trimStart(string, chars, guard) {
      string = toString(string);
      if (string && (guard || chars === undefined)) {
        return string.replace(reTrimStart, '');
      }
      if (!string || !(chars = baseToString(chars))) {
        return string;
      }
      var strSymbols = stringToArray(string),
          start = charsStartIndex(strSymbols, stringToArray(chars));

      return castSlice(strSymbols, start).join('');
    }

    /**
     * Truncates `string` if it's longer than the given maximum string length.
     * The last characters of the truncated string are replaced with the omission
     * string which defaults to "...".
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to truncate.
     * @param {Object} [options={}] The options object.
     * @param {number} [options.length=30] The maximum string length.
     * @param {string} [options.omission='...'] The string to indicate text is omitted.
     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.
     * @returns {string} Returns the truncated string.
     * @example
     *
     * _.truncate('hi-diddly-ho there, neighborino');
     * // => 'hi-diddly-ho there, neighbo...'
     *
     * _.truncate('hi-diddly-ho there, neighborino', {
     *   'length': 24,
     *   'separator': ' '
     * });
     * // => 'hi-diddly-ho there,...'
     *
     * _.truncate('hi-diddly-ho there, neighborino', {
     *   'length': 24,
     *   'separator': /,? +/
     * });
     * // => 'hi-diddly-ho there...'
     *
     * _.truncate('hi-diddly-ho there, neighborino', {
     *   'omission': ' [...]'
     * });
     * // => 'hi-diddly-ho there, neig [...]'
     */
    function truncate(string, options) {
      var length = DEFAULT_TRUNC_LENGTH,
          omission = DEFAULT_TRUNC_OMISSION;

      if (isObject(options)) {
        var separator = 'separator' in options ? options.separator : separator;
        length = 'length' in options ? toInteger(options.length) : length;
        omission = 'omission' in options ? baseToString(options.omission) : omission;
      }
      string = toString(string);

      var strLength = string.length;
      if (hasUnicode(string)) {
        var strSymbols = stringToArray(string);
        strLength = strSymbols.length;
      }
      if (length >= strLength) {
        return string;
      }
      var end = length - stringSize(omission);
      if (end < 1) {
        return omission;
      }
      var result = strSymbols
        ? castSlice(strSymbols, 0, end).join('')
        : string.slice(0, end);

      if (separator === undefined) {
        return result + omission;
      }
      if (strSymbols) {
        end += (result.length - end);
      }
      if (isRegExp(separator)) {
        if (string.slice(end).search(separator)) {
          var match,
              substring = result;

          if (!separator.global) {
            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');
          }
          separator.lastIndex = 0;
          while ((match = separator.exec(substring))) {
            var newEnd = match.index;
          }
          result = result.slice(0, newEnd === undefined ? end : newEnd);
        }
      } else if (string.indexOf(baseToString(separator), end) != end) {
        var index = result.lastIndexOf(separator);
        if (index > -1) {
          result = result.slice(0, index);
        }
      }
      return result + omission;
    }

    /**
     * The inverse of `_.escape`; this method converts the HTML entities
     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to
     * their corresponding characters.
     *
     * **Note:** No other HTML entities are unescaped. To unescape additional
     * HTML entities use a third-party library like [_he_](https://mths.be/he).
     *
     * @static
     * @memberOf _
     * @since 0.6.0
     * @category String
     * @param {string} [string=''] The string to unescape.
     * @returns {string} Returns the unescaped string.
     * @example
     *
     * _.unescape('fred, barney, &amp; pebbles');
     * // => 'fred, barney, & pebbles'
     */
    function unescape(string) {
      string = toString(string);
      return (string && reHasEscapedHtml.test(string))
        ? string.replace(reEscapedHtml, unescapeHtmlChar)
        : string;
    }

    /**
     * Converts `string`, as space separated words, to upper case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the upper cased string.
     * @example
     *
     * _.upperCase('--foo-bar');
     * // => 'FOO BAR'
     *
     * _.upperCase('fooBar');
     * // => 'FOO BAR'
     *
     * _.upperCase('__foo_bar__');
     * // => 'FOO BAR'
     */
    var upperCase = createCompounder(function(result, word, index) {
      return result + (index ? ' ' : '') + word.toUpperCase();
    });

    /**
     * Converts the first character of `string` to upper case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the converted string.
     * @example
     *
     * _.upperFirst('fred');
     * // => 'Fred'
     *
     * _.upperFirst('FRED');
     * // => 'FRED'
     */
    var upperFirst = createCaseFirst('toUpperCase');

    /**
     * Splits `string` into an array of its words.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to inspect.
     * @param {RegExp|string} [pattern] The pattern to match words.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the words of `string`.
     * @example
     *
     * _.words('fred, barney, & pebbles');
     * // => ['fred', 'barney', 'pebbles']
     *
     * _.words('fred, barney, & pebbles', /[^, ]+/g);
     * // => ['fred', 'barney', '&', 'pebbles']
     */
    function words(string, pattern, guard) {
      string = toString(string);
      pattern = guard ? undefined : pattern;

      if (pattern === undefined) {
        return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);
      }
      return string.match(pattern) || [];
    }

    /*------------------------------------------------------------------------*/

    /**
     * Attempts to invoke `func`, returning either the result or the caught error
     * object. Any additional arguments are provided to `func` when it's invoked.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {Function} func The function to attempt.
     * @param {...*} [args] The arguments to invoke `func` with.
     * @returns {*} Returns the `func` result or error object.
     * @example
     *
     * // Avoid throwing errors for invalid selectors.
     * var elements = _.attempt(function(selector) {
     *   return document.querySelectorAll(selector);
     * }, '>_>');
     *
     * if (_.isError(elements)) {
     *   elements = [];
     * }
     */
    var attempt = baseRest(function(func, args) {
      try {
        return apply(func, undefined, args);
      } catch (e) {
        return isError(e) ? e : new Error(e);
      }
    });

    /**
     * Binds methods of an object to the object itself, overwriting the existing
     * method.
     *
     * **Note:** This method doesn't set the "length" property of bound functions.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {Object} object The object to bind and assign the bound methods to.
     * @param {...(string|string[])} methodNames The object method names to bind.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var view = {
     *   'label': 'docs',
     *   'click': function() {
     *     console.log('clicked ' + this.label);
     *   }
     * };
     *
     * _.bindAll(view, ['click']);
     * jQuery(element).on('click', view.click);
     * // => Logs 'clicked docs' when clicked.
     */
    var bindAll = flatRest(function(object, methodNames) {
      arrayEach(methodNames, function(key) {
        key = toKey(key);
        baseAssignValue(object, key, bind(object[key], object));
      });
      return object;
    });

    /**
     * Creates a function that iterates over `pairs` and invokes the corresponding
     * function of the first predicate to return truthy. The predicate-function
     * pairs are invoked with the `this` binding and arguments of the created
     * function.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {Array} pairs The predicate-function pairs.
     * @returns {Function} Returns the new composite function.
     * @example
     *
     * var func = _.cond([
     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],
     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],
     *   [_.stubTrue,                      _.constant('no match')]
     * ]);
     *
     * func({ 'a': 1, 'b': 2 });
     * // => 'matches A'
     *
     * func({ 'a': 0, 'b': 1 });
     * // => 'matches B'
     *
     * func({ 'a': '1', 'b': '2' });
     * // => 'no match'
     */
    function cond(pairs) {
      var length = pairs == null ? 0 : pairs.length,
          toIteratee = getIteratee();

      pairs = !length ? [] : arrayMap(pairs, function(pair) {
        if (typeof pair[1] != 'function') {
          throw new TypeError(FUNC_ERROR_TEXT);
        }
        return [toIteratee(pair[0]), pair[1]];
      });

      return baseRest(function(args) {
        var index = -1;
        while (++index < length) {
          var pair = pairs[index];
          if (apply(pair[0], this, args)) {
            return apply(pair[1], this, args);
          }
        }
      });
    }

    /**
     * Creates a function that invokes the predicate properties of `source` with
     * the corresponding property values of a given object, returning `true` if
     * all predicates return truthy, else `false`.
     *
     * **Note:** The created function is equivalent to `_.conformsTo` with
     * `source` partially applied.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {Object} source The object of property predicates to conform to.
     * @returns {Function} Returns the new spec function.
     * @example
     *
     * var objects = [
     *   { 'a': 2, 'b': 1 },
     *   { 'a': 1, 'b': 2 }
     * ];
     *
     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));
     * // => [{ 'a': 1, 'b': 2 }]
     */
    function conforms(source) {
      return baseConforms(baseClone(source, CLONE_DEEP_FLAG));
    }

    /**
     * Creates a function that returns `value`.
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Util
     * @param {*} value The value to return from the new function.
     * @returns {Function} Returns the new constant function.
     * @example
     *
     * var objects = _.times(2, _.constant({ 'a': 1 }));
     *
     * console.log(objects);
     * // => [{ 'a': 1 }, { 'a': 1 }]
     *
     * console.log(objects[0] === objects[1]);
     * // => true
     */
    function constant(value) {
      return function() {
        return value;
      };
    }

    /**
     * Checks `value` to determine whether a default value should be returned in
     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,
     * or `undefined`.
     *
     * @static
     * @memberOf _
     * @since 4.14.0
     * @category Util
     * @param {*} value The value to check.
     * @param {*} defaultValue The default value.
     * @returns {*} Returns the resolved value.
     * @example
     *
     * _.defaultTo(1, 10);
     * // => 1
     *
     * _.defaultTo(undefined, 10);
     * // => 10
     */
    function defaultTo(value, defaultValue) {
      return (value == null || value !== value) ? defaultValue : value;
    }

    /**
     * Creates a function that returns the result of invoking the given functions
     * with the `this` binding of the created function, where each successive
     * invocation is supplied the return value of the previous.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {...(Function|Function[])} [funcs] The functions to invoke.
     * @returns {Function} Returns the new composite function.
     * @see _.flowRight
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var addSquare = _.flow([_.add, square]);
     * addSquare(1, 2);
     * // => 9
     */
    var flow = createFlow();

    /**
     * This method is like `_.flow` except that it creates a function that
     * invokes the given functions from right to left.
     *
     * @static
     * @since 3.0.0
     * @memberOf _
     * @category Util
     * @param {...(Function|Function[])} [funcs] The functions to invoke.
     * @returns {Function} Returns the new composite function.
     * @see _.flow
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var addSquare = _.flowRight([square, _.add]);
     * addSquare(1, 2);
     * // => 9
     */
    var flowRight = createFlow(true);

    /**
     * This method returns the first argument it receives.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {*} value Any value.
     * @returns {*} Returns `value`.
     * @example
     *
     * var object = { 'a': 1 };
     *
     * console.log(_.identity(object) === object);
     * // => true
     */
    function identity(value) {
      return value;
    }

    /**
     * Creates a function that invokes `func` with the arguments of the created
     * function. If `func` is a property name, the created function returns the
     * property value for a given element. If `func` is an array or object, the
     * created function returns `true` for elements that contain the equivalent
     * source properties, otherwise it returns `false`.
     *
     * @static
     * @since 4.0.0
     * @memberOf _
     * @category Util
     * @param {*} [func=_.identity] The value to convert to a callback.
     * @returns {Function} Returns the callback.
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': true },
     *   { 'user': 'fred',   'age': 40, 'active': false }
     * ];
     *
     * // The `_.matches` iteratee shorthand.
     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));
     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.filter(users, _.iteratee(['user', 'fred']));
     * // => [{ 'user': 'fred', 'age': 40 }]
     *
     * // The `_.property` iteratee shorthand.
     * _.map(users, _.iteratee('user'));
     * // => ['barney', 'fred']
     *
     * // Create custom iteratee shorthands.
     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {
     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {
     *     return func.test(string);
     *   };
     * });
     *
     * _.filter(['abc', 'def'], /ef/);
     * // => ['def']
     */
    function iteratee(func) {
      return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));
    }

    /**
     * Creates a function that performs a partial deep comparison between a given
     * object and `source`, returning `true` if the given object has equivalent
     * property values, else `false`.
     *
     * **Note:** The created function is equivalent to `_.isMatch` with `source`
     * partially applied.
     *
     * Partial comparisons will match empty array and empty object `source`
     * values against any array or object value, respectively. See `_.isEqual`
     * for a list of supported value comparisons.
     *
     * **Note:** Multiple values can be checked by combining several matchers
     * using `_.overSome`
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {Object} source The object of property values to match.
     * @returns {Function} Returns the new spec function.
     * @example
     *
     * var objects = [
     *   { 'a': 1, 'b': 2, 'c': 3 },
     *   { 'a': 4, 'b': 5, 'c': 6 }
     * ];
     *
     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));
     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]
     *
     * // Checking for several possible values
     * _.filter(objects, _.overSome([_.matches({ 'a': 1 }), _.matches({ 'a': 4 })]));
     * // => [{ 'a': 1, 'b': 2, 'c': 3 }, { 'a': 4, 'b': 5, 'c': 6 }]
     */
    function matches(source) {
      return baseMatches(baseClone(source, CLONE_DEEP_FLAG));
    }

    /**
     * Creates a function that performs a partial deep comparison between the
     * value at `path` of a given object to `srcValue`, returning `true` if the
     * object value is equivalent, else `false`.
     *
     * **Note:** Partial comparisons will match empty array and empty object
     * `srcValue` values against any array or object value, respectively. See
     * `_.isEqual` for a list of supported value comparisons.
     *
     * **Note:** Multiple values can be checked by combining several matchers
     * using `_.overSome`
     *
     * @static
     * @memberOf _
     * @since 3.2.0
     * @category Util
     * @param {Array|string} path The path of the property to get.
     * @param {*} srcValue The value to match.
     * @returns {Function} Returns the new spec function.
     * @example
     *
     * var objects = [
     *   { 'a': 1, 'b': 2, 'c': 3 },
     *   { 'a': 4, 'b': 5, 'c': 6 }
     * ];
     *
     * _.find(objects, _.matchesProperty('a', 4));
     * // => { 'a': 4, 'b': 5, 'c': 6 }
     *
     * // Checking for several possible values
     * _.filter(objects, _.overSome([_.matchesProperty('a', 1), _.matchesProperty('a', 4)]));
     * // => [{ 'a': 1, 'b': 2, 'c': 3 }, { 'a': 4, 'b': 5, 'c': 6 }]
     */
    function matchesProperty(path, srcValue) {
      return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));
    }

    /**
     * Creates a function that invokes the method at `path` of a given object.
     * Any additional arguments are provided to the invoked method.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Util
     * @param {Array|string} path The path of the method to invoke.
     * @param {...*} [args] The arguments to invoke the method with.
     * @returns {Function} Returns the new invoker function.
     * @example
     *
     * var objects = [
     *   { 'a': { 'b': _.constant(2) } },
     *   { 'a': { 'b': _.constant(1) } }
     * ];
     *
     * _.map(objects, _.method('a.b'));
     * // => [2, 1]
     *
     * _.map(objects, _.method(['a', 'b']));
     * // => [2, 1]
     */
    var method = baseRest(function(path, args) {
      return function(object) {
        return baseInvoke(object, path, args);
      };
    });

    /**
     * The opposite of `_.method`; this method creates a function that invokes
     * the method at a given path of `object`. Any additional arguments are
     * provided to the invoked method.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Util
     * @param {Object} object The object to query.
     * @param {...*} [args] The arguments to invoke the method with.
     * @returns {Function} Returns the new invoker function.
     * @example
     *
     * var array = _.times(3, _.constant),
     *     object = { 'a': array, 'b': array, 'c': array };
     *
     * _.map(['a[2]', 'c[0]'], _.methodOf(object));
     * // => [2, 0]
     *
     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));
     * // => [2, 0]
     */
    var methodOf = baseRest(function(object, args) {
      return function(path) {
        return baseInvoke(object, path, args);
      };
    });

    /**
     * Adds all own enumerable string keyed function properties of a source
     * object to the destination object. If `object` is a function, then methods
     * are added to its prototype as well.
     *
     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to
     * avoid conflicts caused by modifying the original.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {Function|Object} [object=lodash] The destination object.
     * @param {Object} source The object of functions to add.
     * @param {Object} [options={}] The options object.
     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.
     * @returns {Function|Object} Returns `object`.
     * @example
     *
     * function vowels(string) {
     *   return _.filter(string, function(v) {
     *     return /[aeiou]/i.test(v);
     *   });
     * }
     *
     * _.mixin({ 'vowels': vowels });
     * _.vowels('fred');
     * // => ['e']
     *
     * _('fred').vowels().value();
     * // => ['e']
     *
     * _.mixin({ 'vowels': vowels }, { 'chain': false });
     * _('fred').vowels();
     * // => ['e']
     */
    function mixin(object, source, options) {
      var props = keys(source),
          methodNames = baseFunctions(source, props);

      if (options == null &&
          !(isObject(source) && (methodNames.length || !props.length))) {
        options = source;
        source = object;
        object = this;
        methodNames = baseFunctions(source, keys(source));
      }
      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,
          isFunc = isFunction(object);

      arrayEach(methodNames, function(methodName) {
        var func = source[methodName];
        object[methodName] = func;
        if (isFunc) {
          object.prototype[methodName] = function() {
            var chainAll = this.__chain__;
            if (chain || chainAll) {
              var result = object(this.__wrapped__),
                  actions = result.__actions__ = copyArray(this.__actions__);

              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });
              result.__chain__ = chainAll;
              return result;
            }
            return func.apply(object, arrayPush([this.value()], arguments));
          };
        }
      });

      return object;
    }

    /**
     * Reverts the `_` variable to its previous value and returns a reference to
     * the `lodash` function.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @returns {Function} Returns the `lodash` function.
     * @example
     *
     * var lodash = _.noConflict();
     */
    function noConflict() {
      if (root._ === this) {
        root._ = oldDash;
      }
      return this;
    }

    /**
     * This method returns `undefined`.
     *
     * @static
     * @memberOf _
     * @since 2.3.0
     * @category Util
     * @example
     *
     * _.times(2, _.noop);
     * // => [undefined, undefined]
     */
    function noop() {
      // No operation performed.
    }

    /**
     * Creates a function that gets the argument at index `n`. If `n` is negative,
     * the nth argument from the end is returned.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {number} [n=0] The index of the argument to return.
     * @returns {Function} Returns the new pass-thru function.
     * @example
     *
     * var func = _.nthArg(1);
     * func('a', 'b', 'c', 'd');
     * // => 'b'
     *
     * var func = _.nthArg(-2);
     * func('a', 'b', 'c', 'd');
     * // => 'c'
     */
    function nthArg(n) {
      n = toInteger(n);
      return baseRest(function(args) {
        return baseNth(args, n);
      });
    }

    /**
     * Creates a function that invokes `iteratees` with the arguments it receives
     * and returns their results.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {...(Function|Function[])} [iteratees=[_.identity]]
     *  The iteratees to invoke.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var func = _.over([Math.max, Math.min]);
     *
     * func(1, 2, 3, 4);
     * // => [4, 1]
     */
    var over = createOver(arrayMap);

    /**
     * Creates a function that checks if **all** of the `predicates` return
     * truthy when invoked with the arguments it receives.
     *
     * Following shorthands are possible for providing predicates.
     * Pass an `Object` and it will be used as an parameter for `_.matches` to create the predicate.
     * Pass an `Array` of parameters for `_.matchesProperty` and the predicate will be created using them.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {...(Function|Function[])} [predicates=[_.identity]]
     *  The predicates to check.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var func = _.overEvery([Boolean, isFinite]);
     *
     * func('1');
     * // => true
     *
     * func(null);
     * // => false
     *
     * func(NaN);
     * // => false
     */
    var overEvery = createOver(arrayEvery);

    /**
     * Creates a function that checks if **any** of the `predicates` return
     * truthy when invoked with the arguments it receives.
     *
     * Following shorthands are possible for providing predicates.
     * Pass an `Object` and it will be used as an parameter for `_.matches` to create the predicate.
     * Pass an `Array` of parameters for `_.matchesProperty` and the predicate will be created using them.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {...(Function|Function[])} [predicates=[_.identity]]
     *  The predicates to check.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var func = _.overSome([Boolean, isFinite]);
     *
     * func('1');
     * // => true
     *
     * func(null);
     * // => true
     *
     * func(NaN);
     * // => false
     *
     * var matchesFunc = _.overSome([{ 'a': 1 }, { 'a': 2 }])
     * var matchesPropertyFunc = _.overSome([['a', 1], ['a', 2]])
     */
    var overSome = createOver(arraySome);

    /**
     * Creates a function that returns the value at `path` of a given object.
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Util
     * @param {Array|string} path The path of the property to get.
     * @returns {Function} Returns the new accessor function.
     * @example
     *
     * var objects = [
     *   { 'a': { 'b': 2 } },
     *   { 'a': { 'b': 1 } }
     * ];
     *
     * _.map(objects, _.property('a.b'));
     * // => [2, 1]
     *
     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');
     * // => [1, 2]
     */
    function property(path) {
      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);
    }

    /**
     * The opposite of `_.property`; this method creates a function that returns
     * the value at a given path of `object`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {Object} object The object to query.
     * @returns {Function} Returns the new accessor function.
     * @example
     *
     * var array = [0, 1, 2],
     *     object = { 'a': array, 'b': array, 'c': array };
     *
     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));
     * // => [2, 0]
     *
     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));
     * // => [2, 0]
     */
    function propertyOf(object) {
      return function(path) {
        return object == null ? undefined : baseGet(object, path);
      };
    }

    /**
     * Creates an array of numbers (positive and/or negative) progressing from
     * `start` up to, but not including, `end`. A step of `-1` is used if a negative
     * `start` is specified without an `end` or `step`. If `end` is not specified,
     * it's set to `start` with `start` then set to `0`.
     *
     * **Note:** JavaScript follows the IEEE-754 standard for resolving
     * floating-point values which can produce unexpected results.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {number} [start=0] The start of the range.
     * @param {number} end The end of the range.
     * @param {number} [step=1] The value to increment or decrement by.
     * @returns {Array} Returns the range of numbers.
     * @see _.inRange, _.rangeRight
     * @example
     *
     * _.range(4);
     * // => [0, 1, 2, 3]
     *
     * _.range(-4);
     * // => [0, -1, -2, -3]
     *
     * _.range(1, 5);
     * // => [1, 2, 3, 4]
     *
     * _.range(0, 20, 5);
     * // => [0, 5, 10, 15]
     *
     * _.range(0, -4, -1);
     * // => [0, -1, -2, -3]
     *
     * _.range(1, 4, 0);
     * // => [1, 1, 1]
     *
     * _.range(0);
     * // => []
     */
    var range = createRange();

    /**
     * This method is like `_.range` except that it populates values in
     * descending order.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {number} [start=0] The start of the range.
     * @param {number} end The end of the range.
     * @param {number} [step=1] The value to increment or decrement by.
     * @returns {Array} Returns the range of numbers.
     * @see _.inRange, _.range
     * @example
     *
     * _.rangeRight(4);
     * // => [3, 2, 1, 0]
     *
     * _.rangeRight(-4);
     * // => [-3, -2, -1, 0]
     *
     * _.rangeRight(1, 5);
     * // => [4, 3, 2, 1]
     *
     * _.rangeRight(0, 20, 5);
     * // => [15, 10, 5, 0]
     *
     * _.rangeRight(0, -4, -1);
     * // => [-3, -2, -1, 0]
     *
     * _.rangeRight(1, 4, 0);
     * // => [1, 1, 1]
     *
     * _.rangeRight(0);
     * // => []
     */
    var rangeRight = createRange(true);

    /**
     * This method returns a new empty array.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {Array} Returns the new empty array.
     * @example
     *
     * var arrays = _.times(2, _.stubArray);
     *
     * console.log(arrays);
     * // => [[], []]
     *
     * console.log(arrays[0] === arrays[1]);
     * // => false
     */
    function stubArray() {
      return [];
    }

    /**
     * This method returns `false`.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {boolean} Returns `false`.
     * @example
     *
     * _.times(2, _.stubFalse);
     * // => [false, false]
     */
    function stubFalse() {
      return false;
    }

    /**
     * This method returns a new empty object.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {Object} Returns the new empty object.
     * @example
     *
     * var objects = _.times(2, _.stubObject);
     *
     * console.log(objects);
     * // => [{}, {}]
     *
     * console.log(objects[0] === objects[1]);
     * // => false
     */
    function stubObject() {
      return {};
    }

    /**
     * This method returns an empty string.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {string} Returns the empty string.
     * @example
     *
     * _.times(2, _.stubString);
     * // => ['', '']
     */
    function stubString() {
      return '';
    }

    /**
     * This method returns `true`.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {boolean} Returns `true`.
     * @example
     *
     * _.times(2, _.stubTrue);
     * // => [true, true]
     */
    function stubTrue() {
      return true;
    }

    /**
     * Invokes the iteratee `n` times, returning an array of the results of
     * each invocation. The iteratee is invoked with one argument; (index).
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {number} n The number of times to invoke `iteratee`.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the array of results.
     * @example
     *
     * _.times(3, String);
     * // => ['0', '1', '2']
     *
     *  _.times(4, _.constant(0));
     * // => [0, 0, 0, 0]
     */
    function times(n, iteratee) {
      n = toInteger(n);
      if (n < 1 || n > MAX_SAFE_INTEGER) {
        return [];
      }
      var index = MAX_ARRAY_LENGTH,
          length = nativeMin(n, MAX_ARRAY_LENGTH);

      iteratee = getIteratee(iteratee);
      n -= MAX_ARRAY_LENGTH;

      var result = baseTimes(length, iteratee);
      while (++index < n) {
        iteratee(index);
      }
      return result;
    }

    /**
     * Converts `value` to a property path array.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {*} value The value to convert.
     * @returns {Array} Returns the new property path array.
     * @example
     *
     * _.toPath('a.b.c');
     * // => ['a', 'b', 'c']
     *
     * _.toPath('a[0].b.c');
     * // => ['a', '0', 'b', 'c']
     */
    function toPath(value) {
      if (isArray(value)) {
        return arrayMap(value, toKey);
      }
      return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));
    }

    /**
     * Generates a unique ID. If `prefix` is given, the ID is appended to it.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {string} [prefix=''] The value to prefix the ID with.
     * @returns {string} Returns the unique ID.
     * @example
     *
     * _.uniqueId('contact_');
     * // => 'contact_104'
     *
     * _.uniqueId();
     * // => '105'
     */
    function uniqueId(prefix) {
      var id = ++idCounter;
      return toString(prefix) + id;
    }

    /*------------------------------------------------------------------------*/

    /**
     * Adds two numbers.
     *
     * @static
     * @memberOf _
     * @since 3.4.0
     * @category Math
     * @param {number} augend The first number in an addition.
     * @param {number} addend The second number in an addition.
     * @returns {number} Returns the total.
     * @example
     *
     * _.add(6, 4);
     * // => 10
     */
    var add = createMathOperation(function(augend, addend) {
      return augend + addend;
    }, 0);

    /**
     * Computes `number` rounded up to `precision`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Math
     * @param {number} number The number to round up.
     * @param {number} [precision=0] The precision to round up to.
     * @returns {number} Returns the rounded up number.
     * @example
     *
     * _.ceil(4.006);
     * // => 5
     *
     * _.ceil(6.004, 2);
     * // => 6.01
     *
     * _.ceil(6040, -2);
     * // => 6100
     */
    var ceil = createRound('ceil');

    /**
     * Divide two numbers.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Math
     * @param {number} dividend The first number in a division.
     * @param {number} divisor The second number in a division.
     * @returns {number} Returns the quotient.
     * @example
     *
     * _.divide(6, 4);
     * // => 1.5
     */
    var divide = createMathOperation(function(dividend, divisor) {
      return dividend / divisor;
    }, 1);

    /**
     * Computes `number` rounded down to `precision`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Math
     * @param {number} number The number to round down.
     * @param {number} [precision=0] The precision to round down to.
     * @returns {number} Returns the rounded down number.
     * @example
     *
     * _.floor(4.006);
     * // => 4
     *
     * _.floor(0.046, 2);
     * // => 0.04
     *
     * _.floor(4060, -2);
     * // => 4000
     */
    var floor = createRound('floor');

    /**
     * Computes the maximum value of `array`. If `array` is empty or falsey,
     * `undefined` is returned.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {*} Returns the maximum value.
     * @example
     *
     * _.max([4, 2, 8, 6]);
     * // => 8
     *
     * _.max([]);
     * // => undefined
     */
    function max(array) {
      return (array && array.length)
        ? baseExtremum(array, identity, baseGt)
        : undefined;
    }

    /**
     * This method is like `_.max` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the criterion by which
     * the value is ranked. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {*} Returns the maximum value.
     * @example
     *
     * var objects = [{ 'n': 1 }, { 'n': 2 }];
     *
     * _.maxBy(objects, function(o) { return o.n; });
     * // => { 'n': 2 }
     *
     * // The `_.property` iteratee shorthand.
     * _.maxBy(objects, 'n');
     * // => { 'n': 2 }
     */
    function maxBy(array, iteratee) {
      return (array && array.length)
        ? baseExtremum(array, getIteratee(iteratee, 2), baseGt)
        : undefined;
    }

    /**
     * Computes the mean of the values in `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {number} Returns the mean.
     * @example
     *
     * _.mean([4, 2, 8, 6]);
     * // => 5
     */
    function mean(array) {
      return baseMean(array, identity);
    }

    /**
     * This method is like `_.mean` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the value to be averaged.
     * The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the mean.
     * @example
     *
     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];
     *
     * _.meanBy(objects, function(o) { return o.n; });
     * // => 5
     *
     * // The `_.property` iteratee shorthand.
     * _.meanBy(objects, 'n');
     * // => 5
     */
    function meanBy(array, iteratee) {
      return baseMean(array, getIteratee(iteratee, 2));
    }

    /**
     * Computes the minimum value of `array`. If `array` is empty or falsey,
     * `undefined` is returned.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {*} Returns the minimum value.
     * @example
     *
     * _.min([4, 2, 8, 6]);
     * // => 2
     *
     * _.min([]);
     * // => undefined
     */
    function min(array) {
      return (array && array.length)
        ? baseExtremum(array, identity, baseLt)
        : undefined;
    }

    /**
     * This method is like `_.min` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the criterion by which
     * the value is ranked. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {*} Returns the minimum value.
     * @example
     *
     * var objects = [{ 'n': 1 }, { 'n': 2 }];
     *
     * _.minBy(objects, function(o) { return o.n; });
     * // => { 'n': 1 }
     *
     * // The `_.property` iteratee shorthand.
     * _.minBy(objects, 'n');
     * // => { 'n': 1 }
     */
    function minBy(array, iteratee) {
      return (array && array.length)
        ? baseExtremum(array, getIteratee(iteratee, 2), baseLt)
        : undefined;
    }

    /**
     * Multiply two numbers.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Math
     * @param {number} multiplier The first number in a multiplication.
     * @param {number} multiplicand The second number in a multiplication.
     * @returns {number} Returns the product.
     * @example
     *
     * _.multiply(6, 4);
     * // => 24
     */
    var multiply = createMathOperation(function(multiplier, multiplicand) {
      return multiplier * multiplicand;
    }, 1);

    /**
     * Computes `number` rounded to `precision`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Math
     * @param {number} number The number to round.
     * @param {number} [precision=0] The precision to round to.
     * @returns {number} Returns the rounded number.
     * @example
     *
     * _.round(4.006);
     * // => 4
     *
     * _.round(4.006, 2);
     * // => 4.01
     *
     * _.round(4060, -2);
     * // => 4100
     */
    var round = createRound('round');

    /**
     * Subtract two numbers.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {number} minuend The first number in a subtraction.
     * @param {number} subtrahend The second number in a subtraction.
     * @returns {number} Returns the difference.
     * @example
     *
     * _.subtract(6, 4);
     * // => 2
     */
    var subtract = createMathOperation(function(minuend, subtrahend) {
      return minuend - subtrahend;
    }, 0);

    /**
     * Computes the sum of the values in `array`.
     *
     * @static
     * @memberOf _
     * @since 3.4.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {number} Returns the sum.
     * @example
     *
     * _.sum([4, 2, 8, 6]);
     * // => 20
     */
    function sum(array) {
      return (array && array.length)
        ? baseSum(array, identity)
        : 0;
    }

    /**
     * This method is like `_.sum` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the value to be summed.
     * The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the sum.
     * @example
     *
     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];
     *
     * _.sumBy(objects, function(o) { return o.n; });
     * // => 20
     *
     * // The `_.property` iteratee shorthand.
     * _.sumBy(objects, 'n');
     * // => 20
     */
    function sumBy(array, iteratee) {
      return (array && array.length)
        ? baseSum(array, getIteratee(iteratee, 2))
        : 0;
    }

    /*------------------------------------------------------------------------*/

    // Add methods that return wrapped values in chain sequences.
    lodash.after = after;
    lodash.ary = ary;
    lodash.assign = assign;
    lodash.assignIn = assignIn;
    lodash.assignInWith = assignInWith;
    lodash.assignWith = assignWith;
    lodash.at = at;
    lodash.before = before;
    lodash.bind = bind;
    lodash.bindAll = bindAll;
    lodash.bindKey = bindKey;
    lodash.castArray = castArray;
    lodash.chain = chain;
    lodash.chunk = chunk;
    lodash.compact = compact;
    lodash.concat = concat;
    lodash.cond = cond;
    lodash.conforms = conforms;
    lodash.constant = constant;
    lodash.countBy = countBy;
    lodash.create = create;
    lodash.curry = curry;
    lodash.curryRight = curryRight;
    lodash.debounce = debounce;
    lodash.defaults = defaults;
    lodash.defaultsDeep = defaultsDeep;
    lodash.defer = defer;
    lodash.delay = delay;
    lodash.difference = difference;
    lodash.differenceBy = differenceBy;
    lodash.differenceWith = differenceWith;
    lodash.drop = drop;
    lodash.dropRight = dropRight;
    lodash.dropRightWhile = dropRightWhile;
    lodash.dropWhile = dropWhile;
    lodash.fill = fill;
    lodash.filter = filter;
    lodash.flatMap = flatMap;
    lodash.flatMapDeep = flatMapDeep;
    lodash.flatMapDepth = flatMapDepth;
    lodash.flatten = flatten;
    lodash.flattenDeep = flattenDeep;
    lodash.flattenDepth = flattenDepth;
    lodash.flip = flip;
    lodash.flow = flow;
    lodash.flowRight = flowRight;
    lodash.fromPairs = fromPairs;
    lodash.functions = functions;
    lodash.functionsIn = functionsIn;
    lodash.groupBy = groupBy;
    lodash.initial = initial;
    lodash.intersection = intersection;
    lodash.intersectionBy = intersectionBy;
    lodash.intersectionWith = intersectionWith;
    lodash.invert = invert;
    lodash.invertBy = invertBy;
    lodash.invokeMap = invokeMap;
    lodash.iteratee = iteratee;
    lodash.keyBy = keyBy;
    lodash.keys = keys;
    lodash.keysIn = keysIn;
    lodash.map = map;
    lodash.mapKeys = mapKeys;
    lodash.mapValues = mapValues;
    lodash.matches = matches;
    lodash.matchesProperty = matchesProperty;
    lodash.memoize = memoize;
    lodash.merge = merge;
    lodash.mergeWith = mergeWith;
    lodash.method = method;
    lodash.methodOf = methodOf;
    lodash.mixin = mixin;
    lodash.negate = negate;
    lodash.nthArg = nthArg;
    lodash.omit = omit;
    lodash.omitBy = omitBy;
    lodash.once = once;
    lodash.orderBy = orderBy;
    lodash.over = over;
    lodash.overArgs = overArgs;
    lodash.overEvery = overEvery;
    lodash.overSome = overSome;
    lodash.partial = partial;
    lodash.partialRight = partialRight;
    lodash.partition = partition;
    lodash.pick = pick;
    lodash.pickBy = pickBy;
    lodash.property = property;
    lodash.propertyOf = propertyOf;
    lodash.pull = pull;
    lodash.pullAll = pullAll;
    lodash.pullAllBy = pullAllBy;
    lodash.pullAllWith = pullAllWith;
    lodash.pullAt = pullAt;
    lodash.range = range;
    lodash.rangeRight = rangeRight;
    lodash.rearg = rearg;
    lodash.reject = reject;
    lodash.remove = remove;
    lodash.rest = rest;
    lodash.reverse = reverse;
    lodash.sampleSize = sampleSize;
    lodash.set = set;
    lodash.setWith = setWith;
    lodash.shuffle = shuffle;
    lodash.slice = slice;
    lodash.sortBy = sortBy;
    lodash.sortedUniq = sortedUniq;
    lodash.sortedUniqBy = sortedUniqBy;
    lodash.split = split;
    lodash.spread = spread;
    lodash.tail = tail;
    lodash.take = take;
    lodash.takeRight = takeRight;
    lodash.takeRightWhile = takeRightWhile;
    lodash.takeWhile = takeWhile;
    lodash.tap = tap;
    lodash.throttle = throttle;
    lodash.thru = thru;
    lodash.toArray = toArray;
    lodash.toPairs = toPairs;
    lodash.toPairsIn = toPairsIn;
    lodash.toPath = toPath;
    lodash.toPlainObject = toPlainObject;
    lodash.transform = transform;
    lodash.unary = unary;
    lodash.union = union;
    lodash.unionBy = unionBy;
    lodash.unionWith = unionWith;
    lodash.uniq = uniq;
    lodash.uniqBy = uniqBy;
    lodash.uniqWith = uniqWith;
    lodash.unset = unset;
    lodash.unzip = unzip;
    lodash.unzipWith = unzipWith;
    lodash.update = update;
    lodash.updateWith = updateWith;
    lodash.values = values;
    lodash.valuesIn = valuesIn;
    lodash.without = without;
    lodash.words = words;
    lodash.wrap = wrap;
    lodash.xor = xor;
    lodash.xorBy = xorBy;
    lodash.xorWith = xorWith;
    lodash.zip = zip;
    lodash.zipObject = zipObject;
    lodash.zipObjectDeep = zipObjectDeep;
    lodash.zipWith = zipWith;

    // Add aliases.
    lodash.entries = toPairs;
    lodash.entriesIn = toPairsIn;
    lodash.extend = assignIn;
    lodash.extendWith = assignInWith;

    // Add methods to `lodash.prototype`.
    mixin(lodash, lodash);

    /*------------------------------------------------------------------------*/

    // Add methods that return unwrapped values in chain sequences.
    lodash.add = add;
    lodash.attempt = attempt;
    lodash.camelCase = camelCase;
    lodash.capitalize = capitalize;
    lodash.ceil = ceil;
    lodash.clamp = clamp;
    lodash.clone = clone;
    lodash.cloneDeep = cloneDeep;
    lodash.cloneDeepWith = cloneDeepWith;
    lodash.cloneWith = cloneWith;
    lodash.conformsTo = conformsTo;
    lodash.deburr = deburr;
    lodash.defaultTo = defaultTo;
    lodash.divide = divide;
    lodash.endsWith = endsWith;
    lodash.eq = eq;
    lodash.escape = escape;
    lodash.escapeRegExp = escapeRegExp;
    lodash.every = every;
    lodash.find = find;
    lodash.findIndex = findIndex;
    lodash.findKey = findKey;
    lodash.findLast = findLast;
    lodash.findLastIndex = findLastIndex;
    lodash.findLastKey = findLastKey;
    lodash.floor = floor;
    lodash.forEach = forEach;
    lodash.forEachRight = forEachRight;
    lodash.forIn = forIn;
    lodash.forInRight = forInRight;
    lodash.forOwn = forOwn;
    lodash.forOwnRight = forOwnRight;
    lodash.get = get;
    lodash.gt = gt;
    lodash.gte = gte;
    lodash.has = has;
    lodash.hasIn = hasIn;
    lodash.head = head;
    lodash.identity = identity;
    lodash.includes = includes;
    lodash.indexOf = indexOf;
    lodash.inRange = inRange;
    lodash.invoke = invoke;
    lodash.isArguments = isArguments;
    lodash.isArray = isArray;
    lodash.isArrayBuffer = isArrayBuffer;
    lodash.isArrayLike = isArrayLike;
    lodash.isArrayLikeObject = isArrayLikeObject;
    lodash.isBoolean = isBoolean;
    lodash.isBuffer = isBuffer;
    lodash.isDate = isDate;
    lodash.isElement = isElement;
    lodash.isEmpty = isEmpty;
    lodash.isEqual = isEqual;
    lodash.isEqualWith = isEqualWith;
    lodash.isError = isError;
    lodash.isFinite = isFinite;
    lodash.isFunction = isFunction;
    lodash.isInteger = isInteger;
    lodash.isLength = isLength;
    lodash.isMap = isMap;
    lodash.isMatch = isMatch;
    lodash.isMatchWith = isMatchWith;
    lodash.isNaN = isNaN;
    lodash.isNative = isNative;
    lodash.isNil = isNil;
    lodash.isNull = isNull;
    lodash.isNumber = isNumber;
    lodash.isObject = isObject;
    lodash.isObjectLike = isObjectLike;
    lodash.isPlainObject = isPlainObject;
    lodash.isRegExp = isRegExp;
    lodash.isSafeInteger = isSafeInteger;
    lodash.isSet = isSet;
    lodash.isString = isString;
    lodash.isSymbol = isSymbol;
    lodash.isTypedArray = isTypedArray;
    lodash.isUndefined = isUndefined;
    lodash.isWeakMap = isWeakMap;
    lodash.isWeakSet = isWeakSet;
    lodash.join = join;
    lodash.kebabCase = kebabCase;
    lodash.last = last;
    lodash.lastIndexOf = lastIndexOf;
    lodash.lowerCase = lowerCase;
    lodash.lowerFirst = lowerFirst;
    lodash.lt = lt;
    lodash.lte = lte;
    lodash.max = max;
    lodash.maxBy = maxBy;
    lodash.mean = mean;
    lodash.meanBy = meanBy;
    lodash.min = min;
    lodash.minBy = minBy;
    lodash.stubArray = stubArray;
    lodash.stubFalse = stubFalse;
    lodash.stubObject = stubObject;
    lodash.stubString = stubString;
    lodash.stubTrue = stubTrue;
    lodash.multiply = multiply;
    lodash.nth = nth;
    lodash.noConflict = noConflict;
    lodash.noop = noop;
    lodash.now = now;
    lodash.pad = pad;
    lodash.padEnd = padEnd;
    lodash.padStart = padStart;
    lodash.parseInt = parseInt;
    lodash.random = random;
    lodash.reduce = reduce;
    lodash.reduceRight = reduceRight;
    lodash.repeat = repeat;
    lodash.replace = replace;
    lodash.result = result;
    lodash.round = round;
    lodash.runInContext = runInContext;
    lodash.sample = sample;
    lodash.size = size;
    lodash.snakeCase = snakeCase;
    lodash.some = some;
    lodash.sortedIndex = sortedIndex;
    lodash.sortedIndexBy = sortedIndexBy;
    lodash.sortedIndexOf = sortedIndexOf;
    lodash.sortedLastIndex = sortedLastIndex;
    lodash.sortedLastIndexBy = sortedLastIndexBy;
    lodash.sortedLastIndexOf = sortedLastIndexOf;
    lodash.startCase = startCase;
    lodash.startsWith = startsWith;
    lodash.subtract = subtract;
    lodash.sum = sum;
    lodash.sumBy = sumBy;
    lodash.template = template;
    lodash.times = times;
    lodash.toFinite = toFinite;
    lodash.toInteger = toInteger;
    lodash.toLength = toLength;
    lodash.toLower = toLower;
    lodash.toNumber = toNumber;
    lodash.toSafeInteger = toSafeInteger;
    lodash.toString = toString;
    lodash.toUpper = toUpper;
    lodash.trim = trim;
    lodash.trimEnd = trimEnd;
    lodash.trimStart = trimStart;
    lodash.truncate = truncate;
    lodash.unescape = unescape;
    lodash.uniqueId = uniqueId;
    lodash.upperCase = upperCase;
    lodash.upperFirst = upperFirst;

    // Add aliases.
    lodash.each = forEach;
    lodash.eachRight = forEachRight;
    lodash.first = head;

    mixin(lodash, (function() {
      var source = {};
      baseForOwn(lodash, function(func, methodName) {
        if (!hasOwnProperty.call(lodash.prototype, methodName)) {
          source[methodName] = func;
        }
      });
      return source;
    }()), { 'chain': false });

    /*------------------------------------------------------------------------*/

    /**
     * The semantic version number.
     *
     * @static
     * @memberOf _
     * @type {string}
     */
    lodash.VERSION = VERSION;

    // Assign default placeholders.
    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {
      lodash[methodName].placeholder = lodash;
    });

    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.
    arrayEach(['drop', 'take'], function(methodName, index) {
      LazyWrapper.prototype[methodName] = function(n) {
        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);

        var result = (this.__filtered__ && !index)
          ? new LazyWrapper(this)
          : this.clone();

        if (result.__filtered__) {
          result.__takeCount__ = nativeMin(n, result.__takeCount__);
        } else {
          result.__views__.push({
            'size': nativeMin(n, MAX_ARRAY_LENGTH),
            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')
          });
        }
        return result;
      };

      LazyWrapper.prototype[methodName + 'Right'] = function(n) {
        return this.reverse()[methodName](n).reverse();
      };
    });

    // Add `LazyWrapper` methods that accept an `iteratee` value.
    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {
      var type = index + 1,
          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;

      LazyWrapper.prototype[methodName] = function(iteratee) {
        var result = this.clone();
        result.__iteratees__.push({
          'iteratee': getIteratee(iteratee, 3),
          'type': type
        });
        result.__filtered__ = result.__filtered__ || isFilter;
        return result;
      };
    });

    // Add `LazyWrapper` methods for `_.head` and `_.last`.
    arrayEach(['head', 'last'], function(methodName, index) {
      var takeName = 'take' + (index ? 'Right' : '');

      LazyWrapper.prototype[methodName] = function() {
        return this[takeName](1).value()[0];
      };
    });

    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.
    arrayEach(['initial', 'tail'], function(methodName, index) {
      var dropName = 'drop' + (index ? '' : 'Right');

      LazyWrapper.prototype[methodName] = function() {
        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);
      };
    });

    LazyWrapper.prototype.compact = function() {
      return this.filter(identity);
    };

    LazyWrapper.prototype.find = function(predicate) {
      return this.filter(predicate).head();
    };

    LazyWrapper.prototype.findLast = function(predicate) {
      return this.reverse().find(predicate);
    };

    LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {
      if (typeof path == 'function') {
        return new LazyWrapper(this);
      }
      return this.map(function(value) {
        return baseInvoke(value, path, args);
      });
    });

    LazyWrapper.prototype.reject = function(predicate) {
      return this.filter(negate(getIteratee(predicate)));
    };

    LazyWrapper.prototype.slice = function(start, end) {
      start = toInteger(start);

      var result = this;
      if (result.__filtered__ && (start > 0 || end < 0)) {
        return new LazyWrapper(result);
      }
      if (start < 0) {
        result = result.takeRight(-start);
      } else if (start) {
        result = result.drop(start);
      }
      if (end !== undefined) {
        end = toInteger(end);
        result = end < 0 ? result.dropRight(-end) : result.take(end - start);
      }
      return result;
    };

    LazyWrapper.prototype.takeRightWhile = function(predicate) {
      return this.reverse().takeWhile(predicate).reverse();
    };

    LazyWrapper.prototype.toArray = function() {
      return this.take(MAX_ARRAY_LENGTH);
    };

    // Add `LazyWrapper` methods to `lodash.prototype`.
    baseForOwn(LazyWrapper.prototype, function(func, methodName) {
      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),
          isTaker = /^(?:head|last)$/.test(methodName),
          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],
          retUnwrapped = isTaker || /^find/.test(methodName);

      if (!lodashFunc) {
        return;
      }
      lodash.prototype[methodName] = function() {
        var value = this.__wrapped__,
            args = isTaker ? [1] : arguments,
            isLazy = value instanceof LazyWrapper,
            iteratee = args[0],
            useLazy = isLazy || isArray(value);

        var interceptor = function(value) {
          var result = lodashFunc.apply(lodash, arrayPush([value], args));
          return (isTaker && chainAll) ? result[0] : result;
        };

        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {
          // Avoid lazy use if the iteratee has a "length" value other than `1`.
          isLazy = useLazy = false;
        }
        var chainAll = this.__chain__,
            isHybrid = !!this.__actions__.length,
            isUnwrapped = retUnwrapped && !chainAll,
            onlyLazy = isLazy && !isHybrid;

        if (!retUnwrapped && useLazy) {
          value = onlyLazy ? value : new LazyWrapper(this);
          var result = func.apply(value, args);
          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });
          return new LodashWrapper(result, chainAll);
        }
        if (isUnwrapped && onlyLazy) {
          return func.apply(this, args);
        }
        result = this.thru(interceptor);
        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;
      };
    });

    // Add `Array` methods to `lodash.prototype`.
    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {
      var func = arrayProto[methodName],
          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',
          retUnwrapped = /^(?:pop|shift)$/.test(methodName);

      lodash.prototype[methodName] = function() {
        var args = arguments;
        if (retUnwrapped && !this.__chain__) {
          var value = this.value();
          return func.apply(isArray(value) ? value : [], args);
        }
        return this[chainName](function(value) {
          return func.apply(isArray(value) ? value : [], args);
        });
      };
    });

    // Map minified method names to their real names.
    baseForOwn(LazyWrapper.prototype, function(func, methodName) {
      var lodashFunc = lodash[methodName];
      if (lodashFunc) {
        var key = lodashFunc.name + '';
        if (!hasOwnProperty.call(realNames, key)) {
          realNames[key] = [];
        }
        realNames[key].push({ 'name': methodName, 'func': lodashFunc });
      }
    });

    realNames[createHybrid(undefined, WRAP_BIND_KEY_FLAG).name] = [{
      'name': 'wrapper',
      'func': undefined
    }];

    // Add methods to `LazyWrapper`.
    LazyWrapper.prototype.clone = lazyClone;
    LazyWrapper.prototype.reverse = lazyReverse;
    LazyWrapper.prototype.value = lazyValue;

    // Add chain sequence methods to the `lodash` wrapper.
    lodash.prototype.at = wrapperAt;
    lodash.prototype.chain = wrapperChain;
    lodash.prototype.commit = wrapperCommit;
    lodash.prototype.next = wrapperNext;
    lodash.prototype.plant = wrapperPlant;
    lodash.prototype.reverse = wrapperReverse;
    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;

    // Add lazy aliases.
    lodash.prototype.first = lodash.prototype.head;

    if (symIterator) {
      lodash.prototype[symIterator] = wrapperToIterator;
    }
    return lodash;
  });

  /*--------------------------------------------------------------------------*/

  // Export lodash.
  var _ = runInContext();

  // Some AMD build optimizers, like r.js, check for condition patterns like:
  if (true) {
    // Expose Lodash on the global object to prevent errors when Lodash is
    // loaded by a script tag in the presence of an AMD loader.
    // See http://requirejs.org/docs/errors.html#mismatch for more details.
    // Use `_.noConflict` to remove Lodash from the global object.
    root._ = _;

    // Define as an anonymous module so, through path mapping, it can be
    // referenced as the "underscore" module.
    !(__WEBPACK_AMD_DEFINE_RESULT__ = (function() {
      return _;
    }).call(exports, __webpack_require__, exports, module),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  }
  // Check for `exports` after `define` in case a build optimizer adds it.
  else {}
}.call(this));


/***/ }),

/***/ "../../node_modules/reflect-metadata/Reflect.js":
/*!******************************************************!*\
  !*** ../../node_modules/reflect-metadata/Reflect.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

/*! *****************************************************************************
Copyright (C) Microsoft. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at http://www.apache.org/licenses/LICENSE-2.0

THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
MERCHANTABLITY OR NON-INFRINGEMENT.

See the Apache Version 2.0 License for specific language governing permissions
and limitations under the License.
***************************************************************************** */
var Reflect;
(function (Reflect) {
    // Metadata Proposal
    // https://rbuckton.github.io/reflect-metadata/
    (function (factory) {
        var root = typeof __webpack_require__.g === "object" ? __webpack_require__.g :
            typeof self === "object" ? self :
                typeof this === "object" ? this :
                    Function("return this;")();
        var exporter = makeExporter(Reflect);
        if (typeof root.Reflect === "undefined") {
            root.Reflect = Reflect;
        }
        else {
            exporter = makeExporter(root.Reflect, exporter);
        }
        factory(exporter);
        function makeExporter(target, previous) {
            return function (key, value) {
                if (typeof target[key] !== "function") {
                    Object.defineProperty(target, key, { configurable: true, writable: true, value: value });
                }
                if (previous)
                    previous(key, value);
            };
        }
    })(function (exporter) {
        var hasOwn = Object.prototype.hasOwnProperty;
        // feature test for Symbol support
        var supportsSymbol = typeof Symbol === "function";
        var toPrimitiveSymbol = supportsSymbol && typeof Symbol.toPrimitive !== "undefined" ? Symbol.toPrimitive : "@@toPrimitive";
        var iteratorSymbol = supportsSymbol && typeof Symbol.iterator !== "undefined" ? Symbol.iterator : "@@iterator";
        var supportsCreate = typeof Object.create === "function"; // feature test for Object.create support
        var supportsProto = { __proto__: [] } instanceof Array; // feature test for __proto__ support
        var downLevel = !supportsCreate && !supportsProto;
        var HashMap = {
            // create an object in dictionary mode (a.k.a. "slow" mode in v8)
            create: supportsCreate
                ? function () { return MakeDictionary(Object.create(null)); }
                : supportsProto
                    ? function () { return MakeDictionary({ __proto__: null }); }
                    : function () { return MakeDictionary({}); },
            has: downLevel
                ? function (map, key) { return hasOwn.call(map, key); }
                : function (map, key) { return key in map; },
            get: downLevel
                ? function (map, key) { return hasOwn.call(map, key) ? map[key] : undefined; }
                : function (map, key) { return map[key]; },
        };
        // Load global or shim versions of Map, Set, and WeakMap
        var functionPrototype = Object.getPrototypeOf(Function);
        var usePolyfill = typeof process === "object" && process.env && process.env["REFLECT_METADATA_USE_MAP_POLYFILL"] === "true";
        var _Map = !usePolyfill && typeof Map === "function" && typeof Map.prototype.entries === "function" ? Map : CreateMapPolyfill();
        var _Set = !usePolyfill && typeof Set === "function" && typeof Set.prototype.entries === "function" ? Set : CreateSetPolyfill();
        var _WeakMap = !usePolyfill && typeof WeakMap === "function" ? WeakMap : CreateWeakMapPolyfill();
        // [[Metadata]] internal slot
        // https://rbuckton.github.io/reflect-metadata/#ordinary-object-internal-methods-and-internal-slots
        var Metadata = new _WeakMap();
        /**
         * Applies a set of decorators to a property of a target object.
         * @param decorators An array of decorators.
         * @param target The target object.
         * @param propertyKey (Optional) The property key to decorate.
         * @param attributes (Optional) The property descriptor for the target key.
         * @remarks Decorators are applied in reverse order.
         * @example
         *
         *     class Example {
         *         // property declarations are not part of ES6, though they are valid in TypeScript:
         *         // static staticProperty;
         *         // property;
         *
         *         constructor(p) { }
         *         static staticMethod(p) { }
         *         method(p) { }
         *     }
         *
         *     // constructor
         *     Example = Reflect.decorate(decoratorsArray, Example);
         *
         *     // property (on constructor)
         *     Reflect.decorate(decoratorsArray, Example, "staticProperty");
         *
         *     // property (on prototype)
         *     Reflect.decorate(decoratorsArray, Example.prototype, "property");
         *
         *     // method (on constructor)
         *     Object.defineProperty(Example, "staticMethod",
         *         Reflect.decorate(decoratorsArray, Example, "staticMethod",
         *             Object.getOwnPropertyDescriptor(Example, "staticMethod")));
         *
         *     // method (on prototype)
         *     Object.defineProperty(Example.prototype, "method",
         *         Reflect.decorate(decoratorsArray, Example.prototype, "method",
         *             Object.getOwnPropertyDescriptor(Example.prototype, "method")));
         *
         */
        function decorate(decorators, target, propertyKey, attributes) {
            if (!IsUndefined(propertyKey)) {
                if (!IsArray(decorators))
                    throw new TypeError();
                if (!IsObject(target))
                    throw new TypeError();
                if (!IsObject(attributes) && !IsUndefined(attributes) && !IsNull(attributes))
                    throw new TypeError();
                if (IsNull(attributes))
                    attributes = undefined;
                propertyKey = ToPropertyKey(propertyKey);
                return DecorateProperty(decorators, target, propertyKey, attributes);
            }
            else {
                if (!IsArray(decorators))
                    throw new TypeError();
                if (!IsConstructor(target))
                    throw new TypeError();
                return DecorateConstructor(decorators, target);
            }
        }
        exporter("decorate", decorate);
        // 4.1.2 Reflect.metadata(metadataKey, metadataValue)
        // https://rbuckton.github.io/reflect-metadata/#reflect.metadata
        /**
         * A default metadata decorator factory that can be used on a class, class member, or parameter.
         * @param metadataKey The key for the metadata entry.
         * @param metadataValue The value for the metadata entry.
         * @returns A decorator function.
         * @remarks
         * If `metadataKey` is already defined for the target and target key, the
         * metadataValue for that key will be overwritten.
         * @example
         *
         *     // constructor
         *     @Reflect.metadata(key, value)
         *     class Example {
         *     }
         *
         *     // property (on constructor, TypeScript only)
         *     class Example {
         *         @Reflect.metadata(key, value)
         *         static staticProperty;
         *     }
         *
         *     // property (on prototype, TypeScript only)
         *     class Example {
         *         @Reflect.metadata(key, value)
         *         property;
         *     }
         *
         *     // method (on constructor)
         *     class Example {
         *         @Reflect.metadata(key, value)
         *         static staticMethod() { }
         *     }
         *
         *     // method (on prototype)
         *     class Example {
         *         @Reflect.metadata(key, value)
         *         method() { }
         *     }
         *
         */
        function metadata(metadataKey, metadataValue) {
            function decorator(target, propertyKey) {
                if (!IsObject(target))
                    throw new TypeError();
                if (!IsUndefined(propertyKey) && !IsPropertyKey(propertyKey))
                    throw new TypeError();
                OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);
            }
            return decorator;
        }
        exporter("metadata", metadata);
        /**
         * Define a unique metadata entry on the target.
         * @param metadataKey A key used to store and retrieve metadata.
         * @param metadataValue A value that contains attached metadata.
         * @param target The target object on which to define metadata.
         * @param propertyKey (Optional) The property key for the target.
         * @example
         *
         *     class Example {
         *         // property declarations are not part of ES6, though they are valid in TypeScript:
         *         // static staticProperty;
         *         // property;
         *
         *         constructor(p) { }
         *         static staticMethod(p) { }
         *         method(p) { }
         *     }
         *
         *     // constructor
         *     Reflect.defineMetadata("custom:annotation", options, Example);
         *
         *     // property (on constructor)
         *     Reflect.defineMetadata("custom:annotation", options, Example, "staticProperty");
         *
         *     // property (on prototype)
         *     Reflect.defineMetadata("custom:annotation", options, Example.prototype, "property");
         *
         *     // method (on constructor)
         *     Reflect.defineMetadata("custom:annotation", options, Example, "staticMethod");
         *
         *     // method (on prototype)
         *     Reflect.defineMetadata("custom:annotation", options, Example.prototype, "method");
         *
         *     // decorator factory as metadata-producing annotation.
         *     function MyAnnotation(options): Decorator {
         *         return (target, key?) => Reflect.defineMetadata("custom:annotation", options, target, key);
         *     }
         *
         */
        function defineMetadata(metadataKey, metadataValue, target, propertyKey) {
            if (!IsObject(target))
                throw new TypeError();
            if (!IsUndefined(propertyKey))
                propertyKey = ToPropertyKey(propertyKey);
            return OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);
        }
        exporter("defineMetadata", defineMetadata);
        /**
         * Gets a value indicating whether the target object or its prototype chain has the provided metadata key defined.
         * @param metadataKey A key used to store and retrieve metadata.
         * @param target The target object on which the metadata is defined.
         * @param propertyKey (Optional) The property key for the target.
         * @returns `true` if the metadata key was defined on the target object or its prototype chain; otherwise, `false`.
         * @example
         *
         *     class Example {
         *         // property declarations are not part of ES6, though they are valid in TypeScript:
         *         // static staticProperty;
         *         // property;
         *
         *         constructor(p) { }
         *         static staticMethod(p) { }
         *         method(p) { }
         *     }
         *
         *     // constructor
         *     result = Reflect.hasMetadata("custom:annotation", Example);
         *
         *     // property (on constructor)
         *     result = Reflect.hasMetadata("custom:annotation", Example, "staticProperty");
         *
         *     // property (on prototype)
         *     result = Reflect.hasMetadata("custom:annotation", Example.prototype, "property");
         *
         *     // method (on constructor)
         *     result = Reflect.hasMetadata("custom:annotation", Example, "staticMethod");
         *
         *     // method (on prototype)
         *     result = Reflect.hasMetadata("custom:annotation", Example.prototype, "method");
         *
         */
        function hasMetadata(metadataKey, target, propertyKey) {
            if (!IsObject(target))
                throw new TypeError();
            if (!IsUndefined(propertyKey))
                propertyKey = ToPropertyKey(propertyKey);
            return OrdinaryHasMetadata(metadataKey, target, propertyKey);
        }
        exporter("hasMetadata", hasMetadata);
        /**
         * Gets a value indicating whether the target object has the provided metadata key defined.
         * @param metadataKey A key used to store and retrieve metadata.
         * @param target The target object on which the metadata is defined.
         * @param propertyKey (Optional) The property key for the target.
         * @returns `true` if the metadata key was defined on the target object; otherwise, `false`.
         * @example
         *
         *     class Example {
         *         // property declarations are not part of ES6, though they are valid in TypeScript:
         *         // static staticProperty;
         *         // property;
         *
         *         constructor(p) { }
         *         static staticMethod(p) { }
         *         method(p) { }
         *     }
         *
         *     // constructor
         *     result = Reflect.hasOwnMetadata("custom:annotation", Example);
         *
         *     // property (on constructor)
         *     result = Reflect.hasOwnMetadata("custom:annotation", Example, "staticProperty");
         *
         *     // property (on prototype)
         *     result = Reflect.hasOwnMetadata("custom:annotation", Example.prototype, "property");
         *
         *     // method (on constructor)
         *     result = Reflect.hasOwnMetadata("custom:annotation", Example, "staticMethod");
         *
         *     // method (on prototype)
         *     result = Reflect.hasOwnMetadata("custom:annotation", Example.prototype, "method");
         *
         */
        function hasOwnMetadata(metadataKey, target, propertyKey) {
            if (!IsObject(target))
                throw new TypeError();
            if (!IsUndefined(propertyKey))
                propertyKey = ToPropertyKey(propertyKey);
            return OrdinaryHasOwnMetadata(metadataKey, target, propertyKey);
        }
        exporter("hasOwnMetadata", hasOwnMetadata);
        /**
         * Gets the metadata value for the provided metadata key on the target object or its prototype chain.
         * @param metadataKey A key used to store and retrieve metadata.
         * @param target The target object on which the metadata is defined.
         * @param propertyKey (Optional) The property key for the target.
         * @returns The metadata value for the metadata key if found; otherwise, `undefined`.
         * @example
         *
         *     class Example {
         *         // property declarations are not part of ES6, though they are valid in TypeScript:
         *         // static staticProperty;
         *         // property;
         *
         *         constructor(p) { }
         *         static staticMethod(p) { }
         *         method(p) { }
         *     }
         *
         *     // constructor
         *     result = Reflect.getMetadata("custom:annotation", Example);
         *
         *     // property (on constructor)
         *     result = Reflect.getMetadata("custom:annotation", Example, "staticProperty");
         *
         *     // property (on prototype)
         *     result = Reflect.getMetadata("custom:annotation", Example.prototype, "property");
         *
         *     // method (on constructor)
         *     result = Reflect.getMetadata("custom:annotation", Example, "staticMethod");
         *
         *     // method (on prototype)
         *     result = Reflect.getMetadata("custom:annotation", Example.prototype, "method");
         *
         */
        function getMetadata(metadataKey, target, propertyKey) {
            if (!IsObject(target))
                throw new TypeError();
            if (!IsUndefined(propertyKey))
                propertyKey = ToPropertyKey(propertyKey);
            return OrdinaryGetMetadata(metadataKey, target, propertyKey);
        }
        exporter("getMetadata", getMetadata);
        /**
         * Gets the metadata value for the provided metadata key on the target object.
         * @param metadataKey A key used to store and retrieve metadata.
         * @param target The target object on which the metadata is defined.
         * @param propertyKey (Optional) The property key for the target.
         * @returns The metadata value for the metadata key if found; otherwise, `undefined`.
         * @example
         *
         *     class Example {
         *         // property declarations are not part of ES6, though they are valid in TypeScript:
         *         // static staticProperty;
         *         // property;
         *
         *         constructor(p) { }
         *         static staticMethod(p) { }
         *         method(p) { }
         *     }
         *
         *     // constructor
         *     result = Reflect.getOwnMetadata("custom:annotation", Example);
         *
         *     // property (on constructor)
         *     result = Reflect.getOwnMetadata("custom:annotation", Example, "staticProperty");
         *
         *     // property (on prototype)
         *     result = Reflect.getOwnMetadata("custom:annotation", Example.prototype, "property");
         *
         *     // method (on constructor)
         *     result = Reflect.getOwnMetadata("custom:annotation", Example, "staticMethod");
         *
         *     // method (on prototype)
         *     result = Reflect.getOwnMetadata("custom:annotation", Example.prototype, "method");
         *
         */
        function getOwnMetadata(metadataKey, target, propertyKey) {
            if (!IsObject(target))
                throw new TypeError();
            if (!IsUndefined(propertyKey))
                propertyKey = ToPropertyKey(propertyKey);
            return OrdinaryGetOwnMetadata(metadataKey, target, propertyKey);
        }
        exporter("getOwnMetadata", getOwnMetadata);
        /**
         * Gets the metadata keys defined on the target object or its prototype chain.
         * @param target The target object on which the metadata is defined.
         * @param propertyKey (Optional) The property key for the target.
         * @returns An array of unique metadata keys.
         * @example
         *
         *     class Example {
         *         // property declarations are not part of ES6, though they are valid in TypeScript:
         *         // static staticProperty;
         *         // property;
         *
         *         constructor(p) { }
         *         static staticMethod(p) { }
         *         method(p) { }
         *     }
         *
         *     // constructor
         *     result = Reflect.getMetadataKeys(Example);
         *
         *     // property (on constructor)
         *     result = Reflect.getMetadataKeys(Example, "staticProperty");
         *
         *     // property (on prototype)
         *     result = Reflect.getMetadataKeys(Example.prototype, "property");
         *
         *     // method (on constructor)
         *     result = Reflect.getMetadataKeys(Example, "staticMethod");
         *
         *     // method (on prototype)
         *     result = Reflect.getMetadataKeys(Example.prototype, "method");
         *
         */
        function getMetadataKeys(target, propertyKey) {
            if (!IsObject(target))
                throw new TypeError();
            if (!IsUndefined(propertyKey))
                propertyKey = ToPropertyKey(propertyKey);
            return OrdinaryMetadataKeys(target, propertyKey);
        }
        exporter("getMetadataKeys", getMetadataKeys);
        /**
         * Gets the unique metadata keys defined on the target object.
         * @param target The target object on which the metadata is defined.
         * @param propertyKey (Optional) The property key for the target.
         * @returns An array of unique metadata keys.
         * @example
         *
         *     class Example {
         *         // property declarations are not part of ES6, though they are valid in TypeScript:
         *         // static staticProperty;
         *         // property;
         *
         *         constructor(p) { }
         *         static staticMethod(p) { }
         *         method(p) { }
         *     }
         *
         *     // constructor
         *     result = Reflect.getOwnMetadataKeys(Example);
         *
         *     // property (on constructor)
         *     result = Reflect.getOwnMetadataKeys(Example, "staticProperty");
         *
         *     // property (on prototype)
         *     result = Reflect.getOwnMetadataKeys(Example.prototype, "property");
         *
         *     // method (on constructor)
         *     result = Reflect.getOwnMetadataKeys(Example, "staticMethod");
         *
         *     // method (on prototype)
         *     result = Reflect.getOwnMetadataKeys(Example.prototype, "method");
         *
         */
        function getOwnMetadataKeys(target, propertyKey) {
            if (!IsObject(target))
                throw new TypeError();
            if (!IsUndefined(propertyKey))
                propertyKey = ToPropertyKey(propertyKey);
            return OrdinaryOwnMetadataKeys(target, propertyKey);
        }
        exporter("getOwnMetadataKeys", getOwnMetadataKeys);
        /**
         * Deletes the metadata entry from the target object with the provided key.
         * @param metadataKey A key used to store and retrieve metadata.
         * @param target The target object on which the metadata is defined.
         * @param propertyKey (Optional) The property key for the target.
         * @returns `true` if the metadata entry was found and deleted; otherwise, false.
         * @example
         *
         *     class Example {
         *         // property declarations are not part of ES6, though they are valid in TypeScript:
         *         // static staticProperty;
         *         // property;
         *
         *         constructor(p) { }
         *         static staticMethod(p) { }
         *         method(p) { }
         *     }
         *
         *     // constructor
         *     result = Reflect.deleteMetadata("custom:annotation", Example);
         *
         *     // property (on constructor)
         *     result = Reflect.deleteMetadata("custom:annotation", Example, "staticProperty");
         *
         *     // property (on prototype)
         *     result = Reflect.deleteMetadata("custom:annotation", Example.prototype, "property");
         *
         *     // method (on constructor)
         *     result = Reflect.deleteMetadata("custom:annotation", Example, "staticMethod");
         *
         *     // method (on prototype)
         *     result = Reflect.deleteMetadata("custom:annotation", Example.prototype, "method");
         *
         */
        function deleteMetadata(metadataKey, target, propertyKey) {
            if (!IsObject(target))
                throw new TypeError();
            if (!IsUndefined(propertyKey))
                propertyKey = ToPropertyKey(propertyKey);
            var metadataMap = GetOrCreateMetadataMap(target, propertyKey, /*Create*/ false);
            if (IsUndefined(metadataMap))
                return false;
            if (!metadataMap.delete(metadataKey))
                return false;
            if (metadataMap.size > 0)
                return true;
            var targetMetadata = Metadata.get(target);
            targetMetadata.delete(propertyKey);
            if (targetMetadata.size > 0)
                return true;
            Metadata.delete(target);
            return true;
        }
        exporter("deleteMetadata", deleteMetadata);
        function DecorateConstructor(decorators, target) {
            for (var i = decorators.length - 1; i >= 0; --i) {
                var decorator = decorators[i];
                var decorated = decorator(target);
                if (!IsUndefined(decorated) && !IsNull(decorated)) {
                    if (!IsConstructor(decorated))
                        throw new TypeError();
                    target = decorated;
                }
            }
            return target;
        }
        function DecorateProperty(decorators, target, propertyKey, descriptor) {
            for (var i = decorators.length - 1; i >= 0; --i) {
                var decorator = decorators[i];
                var decorated = decorator(target, propertyKey, descriptor);
                if (!IsUndefined(decorated) && !IsNull(decorated)) {
                    if (!IsObject(decorated))
                        throw new TypeError();
                    descriptor = decorated;
                }
            }
            return descriptor;
        }
        function GetOrCreateMetadataMap(O, P, Create) {
            var targetMetadata = Metadata.get(O);
            if (IsUndefined(targetMetadata)) {
                if (!Create)
                    return undefined;
                targetMetadata = new _Map();
                Metadata.set(O, targetMetadata);
            }
            var metadataMap = targetMetadata.get(P);
            if (IsUndefined(metadataMap)) {
                if (!Create)
                    return undefined;
                metadataMap = new _Map();
                targetMetadata.set(P, metadataMap);
            }
            return metadataMap;
        }
        // 3.1.1.1 OrdinaryHasMetadata(MetadataKey, O, P)
        // https://rbuckton.github.io/reflect-metadata/#ordinaryhasmetadata
        function OrdinaryHasMetadata(MetadataKey, O, P) {
            var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);
            if (hasOwn)
                return true;
            var parent = OrdinaryGetPrototypeOf(O);
            if (!IsNull(parent))
                return OrdinaryHasMetadata(MetadataKey, parent, P);
            return false;
        }
        // 3.1.2.1 OrdinaryHasOwnMetadata(MetadataKey, O, P)
        // https://rbuckton.github.io/reflect-metadata/#ordinaryhasownmetadata
        function OrdinaryHasOwnMetadata(MetadataKey, O, P) {
            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);
            if (IsUndefined(metadataMap))
                return false;
            return ToBoolean(metadataMap.has(MetadataKey));
        }
        // 3.1.3.1 OrdinaryGetMetadata(MetadataKey, O, P)
        // https://rbuckton.github.io/reflect-metadata/#ordinarygetmetadata
        function OrdinaryGetMetadata(MetadataKey, O, P) {
            var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);
            if (hasOwn)
                return OrdinaryGetOwnMetadata(MetadataKey, O, P);
            var parent = OrdinaryGetPrototypeOf(O);
            if (!IsNull(parent))
                return OrdinaryGetMetadata(MetadataKey, parent, P);
            return undefined;
        }
        // 3.1.4.1 OrdinaryGetOwnMetadata(MetadataKey, O, P)
        // https://rbuckton.github.io/reflect-metadata/#ordinarygetownmetadata
        function OrdinaryGetOwnMetadata(MetadataKey, O, P) {
            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);
            if (IsUndefined(metadataMap))
                return undefined;
            return metadataMap.get(MetadataKey);
        }
        // 3.1.5.1 OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P)
        // https://rbuckton.github.io/reflect-metadata/#ordinarydefineownmetadata
        function OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P) {
            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ true);
            metadataMap.set(MetadataKey, MetadataValue);
        }
        // 3.1.6.1 OrdinaryMetadataKeys(O, P)
        // https://rbuckton.github.io/reflect-metadata/#ordinarymetadatakeys
        function OrdinaryMetadataKeys(O, P) {
            var ownKeys = OrdinaryOwnMetadataKeys(O, P);
            var parent = OrdinaryGetPrototypeOf(O);
            if (parent === null)
                return ownKeys;
            var parentKeys = OrdinaryMetadataKeys(parent, P);
            if (parentKeys.length <= 0)
                return ownKeys;
            if (ownKeys.length <= 0)
                return parentKeys;
            var set = new _Set();
            var keys = [];
            for (var _i = 0, ownKeys_1 = ownKeys; _i < ownKeys_1.length; _i++) {
                var key = ownKeys_1[_i];
                var hasKey = set.has(key);
                if (!hasKey) {
                    set.add(key);
                    keys.push(key);
                }
            }
            for (var _a = 0, parentKeys_1 = parentKeys; _a < parentKeys_1.length; _a++) {
                var key = parentKeys_1[_a];
                var hasKey = set.has(key);
                if (!hasKey) {
                    set.add(key);
                    keys.push(key);
                }
            }
            return keys;
        }
        // 3.1.7.1 OrdinaryOwnMetadataKeys(O, P)
        // https://rbuckton.github.io/reflect-metadata/#ordinaryownmetadatakeys
        function OrdinaryOwnMetadataKeys(O, P) {
            var keys = [];
            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);
            if (IsUndefined(metadataMap))
                return keys;
            var keysObj = metadataMap.keys();
            var iterator = GetIterator(keysObj);
            var k = 0;
            while (true) {
                var next = IteratorStep(iterator);
                if (!next) {
                    keys.length = k;
                    return keys;
                }
                var nextValue = IteratorValue(next);
                try {
                    keys[k] = nextValue;
                }
                catch (e) {
                    try {
                        IteratorClose(iterator);
                    }
                    finally {
                        throw e;
                    }
                }
                k++;
            }
        }
        // 6 ECMAScript Data Typ0es and Values
        // https://tc39.github.io/ecma262/#sec-ecmascript-data-types-and-values
        function Type(x) {
            if (x === null)
                return 1 /* Null */;
            switch (typeof x) {
                case "undefined": return 0 /* Undefined */;
                case "boolean": return 2 /* Boolean */;
                case "string": return 3 /* String */;
                case "symbol": return 4 /* Symbol */;
                case "number": return 5 /* Number */;
                case "object": return x === null ? 1 /* Null */ : 6 /* Object */;
                default: return 6 /* Object */;
            }
        }
        // 6.1.1 The Undefined Type
        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-undefined-type
        function IsUndefined(x) {
            return x === undefined;
        }
        // 6.1.2 The Null Type
        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-null-type
        function IsNull(x) {
            return x === null;
        }
        // 6.1.5 The Symbol Type
        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-symbol-type
        function IsSymbol(x) {
            return typeof x === "symbol";
        }
        // 6.1.7 The Object Type
        // https://tc39.github.io/ecma262/#sec-object-type
        function IsObject(x) {
            return typeof x === "object" ? x !== null : typeof x === "function";
        }
        // 7.1 Type Conversion
        // https://tc39.github.io/ecma262/#sec-type-conversion
        // 7.1.1 ToPrimitive(input [, PreferredType])
        // https://tc39.github.io/ecma262/#sec-toprimitive
        function ToPrimitive(input, PreferredType) {
            switch (Type(input)) {
                case 0 /* Undefined */: return input;
                case 1 /* Null */: return input;
                case 2 /* Boolean */: return input;
                case 3 /* String */: return input;
                case 4 /* Symbol */: return input;
                case 5 /* Number */: return input;
            }
            var hint = PreferredType === 3 /* String */ ? "string" : PreferredType === 5 /* Number */ ? "number" : "default";
            var exoticToPrim = GetMethod(input, toPrimitiveSymbol);
            if (exoticToPrim !== undefined) {
                var result = exoticToPrim.call(input, hint);
                if (IsObject(result))
                    throw new TypeError();
                return result;
            }
            return OrdinaryToPrimitive(input, hint === "default" ? "number" : hint);
        }
        // 7.1.1.1 OrdinaryToPrimitive(O, hint)
        // https://tc39.github.io/ecma262/#sec-ordinarytoprimitive
        function OrdinaryToPrimitive(O, hint) {
            if (hint === "string") {
                var toString_1 = O.toString;
                if (IsCallable(toString_1)) {
                    var result = toString_1.call(O);
                    if (!IsObject(result))
                        return result;
                }
                var valueOf = O.valueOf;
                if (IsCallable(valueOf)) {
                    var result = valueOf.call(O);
                    if (!IsObject(result))
                        return result;
                }
            }
            else {
                var valueOf = O.valueOf;
                if (IsCallable(valueOf)) {
                    var result = valueOf.call(O);
                    if (!IsObject(result))
                        return result;
                }
                var toString_2 = O.toString;
                if (IsCallable(toString_2)) {
                    var result = toString_2.call(O);
                    if (!IsObject(result))
                        return result;
                }
            }
            throw new TypeError();
        }
        // 7.1.2 ToBoolean(argument)
        // https://tc39.github.io/ecma262/2016/#sec-toboolean
        function ToBoolean(argument) {
            return !!argument;
        }
        // 7.1.12 ToString(argument)
        // https://tc39.github.io/ecma262/#sec-tostring
        function ToString(argument) {
            return "" + argument;
        }
        // 7.1.14 ToPropertyKey(argument)
        // https://tc39.github.io/ecma262/#sec-topropertykey
        function ToPropertyKey(argument) {
            var key = ToPrimitive(argument, 3 /* String */);
            if (IsSymbol(key))
                return key;
            return ToString(key);
        }
        // 7.2 Testing and Comparison Operations
        // https://tc39.github.io/ecma262/#sec-testing-and-comparison-operations
        // 7.2.2 IsArray(argument)
        // https://tc39.github.io/ecma262/#sec-isarray
        function IsArray(argument) {
            return Array.isArray
                ? Array.isArray(argument)
                : argument instanceof Object
                    ? argument instanceof Array
                    : Object.prototype.toString.call(argument) === "[object Array]";
        }
        // 7.2.3 IsCallable(argument)
        // https://tc39.github.io/ecma262/#sec-iscallable
        function IsCallable(argument) {
            // NOTE: This is an approximation as we cannot check for [[Call]] internal method.
            return typeof argument === "function";
        }
        // 7.2.4 IsConstructor(argument)
        // https://tc39.github.io/ecma262/#sec-isconstructor
        function IsConstructor(argument) {
            // NOTE: This is an approximation as we cannot check for [[Construct]] internal method.
            return typeof argument === "function";
        }
        // 7.2.7 IsPropertyKey(argument)
        // https://tc39.github.io/ecma262/#sec-ispropertykey
        function IsPropertyKey(argument) {
            switch (Type(argument)) {
                case 3 /* String */: return true;
                case 4 /* Symbol */: return true;
                default: return false;
            }
        }
        // 7.3 Operations on Objects
        // https://tc39.github.io/ecma262/#sec-operations-on-objects
        // 7.3.9 GetMethod(V, P)
        // https://tc39.github.io/ecma262/#sec-getmethod
        function GetMethod(V, P) {
            var func = V[P];
            if (func === undefined || func === null)
                return undefined;
            if (!IsCallable(func))
                throw new TypeError();
            return func;
        }
        // 7.4 Operations on Iterator Objects
        // https://tc39.github.io/ecma262/#sec-operations-on-iterator-objects
        function GetIterator(obj) {
            var method = GetMethod(obj, iteratorSymbol);
            if (!IsCallable(method))
                throw new TypeError(); // from Call
            var iterator = method.call(obj);
            if (!IsObject(iterator))
                throw new TypeError();
            return iterator;
        }
        // 7.4.4 IteratorValue(iterResult)
        // https://tc39.github.io/ecma262/2016/#sec-iteratorvalue
        function IteratorValue(iterResult) {
            return iterResult.value;
        }
        // 7.4.5 IteratorStep(iterator)
        // https://tc39.github.io/ecma262/#sec-iteratorstep
        function IteratorStep(iterator) {
            var result = iterator.next();
            return result.done ? false : result;
        }
        // 7.4.6 IteratorClose(iterator, completion)
        // https://tc39.github.io/ecma262/#sec-iteratorclose
        function IteratorClose(iterator) {
            var f = iterator["return"];
            if (f)
                f.call(iterator);
        }
        // 9.1 Ordinary Object Internal Methods and Internal Slots
        // https://tc39.github.io/ecma262/#sec-ordinary-object-internal-methods-and-internal-slots
        // 9.1.1.1 OrdinaryGetPrototypeOf(O)
        // https://tc39.github.io/ecma262/#sec-ordinarygetprototypeof
        function OrdinaryGetPrototypeOf(O) {
            var proto = Object.getPrototypeOf(O);
            if (typeof O !== "function" || O === functionPrototype)
                return proto;
            // TypeScript doesn't set __proto__ in ES5, as it's non-standard.
            // Try to determine the superclass constructor. Compatible implementations
            // must either set __proto__ on a subclass constructor to the superclass constructor,
            // or ensure each class has a valid `constructor` property on its prototype that
            // points back to the constructor.
            // If this is not the same as Function.[[Prototype]], then this is definately inherited.
            // This is the case when in ES6 or when using __proto__ in a compatible browser.
            if (proto !== functionPrototype)
                return proto;
            // If the super prototype is Object.prototype, null, or undefined, then we cannot determine the heritage.
            var prototype = O.prototype;
            var prototypeProto = prototype && Object.getPrototypeOf(prototype);
            if (prototypeProto == null || prototypeProto === Object.prototype)
                return proto;
            // If the constructor was not a function, then we cannot determine the heritage.
            var constructor = prototypeProto.constructor;
            if (typeof constructor !== "function")
                return proto;
            // If we have some kind of self-reference, then we cannot determine the heritage.
            if (constructor === O)
                return proto;
            // we have a pretty good guess at the heritage.
            return constructor;
        }
        // naive Map shim
        function CreateMapPolyfill() {
            var cacheSentinel = {};
            var arraySentinel = [];
            var MapIterator = /** @class */ (function () {
                function MapIterator(keys, values, selector) {
                    this._index = 0;
                    this._keys = keys;
                    this._values = values;
                    this._selector = selector;
                }
                MapIterator.prototype["@@iterator"] = function () { return this; };
                MapIterator.prototype[iteratorSymbol] = function () { return this; };
                MapIterator.prototype.next = function () {
                    var index = this._index;
                    if (index >= 0 && index < this._keys.length) {
                        var result = this._selector(this._keys[index], this._values[index]);
                        if (index + 1 >= this._keys.length) {
                            this._index = -1;
                            this._keys = arraySentinel;
                            this._values = arraySentinel;
                        }
                        else {
                            this._index++;
                        }
                        return { value: result, done: false };
                    }
                    return { value: undefined, done: true };
                };
                MapIterator.prototype.throw = function (error) {
                    if (this._index >= 0) {
                        this._index = -1;
                        this._keys = arraySentinel;
                        this._values = arraySentinel;
                    }
                    throw error;
                };
                MapIterator.prototype.return = function (value) {
                    if (this._index >= 0) {
                        this._index = -1;
                        this._keys = arraySentinel;
                        this._values = arraySentinel;
                    }
                    return { value: value, done: true };
                };
                return MapIterator;
            }());
            return /** @class */ (function () {
                function Map() {
                    this._keys = [];
                    this._values = [];
                    this._cacheKey = cacheSentinel;
                    this._cacheIndex = -2;
                }
                Object.defineProperty(Map.prototype, "size", {
                    get: function () { return this._keys.length; },
                    enumerable: true,
                    configurable: true
                });
                Map.prototype.has = function (key) { return this._find(key, /*insert*/ false) >= 0; };
                Map.prototype.get = function (key) {
                    var index = this._find(key, /*insert*/ false);
                    return index >= 0 ? this._values[index] : undefined;
                };
                Map.prototype.set = function (key, value) {
                    var index = this._find(key, /*insert*/ true);
                    this._values[index] = value;
                    return this;
                };
                Map.prototype.delete = function (key) {
                    var index = this._find(key, /*insert*/ false);
                    if (index >= 0) {
                        var size = this._keys.length;
                        for (var i = index + 1; i < size; i++) {
                            this._keys[i - 1] = this._keys[i];
                            this._values[i - 1] = this._values[i];
                        }
                        this._keys.length--;
                        this._values.length--;
                        if (key === this._cacheKey) {
                            this._cacheKey = cacheSentinel;
                            this._cacheIndex = -2;
                        }
                        return true;
                    }
                    return false;
                };
                Map.prototype.clear = function () {
                    this._keys.length = 0;
                    this._values.length = 0;
                    this._cacheKey = cacheSentinel;
                    this._cacheIndex = -2;
                };
                Map.prototype.keys = function () { return new MapIterator(this._keys, this._values, getKey); };
                Map.prototype.values = function () { return new MapIterator(this._keys, this._values, getValue); };
                Map.prototype.entries = function () { return new MapIterator(this._keys, this._values, getEntry); };
                Map.prototype["@@iterator"] = function () { return this.entries(); };
                Map.prototype[iteratorSymbol] = function () { return this.entries(); };
                Map.prototype._find = function (key, insert) {
                    if (this._cacheKey !== key) {
                        this._cacheIndex = this._keys.indexOf(this._cacheKey = key);
                    }
                    if (this._cacheIndex < 0 && insert) {
                        this._cacheIndex = this._keys.length;
                        this._keys.push(key);
                        this._values.push(undefined);
                    }
                    return this._cacheIndex;
                };
                return Map;
            }());
            function getKey(key, _) {
                return key;
            }
            function getValue(_, value) {
                return value;
            }
            function getEntry(key, value) {
                return [key, value];
            }
        }
        // naive Set shim
        function CreateSetPolyfill() {
            return /** @class */ (function () {
                function Set() {
                    this._map = new _Map();
                }
                Object.defineProperty(Set.prototype, "size", {
                    get: function () { return this._map.size; },
                    enumerable: true,
                    configurable: true
                });
                Set.prototype.has = function (value) { return this._map.has(value); };
                Set.prototype.add = function (value) { return this._map.set(value, value), this; };
                Set.prototype.delete = function (value) { return this._map.delete(value); };
                Set.prototype.clear = function () { this._map.clear(); };
                Set.prototype.keys = function () { return this._map.keys(); };
                Set.prototype.values = function () { return this._map.values(); };
                Set.prototype.entries = function () { return this._map.entries(); };
                Set.prototype["@@iterator"] = function () { return this.keys(); };
                Set.prototype[iteratorSymbol] = function () { return this.keys(); };
                return Set;
            }());
        }
        // naive WeakMap shim
        function CreateWeakMapPolyfill() {
            var UUID_SIZE = 16;
            var keys = HashMap.create();
            var rootKey = CreateUniqueKey();
            return /** @class */ (function () {
                function WeakMap() {
                    this._key = CreateUniqueKey();
                }
                WeakMap.prototype.has = function (target) {
                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);
                    return table !== undefined ? HashMap.has(table, this._key) : false;
                };
                WeakMap.prototype.get = function (target) {
                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);
                    return table !== undefined ? HashMap.get(table, this._key) : undefined;
                };
                WeakMap.prototype.set = function (target, value) {
                    var table = GetOrCreateWeakMapTable(target, /*create*/ true);
                    table[this._key] = value;
                    return this;
                };
                WeakMap.prototype.delete = function (target) {
                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);
                    return table !== undefined ? delete table[this._key] : false;
                };
                WeakMap.prototype.clear = function () {
                    // NOTE: not a real clear, just makes the previous data unreachable
                    this._key = CreateUniqueKey();
                };
                return WeakMap;
            }());
            function CreateUniqueKey() {
                var key;
                do
                    key = "@@WeakMap@@" + CreateUUID();
                while (HashMap.has(keys, key));
                keys[key] = true;
                return key;
            }
            function GetOrCreateWeakMapTable(target, create) {
                if (!hasOwn.call(target, rootKey)) {
                    if (!create)
                        return undefined;
                    Object.defineProperty(target, rootKey, { value: HashMap.create() });
                }
                return target[rootKey];
            }
            function FillRandomBytes(buffer, size) {
                for (var i = 0; i < size; ++i)
                    buffer[i] = Math.random() * 0xff | 0;
                return buffer;
            }
            function GenRandomBytes(size) {
                if (typeof Uint8Array === "function") {
                    if (typeof crypto !== "undefined")
                        return crypto.getRandomValues(new Uint8Array(size));
                    if (typeof msCrypto !== "undefined")
                        return msCrypto.getRandomValues(new Uint8Array(size));
                    return FillRandomBytes(new Uint8Array(size), size);
                }
                return FillRandomBytes(new Array(size), size);
            }
            function CreateUUID() {
                var data = GenRandomBytes(UUID_SIZE);
                // mark as random - RFC 4122 § 4.4
                data[6] = data[6] & 0x4f | 0x40;
                data[8] = data[8] & 0xbf | 0x80;
                var result = "";
                for (var offset = 0; offset < UUID_SIZE; ++offset) {
                    var byte = data[offset];
                    if (offset === 4 || offset === 6 || offset === 8)
                        result += "-";
                    if (byte < 16)
                        result += "0";
                    result += byte.toString(16).toLowerCase();
                }
                return result;
            }
        }
        // uses a heuristic used by v8 and chakra to force an object into dictionary mode.
        function MakeDictionary(obj) {
            obj.__ = undefined;
            delete obj.__;
            return obj;
        }
    });
})(Reflect || (Reflect = {}));


/***/ }),

/***/ "../../node_modules/snabbdom/build/h.js":
/*!**********************************************!*\
  !*** ../../node_modules/snabbdom/build/h.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   addNS: () => (/* binding */ addNS),
/* harmony export */   fragment: () => (/* binding */ fragment),
/* harmony export */   h: () => (/* binding */ h)
/* harmony export */ });
/* harmony import */ var _vnode__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./vnode */ "../../node_modules/snabbdom/build/vnode.js");
/* harmony import */ var _is__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./is */ "../../node_modules/snabbdom/build/is.js");


function addNS(data, children, sel) {
    data.ns = "http://www.w3.org/2000/svg";
    if (sel !== "foreignObject" && children !== undefined) {
        for (let i = 0; i < children.length; ++i) {
            const child = children[i];
            if (typeof child === "string")
                continue;
            const childData = child.data;
            if (childData !== undefined) {
                addNS(childData, child.children, child.sel);
            }
        }
    }
}
function h(sel, b, c) {
    let data = {};
    let children;
    let text;
    let i;
    if (c !== undefined) {
        if (b !== null) {
            data = b;
        }
        if (_is__WEBPACK_IMPORTED_MODULE_0__.array(c)) {
            children = c;
        }
        else if (_is__WEBPACK_IMPORTED_MODULE_0__.primitive(c)) {
            text = c.toString();
        }
        else if (c && c.sel) {
            children = [c];
        }
    }
    else if (b !== undefined && b !== null) {
        if (_is__WEBPACK_IMPORTED_MODULE_0__.array(b)) {
            children = b;
        }
        else if (_is__WEBPACK_IMPORTED_MODULE_0__.primitive(b)) {
            text = b.toString();
        }
        else if (b && b.sel) {
            children = [b];
        }
        else {
            data = b;
        }
    }
    if (children !== undefined) {
        for (i = 0; i < children.length; ++i) {
            if (_is__WEBPACK_IMPORTED_MODULE_0__.primitive(children[i]))
                children[i] = (0,_vnode__WEBPACK_IMPORTED_MODULE_1__.vnode)(undefined, undefined, undefined, children[i], undefined);
        }
    }
    if (sel[0] === "s" &&
        sel[1] === "v" &&
        sel[2] === "g" &&
        (sel.length === 3 || sel[3] === "." || sel[3] === "#")) {
        addNS(data, children, sel);
    }
    return (0,_vnode__WEBPACK_IMPORTED_MODULE_1__.vnode)(sel, data, children, text, undefined);
}
/**
 * @experimental
 */
function fragment(children) {
    let c;
    let text;
    if (_is__WEBPACK_IMPORTED_MODULE_0__.array(children)) {
        c = children;
    }
    else if (_is__WEBPACK_IMPORTED_MODULE_0__.primitive(c)) {
        text = children;
    }
    else if (c && c.sel) {
        c = [children];
    }
    if (c !== undefined) {
        for (let i = 0; i < c.length; ++i) {
            if (_is__WEBPACK_IMPORTED_MODULE_0__.primitive(c[i]))
                c[i] = (0,_vnode__WEBPACK_IMPORTED_MODULE_1__.vnode)(undefined, undefined, undefined, c[i], undefined);
        }
    }
    return (0,_vnode__WEBPACK_IMPORTED_MODULE_1__.vnode)(undefined, {}, c, text, undefined);
}


/***/ }),

/***/ "../../node_modules/snabbdom/build/helpers/attachto.js":
/*!*************************************************************!*\
  !*** ../../node_modules/snabbdom/build/helpers/attachto.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   attachTo: () => (/* binding */ attachTo)
/* harmony export */ });
function pre(vnode, newVnode) {
    const attachData = vnode.data.attachData;
    // Copy created placeholder and real element from old vnode
    newVnode.data.attachData.placeholder = attachData.placeholder;
    newVnode.data.attachData.real = attachData.real;
    // Mount real element in vnode so the patch process operates on it
    vnode.elm = vnode.data.attachData.real;
}
function post(_, vnode) {
    // Mount dummy placeholder in vnode so potential reorders use it
    vnode.elm = vnode.data.attachData.placeholder;
}
function destroy(vnode) {
    // Remove placeholder
    if (vnode.elm !== undefined) {
        vnode.elm.parentNode.removeChild(vnode.elm);
    }
    // Remove real element from where it was inserted
    vnode.elm = vnode.data.attachData.real;
}
function create(_, vnode) {
    const real = vnode.elm;
    const attachData = vnode.data.attachData;
    const placeholder = document.createElement("span");
    // Replace actual element with dummy placeholder
    // Snabbdom will then insert placeholder instead
    vnode.elm = placeholder;
    attachData.target.appendChild(real);
    attachData.real = real;
    attachData.placeholder = placeholder;
}
function attachTo(target, vnode) {
    if (vnode.data === undefined)
        vnode.data = {};
    if (vnode.data.hook === undefined)
        vnode.data.hook = {};
    const data = vnode.data;
    const hook = vnode.data.hook;
    data.attachData = { target: target, placeholder: undefined, real: undefined };
    hook.create = create;
    hook.prepatch = pre;
    hook.postpatch = post;
    hook.destroy = destroy;
    return vnode;
}


/***/ }),

/***/ "../../node_modules/snabbdom/build/htmldomapi.js":
/*!*******************************************************!*\
  !*** ../../node_modules/snabbdom/build/htmldomapi.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   htmlDomApi: () => (/* binding */ htmlDomApi)
/* harmony export */ });
function createElement(tagName, options) {
    return document.createElement(tagName, options);
}
function createElementNS(namespaceURI, qualifiedName, options) {
    return document.createElementNS(namespaceURI, qualifiedName, options);
}
function createDocumentFragment() {
    return parseFragment(document.createDocumentFragment());
}
function createTextNode(text) {
    return document.createTextNode(text);
}
function createComment(text) {
    return document.createComment(text);
}
function insertBefore(parentNode, newNode, referenceNode) {
    if (isDocumentFragment(parentNode)) {
        let node = parentNode;
        while (node && isDocumentFragment(node)) {
            const fragment = parseFragment(node);
            node = fragment.parent;
        }
        parentNode = node !== null && node !== void 0 ? node : parentNode;
    }
    if (isDocumentFragment(newNode)) {
        newNode = parseFragment(newNode, parentNode);
    }
    if (referenceNode && isDocumentFragment(referenceNode)) {
        referenceNode = parseFragment(referenceNode).firstChildNode;
    }
    parentNode.insertBefore(newNode, referenceNode);
}
function removeChild(node, child) {
    node.removeChild(child);
}
function appendChild(node, child) {
    if (isDocumentFragment(child)) {
        child = parseFragment(child, node);
    }
    node.appendChild(child);
}
function parentNode(node) {
    if (isDocumentFragment(node)) {
        while (node && isDocumentFragment(node)) {
            const fragment = parseFragment(node);
            node = fragment.parent;
        }
        return node !== null && node !== void 0 ? node : null;
    }
    return node.parentNode;
}
function nextSibling(node) {
    var _a;
    if (isDocumentFragment(node)) {
        const fragment = parseFragment(node);
        const parent = parentNode(fragment);
        if (parent && fragment.lastChildNode) {
            const children = Array.from(parent.childNodes);
            const index = children.indexOf(fragment.lastChildNode);
            return (_a = children[index + 1]) !== null && _a !== void 0 ? _a : null;
        }
        return null;
    }
    return node.nextSibling;
}
function tagName(elm) {
    return elm.tagName;
}
function setTextContent(node, text) {
    node.textContent = text;
}
function getTextContent(node) {
    return node.textContent;
}
function isElement(node) {
    return node.nodeType === 1;
}
function isText(node) {
    return node.nodeType === 3;
}
function isComment(node) {
    return node.nodeType === 8;
}
function isDocumentFragment(node) {
    return node.nodeType === 11;
}
function parseFragment(fragmentNode, parentNode) {
    var _a, _b, _c;
    const fragment = fragmentNode;
    (_a = fragment.parent) !== null && _a !== void 0 ? _a : (fragment.parent = parentNode !== null && parentNode !== void 0 ? parentNode : null);
    (_b = fragment.firstChildNode) !== null && _b !== void 0 ? _b : (fragment.firstChildNode = fragmentNode.firstChild);
    (_c = fragment.lastChildNode) !== null && _c !== void 0 ? _c : (fragment.lastChildNode = fragmentNode.lastChild);
    return fragment;
}
const htmlDomApi = {
    createElement,
    createElementNS,
    createTextNode,
    createDocumentFragment,
    createComment,
    insertBefore,
    removeChild,
    appendChild,
    parentNode,
    nextSibling,
    tagName,
    setTextContent,
    getTextContent,
    isElement,
    isText,
    isComment,
    isDocumentFragment,
};


/***/ }),

/***/ "../../node_modules/snabbdom/build/index.js":
/*!**************************************************!*\
  !*** ../../node_modules/snabbdom/build/index.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Fragment: () => (/* reexport safe */ _jsx__WEBPACK_IMPORTED_MODULE_14__.Fragment),
/* harmony export */   array: () => (/* reexport safe */ _is__WEBPACK_IMPORTED_MODULE_5__.array),
/* harmony export */   attachTo: () => (/* reexport safe */ _helpers_attachto__WEBPACK_IMPORTED_MODULE_4__.attachTo),
/* harmony export */   attributesModule: () => (/* reexport safe */ _modules_attributes__WEBPACK_IMPORTED_MODULE_8__.attributesModule),
/* harmony export */   classModule: () => (/* reexport safe */ _modules_class__WEBPACK_IMPORTED_MODULE_9__.classModule),
/* harmony export */   datasetModule: () => (/* reexport safe */ _modules_dataset__WEBPACK_IMPORTED_MODULE_10__.datasetModule),
/* harmony export */   eventListenersModule: () => (/* reexport safe */ _modules_eventlisteners__WEBPACK_IMPORTED_MODULE_11__.eventListenersModule),
/* harmony export */   fragment: () => (/* reexport safe */ _h__WEBPACK_IMPORTED_MODULE_7__.fragment),
/* harmony export */   h: () => (/* reexport safe */ _h__WEBPACK_IMPORTED_MODULE_7__.h),
/* harmony export */   htmlDomApi: () => (/* reexport safe */ _htmldomapi__WEBPACK_IMPORTED_MODULE_0__.htmlDomApi),
/* harmony export */   init: () => (/* reexport safe */ _init__WEBPACK_IMPORTED_MODULE_1__.init),
/* harmony export */   jsx: () => (/* reexport safe */ _jsx__WEBPACK_IMPORTED_MODULE_14__.jsx),
/* harmony export */   primitive: () => (/* reexport safe */ _is__WEBPACK_IMPORTED_MODULE_5__.primitive),
/* harmony export */   propsModule: () => (/* reexport safe */ _modules_props__WEBPACK_IMPORTED_MODULE_12__.propsModule),
/* harmony export */   styleModule: () => (/* reexport safe */ _modules_style__WEBPACK_IMPORTED_MODULE_13__.styleModule),
/* harmony export */   thunk: () => (/* reexport safe */ _thunk__WEBPACK_IMPORTED_MODULE_2__.thunk),
/* harmony export */   toVNode: () => (/* reexport safe */ _tovnode__WEBPACK_IMPORTED_MODULE_6__.toVNode),
/* harmony export */   vnode: () => (/* reexport safe */ _vnode__WEBPACK_IMPORTED_MODULE_3__.vnode)
/* harmony export */ });
/* harmony import */ var _htmldomapi__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./htmldomapi */ "../../node_modules/snabbdom/build/htmldomapi.js");
/* harmony import */ var _init__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./init */ "../../node_modules/snabbdom/build/init.js");
/* harmony import */ var _thunk__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./thunk */ "../../node_modules/snabbdom/build/thunk.js");
/* harmony import */ var _vnode__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./vnode */ "../../node_modules/snabbdom/build/vnode.js");
/* harmony import */ var _helpers_attachto__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./helpers/attachto */ "../../node_modules/snabbdom/build/helpers/attachto.js");
/* harmony import */ var _is__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./is */ "../../node_modules/snabbdom/build/is.js");
/* harmony import */ var _tovnode__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./tovnode */ "../../node_modules/snabbdom/build/tovnode.js");
/* harmony import */ var _h__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./h */ "../../node_modules/snabbdom/build/h.js");
/* harmony import */ var _modules_attributes__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./modules/attributes */ "../../node_modules/snabbdom/build/modules/attributes.js");
/* harmony import */ var _modules_class__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./modules/class */ "../../node_modules/snabbdom/build/modules/class.js");
/* harmony import */ var _modules_dataset__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./modules/dataset */ "../../node_modules/snabbdom/build/modules/dataset.js");
/* harmony import */ var _modules_eventlisteners__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./modules/eventlisteners */ "../../node_modules/snabbdom/build/modules/eventlisteners.js");
/* harmony import */ var _modules_props__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./modules/props */ "../../node_modules/snabbdom/build/modules/props.js");
/* harmony import */ var _modules_style__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./modules/style */ "../../node_modules/snabbdom/build/modules/style.js");
/* harmony import */ var _jsx__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./jsx */ "../../node_modules/snabbdom/build/jsx.js");
// core




// helpers




// types

// modules






// JSX



/***/ }),

/***/ "../../node_modules/snabbdom/build/init.js":
/*!*************************************************!*\
  !*** ../../node_modules/snabbdom/build/init.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   init: () => (/* binding */ init)
/* harmony export */ });
/* harmony import */ var _vnode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./vnode */ "../../node_modules/snabbdom/build/vnode.js");
/* harmony import */ var _is__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./is */ "../../node_modules/snabbdom/build/is.js");
/* harmony import */ var _htmldomapi__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./htmldomapi */ "../../node_modules/snabbdom/build/htmldomapi.js");



function isUndef(s) {
    return s === undefined;
}
function isDef(s) {
    return s !== undefined;
}
const emptyNode = (0,_vnode__WEBPACK_IMPORTED_MODULE_0__.vnode)("", {}, [], undefined, undefined);
function sameVnode(vnode1, vnode2) {
    var _a, _b;
    const isSameKey = vnode1.key === vnode2.key;
    const isSameIs = ((_a = vnode1.data) === null || _a === void 0 ? void 0 : _a.is) === ((_b = vnode2.data) === null || _b === void 0 ? void 0 : _b.is);
    const isSameSel = vnode1.sel === vnode2.sel;
    const isSameTextOrFragment = !vnode1.sel && vnode1.sel === vnode2.sel
        ? typeof vnode1.text === typeof vnode2.text
        : true;
    return isSameSel && isSameKey && isSameIs && isSameTextOrFragment;
}
/**
 * @todo Remove this function when the document fragment is considered stable.
 */
function documentFragmentIsNotSupported() {
    throw new Error("The document fragment is not supported on this platform.");
}
function isElement(api, vnode) {
    return api.isElement(vnode);
}
function isDocumentFragment(api, vnode) {
    return api.isDocumentFragment(vnode);
}
function createKeyToOldIdx(children, beginIdx, endIdx) {
    var _a;
    const map = {};
    for (let i = beginIdx; i <= endIdx; ++i) {
        const key = (_a = children[i]) === null || _a === void 0 ? void 0 : _a.key;
        if (key !== undefined) {
            map[key] = i;
        }
    }
    return map;
}
const hooks = [
    "create",
    "update",
    "remove",
    "destroy",
    "pre",
    "post",
];
function init(modules, domApi, options) {
    const cbs = {
        create: [],
        update: [],
        remove: [],
        destroy: [],
        pre: [],
        post: [],
    };
    const api = domApi !== undefined ? domApi : _htmldomapi__WEBPACK_IMPORTED_MODULE_1__.htmlDomApi;
    for (const hook of hooks) {
        for (const module of modules) {
            const currentHook = module[hook];
            if (currentHook !== undefined) {
                cbs[hook].push(currentHook);
            }
        }
    }
    function emptyNodeAt(elm) {
        const id = elm.id ? "#" + elm.id : "";
        // elm.className doesn't return a string when elm is an SVG element inside a shadowRoot.
        // https://stackoverflow.com/questions/29454340/detecting-classname-of-svganimatedstring
        const classes = elm.getAttribute("class");
        const c = classes ? "." + classes.split(" ").join(".") : "";
        return (0,_vnode__WEBPACK_IMPORTED_MODULE_0__.vnode)(api.tagName(elm).toLowerCase() + id + c, {}, [], undefined, elm);
    }
    function emptyDocumentFragmentAt(frag) {
        return (0,_vnode__WEBPACK_IMPORTED_MODULE_0__.vnode)(undefined, {}, [], undefined, frag);
    }
    function createRmCb(childElm, listeners) {
        return function rmCb() {
            if (--listeners === 0) {
                const parent = api.parentNode(childElm);
                api.removeChild(parent, childElm);
            }
        };
    }
    function createElm(vnode, insertedVnodeQueue) {
        var _a, _b, _c, _d;
        let i;
        let data = vnode.data;
        if (data !== undefined) {
            const init = (_a = data.hook) === null || _a === void 0 ? void 0 : _a.init;
            if (isDef(init)) {
                init(vnode);
                data = vnode.data;
            }
        }
        const children = vnode.children;
        const sel = vnode.sel;
        if (sel === "!") {
            if (isUndef(vnode.text)) {
                vnode.text = "";
            }
            vnode.elm = api.createComment(vnode.text);
        }
        else if (sel !== undefined) {
            // Parse selector
            const hashIdx = sel.indexOf("#");
            const dotIdx = sel.indexOf(".", hashIdx);
            const hash = hashIdx > 0 ? hashIdx : sel.length;
            const dot = dotIdx > 0 ? dotIdx : sel.length;
            const tag = hashIdx !== -1 || dotIdx !== -1
                ? sel.slice(0, Math.min(hash, dot))
                : sel;
            const elm = (vnode.elm =
                isDef(data) && isDef((i = data.ns))
                    ? api.createElementNS(i, tag, data)
                    : api.createElement(tag, data));
            if (hash < dot)
                elm.setAttribute("id", sel.slice(hash + 1, dot));
            if (dotIdx > 0)
                elm.setAttribute("class", sel.slice(dot + 1).replace(/\./g, " "));
            for (i = 0; i < cbs.create.length; ++i)
                cbs.create[i](emptyNode, vnode);
            if (_is__WEBPACK_IMPORTED_MODULE_2__.array(children)) {
                for (i = 0; i < children.length; ++i) {
                    const ch = children[i];
                    if (ch != null) {
                        api.appendChild(elm, createElm(ch, insertedVnodeQueue));
                    }
                }
            }
            else if (_is__WEBPACK_IMPORTED_MODULE_2__.primitive(vnode.text)) {
                api.appendChild(elm, api.createTextNode(vnode.text));
            }
            const hook = vnode.data.hook;
            if (isDef(hook)) {
                (_b = hook.create) === null || _b === void 0 ? void 0 : _b.call(hook, emptyNode, vnode);
                if (hook.insert) {
                    insertedVnodeQueue.push(vnode);
                }
            }
        }
        else if (((_c = options === null || options === void 0 ? void 0 : options.experimental) === null || _c === void 0 ? void 0 : _c.fragments) && vnode.children) {
            vnode.elm = ((_d = api.createDocumentFragment) !== null && _d !== void 0 ? _d : documentFragmentIsNotSupported)();
            for (i = 0; i < cbs.create.length; ++i)
                cbs.create[i](emptyNode, vnode);
            for (i = 0; i < vnode.children.length; ++i) {
                const ch = vnode.children[i];
                if (ch != null) {
                    api.appendChild(vnode.elm, createElm(ch, insertedVnodeQueue));
                }
            }
        }
        else {
            vnode.elm = api.createTextNode(vnode.text);
        }
        return vnode.elm;
    }
    function addVnodes(parentElm, before, vnodes, startIdx, endIdx, insertedVnodeQueue) {
        for (; startIdx <= endIdx; ++startIdx) {
            const ch = vnodes[startIdx];
            if (ch != null) {
                api.insertBefore(parentElm, createElm(ch, insertedVnodeQueue), before);
            }
        }
    }
    function invokeDestroyHook(vnode) {
        var _a, _b;
        const data = vnode.data;
        if (data !== undefined) {
            (_b = (_a = data === null || data === void 0 ? void 0 : data.hook) === null || _a === void 0 ? void 0 : _a.destroy) === null || _b === void 0 ? void 0 : _b.call(_a, vnode);
            for (let i = 0; i < cbs.destroy.length; ++i)
                cbs.destroy[i](vnode);
            if (vnode.children !== undefined) {
                for (let j = 0; j < vnode.children.length; ++j) {
                    const child = vnode.children[j];
                    if (child != null && typeof child !== "string") {
                        invokeDestroyHook(child);
                    }
                }
            }
        }
    }
    function removeVnodes(parentElm, vnodes, startIdx, endIdx) {
        var _a, _b;
        for (; startIdx <= endIdx; ++startIdx) {
            let listeners;
            let rm;
            const ch = vnodes[startIdx];
            if (ch != null) {
                if (isDef(ch.sel)) {
                    invokeDestroyHook(ch);
                    listeners = cbs.remove.length + 1;
                    rm = createRmCb(ch.elm, listeners);
                    for (let i = 0; i < cbs.remove.length; ++i)
                        cbs.remove[i](ch, rm);
                    const removeHook = (_b = (_a = ch === null || ch === void 0 ? void 0 : ch.data) === null || _a === void 0 ? void 0 : _a.hook) === null || _b === void 0 ? void 0 : _b.remove;
                    if (isDef(removeHook)) {
                        removeHook(ch, rm);
                    }
                    else {
                        rm();
                    }
                }
                else if (ch.children) {
                    // Fragment node
                    invokeDestroyHook(ch);
                    removeVnodes(parentElm, ch.children, 0, ch.children.length - 1);
                }
                else {
                    // Text node
                    api.removeChild(parentElm, ch.elm);
                }
            }
        }
    }
    function updateChildren(parentElm, oldCh, newCh, insertedVnodeQueue) {
        let oldStartIdx = 0;
        let newStartIdx = 0;
        let oldEndIdx = oldCh.length - 1;
        let oldStartVnode = oldCh[0];
        let oldEndVnode = oldCh[oldEndIdx];
        let newEndIdx = newCh.length - 1;
        let newStartVnode = newCh[0];
        let newEndVnode = newCh[newEndIdx];
        let oldKeyToIdx;
        let idxInOld;
        let elmToMove;
        let before;
        while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {
            if (oldStartVnode == null) {
                oldStartVnode = oldCh[++oldStartIdx]; // Vnode might have been moved left
            }
            else if (oldEndVnode == null) {
                oldEndVnode = oldCh[--oldEndIdx];
            }
            else if (newStartVnode == null) {
                newStartVnode = newCh[++newStartIdx];
            }
            else if (newEndVnode == null) {
                newEndVnode = newCh[--newEndIdx];
            }
            else if (sameVnode(oldStartVnode, newStartVnode)) {
                patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue);
                oldStartVnode = oldCh[++oldStartIdx];
                newStartVnode = newCh[++newStartIdx];
            }
            else if (sameVnode(oldEndVnode, newEndVnode)) {
                patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue);
                oldEndVnode = oldCh[--oldEndIdx];
                newEndVnode = newCh[--newEndIdx];
            }
            else if (sameVnode(oldStartVnode, newEndVnode)) {
                // Vnode moved right
                patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue);
                api.insertBefore(parentElm, oldStartVnode.elm, api.nextSibling(oldEndVnode.elm));
                oldStartVnode = oldCh[++oldStartIdx];
                newEndVnode = newCh[--newEndIdx];
            }
            else if (sameVnode(oldEndVnode, newStartVnode)) {
                // Vnode moved left
                patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue);
                api.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);
                oldEndVnode = oldCh[--oldEndIdx];
                newStartVnode = newCh[++newStartIdx];
            }
            else {
                if (oldKeyToIdx === undefined) {
                    oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx);
                }
                idxInOld = oldKeyToIdx[newStartVnode.key];
                if (isUndef(idxInOld)) {
                    // New element
                    api.insertBefore(parentElm, createElm(newStartVnode, insertedVnodeQueue), oldStartVnode.elm);
                }
                else {
                    elmToMove = oldCh[idxInOld];
                    if (elmToMove.sel !== newStartVnode.sel) {
                        api.insertBefore(parentElm, createElm(newStartVnode, insertedVnodeQueue), oldStartVnode.elm);
                    }
                    else {
                        patchVnode(elmToMove, newStartVnode, insertedVnodeQueue);
                        oldCh[idxInOld] = undefined;
                        api.insertBefore(parentElm, elmToMove.elm, oldStartVnode.elm);
                    }
                }
                newStartVnode = newCh[++newStartIdx];
            }
        }
        if (newStartIdx <= newEndIdx) {
            before = newCh[newEndIdx + 1] == null ? null : newCh[newEndIdx + 1].elm;
            addVnodes(parentElm, before, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);
        }
        if (oldStartIdx <= oldEndIdx) {
            removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);
        }
    }
    function patchVnode(oldVnode, vnode, insertedVnodeQueue) {
        var _a, _b, _c, _d, _e, _f, _g, _h;
        const hook = (_a = vnode.data) === null || _a === void 0 ? void 0 : _a.hook;
        (_b = hook === null || hook === void 0 ? void 0 : hook.prepatch) === null || _b === void 0 ? void 0 : _b.call(hook, oldVnode, vnode);
        const elm = (vnode.elm = oldVnode.elm);
        if (oldVnode === vnode)
            return;
        if (vnode.data !== undefined ||
            (isDef(vnode.text) && vnode.text !== oldVnode.text)) {
            (_c = vnode.data) !== null && _c !== void 0 ? _c : (vnode.data = {});
            (_d = oldVnode.data) !== null && _d !== void 0 ? _d : (oldVnode.data = {});
            for (let i = 0; i < cbs.update.length; ++i)
                cbs.update[i](oldVnode, vnode);
            (_g = (_f = (_e = vnode.data) === null || _e === void 0 ? void 0 : _e.hook) === null || _f === void 0 ? void 0 : _f.update) === null || _g === void 0 ? void 0 : _g.call(_f, oldVnode, vnode);
        }
        const oldCh = oldVnode.children;
        const ch = vnode.children;
        if (isUndef(vnode.text)) {
            if (isDef(oldCh) && isDef(ch)) {
                if (oldCh !== ch)
                    updateChildren(elm, oldCh, ch, insertedVnodeQueue);
            }
            else if (isDef(ch)) {
                if (isDef(oldVnode.text))
                    api.setTextContent(elm, "");
                addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);
            }
            else if (isDef(oldCh)) {
                removeVnodes(elm, oldCh, 0, oldCh.length - 1);
            }
            else if (isDef(oldVnode.text)) {
                api.setTextContent(elm, "");
            }
        }
        else if (oldVnode.text !== vnode.text) {
            if (isDef(oldCh)) {
                removeVnodes(elm, oldCh, 0, oldCh.length - 1);
            }
            api.setTextContent(elm, vnode.text);
        }
        (_h = hook === null || hook === void 0 ? void 0 : hook.postpatch) === null || _h === void 0 ? void 0 : _h.call(hook, oldVnode, vnode);
    }
    return function patch(oldVnode, vnode) {
        let i, elm, parent;
        const insertedVnodeQueue = [];
        for (i = 0; i < cbs.pre.length; ++i)
            cbs.pre[i]();
        if (isElement(api, oldVnode)) {
            oldVnode = emptyNodeAt(oldVnode);
        }
        else if (isDocumentFragment(api, oldVnode)) {
            oldVnode = emptyDocumentFragmentAt(oldVnode);
        }
        if (sameVnode(oldVnode, vnode)) {
            patchVnode(oldVnode, vnode, insertedVnodeQueue);
        }
        else {
            elm = oldVnode.elm;
            parent = api.parentNode(elm);
            createElm(vnode, insertedVnodeQueue);
            if (parent !== null) {
                api.insertBefore(parent, vnode.elm, api.nextSibling(elm));
                removeVnodes(parent, [oldVnode], 0, 0);
            }
        }
        for (i = 0; i < insertedVnodeQueue.length; ++i) {
            insertedVnodeQueue[i].data.hook.insert(insertedVnodeQueue[i]);
        }
        for (i = 0; i < cbs.post.length; ++i)
            cbs.post[i]();
        return vnode;
    };
}


/***/ }),

/***/ "../../node_modules/snabbdom/build/is.js":
/*!***********************************************!*\
  !*** ../../node_modules/snabbdom/build/is.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   array: () => (/* binding */ array),
/* harmony export */   primitive: () => (/* binding */ primitive)
/* harmony export */ });
const array = Array.isArray;
function primitive(s) {
    return (typeof s === "string" ||
        typeof s === "number" ||
        s instanceof String ||
        s instanceof Number);
}


/***/ }),

/***/ "../../node_modules/snabbdom/build/jsx.js":
/*!************************************************!*\
  !*** ../../node_modules/snabbdom/build/jsx.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Fragment: () => (/* binding */ Fragment),
/* harmony export */   jsx: () => (/* binding */ jsx)
/* harmony export */ });
/* harmony import */ var _vnode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./vnode */ "../../node_modules/snabbdom/build/vnode.js");
/* harmony import */ var _h__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./h */ "../../node_modules/snabbdom/build/h.js");
/* eslint-disable @typescript-eslint/no-namespace, import/export */


function Fragment(data, ...children) {
    const flatChildren = flattenAndFilter(children, []);
    if (flatChildren.length === 1 &&
        !flatChildren[0].sel &&
        flatChildren[0].text) {
        // only child is a simple text node, pass as text for a simpler vtree
        return (0,_vnode__WEBPACK_IMPORTED_MODULE_0__.vnode)(undefined, undefined, undefined, flatChildren[0].text, undefined);
    }
    else {
        return (0,_vnode__WEBPACK_IMPORTED_MODULE_0__.vnode)(undefined, data !== null && data !== void 0 ? data : {}, flatChildren, undefined, undefined);
    }
}
function flattenAndFilter(children, flattened) {
    for (const child of children) {
        // filter out falsey children, except 0 since zero can be a valid value e.g inside a chart
        if (child !== undefined &&
            child !== null &&
            child !== false &&
            child !== "") {
            if (Array.isArray(child)) {
                flattenAndFilter(child, flattened);
            }
            else if (typeof child === "string" ||
                typeof child === "number" ||
                typeof child === "boolean") {
                flattened.push((0,_vnode__WEBPACK_IMPORTED_MODULE_0__.vnode)(undefined, undefined, undefined, String(child), undefined));
            }
            else {
                flattened.push(child);
            }
        }
    }
    return flattened;
}
/**
 * jsx/tsx compatible factory function
 * see: https://www.typescriptlang.org/docs/handbook/jsx.html#factory-functions
 */
function jsx(tag, data, ...children) {
    const flatChildren = flattenAndFilter(children, []);
    if (typeof tag === "function") {
        // tag is a function component
        return tag(data, flatChildren);
    }
    else {
        if (flatChildren.length === 1 &&
            !flatChildren[0].sel &&
            flatChildren[0].text) {
            // only child is a simple text node, pass as text for a simpler vtree
            return (0,_h__WEBPACK_IMPORTED_MODULE_1__.h)(tag, data, flatChildren[0].text);
        }
        else {
            return (0,_h__WEBPACK_IMPORTED_MODULE_1__.h)(tag, data, flatChildren);
        }
    }
}
(function (jsx) {
})(jsx || (jsx = {}));


/***/ }),

/***/ "../../node_modules/snabbdom/build/modules/attributes.js":
/*!***************************************************************!*\
  !*** ../../node_modules/snabbdom/build/modules/attributes.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   attributesModule: () => (/* binding */ attributesModule)
/* harmony export */ });
const xlinkNS = "http://www.w3.org/1999/xlink";
const xmlNS = "http://www.w3.org/XML/1998/namespace";
const colonChar = 58;
const xChar = 120;
function updateAttrs(oldVnode, vnode) {
    let key;
    const elm = vnode.elm;
    let oldAttrs = oldVnode.data.attrs;
    let attrs = vnode.data.attrs;
    if (!oldAttrs && !attrs)
        return;
    if (oldAttrs === attrs)
        return;
    oldAttrs = oldAttrs || {};
    attrs = attrs || {};
    // update modified attributes, add new attributes
    for (key in attrs) {
        const cur = attrs[key];
        const old = oldAttrs[key];
        if (old !== cur) {
            if (cur === true) {
                elm.setAttribute(key, "");
            }
            else if (cur === false) {
                elm.removeAttribute(key);
            }
            else {
                if (key.charCodeAt(0) !== xChar) {
                    elm.setAttribute(key, cur);
                }
                else if (key.charCodeAt(3) === colonChar) {
                    // Assume xml namespace
                    elm.setAttributeNS(xmlNS, key, cur);
                }
                else if (key.charCodeAt(5) === colonChar) {
                    // Assume xlink namespace
                    elm.setAttributeNS(xlinkNS, key, cur);
                }
                else {
                    elm.setAttribute(key, cur);
                }
            }
        }
    }
    // remove removed attributes
    // use `in` operator since the previous `for` iteration uses it (.i.e. add even attributes with undefined value)
    // the other option is to remove all attributes with value == undefined
    for (key in oldAttrs) {
        if (!(key in attrs)) {
            elm.removeAttribute(key);
        }
    }
}
const attributesModule = {
    create: updateAttrs,
    update: updateAttrs,
};


/***/ }),

/***/ "../../node_modules/snabbdom/build/modules/class.js":
/*!**********************************************************!*\
  !*** ../../node_modules/snabbdom/build/modules/class.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   classModule: () => (/* binding */ classModule)
/* harmony export */ });
function updateClass(oldVnode, vnode) {
    let cur;
    let name;
    const elm = vnode.elm;
    let oldClass = oldVnode.data.class;
    let klass = vnode.data.class;
    if (!oldClass && !klass)
        return;
    if (oldClass === klass)
        return;
    oldClass = oldClass || {};
    klass = klass || {};
    for (name in oldClass) {
        if (oldClass[name] && !Object.prototype.hasOwnProperty.call(klass, name)) {
            // was `true` and now not provided
            elm.classList.remove(name);
        }
    }
    for (name in klass) {
        cur = klass[name];
        if (cur !== oldClass[name]) {
            elm.classList[cur ? "add" : "remove"](name);
        }
    }
}
const classModule = { create: updateClass, update: updateClass };


/***/ }),

/***/ "../../node_modules/snabbdom/build/modules/dataset.js":
/*!************************************************************!*\
  !*** ../../node_modules/snabbdom/build/modules/dataset.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   datasetModule: () => (/* binding */ datasetModule)
/* harmony export */ });
const CAPS_REGEX = /[A-Z]/g;
function updateDataset(oldVnode, vnode) {
    const elm = vnode.elm;
    let oldDataset = oldVnode.data.dataset;
    let dataset = vnode.data.dataset;
    let key;
    if (!oldDataset && !dataset)
        return;
    if (oldDataset === dataset)
        return;
    oldDataset = oldDataset || {};
    dataset = dataset || {};
    const d = elm.dataset;
    for (key in oldDataset) {
        if (!dataset[key]) {
            if (d) {
                if (key in d) {
                    delete d[key];
                }
            }
            else {
                elm.removeAttribute("data-" + key.replace(CAPS_REGEX, "-$&").toLowerCase());
            }
        }
    }
    for (key in dataset) {
        if (oldDataset[key] !== dataset[key]) {
            if (d) {
                d[key] = dataset[key];
            }
            else {
                elm.setAttribute("data-" + key.replace(CAPS_REGEX, "-$&").toLowerCase(), dataset[key]);
            }
        }
    }
}
const datasetModule = {
    create: updateDataset,
    update: updateDataset,
};


/***/ }),

/***/ "../../node_modules/snabbdom/build/modules/eventlisteners.js":
/*!*******************************************************************!*\
  !*** ../../node_modules/snabbdom/build/modules/eventlisteners.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   eventListenersModule: () => (/* binding */ eventListenersModule)
/* harmony export */ });
function invokeHandler(handler, vnode, event) {
    if (typeof handler === "function") {
        // call function handler
        handler.call(vnode, event, vnode);
    }
    else if (typeof handler === "object") {
        // call multiple handlers
        for (let i = 0; i < handler.length; i++) {
            invokeHandler(handler[i], vnode, event);
        }
    }
}
function handleEvent(event, vnode) {
    const name = event.type;
    const on = vnode.data.on;
    // call event handler(s) if exists
    if (on && on[name]) {
        invokeHandler(on[name], vnode, event);
    }
}
function createListener() {
    return function handler(event) {
        handleEvent(event, handler.vnode);
    };
}
function updateEventListeners(oldVnode, vnode) {
    const oldOn = oldVnode.data.on;
    const oldListener = oldVnode.listener;
    const oldElm = oldVnode.elm;
    const on = vnode && vnode.data.on;
    const elm = (vnode && vnode.elm);
    let name;
    // optimization for reused immutable handlers
    if (oldOn === on) {
        return;
    }
    // remove existing listeners which no longer used
    if (oldOn && oldListener) {
        // if element changed or deleted we remove all existing listeners unconditionally
        if (!on) {
            for (name in oldOn) {
                // remove listener if element was changed or existing listeners removed
                oldElm.removeEventListener(name, oldListener, false);
            }
        }
        else {
            for (name in oldOn) {
                // remove listener if existing listener removed
                if (!on[name]) {
                    oldElm.removeEventListener(name, oldListener, false);
                }
            }
        }
    }
    // add new listeners which has not already attached
    if (on) {
        // reuse existing listener or create new
        const listener = (vnode.listener =
            oldVnode.listener || createListener());
        // update vnode for listener
        listener.vnode = vnode;
        // if element changed or added we add all needed listeners unconditionally
        if (!oldOn) {
            for (name in on) {
                // add listener if element was changed or new listeners added
                elm.addEventListener(name, listener, false);
            }
        }
        else {
            for (name in on) {
                // add listener if new listener added
                if (!oldOn[name]) {
                    elm.addEventListener(name, listener, false);
                }
            }
        }
    }
}
const eventListenersModule = {
    create: updateEventListeners,
    update: updateEventListeners,
    destroy: updateEventListeners,
};


/***/ }),

/***/ "../../node_modules/snabbdom/build/modules/props.js":
/*!**********************************************************!*\
  !*** ../../node_modules/snabbdom/build/modules/props.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   propsModule: () => (/* binding */ propsModule)
/* harmony export */ });
function updateProps(oldVnode, vnode) {
    let key;
    let cur;
    let old;
    const elm = vnode.elm;
    let oldProps = oldVnode.data.props;
    let props = vnode.data.props;
    if (!oldProps && !props)
        return;
    if (oldProps === props)
        return;
    oldProps = oldProps || {};
    props = props || {};
    for (key in props) {
        cur = props[key];
        old = oldProps[key];
        if (old !== cur && (key !== "value" || elm[key] !== cur)) {
            elm[key] = cur;
        }
    }
}
const propsModule = { create: updateProps, update: updateProps };


/***/ }),

/***/ "../../node_modules/snabbdom/build/modules/style.js":
/*!**********************************************************!*\
  !*** ../../node_modules/snabbdom/build/modules/style.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   styleModule: () => (/* binding */ styleModule)
/* harmony export */ });
// Bindig `requestAnimationFrame` like this fixes a bug in IE/Edge. See #360 and #409.
const raf = (typeof window !== "undefined" &&
    window.requestAnimationFrame.bind(window)) ||
    setTimeout;
const nextFrame = function (fn) {
    raf(function () {
        raf(fn);
    });
};
let reflowForced = false;
function setNextFrame(obj, prop, val) {
    nextFrame(function () {
        obj[prop] = val;
    });
}
function updateStyle(oldVnode, vnode) {
    let cur;
    let name;
    const elm = vnode.elm;
    let oldStyle = oldVnode.data.style;
    let style = vnode.data.style;
    if (!oldStyle && !style)
        return;
    if (oldStyle === style)
        return;
    oldStyle = oldStyle || {};
    style = style || {};
    const oldHasDel = "delayed" in oldStyle;
    for (name in oldStyle) {
        if (!style[name]) {
            if (name[0] === "-" && name[1] === "-") {
                elm.style.removeProperty(name);
            }
            else {
                elm.style[name] = "";
            }
        }
    }
    for (name in style) {
        cur = style[name];
        if (name === "delayed" && style.delayed) {
            for (const name2 in style.delayed) {
                cur = style.delayed[name2];
                if (!oldHasDel || cur !== oldStyle.delayed[name2]) {
                    setNextFrame(elm.style, name2, cur);
                }
            }
        }
        else if (name !== "remove" && cur !== oldStyle[name]) {
            if (name[0] === "-" && name[1] === "-") {
                elm.style.setProperty(name, cur);
            }
            else {
                elm.style[name] = cur;
            }
        }
    }
}
function applyDestroyStyle(vnode) {
    let style;
    let name;
    const elm = vnode.elm;
    const s = vnode.data.style;
    if (!s || !(style = s.destroy))
        return;
    for (name in style) {
        elm.style[name] = style[name];
    }
}
function applyRemoveStyle(vnode, rm) {
    const s = vnode.data.style;
    if (!s || !s.remove) {
        rm();
        return;
    }
    if (!reflowForced) {
        // eslint-disable-next-line @typescript-eslint/no-unused-expressions
        vnode.elm.offsetLeft;
        reflowForced = true;
    }
    let name;
    const elm = vnode.elm;
    let i = 0;
    const style = s.remove;
    let amount = 0;
    const applied = [];
    for (name in style) {
        applied.push(name);
        elm.style[name] = style[name];
    }
    const compStyle = getComputedStyle(elm);
    const props = compStyle["transition-property"].split(", ");
    for (; i < props.length; ++i) {
        if (applied.indexOf(props[i]) !== -1)
            amount++;
    }
    elm.addEventListener("transitionend", function (ev) {
        if (ev.target === elm)
            --amount;
        if (amount === 0)
            rm();
    });
}
function forceReflow() {
    reflowForced = false;
}
const styleModule = {
    pre: forceReflow,
    create: updateStyle,
    update: updateStyle,
    destroy: applyDestroyStyle,
    remove: applyRemoveStyle,
};


/***/ }),

/***/ "../../node_modules/snabbdom/build/thunk.js":
/*!**************************************************!*\
  !*** ../../node_modules/snabbdom/build/thunk.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   thunk: () => (/* binding */ thunk)
/* harmony export */ });
/* harmony import */ var _h__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./h */ "../../node_modules/snabbdom/build/h.js");

function copyToThunk(vnode, thunk) {
    var _a;
    const ns = (_a = thunk.data) === null || _a === void 0 ? void 0 : _a.ns;
    vnode.data.fn = thunk.data.fn;
    vnode.data.args = thunk.data.args;
    thunk.data = vnode.data;
    thunk.children = vnode.children;
    thunk.text = vnode.text;
    thunk.elm = vnode.elm;
    if (ns)
        (0,_h__WEBPACK_IMPORTED_MODULE_0__.addNS)(thunk.data, thunk.children, thunk.sel);
}
function init(thunk) {
    const cur = thunk.data;
    const vnode = cur.fn(...cur.args);
    copyToThunk(vnode, thunk);
}
function prepatch(oldVnode, thunk) {
    let i;
    const old = oldVnode.data;
    const cur = thunk.data;
    const oldArgs = old.args;
    const args = cur.args;
    if (old.fn !== cur.fn || oldArgs.length !== args.length) {
        copyToThunk(cur.fn(...args), thunk);
        return;
    }
    for (i = 0; i < args.length; ++i) {
        if (oldArgs[i] !== args[i]) {
            copyToThunk(cur.fn(...args), thunk);
            return;
        }
    }
    copyToThunk(oldVnode, thunk);
}
const thunk = function thunk(sel, key, fn, args) {
    if (args === undefined) {
        args = fn;
        fn = key;
        key = undefined;
    }
    return (0,_h__WEBPACK_IMPORTED_MODULE_0__.h)(sel, {
        key: key,
        hook: { init, prepatch },
        fn: fn,
        args: args,
    });
};


/***/ }),

/***/ "../../node_modules/snabbdom/build/tovnode.js":
/*!****************************************************!*\
  !*** ../../node_modules/snabbdom/build/tovnode.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   toVNode: () => (/* binding */ toVNode)
/* harmony export */ });
/* harmony import */ var _h__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./h */ "../../node_modules/snabbdom/build/h.js");
/* harmony import */ var _vnode__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./vnode */ "../../node_modules/snabbdom/build/vnode.js");
/* harmony import */ var _htmldomapi__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./htmldomapi */ "../../node_modules/snabbdom/build/htmldomapi.js");



function toVNode(node, domApi) {
    const api = domApi !== undefined ? domApi : _htmldomapi__WEBPACK_IMPORTED_MODULE_0__.htmlDomApi;
    let text;
    if (api.isElement(node)) {
        const id = node.id ? "#" + node.id : "";
        const cn = node.getAttribute("class");
        const c = cn ? "." + cn.split(" ").join(".") : "";
        const sel = api.tagName(node).toLowerCase() + id + c;
        const attrs = {};
        const dataset = {};
        const data = {};
        const children = [];
        let name;
        let i, n;
        const elmAttrs = node.attributes;
        const elmChildren = node.childNodes;
        for (i = 0, n = elmAttrs.length; i < n; i++) {
            name = elmAttrs[i].nodeName;
            if (name[0] === "d" &&
                name[1] === "a" &&
                name[2] === "t" &&
                name[3] === "a" &&
                name[4] === "-") {
                dataset[name.slice(5)] = elmAttrs[i].nodeValue || "";
            }
            else if (name !== "id" && name !== "class") {
                attrs[name] = elmAttrs[i].nodeValue;
            }
        }
        for (i = 0, n = elmChildren.length; i < n; i++) {
            children.push(toVNode(elmChildren[i], domApi));
        }
        if (Object.keys(attrs).length > 0)
            data.attrs = attrs;
        if (Object.keys(dataset).length > 0)
            data.dataset = dataset;
        if (sel[0] === "s" &&
            sel[1] === "v" &&
            sel[2] === "g" &&
            (sel.length === 3 || sel[3] === "." || sel[3] === "#")) {
            (0,_h__WEBPACK_IMPORTED_MODULE_1__.addNS)(data, children, sel);
        }
        return (0,_vnode__WEBPACK_IMPORTED_MODULE_2__.vnode)(sel, data, children, undefined, node);
    }
    else if (api.isText(node)) {
        text = api.getTextContent(node);
        return (0,_vnode__WEBPACK_IMPORTED_MODULE_2__.vnode)(undefined, undefined, undefined, text, node);
    }
    else if (api.isComment(node)) {
        text = api.getTextContent(node);
        return (0,_vnode__WEBPACK_IMPORTED_MODULE_2__.vnode)("!", {}, [], text, node);
    }
    else {
        return (0,_vnode__WEBPACK_IMPORTED_MODULE_2__.vnode)("", {}, [], undefined, node);
    }
}


/***/ }),

/***/ "../../node_modules/snabbdom/build/vnode.js":
/*!**************************************************!*\
  !*** ../../node_modules/snabbdom/build/vnode.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   vnode: () => (/* binding */ vnode)
/* harmony export */ });
function vnode(sel, data, children, text, elm) {
    const key = data === undefined ? undefined : data.key;
    return { sel, data, children, text, elm, key };
}


/***/ }),

/***/ "../../node_modules/sprotty-protocol/lib/action-handler.js":
/*!*****************************************************************!*\
  !*** ../../node_modules/sprotty-protocol/lib/action-handler.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2021 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ServerActionHandlerRegistry = void 0;
/**
 * Use this service to register handlers to specific actions. The `DiagramServer` queries this registry
 * when an action is received from the client, and falls back to the built-in behavior if no handlers
 * are found.
 */
class ServerActionHandlerRegistry {
    constructor() {
        this.handlers = new Map();
    }
    /**
     * Returns the action handlers for the given action kind, or `undefined` if there are none.
     */
    getHandler(kind) {
        return this.handlers.get(kind);
    }
    /**
     * Add an action handler to be called when an action of the specified kind is received.
     */
    onAction(kind, handler) {
        if (this.handlers.has(kind)) {
            this.handlers.get(kind).push(handler);
        }
        else {
            this.handlers.set(kind, [handler]);
        }
    }
    /**
     * Remove an action handler that was previously added with `onAction`.
     */
    removeActionHandler(kind, handler) {
        const list = this.handlers.get(kind);
        if (list) {
            const index = list.indexOf(handler);
            if (index >= 0) {
                list.splice(index, 1);
            }
        }
    }
}
exports.ServerActionHandlerRegistry = ServerActionHandlerRegistry;


/***/ }),

/***/ "../../node_modules/sprotty-protocol/lib/actions.js":
/*!**********************************************************!*\
  !*** ../../node_modules/sprotty-protocol/lib/actions.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2021 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ReconnectAction = exports.ApplyLabelEditAction = exports.DeleteElementAction = exports.CreateElementAction = exports.HoverFeedbackAction = exports.MoveAction = exports.RedoAction = exports.UndoAction = exports.BringToFrontAction = exports.ViewportResult = exports.GetViewportAction = exports.SetViewportAction = exports.FitToScreenAction = exports.CenterAction = exports.LayoutAction = exports.OpenAction = exports.CollapseExpandAllAction = exports.CollapseExpandAction = exports.SelectionResult = exports.GetSelectionAction = exports.SelectAllAction = exports.SelectAction = exports.LoggingAction = exports.ComputedBoundsAction = exports.RequestBoundsAction = exports.SetBoundsAction = exports.SetPopupModelAction = exports.RequestPopupModelAction = exports.UpdateModelAction = exports.SetModelAction = exports.RequestModelAction = exports.RejectAction = exports.isResponseAction = exports.generateRequestId = exports.isRequestAction = exports.isAction = exports.isActionMessage = void 0;
const object_1 = __webpack_require__(/*! ./utils/object */ "../../node_modules/sprotty-protocol/lib/utils/object.js");
function isActionMessage(object) {
    return (0, object_1.hasOwnProperty)(object, 'action');
}
exports.isActionMessage = isActionMessage;
function isAction(object) {
    return (0, object_1.hasOwnProperty)(object, 'kind', 'string');
}
exports.isAction = isAction;
function isRequestAction(object) {
    return (0, object_1.hasOwnProperty)(object, 'requestId', 'string');
}
exports.isRequestAction = isRequestAction;
let nextRequestId = 1;
/**
 * Generate a unique `requestId` for a request action.
 */
function generateRequestId() {
    return (nextRequestId++).toString();
}
exports.generateRequestId = generateRequestId;
/**
 * A response action is sent to respond to a request action. The `responseId` must match
 * the `requestId` of the preceding request. In case the `responseId` is empty or undefined,
 * the action is handled as standalone, i.e. it was fired without a preceding request.
 */
function isResponseAction(object) {
    return (0, object_1.hasOwnProperty)(object, 'responseId', 'string') && object.responseId !== '';
}
exports.isResponseAction = isResponseAction;
var RejectAction;
(function (RejectAction) {
    RejectAction.KIND = 'rejectRequest';
    function create(options) {
        return {
            kind: RejectAction.KIND,
            message: options.message,
            detail: options.detail,
            responseId: options.requestId
        };
    }
    RejectAction.create = create;
})(RejectAction = exports.RejectAction || (exports.RejectAction = {}));
var RequestModelAction;
(function (RequestModelAction) {
    RequestModelAction.KIND = 'requestModel';
    function create(options) {
        return {
            kind: RequestModelAction.KIND,
            options,
            requestId: generateRequestId()
        };
    }
    RequestModelAction.create = create;
})(RequestModelAction = exports.RequestModelAction || (exports.RequestModelAction = {}));
var SetModelAction;
(function (SetModelAction) {
    SetModelAction.KIND = 'setModel';
    function create(newRoot, requestId = '') {
        return {
            kind: SetModelAction.KIND,
            newRoot,
            responseId: requestId
        };
    }
    SetModelAction.create = create;
})(SetModelAction = exports.SetModelAction || (exports.SetModelAction = {}));
var UpdateModelAction;
(function (UpdateModelAction) {
    UpdateModelAction.KIND = 'updateModel';
    function create(input, options = {}) {
        if (Array.isArray(input)) {
            return {
                kind: UpdateModelAction.KIND,
                matches: input,
                animate: options.animate,
                cause: options.cause
            };
        }
        else {
            return {
                kind: UpdateModelAction.KIND,
                newRoot: input,
                animate: options.animate,
                cause: options.cause
            };
        }
    }
    UpdateModelAction.create = create;
})(UpdateModelAction = exports.UpdateModelAction || (exports.UpdateModelAction = {}));
var RequestPopupModelAction;
(function (RequestPopupModelAction) {
    RequestPopupModelAction.KIND = 'requestPopupModel';
    function create(options) {
        return {
            kind: RequestPopupModelAction.KIND,
            elementId: options.elementId,
            bounds: options.bounds,
            requestId: generateRequestId()
        };
    }
    RequestPopupModelAction.create = create;
})(RequestPopupModelAction = exports.RequestPopupModelAction || (exports.RequestPopupModelAction = {}));
var SetPopupModelAction;
(function (SetPopupModelAction) {
    SetPopupModelAction.KIND = 'setPopupModel';
    function create(newRoot, requestId = '') {
        return {
            kind: SetPopupModelAction.KIND,
            newRoot,
            responseId: requestId
        };
    }
    SetPopupModelAction.create = create;
})(SetPopupModelAction = exports.SetPopupModelAction || (exports.SetPopupModelAction = {}));
var SetBoundsAction;
(function (SetBoundsAction) {
    SetBoundsAction.KIND = 'setBounds';
    function create(bounds) {
        return {
            kind: SetBoundsAction.KIND,
            bounds
        };
    }
    SetBoundsAction.create = create;
})(SetBoundsAction = exports.SetBoundsAction || (exports.SetBoundsAction = {}));
var RequestBoundsAction;
(function (RequestBoundsAction) {
    RequestBoundsAction.KIND = 'requestBounds';
    function create(newRoot) {
        return {
            kind: RequestBoundsAction.KIND,
            newRoot,
            requestId: generateRequestId()
        };
    }
    RequestBoundsAction.create = create;
})(RequestBoundsAction = exports.RequestBoundsAction || (exports.RequestBoundsAction = {}));
var ComputedBoundsAction;
(function (ComputedBoundsAction) {
    ComputedBoundsAction.KIND = 'computedBounds';
    function create(bounds, options = {}) {
        var _a;
        return {
            kind: ComputedBoundsAction.KIND,
            bounds,
            revision: options.revision,
            alignments: options.alignments,
            responseId: (_a = options.requestId) !== null && _a !== void 0 ? _a : ''
        };
    }
    ComputedBoundsAction.create = create;
})(ComputedBoundsAction = exports.ComputedBoundsAction || (exports.ComputedBoundsAction = {}));
var LoggingAction;
(function (LoggingAction) {
    LoggingAction.KIND = 'logging';
    function create(options) {
        return Object.assign({ kind: LoggingAction.KIND }, options);
    }
    LoggingAction.create = create;
})(LoggingAction = exports.LoggingAction || (exports.LoggingAction = {}));
var SelectAction;
(function (SelectAction) {
    SelectAction.KIND = 'elementSelected';
    function create(options) {
        var _a, _b;
        return {
            kind: SelectAction.KIND,
            selectedElementsIDs: (_a = options.selectedElementsIDs) !== null && _a !== void 0 ? _a : [],
            deselectedElementsIDs: (_b = options.deselectedElementsIDs) !== null && _b !== void 0 ? _b : []
        };
    }
    SelectAction.create = create;
})(SelectAction = exports.SelectAction || (exports.SelectAction = {}));
var SelectAllAction;
(function (SelectAllAction) {
    SelectAllAction.KIND = 'allSelected';
    function create(options = {}) {
        var _a;
        return {
            kind: SelectAllAction.KIND,
            select: (_a = options.select) !== null && _a !== void 0 ? _a : true
        };
    }
    SelectAllAction.create = create;
})(SelectAllAction = exports.SelectAllAction || (exports.SelectAllAction = {}));
var GetSelectionAction;
(function (GetSelectionAction) {
    GetSelectionAction.KIND = 'getSelection';
    function create() {
        return {
            kind: GetSelectionAction.KIND,
            requestId: generateRequestId()
        };
    }
    GetSelectionAction.create = create;
})(GetSelectionAction = exports.GetSelectionAction || (exports.GetSelectionAction = {}));
var SelectionResult;
(function (SelectionResult) {
    SelectionResult.KIND = 'selectionResult';
    function create(selectedElementsIDs, requestId) {
        return {
            kind: SelectionResult.KIND,
            selectedElementsIDs,
            responseId: requestId
        };
    }
    SelectionResult.create = create;
})(SelectionResult = exports.SelectionResult || (exports.SelectionResult = {}));
var CollapseExpandAction;
(function (CollapseExpandAction) {
    CollapseExpandAction.KIND = 'collapseExpand';
    function create(options) {
        var _a, _b;
        return {
            kind: CollapseExpandAction.KIND,
            expandIds: (_a = options.expandIds) !== null && _a !== void 0 ? _a : [],
            collapseIds: (_b = options.collapseIds) !== null && _b !== void 0 ? _b : []
        };
    }
    CollapseExpandAction.create = create;
})(CollapseExpandAction = exports.CollapseExpandAction || (exports.CollapseExpandAction = {}));
var CollapseExpandAllAction;
(function (CollapseExpandAllAction) {
    CollapseExpandAllAction.KIND = 'collapseExpandAll';
    function create(options = {}) {
        var _a;
        return {
            kind: CollapseExpandAllAction.KIND,
            expand: (_a = options.expand) !== null && _a !== void 0 ? _a : true
        };
    }
    CollapseExpandAllAction.create = create;
})(CollapseExpandAllAction = exports.CollapseExpandAllAction || (exports.CollapseExpandAllAction = {}));
var OpenAction;
(function (OpenAction) {
    OpenAction.KIND = 'open';
    function create(elementId) {
        return {
            kind: OpenAction.KIND,
            elementId
        };
    }
    OpenAction.create = create;
})(OpenAction = exports.OpenAction || (exports.OpenAction = {}));
var LayoutAction;
(function (LayoutAction) {
    LayoutAction.KIND = 'layout';
    function create(options = {}) {
        return {
            kind: LayoutAction.KIND,
            layoutType: options.layoutType,
            elementIds: options.elementIds
        };
    }
    LayoutAction.create = create;
})(LayoutAction = exports.LayoutAction || (exports.LayoutAction = {}));
var CenterAction;
(function (CenterAction) {
    CenterAction.KIND = 'center';
    function create(elementIds, options = {}) {
        var _a, _b;
        return {
            kind: CenterAction.KIND,
            elementIds,
            animate: (_a = options.animate) !== null && _a !== void 0 ? _a : true,
            retainZoom: (_b = options.retainZoom) !== null && _b !== void 0 ? _b : false,
            zoomScale: options.zoomScale
        };
    }
    CenterAction.create = create;
})(CenterAction = exports.CenterAction || (exports.CenterAction = {}));
var FitToScreenAction;
(function (FitToScreenAction) {
    FitToScreenAction.KIND = 'fit';
    function create(elementIds, options = {}) {
        var _a;
        return {
            kind: FitToScreenAction.KIND,
            elementIds,
            padding: options.padding,
            maxZoom: options.maxZoom,
            animate: (_a = options.animate) !== null && _a !== void 0 ? _a : true
        };
    }
    FitToScreenAction.create = create;
})(FitToScreenAction = exports.FitToScreenAction || (exports.FitToScreenAction = {}));
var SetViewportAction;
(function (SetViewportAction) {
    SetViewportAction.KIND = 'viewport';
    function create(elementId, newViewport, options = {}) {
        var _a;
        return {
            kind: SetViewportAction.KIND,
            elementId,
            newViewport,
            animate: (_a = options.animate) !== null && _a !== void 0 ? _a : true
        };
    }
    SetViewportAction.create = create;
})(SetViewportAction = exports.SetViewportAction || (exports.SetViewportAction = {}));
var GetViewportAction;
(function (GetViewportAction) {
    GetViewportAction.KIND = 'getViewport';
    function create() {
        return {
            kind: GetViewportAction.KIND,
            requestId: generateRequestId()
        };
    }
    GetViewportAction.create = create;
})(GetViewportAction = exports.GetViewportAction || (exports.GetViewportAction = {}));
var ViewportResult;
(function (ViewportResult) {
    ViewportResult.KIND = 'viewportResult';
    function create(viewport, canvasBounds, requestId) {
        return {
            kind: ViewportResult.KIND,
            viewport,
            canvasBounds,
            responseId: requestId
        };
    }
    ViewportResult.create = create;
})(ViewportResult = exports.ViewportResult || (exports.ViewportResult = {}));
var BringToFrontAction;
(function (BringToFrontAction) {
    BringToFrontAction.KIND = 'bringToFront';
    function create(elementIDs) {
        return {
            kind: BringToFrontAction.KIND,
            elementIDs
        };
    }
    BringToFrontAction.create = create;
})(BringToFrontAction = exports.BringToFrontAction || (exports.BringToFrontAction = {}));
var UndoAction;
(function (UndoAction) {
    UndoAction.KIND = 'undo';
    function create() {
        return {
            kind: UndoAction.KIND
        };
    }
    UndoAction.create = create;
})(UndoAction = exports.UndoAction || (exports.UndoAction = {}));
var RedoAction;
(function (RedoAction) {
    RedoAction.KIND = 'redo';
    function create() {
        return {
            kind: RedoAction.KIND
        };
    }
    RedoAction.create = create;
})(RedoAction = exports.RedoAction || (exports.RedoAction = {}));
var MoveAction;
(function (MoveAction) {
    MoveAction.KIND = 'move';
    function create(moves, options = {}) {
        var _a, _b;
        return {
            kind: MoveAction.KIND,
            moves,
            animate: (_a = options.animate) !== null && _a !== void 0 ? _a : true,
            finished: (_b = options.finished) !== null && _b !== void 0 ? _b : false
        };
    }
    MoveAction.create = create;
})(MoveAction = exports.MoveAction || (exports.MoveAction = {}));
var HoverFeedbackAction;
(function (HoverFeedbackAction) {
    HoverFeedbackAction.KIND = 'hoverFeedback';
    function create(options) {
        return {
            kind: HoverFeedbackAction.KIND,
            mouseoverElement: options.mouseoverElement,
            mouseIsOver: options.mouseIsOver
        };
    }
    HoverFeedbackAction.create = create;
})(HoverFeedbackAction = exports.HoverFeedbackAction || (exports.HoverFeedbackAction = {}));
var CreateElementAction;
(function (CreateElementAction) {
    CreateElementAction.KIND = 'createElement';
    function create(elementSchema, options) {
        return {
            kind: CreateElementAction.KIND,
            elementSchema,
            containerId: options.containerId
        };
    }
    CreateElementAction.create = create;
})(CreateElementAction = exports.CreateElementAction || (exports.CreateElementAction = {}));
var DeleteElementAction;
(function (DeleteElementAction) {
    DeleteElementAction.KIND = 'delete';
    function create(elementIds) {
        return {
            kind: DeleteElementAction.KIND,
            elementIds
        };
    }
    DeleteElementAction.create = create;
})(DeleteElementAction = exports.DeleteElementAction || (exports.DeleteElementAction = {}));
var ApplyLabelEditAction;
(function (ApplyLabelEditAction) {
    ApplyLabelEditAction.KIND = 'applyLabelEdit';
    function create(labelId, text) {
        return {
            kind: ApplyLabelEditAction.KIND,
            labelId,
            text
        };
    }
    ApplyLabelEditAction.create = create;
})(ApplyLabelEditAction = exports.ApplyLabelEditAction || (exports.ApplyLabelEditAction = {}));
var ReconnectAction;
(function (ReconnectAction) {
    ReconnectAction.KIND = 'reconnect';
    function create(options) {
        return {
            kind: ReconnectAction.KIND,
            routableId: options.routableId,
            newSourceId: options.newSourceId,
            newTargetId: options.newTargetId
        };
    }
    ReconnectAction.create = create;
})(ReconnectAction = exports.ReconnectAction || (exports.ReconnectAction = {}));


/***/ }),

/***/ "../../node_modules/sprotty-protocol/lib/diagram-server.js":
/*!*****************************************************************!*\
  !*** ../../node_modules/sprotty-protocol/lib/diagram-server.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2021 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.DiagramServer = void 0;
const action_handler_1 = __webpack_require__(/*! ./action-handler */ "../../node_modules/sprotty-protocol/lib/action-handler.js");
const actions_1 = __webpack_require__(/*! ./actions */ "../../node_modules/sprotty-protocol/lib/actions.js");
const async_1 = __webpack_require__(/*! ./utils/async */ "../../node_modules/sprotty-protocol/lib/utils/async.js");
const model_utils_1 = __webpack_require__(/*! ./utils/model-utils */ "../../node_modules/sprotty-protocol/lib/utils/model-utils.js");
/**
 * An instance of this class is responsible for handling a single diagram client. It holds the current
 * state of the diagram and manages communication with the client via actions.
 */
class DiagramServer {
    constructor(dispatch, services) {
        this.state = {
            currentRoot: {
                type: 'NONE',
                id: 'ROOT'
            },
            revision: 0
        };
        this.requests = new Map();
        this.dispatch = dispatch;
        this.diagramGenerator = services.DiagramGenerator;
        this.layoutEngine = services.ModelLayoutEngine;
        this.actionHandlerRegistry = services.ServerActionHandlerRegistry;
    }
    /**
     * @deprecated Use the `ServerActionHandlerRegistry` service instead
     */
    onAction(kind, handler) {
        if (!this.actionHandlerRegistry) {
            this.actionHandlerRegistry = new action_handler_1.ServerActionHandlerRegistry();
        }
        this.actionHandlerRegistry.onAction(kind, handler);
    }
    /**
     * @deprecated Use the `ServerActionHandlerRegistry` service instead
     */
    removeActionHandler(kind, handler) {
        if (this.actionHandlerRegistry) {
            this.actionHandlerRegistry.removeActionHandler(kind, handler);
        }
    }
    /**
     * Set the model and submit it to the client.
     */
    setModel(newRoot) {
        newRoot.revision = ++this.state.revision;
        this.state.currentRoot = newRoot;
        return this.submitModel(newRoot, false);
    }
    /**
     * Update the model to a new state and submit it to the client.
     */
    updateModel(newRoot) {
        newRoot.revision = ++this.state.revision;
        this.state.currentRoot = newRoot;
        return this.submitModel(newRoot, true);
    }
    /**
     * Whether the client needs to compute the layout of parts of the model. This affects the behavior
     * of `submitModel`.
     *
     * This setting is determined by the `DiagramOptions` that are received with the `RequestModelAction`
     * from the client. If the client does not specify whether it needs client layout, the default value
     * is `true`.
     */
    get needsClientLayout() {
        if (this.state.options && this.state.options.needsClientLayout !== undefined) {
            return !!this.state.options.needsClientLayout;
        }
        return true;
    }
    /**
     * Whether the server needs to compute the layout of parts of the model. This affects the behavior
     * of `submitModel`.
     *
     * This setting is determined by the `DiagramOptions` that are received with the `RequestModelAction`
     * from the client. If the client does not specify whether it needs server layout, the default value
     * is `false`.
     */
    get needsServerLayout() {
        if (this.state.options && this.state.options.needsServerLayout !== undefined) {
            return !!this.state.options.needsServerLayout;
        }
        return false;
    }
    /**
     * Called when an action is received from the client.
     */
    accept(action) {
        if ((0, actions_1.isResponseAction)(action)) {
            const id = action.responseId;
            const future = this.requests.get(id);
            if (future) {
                this.requests.delete(id);
                if (action.kind === actions_1.RejectAction.KIND) {
                    const rejectAction = action;
                    future.reject(new Error(rejectAction.message));
                    console.warn(`Request with id ${action.responseId} failed: ${rejectAction.message}`, rejectAction.detail);
                }
                else {
                    future.resolve(action);
                }
                return Promise.resolve();
            }
            console.info('No matching request for response:', action);
        }
        return this.handleAction(action);
    }
    /**
     * Send a request action to the client. The resulting promise is resolved when a matching
     * response is received and rejected when a `RejectAction` is received.
     */
    request(action) {
        if (!action.requestId) {
            action.requestId = 'server_' + (0, actions_1.generateRequestId)();
        }
        const future = new async_1.Deferred();
        this.requests.set(action.requestId, future);
        this.dispatch(action).catch(err => {
            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
            this.requests.delete(action.requestId);
            future.reject(err);
        });
        return future.promise;
    }
    /**
     * Send a `RejectAction` to the client to notify that a request could not be fulfilled.
     */
    rejectRemoteRequest(action, error) {
        if (action && (0, actions_1.isRequestAction)(action)) {
            this.dispatch({
                kind: actions_1.RejectAction.KIND,
                responseId: action.requestId,
                message: error.message,
                detail: error.stack
            });
        }
    }
    handleAction(action) {
        var _a;
        // Find a matching action handler in the registry
        const handlers = (_a = this.actionHandlerRegistry) === null || _a === void 0 ? void 0 : _a.getHandler(action.kind);
        if (handlers && handlers.length === 1) {
            return handlers[0](action, this.state, this);
        }
        else if (handlers && handlers.length > 1) {
            return Promise.all(handlers.map(h => h(action, this.state, this)));
        }
        // If no handler is registered, call one of the default handling methods
        switch (action.kind) {
            case actions_1.RequestModelAction.KIND:
                return this.handleRequestModel(action);
            case actions_1.ComputedBoundsAction.KIND:
                return this.handleComputedBounds(action);
            case actions_1.LayoutAction.KIND:
                return this.handleLayout(action);
        }
        // We don't know this action kind, sigh
        console.warn(`Unhandled action from client: ${action.kind}`);
        return Promise.resolve();
    }
    async handleRequestModel(action) {
        var _a;
        this.state.options = action.options;
        try {
            const newRoot = await this.diagramGenerator.generate({
                options: (_a = this.state.options) !== null && _a !== void 0 ? _a : {},
                state: this.state
            });
            newRoot.revision = ++this.state.revision;
            this.state.currentRoot = newRoot;
            await this.submitModel(this.state.currentRoot, false, action);
        }
        catch (err) {
            this.rejectRemoteRequest(action, err);
            console.error('Failed to generate diagram:', err);
        }
    }
    /**
     * Submit a model to the client after it has been updated in the server state.
     */
    async submitModel(newRoot, update, cause) {
        if (this.needsClientLayout) {
            if (!this.needsServerLayout) {
                // In this case the client won't send us the computed bounds
                this.dispatch({ kind: actions_1.RequestBoundsAction.KIND, newRoot });
            }
            else {
                const request = actions_1.RequestBoundsAction.create(newRoot);
                const response = await this.request(request);
                const currentRoot = this.state.currentRoot;
                if (response.revision === currentRoot.revision) {
                    (0, model_utils_1.applyBounds)(currentRoot, response);
                    await this.doSubmitModel(currentRoot, update, cause);
                }
                else {
                    this.rejectRemoteRequest(cause, new Error(`Model revision does not match: ${response.revision}`));
                }
            }
        }
        else {
            await this.doSubmitModel(newRoot, update, cause);
        }
    }
    async doSubmitModel(newRoot, update, cause) {
        if (newRoot.revision !== this.state.revision) {
            return;
        }
        if (this.needsServerLayout && this.layoutEngine) {
            newRoot = await this.layoutEngine.layout(newRoot);
        }
        const modelType = newRoot.type;
        if (cause && cause.kind === actions_1.RequestModelAction.KIND) {
            const requestId = cause.requestId;
            const response = actions_1.SetModelAction.create(newRoot, requestId);
            await this.dispatch(response);
        }
        else if (update && modelType === this.state.lastSubmittedModelType) {
            await this.dispatch({ kind: actions_1.UpdateModelAction.KIND, newRoot, cause });
        }
        else {
            await this.dispatch({ kind: actions_1.SetModelAction.KIND, newRoot });
        }
        this.state.lastSubmittedModelType = modelType;
    }
    handleComputedBounds(action) {
        if (action.revision !== this.state.currentRoot.revision) {
            return Promise.reject();
        }
        (0, model_utils_1.applyBounds)(this.state.currentRoot, action);
        return Promise.resolve();
    }
    async handleLayout(action) {
        if (!this.layoutEngine) {
            return;
        }
        if (!this.needsServerLayout) {
            let newRoot = (0, model_utils_1.cloneModel)(this.state.currentRoot);
            newRoot = await this.layoutEngine.layout(newRoot);
            newRoot.revision = ++this.state.revision;
            this.state.currentRoot = newRoot;
        }
        await this.doSubmitModel(this.state.currentRoot, true, action);
    }
}
exports.DiagramServer = DiagramServer;


/***/ }),

/***/ "../../node_modules/sprotty-protocol/lib/diagram-services.js":
/*!*******************************************************************!*\
  !*** ../../node_modules/sprotty-protocol/lib/diagram-services.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2021 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ "../../node_modules/sprotty-protocol/lib/index.js":
/*!********************************************************!*\
  !*** ../../node_modules/sprotty-protocol/lib/index.js ***!
  \********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2021 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
__exportStar(__webpack_require__(/*! ./actions */ "../../node_modules/sprotty-protocol/lib/actions.js"), exports);
__exportStar(__webpack_require__(/*! ./diagram-server */ "../../node_modules/sprotty-protocol/lib/diagram-server.js"), exports);
__exportStar(__webpack_require__(/*! ./diagram-services */ "../../node_modules/sprotty-protocol/lib/diagram-services.js"), exports);
__exportStar(__webpack_require__(/*! ./model */ "../../node_modules/sprotty-protocol/lib/model.js"), exports);
__exportStar(__webpack_require__(/*! ./utils/async */ "../../node_modules/sprotty-protocol/lib/utils/async.js"), exports);
__exportStar(__webpack_require__(/*! ./utils/geometry */ "../../node_modules/sprotty-protocol/lib/utils/geometry.js"), exports);
__exportStar(__webpack_require__(/*! ./utils/json */ "../../node_modules/sprotty-protocol/lib/utils/json.js"), exports);
__exportStar(__webpack_require__(/*! ./utils/model-utils */ "../../node_modules/sprotty-protocol/lib/utils/model-utils.js"), exports);
__exportStar(__webpack_require__(/*! ./utils/object */ "../../node_modules/sprotty-protocol/lib/utils/object.js"), exports);


/***/ }),

/***/ "../../node_modules/sprotty-protocol/lib/model.js":
/*!********************************************************!*\
  !*** ../../node_modules/sprotty-protocol/lib/model.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2021 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isZoomable = exports.isScrollable = void 0;
const object_1 = __webpack_require__(/*! ./utils/object */ "../../node_modules/sprotty-protocol/lib/utils/object.js");
function isScrollable(element) {
    return (0, object_1.hasOwnProperty)(element, 'scroll');
}
exports.isScrollable = isScrollable;
function isZoomable(element) {
    return (0, object_1.hasOwnProperty)(element, 'zoom');
}
exports.isZoomable = isZoomable;


/***/ }),

/***/ "../../node_modules/sprotty-protocol/lib/utils/async.js":
/*!**************************************************************!*\
  !*** ../../node_modules/sprotty-protocol/lib/utils/async.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2021 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Deferred = void 0;
/**
 * Simple implementation of the deferred pattern.
 * An object that exposes a promise and functions to resolve and reject it.
 */
class Deferred {
    constructor() {
        this._state = 'unresolved';
        this.promise = new Promise((resolve, reject) => {
            this.resolve = resolve;
            this.reject = reject;
        });
        this.promise.then(res => this._state = 'resolved', rej => this._state = 'rejected');
    }
    set state(state) {
        if (this._state === 'unresolved') {
            this._state = state;
        }
    }
    get state() {
        return this._state;
    }
}
exports.Deferred = Deferred;


/***/ }),

/***/ "../../node_modules/sprotty-protocol/lib/utils/geometry.js":
/*!*****************************************************************!*\
  !*** ../../node_modules/sprotty-protocol/lib/utils/geometry.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2021 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.almostEquals = exports.toRadians = exports.toDegrees = exports.Bounds = exports.isBounds = exports.Dimension = exports.centerOfLine = exports.angleBetweenPoints = exports.angleOfPoint = exports.Point = void 0;
const object_1 = __webpack_require__(/*! ./object */ "../../node_modules/sprotty-protocol/lib/utils/object.js");
var Point;
(function (Point) {
    /**
     * (x,y) coordinates of the origin.
     */
    Point.ORIGIN = Object.freeze({
        x: 0,
        y: 0
    });
    /**
     * Adds two points.
     * @param {Point} p1 - First point
     * @param {Point} p2 - Second point
     * @returns {Point} The sum of the two points
     */
    function add(p1, p2) {
        return {
            x: p1.x + p2.x,
            y: p1.y + p2.y
        };
    }
    Point.add = add;
    /**
     * Subtracts two points.
     * @param {Point} p1 - First point
     * @param {Point} p2 - Second point
     * @returns {Point} The difference of the two points
     */
    function subtract(p1, p2) {
        return {
            x: p1.x - p2.x,
            y: p1.y - p2.y
        };
    }
    Point.subtract = subtract;
    /**
     * Specifies whether a point has exactly the same coordinates as another point.
     * @param {Point} point1 a point
     * @param {Point} point2 another point
     * @returns {boolean} `true` if `point1` has exactly the same `x` and `y` values as `point2`, `false` otherwise.
     */
    function equals(point1, point2) {
        return point1.x === point2.x && point1.y === point2.y;
    }
    Point.equals = equals;
    /**
     * Computes a point that is the original `point` shifted towards `refPoint` by the given `distance`.
     * @param {Point} point - Point to shift
     * @param {Point} refPoint - Point to shift towards
     * @param {Point} distance - Distance to shift
     */
    function shiftTowards(point, refPoint, distance) {
        const diff = subtract(refPoint, point);
        const normalized = normalize(diff);
        const shift = { x: normalized.x * distance, y: normalized.y * distance };
        return add(point, shift);
    }
    Point.shiftTowards = shiftTowards;
    /**
     * Computes the normalized vector from the vector given in `point`; that is, computing its unit vector.
     * @param {Point} point - Point representing the vector to be normalized
     * @returns {Point} The normalized point
     */
    function normalize(point) {
        const mag = magnitude(point);
        if (mag === 0 || mag === 1) {
            return Point.ORIGIN;
        }
        return {
            x: point.x / mag,
            y: point.y / mag
        };
    }
    Point.normalize = normalize;
    /**
     * Computes the magnitude of the vector given in `point`.
     * @param {Point} point - Point representing the vector to compute the magnitude for
     * @returns {number} The magnitude or also known as length of the `point`
     */
    function magnitude(point) {
        return Math.sqrt(Math.pow(point.x, 2) + Math.pow(point.y, 2));
    }
    Point.magnitude = magnitude;
    /**
     * Calculates a linear combination of p0 and p1 using lambda, i.e.
     *   (1-lambda) * p0 + lambda * p1
     */
    function linear(p0, p1, lambda) {
        return {
            x: (1 - lambda) * p0.x + lambda * p1.x,
            y: (1 - lambda) * p0.y + lambda * p1.y
        };
    }
    Point.linear = linear;
    /**
     * Returns the "straight line" distance between two points.
     * @param {Point} a - First point
     * @param {Point} b - Second point
     * @returns {number} The Eucledian distance
     */
    function euclideanDistance(a, b) {
        const dx = b.x - a.x;
        const dy = b.y - a.y;
        return Math.sqrt(dx * dx + dy * dy);
    }
    Point.euclideanDistance = euclideanDistance;
    /**
     * Returns the distance between two points in a grid, using a
     * strictly vertical and/or horizontal path (versus straight line).
     * @param {Point} a - First point
     * @param {Point} b - Second point
     * @returns {number} The Manhattan distance
     */
    function manhattanDistance(a, b) {
        return Math.abs(b.x - a.x) + Math.abs(b.y - a.y);
    }
    Point.manhattanDistance = manhattanDistance;
    /**
     * Returns the maximum of the horizontal and the vertical distance.
     * @param {Point} a - First point
     * @param {Point} b - Second point
     * @returns {number} The maximum distance
     */
    function maxDistance(a, b) {
        return Math.max(Math.abs(b.x - a.x), Math.abs(b.y - a.y));
    }
    Point.maxDistance = maxDistance;
})(Point = exports.Point || (exports.Point = {}));
/**
 * Computes the angle in radians of the given point to the x-axis of the coordinate system.
 * The result is in the range [-pi, pi].
 * @param {Point} p - A point in the Eucledian plane
 */
function angleOfPoint(p) {
    return Math.atan2(p.y, p.x);
}
exports.angleOfPoint = angleOfPoint;
/**
 * Computes the angle in radians between the two given points (relative to the origin of the coordinate system).
 * The result is in the range [0, pi]. Returns NaN if the points are equal.
 * @param {Point} a - First point
 * @param {Point} b - Second point
 */
function angleBetweenPoints(a, b) {
    const lengthProduct = Math.sqrt((a.x * a.x + a.y * a.y) * (b.x * b.x + b.y * b.y));
    if (isNaN(lengthProduct) || lengthProduct === 0)
        return NaN;
    const dotProduct = a.x * b.x + a.y * b.y;
    return Math.acos(dotProduct / lengthProduct);
}
exports.angleBetweenPoints = angleBetweenPoints;
/**
 * Computes the center of the line segment spanned by the two given points.
 * @param {Point} s - Start point of the line
 * @param {Point} e - End point of the line
 */
function centerOfLine(s, e) {
    const b = {
        x: s.x > e.x ? e.x : s.x,
        y: s.y > e.y ? e.y : s.y,
        width: Math.abs(e.x - s.x),
        height: Math.abs(e.y - s.y)
    };
    return Bounds.center(b);
}
exports.centerOfLine = centerOfLine;
var Dimension;
(function (Dimension) {
    /**
     * A dimension with both width and height set to a negative value, which is considered as undefined.
     */
    Dimension.EMPTY = Object.freeze({
        width: -1,
        height: -1
    });
    /**
     * Checks whether the given dimention is valid, i.e. the width and height are non-zero.
     * @param {Dimension} b - Dimension object
     * @returns {boolean} `true` if the dimension is valid
     */
    function isValid(d) {
        return d.width >= 0 && d.height >= 0;
    }
    Dimension.isValid = isValid;
})(Dimension = exports.Dimension || (exports.Dimension = {}));
function isBounds(element) {
    return (0, object_1.hasOwnProperty)(element, ['x', 'y', 'width', 'height']);
}
exports.isBounds = isBounds;
var Bounds;
(function (Bounds) {
    Bounds.EMPTY = Object.freeze({
        x: 0,
        y: 0,
        width: -1,
        height: -1
    });
    /**
     * Combines the bounds of two objects into one, so that the new bounds
     * are the minimum bounds that covers both of the original bounds.
     * @param {Bounds} b0 - First bounds object
     * @param {Bounds} b1 - Second bounds object
     * @returns {Bounds} The combined bounds
     */
    function combine(b0, b1) {
        if (!Dimension.isValid(b0))
            return Dimension.isValid(b1) ? b1 : Bounds.EMPTY;
        if (!Dimension.isValid(b1))
            return b0;
        const minX = Math.min(b0.x, b1.x);
        const minY = Math.min(b0.y, b1.y);
        const maxX = Math.max(b0.x + (b0.width >= 0 ? b0.width : 0), b1.x + (b1.width >= 0 ? b1.width : 0));
        const maxY = Math.max(b0.y + (b0.height >= 0 ? b0.height : 0), b1.y + (b1.height >= 0 ? b1.height : 0));
        return {
            x: minX, y: minY, width: maxX - minX, height: maxY - minY
        };
    }
    Bounds.combine = combine;
    /**
     * Translates the given bounds.
     * @param {Bounds} b - Bounds object
     * @param {Point} p - Vector by which to translate the bounds
     * @returns {Bounds} The translated bounds
     */
    function translate(b, p) {
        return {
            x: b.x + p.x,
            y: b.y + p.y,
            width: b.width,
            height: b.height
        };
    }
    Bounds.translate = translate;
    /**
     * Returns the center point of the bounds of an object
     * @param {Bounds} b - Bounds object
     * @returns {Point} the center point
     */
    function center(b) {
        return {
            x: b.x + (b.width >= 0 ? 0.5 * b.width : 0),
            y: b.y + (b.height >= 0 ? 0.5 * b.height : 0)
        };
    }
    Bounds.center = center;
    /**
    * Checks whether the point p is included in the bounds b.
    */
    function includes(b, p) {
        return p.x >= b.x && p.x <= b.x + b.width && p.y >= b.y && p.y <= b.y + b.height;
    }
    Bounds.includes = includes;
})(Bounds = exports.Bounds || (exports.Bounds = {}));
/**
 * Converts from radians to degrees
 * @param {number} a - A value in radians
 * @returns {number} The converted value
 */
function toDegrees(a) {
    return a * 180 / Math.PI;
}
exports.toDegrees = toDegrees;
/**
 * Converts from degrees to radians
 * @param {number} a - A value in degrees
 * @returns {number} The converted value
 */
function toRadians(a) {
    return a * Math.PI / 180;
}
exports.toRadians = toRadians;
/**
 * Returns whether two numbers are almost equal, within a small margin (0.001)
 * @param {number} a - First number
 * @param {number} b - Second number
 * @returns {boolean} True if the two numbers are almost equal
 */
function almostEquals(a, b) {
    return Math.abs(a - b) < 1e-3;
}
exports.almostEquals = almostEquals;


/***/ }),

/***/ "../../node_modules/sprotty-protocol/lib/utils/json.js":
/*!*************************************************************!*\
  !*** ../../node_modules/sprotty-protocol/lib/utils/json.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2020-2021 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ "../../node_modules/sprotty-protocol/lib/utils/model-utils.js":
/*!********************************************************************!*\
  !*** ../../node_modules/sprotty-protocol/lib/utils/model-utils.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2021 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SModelIndex = exports.findElement = exports.getSubType = exports.getBasicType = exports.applyBounds = exports.cloneModel = void 0;
/**
 * Clone a given model. This function requires that the model is serializable, so it's
 * free of cycles and functions.
 */
function cloneModel(model) {
    return JSON.parse(JSON.stringify(model));
}
exports.cloneModel = cloneModel;
/**
 * Apply the computed bounds to the given model. This ensures that the model has complete
 * information about positions and sizes derived from its actual rendering in the frontend.
 */
function applyBounds(root, action) {
    const index = new SModelIndex();
    index.add(root);
    for (const b of action.bounds) {
        const element = index.getById(b.elementId);
        if (element) {
            const bae = element;
            if (b.newPosition) {
                bae.position = { x: b.newPosition.x, y: b.newPosition.y };
            }
            if (b.newSize) {
                bae.size = { width: b.newSize.width, height: b.newSize.height };
            }
        }
    }
    if (action.alignments) {
        for (const a of action.alignments) {
            const element = index.getById(a.elementId);
            if (element) {
                const alignable = element;
                alignable.alignment = { x: a.newAlignment.x, y: a.newAlignment.y };
            }
        }
    }
}
exports.applyBounds = applyBounds;
/**
 * Model element types can include a colon to separate the basic type and a sub-type. This function
 * extracts the basic type of a model element.
 */
function getBasicType(element) {
    if (!element.type) {
        return '';
    }
    const colonIndex = element.type.indexOf(':');
    return colonIndex >= 0 ? element.type.substring(0, colonIndex) : element.type;
}
exports.getBasicType = getBasicType;
/**
 * Model element types can include a colon to separate the basic type and a sub-type. This function
 * extracts the sub-type of a model element.
 */
function getSubType(schema) {
    if (!schema.type) {
        return '';
    }
    const colonIndex = schema.type.indexOf(':');
    return colonIndex >= 0 ? schema.type.substring(colonIndex + 1) : schema.type;
}
exports.getSubType = getSubType;
/**
 * Find the element with the given identifier. If you need to find multiple elements, using an
 * `SModelIndex` might be more effective.
 */
function findElement(parent, elementId) {
    if (parent.id === elementId)
        return parent;
    if (parent.children !== undefined) {
        for (const child of parent.children) {
            const result = findElement(child, elementId);
            if (result !== undefined)
                return result;
        }
    }
    return undefined;
}
exports.findElement = findElement;
/**
 * Used to speed up model element lookup by id.
 * This index implementation is for the serializable _external model_ defined in `sprotty-protocol`.
 */
class SModelIndex {
    constructor() {
        this.id2element = new Map();
        this.id2parent = new Map();
    }
    add(element) {
        if (!element.id) {
            throw new Error("Model element has no ID.");
        }
        else if (this.contains(element)) {
            throw new Error("Duplicate ID in model: " + element.id);
        }
        this.id2element.set(element.id, element);
        if (Array.isArray(element.children)) {
            for (const child of element.children) {
                this.add(child);
                this.id2parent.set(child.id, element);
            }
        }
    }
    remove(element) {
        this.id2element.delete(element.id);
        if (Array.isArray(element.children)) {
            for (const child of element.children) {
                this.id2parent.delete(child.id);
                this.remove(child);
            }
        }
    }
    contains(element) {
        return this.id2element.has(element.id);
    }
    getById(id) {
        return this.id2element.get(id);
    }
    getParent(id) {
        return this.id2parent.get(id);
    }
    getRoot(element) {
        let current = element;
        while (current) {
            const parent = this.id2parent.get(current.id);
            if (parent === undefined) {
                return current;
            }
            current = parent;
        }
        throw new Error("Element has no root");
    }
}
exports.SModelIndex = SModelIndex;


/***/ }),

/***/ "../../node_modules/sprotty-protocol/lib/utils/object.js":
/*!***************************************************************!*\
  !*** ../../node_modules/sprotty-protocol/lib/utils/object.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2021 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.safeAssign = exports.hasOwnProperty = exports.isObject = void 0;
function isObject(data) {
    return typeof data === 'object' && data !== null;
}
exports.isObject = isObject;
function hasOwnProperty(arg, key, type) {
    if (!isObject(arg)) {
        return false;
    }
    if (Array.isArray(key)) {
        for (const k of key) {
            if (!Object.prototype.hasOwnProperty.call(arg, k)) {
                return false;
            }
            if (typeof type === 'string' && typeof arg[k] !== type) {
                return false;
            }
            else if (typeof type === 'function' && !type(arg[k])) {
                return false;
            }
        }
    }
    else {
        if (!Object.prototype.hasOwnProperty.call(arg, key)) {
            return false;
        }
        if (typeof type === 'string') {
            return typeof arg[key] === type;
        }
        if (typeof type === 'function') {
            return type(arg[key]);
        }
    }
    return true;
}
exports.hasOwnProperty = hasOwnProperty;
function safeAssign(target, partial) {
    return Object.assign(target, partial);
}
exports.safeAssign = safeAssign;


/***/ }),

/***/ "../../node_modules/sprotty/lib/base/actions/action-dispatcher.js":
/*!************************************************************************!*\
  !*** ../../node_modules/sprotty/lib/base/actions/action-dispatcher.js ***!
  \************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ActionDispatcher = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const actions_1 = __webpack_require__(/*! sprotty-protocol/lib/actions */ "../../node_modules/sprotty-protocol/lib/actions.js");
const async_1 = __webpack_require__(/*! sprotty-protocol/lib/utils/async */ "../../node_modules/sprotty-protocol/lib/utils/async.js");
const types_1 = __webpack_require__(/*! ../types */ "../../node_modules/sprotty/lib/base/types.js");
const smodel_factory_1 = __webpack_require__(/*! ../model/smodel-factory */ "../../node_modules/sprotty/lib/base/model/smodel-factory.js");
const animation_frame_syncer_1 = __webpack_require__(/*! ../animations/animation-frame-syncer */ "../../node_modules/sprotty/lib/base/animations/animation-frame-syncer.js");
/**
 * Collects actions, converts them to commands and dispatches them.
 * Also acts as the proxy to model sources such as diagram servers.
 */
let ActionDispatcher = class ActionDispatcher {
    constructor() {
        this.postponedActions = [];
        this.requests = new Map();
    }
    initialize() {
        if (!this.initialized) {
            this.initialized = this.actionHandlerRegistryProvider().then(registry => {
                this.actionHandlerRegistry = registry;
                this.handleAction(actions_1.SetModelAction.create(smodel_factory_1.EMPTY_ROOT)).catch(() => { });
            });
        }
        return this.initialized;
    }
    /**
     * Dispatch an action by querying all handlers that are registered for its kind.
     * The returned promise is resolved when all handler results (commands or actions)
     * have been processed.
     */
    dispatch(action) {
        return this.initialize().then(() => {
            if (this.blockUntil !== undefined) {
                return this.handleBlocked(action, this.blockUntil);
            }
            else if (this.diagramLocker.isAllowed(action)) {
                return this.handleAction(action);
            }
            return undefined;
        });
    }
    /**
     * Calls `dispatch` on every action in the given array. The returned promise
     * is resolved when the promises of all `dispatch` calls have been resolved.
     */
    dispatchAll(actions) {
        return Promise.all(actions.map(action => this.dispatch(action)));
    }
    /**
     * Dispatch a request. The returned promise is resolved when a response with matching
     * identifier is dispatched. That response is _not_ passed to the registered action
     * handlers. Instead, it is the responsibility of the caller of this method to handle
     * the response properly. For example, it can be sent to the registered handlers by
     * passing it again to the `dispatch` method.
     */
    request(action) {
        if (!action.requestId) {
            return Promise.reject(new Error('Request without requestId'));
        }
        const deferred = new async_1.Deferred();
        this.requests.set(action.requestId, deferred);
        this.dispatch(action).catch(() => { });
        return deferred.promise;
    }
    handleAction(action) {
        if (action.kind === actions_1.UndoAction.KIND) {
            return this.commandStack.undo().then(() => { });
        }
        if (action.kind === actions_1.RedoAction.KIND) {
            return this.commandStack.redo().then(() => { });
        }
        if ((0, actions_1.isResponseAction)(action)) {
            const deferred = this.requests.get(action.responseId);
            if (deferred !== undefined) {
                this.requests.delete(action.responseId);
                if (action.kind === actions_1.RejectAction.KIND) {
                    const rejectAction = action;
                    deferred.reject(new Error(rejectAction.message));
                    this.logger.warn(this, `Request with id ${action.responseId} failed.`, rejectAction.message, rejectAction.detail);
                }
                else {
                    deferred.resolve(action);
                }
                return Promise.resolve();
            }
            this.logger.log(this, 'No matching request for response', action);
        }
        const handlers = this.actionHandlerRegistry.get(action.kind);
        if (handlers.length === 0) {
            this.logger.warn(this, 'Missing handler for action', action);
            const error = new Error(`Missing handler for action '${action.kind}'`);
            if ((0, actions_1.isRequestAction)(action)) {
                const deferred = this.requests.get(action.requestId);
                if (deferred !== undefined) {
                    this.requests.delete(action.requestId);
                    deferred.reject(error);
                }
            }
            return Promise.reject(error);
        }
        this.logger.log(this, 'Handle', action);
        const promises = [];
        for (const handler of handlers) {
            const result = handler.handle(action);
            if ((0, actions_1.isAction)(result)) {
                promises.push(this.dispatch(result));
            }
            else if (result !== undefined) {
                promises.push(this.commandStack.execute(result));
                this.blockUntil = result.blockUntil;
            }
        }
        return Promise.all(promises);
    }
    handleBlocked(action, predicate) {
        if (predicate(action)) {
            this.blockUntil = undefined;
            const result = this.handleAction(action);
            const actions = this.postponedActions;
            this.postponedActions = [];
            for (const a of actions) {
                this.dispatch(a.action).then(a.resolve, a.reject);
            }
            return result;
        }
        else {
            this.logger.log(this, 'Action is postponed due to block condition', action);
            return new Promise((resolve, reject) => {
                this.postponedActions.push({ action, resolve, reject });
            });
        }
    }
};
__decorate([
    (0, inversify_1.inject)(types_1.TYPES.ActionHandlerRegistryProvider),
    __metadata("design:type", Function)
], ActionDispatcher.prototype, "actionHandlerRegistryProvider", void 0);
__decorate([
    (0, inversify_1.inject)(types_1.TYPES.ICommandStack),
    __metadata("design:type", Object)
], ActionDispatcher.prototype, "commandStack", void 0);
__decorate([
    (0, inversify_1.inject)(types_1.TYPES.ILogger),
    __metadata("design:type", Object)
], ActionDispatcher.prototype, "logger", void 0);
__decorate([
    (0, inversify_1.inject)(types_1.TYPES.AnimationFrameSyncer),
    __metadata("design:type", animation_frame_syncer_1.AnimationFrameSyncer)
], ActionDispatcher.prototype, "syncer", void 0);
__decorate([
    (0, inversify_1.inject)(types_1.TYPES.IDiagramLocker),
    __metadata("design:type", Object)
], ActionDispatcher.prototype, "diagramLocker", void 0);
ActionDispatcher = __decorate([
    (0, inversify_1.injectable)()
], ActionDispatcher);
exports.ActionDispatcher = ActionDispatcher;


/***/ }),

/***/ "../../node_modules/sprotty/lib/base/actions/action-handler.js":
/*!*********************************************************************!*\
  !*** ../../node_modules/sprotty/lib/base/actions/action-handler.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.onAction = exports.configureActionHandler = exports.ActionHandlerRegistry = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const types_1 = __webpack_require__(/*! ../types */ "../../node_modules/sprotty/lib/base/types.js");
const registry_1 = __webpack_require__(/*! ../../utils/registry */ "../../node_modules/sprotty/lib/utils/registry.js");
const inversify_2 = __webpack_require__(/*! ../../utils/inversify */ "../../node_modules/sprotty/lib/utils/inversify.js");
/**
 * The action handler registry maps actions to their handlers using the Action.kind property.
 */
let ActionHandlerRegistry = class ActionHandlerRegistry extends registry_1.MultiInstanceRegistry {
    constructor(registrations, initializers) {
        super();
        registrations.forEach(registration => this.register(registration.actionKind, registration.factory()));
        initializers.forEach(initializer => this.initializeActionHandler(initializer));
    }
    initializeActionHandler(initializer) {
        initializer.initialize(this);
    }
};
ActionHandlerRegistry = __decorate([
    (0, inversify_1.injectable)(),
    __param(0, (0, inversify_1.multiInject)(types_1.TYPES.ActionHandlerRegistration)),
    __param(0, (0, inversify_1.optional)()),
    __param(1, (0, inversify_1.multiInject)(types_1.TYPES.IActionHandlerInitializer)),
    __param(1, (0, inversify_1.optional)()),
    __metadata("design:paramtypes", [Array, Array])
], ActionHandlerRegistry);
exports.ActionHandlerRegistry = ActionHandlerRegistry;
/**
 * Utility function to register an action handler for an action kind.
 */
function configureActionHandler(context, kind, constr) {
    if (typeof constr === 'function') {
        if (!(0, inversify_2.isInjectable)(constr)) {
            throw new Error(`Action handlers should be @injectable: ${constr.name}`);
        }
        if (!context.isBound(constr)) {
            context.bind(constr).toSelf();
        }
    }
    context.bind(types_1.TYPES.ActionHandlerRegistration).toDynamicValue(ctx => ({
        actionKind: kind,
        factory: () => ctx.container.get(constr)
    }));
}
exports.configureActionHandler = configureActionHandler;
/**
 * Utility function to register an action handler for an action kind.
 */
function onAction(context, kind, handle) {
    context.bind(types_1.TYPES.ActionHandlerRegistration).toConstantValue({
        actionKind: kind,
        factory: () => ({ handle })
    });
}
exports.onAction = onAction;


/***/ }),

/***/ "../../node_modules/sprotty/lib/base/actions/action.js":
/*!*************************************************************!*\
  !*** ../../node_modules/sprotty/lib/base/actions/action.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2021 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.RejectAction = exports.isResponseAction = exports.generateRequestId = exports.isRequestAction = exports.isAction = exports.isLabeledAction = exports.LabeledAction = void 0;
const actions_1 = __webpack_require__(/*! sprotty-protocol/lib/actions */ "../../node_modules/sprotty-protocol/lib/actions.js");
const object_1 = __webpack_require__(/*! sprotty-protocol/lib/utils/object */ "../../node_modules/sprotty-protocol/lib/utils/object.js");
/**
 * A list of actions with a label.
 * Labeled actions are used to denote a group of actions in a user-interface context, e.g.,
 * to define an entry in the command palette or in the context menu.
 */
class LabeledAction {
    constructor(label, actions, icon) {
        this.label = label;
        this.actions = actions;
        this.icon = icon;
    }
}
exports.LabeledAction = LabeledAction;
function isLabeledAction(element) {
    return element !== undefined
        && element.label !== undefined
        && element.actions !== undefined;
}
exports.isLabeledAction = isLabeledAction;
/**
 * @deprecated Use the declaration from `sprotty-protocol` instead.
 */
function isAction(object) {
    return (0, object_1.hasOwnProperty)(object, 'kind', 'string');
}
exports.isAction = isAction;
/**
 * @deprecated Use the declaration from `sprotty-protocol` instead.
 */
function isRequestAction(object) {
    return isAction(object) && (0, object_1.hasOwnProperty)(object, 'requestId', 'string');
}
exports.isRequestAction = isRequestAction;
/**
 * Generate a unique `requestId` for a request action.
 *
 * @deprecated Use the declaration from `sprotty-protocol` instead.
 */
exports.generateRequestId = actions_1.generateRequestId;
/**
 * @deprecated Use the declaration from `sprotty-protocol` instead.
 */
function isResponseAction(object) {
    return isAction(object) && (0, object_1.hasOwnProperty)(object, 'responseId', 'string')
        && object.responseId !== '';
}
exports.isResponseAction = isResponseAction;
/**
 * A reject action is fired to indicate that a request must be rejected.
 *
 * @deprecated Use the declaration from `sprotty-protocol` instead.
 */
class RejectAction {
    constructor(message, responseId, detail) {
        this.message = message;
        this.responseId = responseId;
        this.detail = detail;
        this.kind = RejectAction.KIND;
    }
}
RejectAction.KIND = 'rejectRequest';
exports.RejectAction = RejectAction;


/***/ }),

/***/ "../../node_modules/sprotty/lib/base/actions/diagram-locker.js":
/*!*********************************************************************!*\
  !*** ../../node_modules/sprotty/lib/base/actions/diagram-locker.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2019 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.DefaultDiagramLocker = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
let DefaultDiagramLocker = class DefaultDiagramLocker {
    isAllowed(action) {
        return true;
    }
};
DefaultDiagramLocker = __decorate([
    (0, inversify_1.injectable)()
], DefaultDiagramLocker);
exports.DefaultDiagramLocker = DefaultDiagramLocker;


/***/ }),

/***/ "../../node_modules/sprotty/lib/base/animations/animation-frame-syncer.js":
/*!********************************************************************************!*\
  !*** ../../node_modules/sprotty/lib/base/animations/animation-frame-syncer.js ***!
  \********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AnimationFrameSyncer = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
let AnimationFrameSyncer = class AnimationFrameSyncer {
    constructor() {
        this.tasks = [];
        this.endTasks = [];
        this.triggered = false;
    }
    isAvailable() {
        return typeof requestAnimationFrame === "function";
    }
    onNextFrame(task) {
        this.tasks.push(task);
        this.trigger();
    }
    onEndOfNextFrame(task) {
        this.endTasks.push(task);
        this.trigger();
    }
    trigger() {
        if (!this.triggered) {
            this.triggered = true;
            if (this.isAvailable())
                requestAnimationFrame((time) => this.run(time));
            else
                setTimeout((time) => this.run(time));
        }
    }
    run(time) {
        const tasks = this.tasks;
        const endTasks = this.endTasks;
        this.triggered = false;
        this.tasks = [];
        this.endTasks = [];
        tasks.forEach(task => task.call(undefined, time));
        endTasks.forEach(task => task.call(undefined, time));
    }
};
AnimationFrameSyncer = __decorate([
    (0, inversify_1.injectable)()
], AnimationFrameSyncer);
exports.AnimationFrameSyncer = AnimationFrameSyncer;


/***/ }),

/***/ "../../node_modules/sprotty/lib/base/animations/animation.js":
/*!*******************************************************************!*\
  !*** ../../node_modules/sprotty/lib/base/animations/animation.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CompoundAnimation = exports.Animation = void 0;
const easing_1 = __webpack_require__(/*! ./easing */ "../../node_modules/sprotty/lib/base/animations/easing.js");
/**
 * An animation uses the rendering loop of the browser to smoothly
 * calculate a transition between two states of a model element.
 */
class Animation {
    constructor(context, ease = easing_1.easeInOut) {
        this.context = context;
        this.ease = ease;
    }
    start() {
        return new Promise((resolve, reject) => {
            let start = undefined;
            let frames = 0;
            const lambda = (time) => {
                frames++;
                let dtime;
                if (start === undefined) {
                    start = time;
                    dtime = 0;
                }
                else {
                    dtime = time - start;
                }
                const t = Math.min(1, dtime / this.context.duration);
                const current = this.tween(this.ease(t), this.context);
                this.context.modelChanged.update(current);
                if (t === 1) {
                    this.context.logger.log(this, (frames * 1000 / this.context.duration) + ' fps');
                    resolve(current);
                }
                else {
                    this.context.syncer.onNextFrame(lambda);
                }
            };
            if (this.context.syncer.isAvailable()) {
                this.context.syncer.onNextFrame(lambda);
            }
            else {
                const finalModel = this.tween(1, this.context);
                resolve(finalModel);
            }
        });
    }
}
exports.Animation = Animation;
class CompoundAnimation extends Animation {
    constructor(model, context, components = [], ease = easing_1.easeInOut) {
        super(context, ease);
        this.model = model;
        this.context = context;
        this.components = components;
        this.ease = ease;
    }
    include(animation) {
        this.components.push(animation);
        return this;
    }
    tween(t, context) {
        for (const a of this.components) {
            a.tween(t, context);
        }
        return this.model;
    }
}
exports.CompoundAnimation = CompoundAnimation;


/***/ }),

/***/ "../../node_modules/sprotty/lib/base/animations/easing.js":
/*!****************************************************************!*\
  !*** ../../node_modules/sprotty/lib/base/animations/easing.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.easeInOut = void 0;
/**
 * Slows down animations towards the begin and the end.
 *
 * @param x the value between 0 (start of animation) and 1 (end of
 *     animation) linearly interpolated in time.
 * @returns {number} the eased value between 0 and 1
 */
function easeInOut(x) {
    if (x < 0.5)
        return x * x * 2;
    else
        return 1 - (1 - x) * (1 - x) * 2;
}
exports.easeInOut = easeInOut;


/***/ }),

/***/ "../../node_modules/sprotty/lib/base/commands/command-registration.js":
/*!****************************************************************************!*\
  !*** ../../node_modules/sprotty/lib/base/commands/command-registration.js ***!
  \****************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2019 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.configureCommand = exports.CommandActionHandlerInitializer = exports.CommandActionHandler = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const inversify_2 = __webpack_require__(/*! ../../utils/inversify */ "../../node_modules/sprotty/lib/utils/inversify.js");
const types_1 = __webpack_require__(/*! ../types */ "../../node_modules/sprotty/lib/base/types.js");
class CommandActionHandler {
    constructor(commandRegistration) {
        this.commandRegistration = commandRegistration;
    }
    handle(action) {
        return this.commandRegistration.factory(action);
    }
}
exports.CommandActionHandler = CommandActionHandler;
let CommandActionHandlerInitializer = class CommandActionHandlerInitializer {
    constructor(registrations) {
        this.registrations = registrations;
    }
    initialize(registry) {
        this.registrations.forEach(registration => registry.register(registration.kind, new CommandActionHandler(registration)));
    }
};
CommandActionHandlerInitializer = __decorate([
    (0, inversify_1.injectable)(),
    __param(0, (0, inversify_1.multiInject)(types_1.TYPES.CommandRegistration)),
    __param(0, (0, inversify_1.optional)()),
    __metadata("design:paramtypes", [Array])
], CommandActionHandlerInitializer);
exports.CommandActionHandlerInitializer = CommandActionHandlerInitializer;
/**
 * Use this method in your DI configuration to register a new command to the diagram.
 */
function configureCommand(context, constr) {
    if (!(0, inversify_2.isInjectable)(constr)) {
        throw new Error(`Commands should be @injectable: ${constr.name}`);
    }
    if (!context.isBound(constr)) {
        context.bind(constr).toSelf();
    }
    context.bind(types_1.TYPES.CommandRegistration).toDynamicValue(ctx => ({
        kind: constr.KIND,
        factory: (action) => {
            const childContainer = new inversify_1.Container();
            childContainer.parent = ctx.container;
            childContainer.bind(types_1.TYPES.Action).toConstantValue(action);
            return childContainer.get(constr);
        }
    }));
}
exports.configureCommand = configureCommand;


/***/ }),

/***/ "../../node_modules/sprotty/lib/base/commands/command-stack-options.js":
/*!*****************************************************************************!*\
  !*** ../../node_modules/sprotty/lib/base/commands/command-stack-options.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2021 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.overrideCommandStackOptions = void 0;
const object_1 = __webpack_require__(/*! sprotty-protocol/lib/utils/object */ "../../node_modules/sprotty-protocol/lib/utils/object.js");
const types_1 = __webpack_require__(/*! ../types */ "../../node_modules/sprotty/lib/base/types.js");
function overrideCommandStackOptions(container, options) {
    const defaultOptions = container.get(types_1.TYPES.CommandStackOptions);
    (0, object_1.safeAssign)(defaultOptions, options);
    return defaultOptions;
}
exports.overrideCommandStackOptions = overrideCommandStackOptions;


/***/ }),

/***/ "../../node_modules/sprotty/lib/base/commands/command-stack.js":
/*!*********************************************************************!*\
  !*** ../../node_modules/sprotty/lib/base/commands/command-stack.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CommandStack = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const types_1 = __webpack_require__(/*! ../types */ "../../node_modules/sprotty/lib/base/types.js");
const smodel_factory_1 = __webpack_require__(/*! ../model/smodel-factory */ "../../node_modules/sprotty/lib/base/model/smodel-factory.js");
const smodel_1 = __webpack_require__(/*! ../model/smodel */ "../../node_modules/sprotty/lib/base/model/smodel.js");
const animation_frame_syncer_1 = __webpack_require__(/*! ../animations/animation-frame-syncer */ "../../node_modules/sprotty/lib/base/animations/animation-frame-syncer.js");
const command_1 = __webpack_require__(/*! ./command */ "../../node_modules/sprotty/lib/base/commands/command.js");
/**
 * The implementation of the ICommandStack. Clients should not use this
 * class directly.
 *
 * The command stack holds the current model as the result of the current
 * promise. When a new command is executed/undone/redone, its execution is
 * chained using <code>Promise#then()</code> to the current Promise. This
 * way we can handle long running commands without blocking the current
 * thread.
 *
 * The command stack also does the special handling for special commands:
 *
 * System commands should be transparent to the user and as such be
 * automatically undone/redone with the next plain command. Additional care
 * must be taken that system commands that are executed after undo don't
 * break the correspondence between the topmost commands on the undo and
 * redo stacks.
 *
 * Hidden commands only tell the viewer to render a hidden model such that
 * its bounds can be extracted from the DOM and forwarded as separate actions.
 * Hidden commands should not leave any trace on the undo/redo/off stacks.
 *
 * Mergeable commands should be merged with their predecessor if possible,
 * such that e.g. multiple subsequent moves of the smae element can be undone
 * in one single step.
 */
let CommandStack = class CommandStack {
    constructor() {
        this.undoStack = [];
        this.redoStack = [];
        /**
         * System commands should be transparent to the user in undo/redo
         * operations. When a system command is executed when the redo
         * stack is not empty, it is pushed to offStack instead.
         *
         * On redo, all commands form this stack are undone such that the
         * redo operation gets the exact same model as when it was executed
         * first.
         *
         * On undo, all commands form this stack are undone as well as
         * system ommands should be transparent to the user.
         */
        this.offStack = [];
    }
    initialize() {
        this.currentPromise = Promise.resolve({
            main: {
                model: this.modelFactory.createRoot(smodel_factory_1.EMPTY_ROOT),
                modelChanged: false,
            },
            hidden: {
                model: this.modelFactory.createRoot(smodel_factory_1.EMPTY_ROOT),
                modelChanged: false,
            },
            popup: {
                model: this.modelFactory.createRoot(smodel_factory_1.EMPTY_ROOT),
                modelChanged: false,
            }
        });
    }
    get currentModel() {
        return this.currentPromise.then(state => state.main.model);
    }
    executeAll(commands) {
        commands.forEach(command => {
            this.logger.log(this, 'Executing', command);
            this.handleCommand(command, command.execute, this.mergeOrPush);
        });
        return this.thenUpdate();
    }
    execute(command) {
        this.logger.log(this, 'Executing', command);
        this.handleCommand(command, command.execute, this.mergeOrPush);
        return this.thenUpdate();
    }
    undo() {
        this.undoOffStackSystemCommands();
        this.undoPreceedingSystemCommands();
        const command = this.undoStack[this.undoStack.length - 1];
        if (command !== undefined && !this.isBlockUndo(command)) {
            this.undoStack.pop();
            this.logger.log(this, 'Undoing', command);
            this.handleCommand(command, command.undo, (c, context) => {
                this.redoStack.push(c);
            });
        }
        return this.thenUpdate();
    }
    redo() {
        this.undoOffStackSystemCommands();
        const command = this.redoStack.pop();
        if (command !== undefined) {
            this.logger.log(this, 'Redoing', command);
            this.handleCommand(command, command.redo, (c, context) => {
                this.pushToUndoStack(c);
            });
        }
        this.redoFollowingSystemCommands();
        return this.thenUpdate();
    }
    /**
     * Chains the current promise with another Promise that performs the
     * given operation on the given command.
     *
     * @param beforeResolve a function that is called directly before
     *      resolving the Promise to return the new model. Usually puts the
     *      command on the appropriate stack.
     */
    handleCommand(command, operation, beforeResolve) {
        this.currentPromise = this.currentPromise.then(state => new Promise(resolve => {
            let target;
            if (command instanceof command_1.HiddenCommand)
                target = 'hidden';
            else if (command instanceof command_1.PopupCommand)
                target = 'popup';
            else
                target = 'main';
            const context = this.createContext(state.main.model);
            let commandResult;
            try {
                commandResult = operation.call(command, context);
            }
            catch (error) {
                this.logger.error(this, "Failed to execute command:", error);
                commandResult = state[target].model;
            }
            const newState = copyState(state);
            if (commandResult instanceof Promise) {
                commandResult.then(newModel => {
                    if (target === 'main')
                        beforeResolve.call(this, command, context);
                    newState[target] = { model: newModel, modelChanged: true };
                    resolve(newState);
                });
            }
            else if (commandResult instanceof smodel_1.SModelRootImpl) {
                if (target === 'main')
                    beforeResolve.call(this, command, context);
                newState[target] = { model: commandResult, modelChanged: true };
                resolve(newState);
            }
            else {
                if (target === 'main')
                    beforeResolve.call(this, command, context);
                newState[target] = {
                    model: commandResult.model,
                    modelChanged: state[target].modelChanged || commandResult.modelChanged,
                    cause: commandResult.cause
                };
                resolve(newState);
            }
        }));
    }
    pushToUndoStack(command) {
        this.undoStack.push(command);
        if (this.options.undoHistoryLimit >= 0 && this.undoStack.length > this.options.undoHistoryLimit)
            this.undoStack.splice(0, this.undoStack.length - this.options.undoHistoryLimit);
    }
    /**
     * Notifies the Viewer to render the new model and/or the new hidden model
     * and returns a Promise for the new model.
     */
    thenUpdate() {
        this.currentPromise = this.currentPromise.then(state => {
            const newState = copyState(state);
            if (state.hidden.modelChanged) {
                this.updateHidden(state.hidden.model, state.hidden.cause);
                newState.hidden.modelChanged = false;
                newState.hidden.cause = undefined;
            }
            if (state.main.modelChanged) {
                this.update(state.main.model, state.main.cause);
                newState.main.modelChanged = false;
                newState.main.cause = undefined;
            }
            if (state.popup.modelChanged) {
                this.updatePopup(state.popup.model, state.popup.cause);
                newState.popup.modelChanged = false;
                newState.popup.cause = undefined;
            }
            return newState;
        });
        return this.currentModel;
    }
    /**
     * Notify the `ModelViewer` that the model has changed.
     */
    update(model, cause) {
        if (this.modelViewer === undefined) {
            this.modelViewer = this.viewerProvider.modelViewer;
        }
        this.modelViewer.update(model, cause);
    }
    /**
     * Notify the `HiddenModelViewer` that the hidden model has changed.
     */
    updateHidden(model, cause) {
        if (this.hiddenModelViewer === undefined) {
            this.hiddenModelViewer = this.viewerProvider.hiddenModelViewer;
        }
        this.hiddenModelViewer.update(model, cause);
    }
    /**
     * Notify the `PopupModelViewer` that the popup model has changed.
     */
    updatePopup(model, cause) {
        if (this.popupModelViewer === undefined) {
            this.popupModelViewer = this.viewerProvider.popupModelViewer;
        }
        this.popupModelViewer.update(model, cause);
    }
    /**
     * Handling of commands after their execution.
     *
     * Hidden commands are not pushed to any stack.
     *
     * System commands are pushed to the <code>offStack</code> when the redo
     * stack is not empty, allowing to undo the before a redo to keep the chain
     * of commands consistent.
     *
     * Mergable commands are merged if possible.
     */
    mergeOrPush(command, context) {
        if (this.isBlockUndo(command)) {
            this.undoStack = [];
            this.redoStack = [];
            this.offStack = [];
            this.pushToUndoStack(command);
            return;
        }
        if (this.isPushToOffStack(command) && this.redoStack.length > 0) {
            if (this.offStack.length > 0) {
                const lastCommand = this.offStack[this.offStack.length - 1];
                if (lastCommand instanceof command_1.MergeableCommand && lastCommand.merge(command, context))
                    return;
            }
            this.offStack.push(command);
            return;
        }
        if (this.isPushToUndoStack(command)) {
            this.offStack.forEach(c => this.undoStack.push(c));
            this.offStack = [];
            this.redoStack = [];
            if (this.undoStack.length > 0) {
                const lastCommand = this.undoStack[this.undoStack.length - 1];
                if (lastCommand instanceof command_1.MergeableCommand && lastCommand.merge(command, context))
                    return;
            }
            this.pushToUndoStack(command);
        }
    }
    /**
     * Reverts all system commands on the offStack.
     */
    undoOffStackSystemCommands() {
        let command = this.offStack.pop();
        while (command !== undefined) {
            this.logger.log(this, 'Undoing off-stack', command);
            this.handleCommand(command, command.undo, () => { });
            command = this.offStack.pop();
        }
    }
    /**
     * System commands should be transparent to the user, so this method
     * is called from <code>undo()</code> to revert all system commands
     * at the top of the undoStack.
     */
    undoPreceedingSystemCommands() {
        let command = this.undoStack[this.undoStack.length - 1];
        while (command !== undefined && this.isPushToOffStack(command)) {
            this.undoStack.pop();
            this.logger.log(this, 'Undoing', command);
            this.handleCommand(command, command.undo, (c, context) => {
                this.redoStack.push(c);
            });
            command = this.undoStack[this.undoStack.length - 1];
        }
    }
    /**
     * System commands should be transparent to the user, so this method
     * is called from <code>redo()</code> to re-execute all system commands
     * at the top of the redoStack.
     */
    redoFollowingSystemCommands() {
        let command = this.redoStack[this.redoStack.length - 1];
        while (command !== undefined && this.isPushToOffStack(command)) {
            this.redoStack.pop();
            this.logger.log(this, 'Redoing ', command);
            this.handleCommand(command, command.redo, (c, context) => {
                this.pushToUndoStack(c);
            });
            command = this.redoStack[this.redoStack.length - 1];
        }
    }
    /**
     * Assembles the context object that is passed to the commands execution method.
     */
    createContext(currentModel) {
        return {
            root: currentModel,
            modelChanged: this,
            modelFactory: this.modelFactory,
            duration: this.options.defaultDuration,
            logger: this.logger,
            syncer: this.syncer
        };
    }
    isPushToOffStack(command) {
        return command instanceof command_1.SystemCommand;
    }
    isPushToUndoStack(command) {
        return !(command instanceof command_1.HiddenCommand);
    }
    isBlockUndo(command) {
        return command instanceof command_1.ResetCommand;
    }
};
__decorate([
    (0, inversify_1.inject)(types_1.TYPES.IModelFactory),
    __metadata("design:type", Object)
], CommandStack.prototype, "modelFactory", void 0);
__decorate([
    (0, inversify_1.inject)(types_1.TYPES.IViewerProvider),
    __metadata("design:type", Object)
], CommandStack.prototype, "viewerProvider", void 0);
__decorate([
    (0, inversify_1.inject)(types_1.TYPES.ILogger),
    __metadata("design:type", Object)
], CommandStack.prototype, "logger", void 0);
__decorate([
    (0, inversify_1.inject)(types_1.TYPES.AnimationFrameSyncer),
    __metadata("design:type", animation_frame_syncer_1.AnimationFrameSyncer)
], CommandStack.prototype, "syncer", void 0);
__decorate([
    (0, inversify_1.inject)(types_1.TYPES.CommandStackOptions),
    __metadata("design:type", Object)
], CommandStack.prototype, "options", void 0);
__decorate([
    (0, inversify_1.postConstruct)(),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", []),
    __metadata("design:returntype", void 0)
], CommandStack.prototype, "initialize", null);
CommandStack = __decorate([
    (0, inversify_1.injectable)()
], CommandStack);
exports.CommandStack = CommandStack;
function copyState(state) {
    return {
        main: Object.assign({}, state.main),
        hidden: Object.assign({}, state.hidden),
        popup: Object.assign({}, state.popup)
    };
}


/***/ }),

/***/ "../../node_modules/sprotty/lib/base/commands/command.js":
/*!***************************************************************!*\
  !*** ../../node_modules/sprotty/lib/base/commands/command.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ResetCommand = exports.SystemCommand = exports.PopupCommand = exports.HiddenCommand = exports.MergeableCommand = exports.Command = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
/**
 * Base class for all commands.
 *
 * Command instances are created via dependency injection and should take
 * the respective action as an injected constructor parameter. They must
 * also define a static <code>KIND</code> which is used to map an
 * <code>Action#kind</code>.
 *
 * <pre>
 * export class MyCommand extends Command {
 *   static KIND = 'MyCommand'
 *   constructor(@inject(TYPES.Action) action: MyAction) {
 *   ...
 * }
 * @inject(TYPES.Action)
 * </pre>
 */
let Command = class Command {
};
Command = __decorate([
    (0, inversify_1.injectable)()
], Command);
exports.Command = Command;
/**
 * A mergeable command can accumulate subsequent commands of the same kind.
 *
 * For example, multiple subsequent move commands can be merged to yield a
 * single command, such that undo will roll them back altogether. Otherwise
 * the user would have to push CTRL-Z for each mouse move element that
 * resuted in a command.
 */
let MergeableCommand = class MergeableCommand extends Command {
    /**
     * Tries to merge the given command with this.
     *
     * @param command
     * @param context
     */
    merge(command, context) {
        return false;
    }
};
MergeableCommand = __decorate([
    (0, inversify_1.injectable)()
], MergeableCommand);
exports.MergeableCommand = MergeableCommand;
/**
 * A hidden command is used to trigger the rendering of a model on a
 * hidden canvas.
 *
 * Some graphical elements are styled using CSS, others have bounds that
 * require to layout their children before being computed. In such cases
 * we cannot tell about the size of elements without acutally rendering
 * the DOM. We render them to an invisible canvas. This can be achieved
 * using hidden commands.
 *
 * Hidden commands do not change the model directly, and are as such
 * neither undoable nor redoable. The command stack does not push them on
 * any stack and forwards the resulting model to the invisible viewer.
 */
let HiddenCommand = class HiddenCommand extends Command {
    undo(context) {
        context.logger.error(this, 'Cannot undo a hidden command');
        return context.root;
    }
    redo(context) {
        context.logger.error(this, 'Cannot redo a hidden command');
        return context.root;
    }
};
HiddenCommand = __decorate([
    (0, inversify_1.injectable)()
], HiddenCommand);
exports.HiddenCommand = HiddenCommand;
let PopupCommand = class PopupCommand extends Command {
};
PopupCommand = __decorate([
    (0, inversify_1.injectable)()
], PopupCommand);
exports.PopupCommand = PopupCommand;
/**
 * A system command is triggered by the system, e.g. in order to update bounds
 * in the model with data fetched from the DOM.
 *
 * As it is automatically triggered it should not count as a single command in
 * undo/redo operations. Into the bargain, such an automatic command could occur
 * after an undo and as such make the next redo command invalid because it is
 * based on a model state that has changed. The command stack handles system
 * commands in a special way to overcome these issues.
 */
let SystemCommand = class SystemCommand extends Command {
};
SystemCommand = __decorate([
    (0, inversify_1.injectable)()
], SystemCommand);
exports.SystemCommand = SystemCommand;
/**
 * A reset command deletes all undo/redo stacks and cannot be undone.
 *
 * It marks a point of no return.
 */
let ResetCommand = class ResetCommand extends Command {
};
ResetCommand = __decorate([
    (0, inversify_1.injectable)()
], ResetCommand);
exports.ResetCommand = ResetCommand;


/***/ }),

/***/ "../../node_modules/sprotty/lib/base/commands/request-command.js":
/*!***********************************************************************!*\
  !*** ../../node_modules/sprotty/lib/base/commands/request-command.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2019 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ModelRequestCommand = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const types_1 = __webpack_require__(/*! ../types */ "../../node_modules/sprotty/lib/base/types.js");
const command_1 = __webpack_require__(/*! ./command */ "../../node_modules/sprotty/lib/base/commands/command.js");
/**
 * A command that does not modify the internal model, but retrieves information
 * from it by dispatching a response action.
 */
let ModelRequestCommand = class ModelRequestCommand extends command_1.SystemCommand {
    execute(context) {
        const result = this.retrieveResult(context);
        this.actionDispatcher.dispatch(result);
        return { model: context.root, modelChanged: false };
    }
    undo(context) {
        return { model: context.root, modelChanged: false };
    }
    redo(context) {
        return { model: context.root, modelChanged: false };
    }
};
__decorate([
    (0, inversify_1.inject)(types_1.TYPES.IActionDispatcher),
    __metadata("design:type", Object)
], ModelRequestCommand.prototype, "actionDispatcher", void 0);
ModelRequestCommand = __decorate([
    (0, inversify_1.injectable)()
], ModelRequestCommand);
exports.ModelRequestCommand = ModelRequestCommand;


/***/ }),

/***/ "../../node_modules/sprotty/lib/base/di.config.js":
/*!********************************************************!*\
  !*** ../../node_modules/sprotty/lib/base/di.config.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const types_1 = __webpack_require__(/*! ./types */ "../../node_modules/sprotty/lib/base/types.js");
const initialize_canvas_1 = __webpack_require__(/*! ./features/initialize-canvas */ "../../node_modules/sprotty/lib/base/features/initialize-canvas.js");
const logging_1 = __webpack_require__(/*! ../utils/logging */ "../../node_modules/sprotty/lib/utils/logging.js");
const action_dispatcher_1 = __webpack_require__(/*! ./actions/action-dispatcher */ "../../node_modules/sprotty/lib/base/actions/action-dispatcher.js");
const action_handler_1 = __webpack_require__(/*! ./actions/action-handler */ "../../node_modules/sprotty/lib/base/actions/action-handler.js");
const command_stack_1 = __webpack_require__(/*! ./commands/command-stack */ "../../node_modules/sprotty/lib/base/commands/command-stack.js");
const smodel_factory_1 = __webpack_require__(/*! ./model/smodel-factory */ "../../node_modules/sprotty/lib/base/model/smodel-factory.js");
const animation_frame_syncer_1 = __webpack_require__(/*! ./animations/animation-frame-syncer */ "../../node_modules/sprotty/lib/base/animations/animation-frame-syncer.js");
const viewer_1 = __webpack_require__(/*! ./views/viewer */ "../../node_modules/sprotty/lib/base/views/viewer.js");
const viewer_options_1 = __webpack_require__(/*! ./views/viewer-options */ "../../node_modules/sprotty/lib/base/views/viewer-options.js");
const mouse_tool_1 = __webpack_require__(/*! ./views/mouse-tool */ "../../node_modules/sprotty/lib/base/views/mouse-tool.js");
const key_tool_1 = __webpack_require__(/*! ./views/key-tool */ "../../node_modules/sprotty/lib/base/views/key-tool.js");
const vnode_postprocessor_1 = __webpack_require__(/*! ./views/vnode-postprocessor */ "../../node_modules/sprotty/lib/base/views/vnode-postprocessor.js");
const view_1 = __webpack_require__(/*! ./views/view */ "../../node_modules/sprotty/lib/base/views/view.js");
const viewer_cache_1 = __webpack_require__(/*! ./views/viewer-cache */ "../../node_modules/sprotty/lib/base/views/viewer-cache.js");
const dom_helper_1 = __webpack_require__(/*! ./views/dom-helper */ "../../node_modules/sprotty/lib/base/views/dom-helper.js");
const id_postprocessor_1 = __webpack_require__(/*! ./views/id-postprocessor */ "../../node_modules/sprotty/lib/base/views/id-postprocessor.js");
const command_registration_1 = __webpack_require__(/*! ./commands/command-registration */ "../../node_modules/sprotty/lib/base/commands/command-registration.js");
const css_class_postprocessor_1 = __webpack_require__(/*! ./views/css-class-postprocessor */ "../../node_modules/sprotty/lib/base/views/css-class-postprocessor.js");
const tool_manager_1 = __webpack_require__(/*! ./tool-manager/tool-manager */ "../../node_modules/sprotty/lib/base/tool-manager/tool-manager.js");
const tool_1 = __webpack_require__(/*! ./tool-manager/tool */ "../../node_modules/sprotty/lib/base/tool-manager/tool.js");
const set_model_1 = __webpack_require__(/*! ./features/set-model */ "../../node_modules/sprotty/lib/base/features/set-model.js");
const ui_extension_registry_1 = __webpack_require__(/*! ./ui-extensions/ui-extension-registry */ "../../node_modules/sprotty/lib/base/ui-extensions/ui-extension-registry.js");
const diagram_locker_1 = __webpack_require__(/*! ./actions/diagram-locker */ "../../node_modules/sprotty/lib/base/actions/diagram-locker.js");
const defaultContainerModule = new inversify_1.ContainerModule((bind, _unbind, isBound) => {
    // Logging ---------------------------------------------
    bind(types_1.TYPES.ILogger).to(logging_1.NullLogger).inSingletonScope();
    bind(types_1.TYPES.LogLevel).toConstantValue(logging_1.LogLevel.warn);
    // Registries ---------------------------------------------
    bind(types_1.TYPES.SModelRegistry).to(smodel_factory_1.SModelRegistry).inSingletonScope();
    bind(action_handler_1.ActionHandlerRegistry).toSelf().inSingletonScope();
    bind(types_1.TYPES.ActionHandlerRegistryProvider).toProvider(ctx => {
        return () => {
            return new Promise((resolve) => {
                resolve(ctx.container.get(action_handler_1.ActionHandlerRegistry));
            });
        };
    });
    bind(types_1.TYPES.ViewRegistry).to(view_1.ViewRegistry).inSingletonScope();
    // Model Creation ---------------------------------------------
    bind(types_1.TYPES.IModelFactory).to(smodel_factory_1.SModelFactory).inSingletonScope();
    // Action Dispatcher ---------------------------------------------
    bind(types_1.TYPES.IActionDispatcher).to(action_dispatcher_1.ActionDispatcher).inSingletonScope();
    bind(types_1.TYPES.IActionDispatcherProvider).toProvider(ctx => {
        return () => {
            return new Promise((resolve) => {
                resolve(ctx.container.get(types_1.TYPES.IActionDispatcher));
            });
        };
    });
    bind(types_1.TYPES.IDiagramLocker).to(diagram_locker_1.DefaultDiagramLocker).inSingletonScope();
    // Action handler
    bind(types_1.TYPES.IActionHandlerInitializer).to(command_registration_1.CommandActionHandlerInitializer);
    // Command Stack ---------------------------------------------
    bind(types_1.TYPES.ICommandStack).to(command_stack_1.CommandStack).inSingletonScope();
    bind(types_1.TYPES.ICommandStackProvider).toProvider(ctx => {
        return () => {
            return new Promise((resolve) => {
                resolve(ctx.container.get(types_1.TYPES.ICommandStack));
            });
        };
    });
    bind(types_1.TYPES.CommandStackOptions).toConstantValue({
        defaultDuration: 250,
        undoHistoryLimit: 50
    });
    // Viewer ---------------------------------------------
    bind(viewer_1.ModelViewer).toSelf().inSingletonScope();
    bind(viewer_1.HiddenModelViewer).toSelf().inSingletonScope();
    bind(viewer_1.PopupModelViewer).toSelf().inSingletonScope();
    bind(types_1.TYPES.ModelViewer).toDynamicValue(ctx => {
        const container = ctx.container.createChild();
        container.bind(types_1.TYPES.IViewer).toService(viewer_1.ModelViewer);
        container.bind(viewer_cache_1.ViewerCache).toSelf();
        return container.get(viewer_cache_1.ViewerCache);
    }).inSingletonScope();
    bind(types_1.TYPES.PopupModelViewer).toDynamicValue(ctx => {
        const container = ctx.container.createChild();
        container.bind(types_1.TYPES.IViewer).toService(viewer_1.PopupModelViewer);
        container.bind(viewer_cache_1.ViewerCache).toSelf();
        return container.get(viewer_cache_1.ViewerCache);
    }).inSingletonScope();
    bind(types_1.TYPES.HiddenModelViewer).toService(viewer_1.HiddenModelViewer);
    bind(types_1.TYPES.IViewerProvider).toDynamicValue(ctx => {
        return {
            get modelViewer() {
                return ctx.container.get(types_1.TYPES.ModelViewer);
            },
            get hiddenModelViewer() {
                return ctx.container.get(types_1.TYPES.HiddenModelViewer);
            },
            get popupModelViewer() {
                return ctx.container.get(types_1.TYPES.PopupModelViewer);
            }
        };
    });
    bind(types_1.TYPES.ViewerOptions).toConstantValue((0, viewer_options_1.defaultViewerOptions)());
    bind(types_1.TYPES.PatcherProvider).to(viewer_1.PatcherProvider).inSingletonScope();
    bind(types_1.TYPES.DOMHelper).to(dom_helper_1.DOMHelper).inSingletonScope();
    bind(types_1.TYPES.ModelRendererFactory).toFactory(ctx => {
        return (targetKind, processors, args = {}) => {
            const viewRegistry = ctx.container.get(types_1.TYPES.ViewRegistry);
            return new viewer_1.ModelRenderer(viewRegistry, targetKind, processors, args);
        };
    });
    // Tools & Postprocessors --------------------------------------
    bind(id_postprocessor_1.IdPostprocessor).toSelf().inSingletonScope();
    bind(types_1.TYPES.IVNodePostprocessor).toService(id_postprocessor_1.IdPostprocessor);
    bind(types_1.TYPES.HiddenVNodePostprocessor).toService(id_postprocessor_1.IdPostprocessor);
    bind(css_class_postprocessor_1.CssClassPostprocessor).toSelf().inSingletonScope();
    bind(types_1.TYPES.IVNodePostprocessor).toService(css_class_postprocessor_1.CssClassPostprocessor);
    bind(types_1.TYPES.HiddenVNodePostprocessor).toService(css_class_postprocessor_1.CssClassPostprocessor);
    bind(mouse_tool_1.MouseTool).toSelf().inSingletonScope();
    bind(types_1.TYPES.IVNodePostprocessor).toService(mouse_tool_1.MouseTool);
    bind(key_tool_1.KeyTool).toSelf().inSingletonScope();
    bind(types_1.TYPES.IVNodePostprocessor).toService(key_tool_1.KeyTool);
    bind(vnode_postprocessor_1.FocusFixPostprocessor).toSelf().inSingletonScope();
    bind(types_1.TYPES.IVNodePostprocessor).toService(vnode_postprocessor_1.FocusFixPostprocessor);
    bind(types_1.TYPES.PopupVNodePostprocessor).toService(id_postprocessor_1.IdPostprocessor);
    bind(mouse_tool_1.PopupMouseTool).toSelf().inSingletonScope();
    bind(types_1.TYPES.PopupVNodePostprocessor).toService(mouse_tool_1.PopupMouseTool);
    // Animation Frame Sync ------------------------------------------
    bind(types_1.TYPES.AnimationFrameSyncer).to(animation_frame_syncer_1.AnimationFrameSyncer).inSingletonScope();
    // Canvas Initialization ---------------------------------------------
    const context = { bind, isBound };
    (0, command_registration_1.configureCommand)(context, initialize_canvas_1.InitializeCanvasBoundsCommand);
    bind(initialize_canvas_1.CanvasBoundsInitializer).toSelf().inSingletonScope();
    bind(types_1.TYPES.IVNodePostprocessor).toService(initialize_canvas_1.CanvasBoundsInitializer);
    // Model commands ---------------------------------------------
    (0, command_registration_1.configureCommand)(context, set_model_1.SetModelCommand);
    // Tool manager initialization ------------------------------------
    bind(types_1.TYPES.IToolManager).to(tool_manager_1.ToolManager).inSingletonScope();
    bind(tool_manager_1.DefaultToolsEnablingKeyListener).toSelf().inSingletonScope();
    bind(types_1.TYPES.KeyListener).toService(tool_manager_1.DefaultToolsEnablingKeyListener);
    bind(tool_manager_1.ToolManagerActionHandler).toSelf().inSingletonScope();
    (0, action_handler_1.configureActionHandler)(context, tool_1.EnableDefaultToolsAction.KIND, tool_manager_1.ToolManagerActionHandler);
    (0, action_handler_1.configureActionHandler)(context, tool_1.EnableToolsAction.KIND, tool_manager_1.ToolManagerActionHandler);
    // UIExtension registry initialization ------------------------------------
    bind(types_1.TYPES.UIExtensionRegistry).to(ui_extension_registry_1.UIExtensionRegistry).inSingletonScope();
    (0, command_registration_1.configureCommand)(context, ui_extension_registry_1.SetUIExtensionVisibilityCommand);
    // Tracker for last known mouse position on diagram ------------------------
    bind(mouse_tool_1.MousePositionTracker).toSelf().inSingletonScope();
    bind(types_1.TYPES.MouseListener).toService(mouse_tool_1.MousePositionTracker);
});
exports["default"] = defaultContainerModule;


/***/ }),

/***/ "../../node_modules/sprotty/lib/base/features/initialize-canvas.js":
/*!*************************************************************************!*\
  !*** ../../node_modules/sprotty/lib/base/features/initialize-canvas.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.InitializeCanvasBoundsCommand = exports.InitializeCanvasBoundsAction = exports.CanvasBoundsInitializer = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const geometry_1 = __webpack_require__(/*! sprotty-protocol/lib/utils/geometry */ "../../node_modules/sprotty-protocol/lib/utils/geometry.js");
const types_1 = __webpack_require__(/*! ../types */ "../../node_modules/sprotty/lib/base/types.js");
const smodel_1 = __webpack_require__(/*! ../model/smodel */ "../../node_modules/sprotty/lib/base/model/smodel.js");
const command_1 = __webpack_require__(/*! ../commands/command */ "../../node_modules/sprotty/lib/base/commands/command.js");
const browser_1 = __webpack_require__(/*! ../../utils/browser */ "../../node_modules/sprotty/lib/utils/browser.js");
/**
 * Grabs the bounds from the root element in page coordinates and fires a
 * InitializeCanvasBoundsAction. This size is needed for other actions such
 * as FitToScreenAction.
 */
let CanvasBoundsInitializer = class CanvasBoundsInitializer {
    decorate(vnode, element) {
        if (element instanceof smodel_1.SModelRootImpl && !geometry_1.Dimension.isValid(element.canvasBounds)) {
            this.rootAndVnode = [element, vnode];
        }
        return vnode;
    }
    postUpdate() {
        if (this.rootAndVnode !== undefined) {
            const domElement = this.rootAndVnode[1].elm;
            const oldBounds = this.rootAndVnode[0].canvasBounds;
            if (domElement !== undefined) {
                const newBounds = this.getBoundsInPage(domElement);
                if (!((0, geometry_1.almostEquals)(newBounds.x, oldBounds.x)
                    && (0, geometry_1.almostEquals)(newBounds.y, oldBounds.y)
                    && (0, geometry_1.almostEquals)(newBounds.width, oldBounds.width)
                    && (0, geometry_1.almostEquals)(newBounds.height, oldBounds.width)))
                    this.actionDispatcher.dispatch(InitializeCanvasBoundsAction.create(newBounds));
            }
            this.rootAndVnode = undefined;
        }
    }
    getBoundsInPage(element) {
        const bounds = element.getBoundingClientRect();
        const scroll = (0, browser_1.getWindowScroll)();
        return {
            x: bounds.left + scroll.x,
            y: bounds.top + scroll.y,
            width: bounds.width,
            height: bounds.height
        };
    }
};
__decorate([
    (0, inversify_1.inject)(types_1.TYPES.IActionDispatcher),
    __metadata("design:type", Object)
], CanvasBoundsInitializer.prototype, "actionDispatcher", void 0);
CanvasBoundsInitializer = __decorate([
    (0, inversify_1.injectable)()
], CanvasBoundsInitializer);
exports.CanvasBoundsInitializer = CanvasBoundsInitializer;
var InitializeCanvasBoundsAction;
(function (InitializeCanvasBoundsAction) {
    InitializeCanvasBoundsAction.KIND = 'initializeCanvasBounds';
    function create(newCanvasBounds) {
        return {
            kind: InitializeCanvasBoundsAction.KIND,
            newCanvasBounds
        };
    }
    InitializeCanvasBoundsAction.create = create;
})(InitializeCanvasBoundsAction = exports.InitializeCanvasBoundsAction || (exports.InitializeCanvasBoundsAction = {}));
let InitializeCanvasBoundsCommand = class InitializeCanvasBoundsCommand extends command_1.SystemCommand {
    constructor(action) {
        super();
        this.action = action;
    }
    execute(context) {
        this.newCanvasBounds = this.action.newCanvasBounds;
        context.root.canvasBounds = this.newCanvasBounds;
        return context.root;
    }
    undo(context) {
        return context.root;
    }
    redo(context) {
        return context.root;
    }
};
InitializeCanvasBoundsCommand.KIND = InitializeCanvasBoundsAction.KIND;
InitializeCanvasBoundsCommand = __decorate([
    (0, inversify_1.injectable)(),
    __param(0, (0, inversify_1.inject)(types_1.TYPES.Action)),
    __metadata("design:paramtypes", [Object])
], InitializeCanvasBoundsCommand);
exports.InitializeCanvasBoundsCommand = InitializeCanvasBoundsCommand;


/***/ }),

/***/ "../../node_modules/sprotty/lib/base/features/set-model.js":
/*!*****************************************************************!*\
  !*** ../../node_modules/sprotty/lib/base/features/set-model.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SetModelAction = exports.RequestModelAction = exports.SetModelCommand = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const actions_1 = __webpack_require__(/*! sprotty-protocol/lib/actions */ "../../node_modules/sprotty-protocol/lib/actions.js");
const command_1 = __webpack_require__(/*! ../commands/command */ "../../node_modules/sprotty/lib/base/commands/command.js");
const types_1 = __webpack_require__(/*! ../types */ "../../node_modules/sprotty/lib/base/types.js");
const initialize_canvas_1 = __webpack_require__(/*! ./initialize-canvas */ "../../node_modules/sprotty/lib/base/features/initialize-canvas.js");
let SetModelCommand = class SetModelCommand extends command_1.ResetCommand {
    constructor(action) {
        super();
        this.action = action;
    }
    execute(context) {
        this.oldRoot = context.modelFactory.createRoot(context.root);
        this.newRoot = context.modelFactory.createRoot(this.action.newRoot);
        return this.newRoot;
    }
    undo(context) {
        return this.oldRoot;
    }
    redo(context) {
        return this.newRoot;
    }
    get blockUntil() {
        return action => action.kind === initialize_canvas_1.InitializeCanvasBoundsCommand.KIND;
    }
};
SetModelCommand.KIND = actions_1.SetModelAction.KIND;
SetModelCommand = __decorate([
    (0, inversify_1.injectable)(),
    __param(0, (0, inversify_1.inject)(types_1.TYPES.Action)),
    __metadata("design:paramtypes", [Object])
], SetModelCommand);
exports.SetModelCommand = SetModelCommand;
// Compatibility deprecation layer (will be removed with the graduation 1.0.0 release)
/**
 * Sent from the client to the model source (e.g. a DiagramServer) in order to request a model. Usually this
 * is the first message that is sent to the source, so it is also used to initiate the communication.
 * The response is a SetModelAction or an UpdateModelAction.
 *
 * @deprecated Use the declaration from `sprotty-protocol` instead.
 */
class RequestModelAction {
    constructor(options, requestId = '') {
        this.options = options;
        this.requestId = requestId;
        this.kind = RequestModelAction.KIND;
    }
    /** Factory function to dispatch a request with the `IActionDispatcher` */
    static create(options) {
        return new RequestModelAction(options, (0, actions_1.generateRequestId)());
    }
}
RequestModelAction.KIND = 'requestModel';
exports.RequestModelAction = RequestModelAction;
/**
 * Sent from the model source to the client in order to set the model. If a model is already present, it is replaced.
 *
 * @deprecated Use the declaration from `sprotty-protocol` instead.
 */
class SetModelAction {
    constructor(newRoot, responseId = '') {
        this.newRoot = newRoot;
        this.responseId = responseId;
        this.kind = SetModelAction.KIND;
    }
}
SetModelAction.KIND = 'setModel';
exports.SetModelAction = SetModelAction;


/***/ }),

/***/ "../../node_modules/sprotty/lib/base/model/smodel-extension.js":
/*!*********************************************************************!*\
  !*** ../../node_modules/sprotty/lib/base/model/smodel-extension.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ "../../node_modules/sprotty/lib/base/model/smodel-factory.js":
/*!*******************************************************************!*\
  !*** ../../node_modules/sprotty/lib/base/model/smodel-factory.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.createFeatureSet = exports.EMPTY_ROOT = exports.SModelFactory = exports.SModelRegistry = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const types_1 = __webpack_require__(/*! ../types */ "../../node_modules/sprotty/lib/base/types.js");
const registry_1 = __webpack_require__(/*! ../../utils/registry */ "../../node_modules/sprotty/lib/utils/registry.js");
const smodel_1 = __webpack_require__(/*! ./smodel */ "../../node_modules/sprotty/lib/base/model/smodel.js");
/**
 * Model element classes registered here are considered automatically when constructring a model from its schema.
 */
let SModelRegistry = class SModelRegistry extends registry_1.FactoryRegistry {
    constructor(registrations) {
        super();
        registrations.forEach(registration => {
            let defaultFeatures = this.getDefaultFeatures(registration.constr);
            if (!defaultFeatures && registration.features && registration.features.enable)
                defaultFeatures = [];
            if (defaultFeatures) {
                const featureSet = createFeatureSet(defaultFeatures, registration.features);
                this.register(registration.type, () => {
                    const element = new registration.constr();
                    element.features = featureSet;
                    return element;
                });
            }
            else {
                this.register(registration.type, () => new registration.constr());
            }
        });
    }
    getDefaultFeatures(constr) {
        let obj = constr;
        do {
            const defaultFeatures = obj.DEFAULT_FEATURES;
            if (defaultFeatures)
                return defaultFeatures;
            obj = Object.getPrototypeOf(obj);
        } while (obj);
        return undefined;
    }
};
SModelRegistry = __decorate([
    (0, inversify_1.injectable)(),
    __param(0, (0, inversify_1.multiInject)(types_1.TYPES.SModelElementRegistration)),
    __param(0, (0, inversify_1.optional)()),
    __metadata("design:paramtypes", [Array])
], SModelRegistry);
exports.SModelRegistry = SModelRegistry;
/**
 * The default model factory creates SModelRoot for the root element and SChildElement for all other
 * model elements.
 */
let SModelFactory = class SModelFactory {
    createElement(schema, parent) {
        let child;
        if (this.registry.hasKey(schema.type)) {
            const regElement = this.registry.get(schema.type, undefined);
            if (!(regElement instanceof smodel_1.SChildElementImpl))
                throw new Error(`Element with type ${schema.type} was expected to be an SChildElement.`);
            child = regElement;
        }
        else {
            child = new smodel_1.SChildElementImpl();
        }
        return this.initializeChild(child, schema, parent);
    }
    createRoot(schema) {
        let root;
        if (this.registry.hasKey(schema.type)) {
            const regElement = this.registry.get(schema.type, undefined);
            if (!(regElement instanceof smodel_1.SModelRootImpl))
                throw new Error(`Element with type ${schema.type} was expected to be an SModelRoot.`);
            root = regElement;
        }
        else {
            root = new smodel_1.SModelRootImpl();
        }
        return this.initializeRoot(root, schema);
    }
    createSchema(element) {
        const schema = {};
        for (const key in element) {
            if (!this.isReserved(element, key)) {
                const value = element[key];
                if (typeof value !== 'function')
                    schema[key] = value;
            }
        }
        if (element instanceof smodel_1.SParentElementImpl)
            schema['children'] = element.children.map(child => this.createSchema(child));
        return schema;
    }
    initializeElement(element, schema) {
        for (const key in schema) {
            if (!this.isReserved(element, key)) {
                const value = schema[key];
                if (typeof value !== 'function')
                    element[key] = value;
            }
        }
        return element;
    }
    isReserved(element, propertyName) {
        if (['children', 'parent', 'index'].indexOf(propertyName) >= 0)
            return true;
        let obj = element;
        do {
            const descriptor = Object.getOwnPropertyDescriptor(obj, propertyName);
            if (descriptor !== undefined)
                return descriptor.get !== undefined;
            obj = Object.getPrototypeOf(obj);
        } while (obj);
        return false;
    }
    initializeParent(parent, schema) {
        this.initializeElement(parent, schema);
        if ((0, smodel_1.isParent)(schema)) {
            parent.children = schema.children.map(childSchema => this.createElement(childSchema, parent));
        }
        return parent;
    }
    initializeChild(child, schema, parent) {
        this.initializeParent(child, schema);
        if (parent !== undefined) {
            child.parent = parent;
        }
        return child;
    }
    initializeRoot(root, schema) {
        this.initializeParent(root, schema);
        root.index.add(root);
        return root;
    }
};
__decorate([
    (0, inversify_1.inject)(types_1.TYPES.SModelRegistry),
    __metadata("design:type", SModelRegistry)
], SModelFactory.prototype, "registry", void 0);
SModelFactory = __decorate([
    (0, inversify_1.injectable)()
], SModelFactory);
exports.SModelFactory = SModelFactory;
exports.EMPTY_ROOT = Object.freeze({
    type: 'NONE',
    id: 'EMPTY'
});
function createFeatureSet(defaults, custom) {
    const featureSet = new Set(defaults);
    if (custom && custom.enable) {
        for (const f of custom.enable) {
            featureSet.add(f);
        }
    }
    if (custom && custom.disable) {
        for (const f of custom.disable) {
            featureSet.delete(f);
        }
    }
    return featureSet;
}
exports.createFeatureSet = createFeatureSet;


/***/ }),

/***/ "../../node_modules/sprotty/lib/base/model/smodel-utils.js":
/*!*****************************************************************!*\
  !*** ../../node_modules/sprotty/lib/base/model/smodel-utils.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.findElement = exports.getSubType = exports.getBasicType = exports.transformToRootBounds = exports.containsSome = exports.translateBounds = exports.translatePoint = exports.findParentByFeature = exports.findParent = exports.registerModelElement = void 0;
const types_1 = __webpack_require__(/*! ../types */ "../../node_modules/sprotty/lib/base/types.js");
const smodel_1 = __webpack_require__(/*! ./smodel */ "../../node_modules/sprotty/lib/base/model/smodel.js");
/**
 * Register a model element constructor for an element type.
 */
function registerModelElement(context, type, constr, features) {
    context.bind(types_1.TYPES.SModelElementRegistration).toConstantValue({
        type, constr, features
    });
}
exports.registerModelElement = registerModelElement;
/**
 * Find a parent element that satisfies the given predicate.
 */
function findParent(element, predicate) {
    let current = element;
    while (current !== undefined) {
        if (predicate(current))
            return current;
        else if (current instanceof smodel_1.SChildElementImpl)
            current = current.parent;
        else
            current = undefined;
    }
    return current;
}
exports.findParent = findParent;
/**
 * Find a parent element that implements the feature identified with the given predicate.
 */
function findParentByFeature(element, predicate) {
    let current = element;
    while (current !== undefined) {
        if (predicate(current))
            return current;
        else if (current instanceof smodel_1.SChildElementImpl)
            current = current.parent;
        else
            current = undefined;
    }
    return current;
}
exports.findParentByFeature = findParentByFeature;
/**
 * Translate a point from the coordinate system of the source element to the coordinate system
 * of the target element.
 */
function translatePoint(point, source, target) {
    if (source !== target) {
        // Translate from the source to the root element
        while (source instanceof smodel_1.SChildElementImpl) {
            point = source.localToParent(point);
            source = source.parent;
            if (source === target)
                return point;
        }
        // Translate from the root to the target element
        const targetTrace = [];
        while (target instanceof smodel_1.SChildElementImpl) {
            targetTrace.push(target);
            target = target.parent;
        }
        if (source !== target)
            throw new Error("Incompatible source and target: " + source.id + ", " + target.id);
        for (let i = targetTrace.length - 1; i >= 0; i--) {
            point = targetTrace[i].parentToLocal(point);
        }
    }
    return point;
}
exports.translatePoint = translatePoint;
/**
 * Translate some bounds from the coordinate system of the source element to the coordinate system
 * of the target element.
 */
function translateBounds(bounds, source, target) {
    const upperLeft = translatePoint(bounds, source, target);
    const lowerRight = translatePoint({ x: bounds.x + bounds.width, y: bounds.y + bounds.height }, source, target);
    return {
        x: upperLeft.x,
        y: upperLeft.y,
        width: lowerRight.x - upperLeft.x,
        height: lowerRight.y - upperLeft.y
    };
}
exports.translateBounds = translateBounds;
/**
 * Tests if the given model contains an id of then given element or one of its descendants.
 */
function containsSome(root, element) {
    const test = (el) => root.index.getById(el.id) !== undefined;
    const find = (elements) => elements.some(el => test(el) || find(el.children));
    return find([element]);
}
exports.containsSome = containsSome;
/**
 * Transforms the local bounds all the way up to the root.
 */
function transformToRootBounds(parent, bounds) {
    while (parent instanceof smodel_1.SChildElementImpl) {
        bounds = parent.localToParent(bounds);
        parent = parent.parent;
    }
    return bounds;
}
exports.transformToRootBounds = transformToRootBounds;
// Compatibility deprecation layer (will be removed with the graduation 1.0.0 release)
/**
 * Model element types can include a colon to separate the basic type and a sub-type. This function
 * extracts the basic type of a model element.
 *
 * @deprecated Use the declaration from `sprotty-protocol` instead.
 */
function getBasicType(schema) {
    if (!schema.type)
        return '';
    const colonIndex = schema.type.indexOf(':');
    if (colonIndex >= 0)
        return schema.type.substring(0, colonIndex);
    else
        return schema.type;
}
exports.getBasicType = getBasicType;
/**
 * Model element types can include a colon to separate the basic type and a sub-type. This function
 * extracts the sub-type of a model element.
 *
 * @deprecated Use the declaration from `sprotty-protocol` instead.
 */
function getSubType(schema) {
    if (!schema.type)
        return '';
    const colonIndex = schema.type.indexOf(':');
    if (colonIndex >= 0)
        return schema.type.substring(colonIndex + 1);
    else
        return schema.type;
}
exports.getSubType = getSubType;
/**
 * Find the element with the given identifier. If you need to find multiple elements, using an
 * SModelIndex might be more effective.
 *
 * @deprecated Use the declaration from `sprotty-protocol` instead.
 */
function findElement(parent, elementId) {
    if (parent.id === elementId)
        return parent;
    if (parent.children !== undefined) {
        for (const child of parent.children) {
            const result = findElement(child, elementId);
            if (result !== undefined)
                return result;
        }
    }
    return undefined;
}
exports.findElement = findElement;


/***/ }),

/***/ "../../node_modules/sprotty/lib/base/model/smodel.js":
/*!***********************************************************!*\
  !*** ../../node_modules/sprotty/lib/base/model/smodel.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SModelRoot = exports.SModelElement = exports.SChildElement = exports.SParentElement = exports.ModelIndexImpl = exports.createRandomId = exports.SModelRootImpl = exports.SChildElementImpl = exports.SParentElementImpl = exports.isParent = exports.SModelElementImpl = void 0;
const geometry_1 = __webpack_require__(/*! sprotty-protocol/lib/utils/geometry */ "../../node_modules/sprotty-protocol/lib/utils/geometry.js");
const iterable_1 = __webpack_require__(/*! ../../utils/iterable */ "../../node_modules/sprotty/lib/utils/iterable.js");
/**
 * Base class for all elements of the internal diagram model.
 * Each model element must have a unique ID and a type that is used to look up its view.
 */
class SModelElementImpl {
    get root() {
        let current = this;
        while (current) {
            if (current instanceof SModelRootImpl)
                return current;
            else if (current instanceof SChildElementImpl)
                current = current.parent;
            else
                current = undefined;
        }
        throw new Error('Element has no root');
    }
    get index() {
        return this.root.index;
    }
    /**
     * A feature is a symbol identifying some functionality that can be enabled or disabled for
     * a model element. The set of supported features is determined by the `features` property.
     */
    hasFeature(feature) {
        return this.features !== undefined && this.features.has(feature);
    }
}
exports.SModelElementImpl = SModelElementImpl;
function isParent(element) {
    const children = element.children;
    return children !== undefined && children.constructor === Array;
}
exports.isParent = isParent;
/**
 * A parent element may contain child elements, thus the diagram model forms a tree.
 */
class SParentElementImpl extends SModelElementImpl {
    constructor() {
        super(...arguments);
        this.children = [];
    }
    add(child, index) {
        const children = this.children;
        if (index === undefined) {
            children.push(child);
        }
        else {
            if (index < 0 || index > this.children.length) {
                throw new Error(`Child index ${index} out of bounds (0..${children.length})`);
            }
            children.splice(index, 0, child);
        }
        child.parent = this;
        this.index.add(child);
    }
    remove(child) {
        const children = this.children;
        const i = children.indexOf(child);
        if (i < 0) {
            throw new Error(`No such child ${child.id}`);
        }
        children.splice(i, 1);
        this.index.remove(child);
    }
    removeAll(filter) {
        const children = this.children;
        if (filter !== undefined) {
            for (let i = children.length - 1; i >= 0; i--) {
                if (filter(children[i])) {
                    const child = children.splice(i, 1)[0];
                    this.index.remove(child);
                }
            }
        }
        else {
            children.forEach(child => {
                this.index.remove(child);
            });
            children.splice(0, children.length);
        }
    }
    move(child, newIndex) {
        const children = this.children;
        const i = children.indexOf(child);
        if (i === -1) {
            throw new Error(`No such child ${child.id}`);
        }
        else {
            if (newIndex < 0 || newIndex > children.length - 1) {
                throw new Error(`Child index ${newIndex} out of bounds (0..${children.length})`);
            }
            children.splice(i, 1);
            children.splice(newIndex, 0, child);
        }
    }
    /**
     * Transform the given bounds from the local coordinate system of this element to the coordinate
     * system of its parent. This function should consider any transformation that is applied to the
     * view of this element and its contents.
     * The base implementation assumes that this element does not define a local coordinate system,
     * so it leaves the bounds unchanged.
     */
    localToParent(point) {
        return (0, geometry_1.isBounds)(point) ? point : { x: point.x, y: point.y, width: -1, height: -1 };
    }
    /**
     * Transform the given bounds from the coordinate system of this element's parent to its local
     * coordinate system. This function should consider any transformation that is applied to the
     * view of this element and its contents.
     * The base implementation assumes that this element does not define a local coordinate system,
     * so it leaves the bounds unchanged.
     */
    parentToLocal(point) {
        return (0, geometry_1.isBounds)(point) ? point : { x: point.x, y: point.y, width: -1, height: -1 };
    }
}
exports.SParentElementImpl = SParentElementImpl;
/**
 * A child element is contained in a parent element. All elements except the model root are child
 * elements. In order to keep the model class hierarchy simple, every child element is also a
 * parent element, although for many elements the array of children is empty (i.e. they are
 * leafs in the model element tree).
 */
class SChildElementImpl extends SParentElementImpl {
}
exports.SChildElementImpl = SChildElementImpl;
/**
 * Base class for the root element of the diagram model tree.
 */
class SModelRootImpl extends SParentElementImpl {
    constructor(index = new ModelIndexImpl()) {
        super();
        this.canvasBounds = geometry_1.Bounds.EMPTY;
        // Override the index property from SModelElement, which has a getter, with a data property
        Object.defineProperty(this, 'index', {
            value: index,
            writable: false
        });
    }
}
exports.SModelRootImpl = SModelRootImpl;
const ID_CHARS = '0123456789abcdefghijklmnopqrstuvwxyz';
function createRandomId(length = 8) {
    let id = '';
    for (let i = 0; i < length; i++) {
        id += ID_CHARS.charAt(Math.floor(Math.random() * ID_CHARS.length));
    }
    return id;
}
exports.createRandomId = createRandomId;
/**
 * This index implementation is for the _internal model_ that is used for rendering.
 */
class ModelIndexImpl {
    constructor() {
        this.id2element = new Map();
    }
    add(element) {
        if (!element.id) {
            do {
                element.id = createRandomId();
            } while (this.contains(element));
        }
        else if (this.contains(element)) {
            throw new Error('Duplicate ID in model: ' + element.id);
        }
        this.id2element.set(element.id, element);
        if (element instanceof SParentElementImpl) {
            for (const child of element.children) {
                this.add(child);
            }
        }
    }
    remove(element) {
        this.id2element.delete(element.id);
        if (element instanceof SParentElementImpl) {
            for (const child of element.children) {
                this.remove(child);
            }
        }
    }
    contains(element) {
        return this.id2element.has(element.id);
    }
    getById(id) {
        return this.id2element.get(id);
    }
    getAttachedElements(element) {
        return [];
    }
    all() {
        return (0, iterable_1.mapIterable)(this.id2element, ([key, value]) => value);
    }
}
exports.ModelIndexImpl = ModelIndexImpl;
/** @deprecated Use `SParentElementImpl` instead. */
exports.SParentElement = SParentElementImpl;
/** @deprecated Use `SChildElementImpl` instead. */
exports.SChildElement = SChildElementImpl;
/** @deprecated Use `SModelElementImpl` instead. */
exports.SModelElement = SModelElementImpl;
/** @deprecated Use `SModelRootImpl` instead. */
exports.SModelRoot = SModelRootImpl;


/***/ }),

/***/ "../../node_modules/sprotty/lib/base/tool-manager/tool-manager.js":
/*!************************************************************************!*\
  !*** ../../node_modules/sprotty/lib/base/tool-manager/tool-manager.js ***!
  \************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.DefaultToolsEnablingKeyListener = exports.ToolManagerActionHandler = exports.ToolManager = void 0;
/********************************************************************************
 * Copyright (c) 2019 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const types_1 = __webpack_require__(/*! ../types */ "../../node_modules/sprotty/lib/base/types.js");
const tool_1 = __webpack_require__(/*! ./tool */ "../../node_modules/sprotty/lib/base/tool-manager/tool.js");
const key_tool_1 = __webpack_require__(/*! ../views/key-tool */ "../../node_modules/sprotty/lib/base/views/key-tool.js");
const keyboard_1 = __webpack_require__(/*! ../../utils/keyboard */ "../../node_modules/sprotty/lib/utils/keyboard.js");
let ToolManager = class ToolManager {
    constructor() {
        this.tools = [];
        this.defaultTools = [];
        this.actives = [];
    }
    get managedTools() {
        return this.defaultTools.concat(this.tools);
    }
    get activeTools() {
        return this.actives;
    }
    disableActiveTools() {
        this.actives.forEach(tool => tool.disable());
        this.actives.splice(0, this.actives.length);
    }
    enableDefaultTools() {
        this.enable(this.defaultTools.map(tool => tool.id));
    }
    enable(toolIds) {
        this.disableActiveTools();
        const tools = toolIds.map(id => this.tool(id));
        tools.forEach(tool => {
            if (tool !== undefined) {
                tool.enable();
                this.actives.push(tool);
            }
        });
    }
    tool(toolId) {
        return this.managedTools.find(tool => tool.id === toolId);
    }
    registerDefaultTools(...tools) {
        for (const tool of tools) {
            this.defaultTools.push(tool);
        }
    }
    registerTools(...tools) {
        for (const tool of tools) {
            this.tools.push(tool);
        }
    }
};
ToolManager = __decorate([
    (0, inversify_1.injectable)()
], ToolManager);
exports.ToolManager = ToolManager;
let ToolManagerActionHandler = class ToolManagerActionHandler {
    handle(action) {
        switch (action.kind) {
            case tool_1.EnableDefaultToolsAction.KIND:
                this.toolManager.enableDefaultTools();
                break;
            case tool_1.EnableToolsAction.KIND:
                this.toolManager.enable(action.toolIds);
                break;
        }
    }
};
__decorate([
    (0, inversify_1.inject)(types_1.TYPES.IToolManager),
    __metadata("design:type", Object)
], ToolManagerActionHandler.prototype, "toolManager", void 0);
ToolManagerActionHandler = __decorate([
    (0, inversify_1.injectable)()
], ToolManagerActionHandler);
exports.ToolManagerActionHandler = ToolManagerActionHandler;
let DefaultToolsEnablingKeyListener = class DefaultToolsEnablingKeyListener extends key_tool_1.KeyListener {
    keyDown(element, event) {
        if ((0, keyboard_1.matchesKeystroke)(event, 'Escape')) {
            return [tool_1.EnableDefaultToolsAction.create()];
        }
        return [];
    }
};
DefaultToolsEnablingKeyListener = __decorate([
    (0, inversify_1.injectable)()
], DefaultToolsEnablingKeyListener);
exports.DefaultToolsEnablingKeyListener = DefaultToolsEnablingKeyListener;


/***/ }),

/***/ "../../node_modules/sprotty/lib/base/tool-manager/tool.js":
/*!****************************************************************!*\
  !*** ../../node_modules/sprotty/lib/base/tool-manager/tool.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2019 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.EnableDefaultToolsAction = exports.EnableToolsAction = void 0;
var EnableToolsAction;
(function (EnableToolsAction) {
    EnableToolsAction.KIND = "enable-tools";
    function create(toolIds) {
        return {
            kind: EnableToolsAction.KIND,
            toolIds
        };
    }
    EnableToolsAction.create = create;
})(EnableToolsAction = exports.EnableToolsAction || (exports.EnableToolsAction = {}));
var EnableDefaultToolsAction;
(function (EnableDefaultToolsAction) {
    EnableDefaultToolsAction.KIND = "enable-default-tools";
    function create() {
        return {
            kind: EnableDefaultToolsAction.KIND
        };
    }
    EnableDefaultToolsAction.create = create;
})(EnableDefaultToolsAction = exports.EnableDefaultToolsAction || (exports.EnableDefaultToolsAction = {}));


/***/ }),

/***/ "../../node_modules/sprotty/lib/base/types.js":
/*!****************************************************!*\
  !*** ../../node_modules/sprotty/lib/base/types.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TYPES = void 0;
/* eslint-disable @typescript-eslint/naming-convention */
exports.TYPES = {
    Action: Symbol('Action'),
    IActionDispatcher: Symbol('IActionDispatcher'),
    IActionDispatcherProvider: Symbol('IActionDispatcherProvider'),
    IActionHandlerInitializer: Symbol('IActionHandlerInitializer'),
    ActionHandlerRegistration: Symbol('ActionHandlerRegistration'),
    ActionHandlerRegistryProvider: Symbol('ActionHandlerRegistryProvider'),
    IAnchorComputer: Symbol('IAnchor'),
    AnimationFrameSyncer: Symbol('AnimationFrameSyncer'),
    /** @deprecated deprecated since 0.12.0 - please use `configureButtonHandler` */
    IButtonHandler: Symbol('IButtonHandler'),
    IButtonHandlerRegistration: Symbol('IButtonHandlerRegistration'),
    ICommandPaletteActionProvider: Symbol('ICommandPaletteActionProvider'),
    ICommandPaletteActionProviderRegistry: Symbol('ICommandPaletteActionProviderRegistry'),
    CommandRegistration: Symbol('CommandRegistration'),
    ICommandStack: Symbol('ICommandStack'),
    CommandStackOptions: Symbol('CommandStackOptions'),
    ICommandStackProvider: Symbol('ICommandStackProvider'),
    IContextMenuItemProvider: Symbol.for("IContextMenuProvider"),
    IContextMenuProviderRegistry: Symbol.for("IContextMenuProviderRegistry"),
    IContextMenuService: Symbol.for("IContextMenuService"),
    IContextMenuServiceProvider: Symbol.for("IContextMenuServiceProvider"),
    DOMHelper: Symbol('DOMHelper'),
    IDiagramLocker: Symbol('IDiagramLocker'),
    IEdgeRouter: Symbol('IEdgeRouter'),
    IEdgeRoutePostprocessor: Symbol('IEdgeRoutePostprocessor'),
    IEditLabelValidationDecorator: Symbol('IEditLabelValidationDecorator'),
    IEditLabelValidator: Symbol('IEditLabelValidator'),
    HiddenModelViewer: Symbol('HiddenModelViewer'),
    HiddenVNodePostprocessor: Symbol('HiddenVNodeDecorator'),
    HoverState: Symbol('HoverState'),
    KeyListener: Symbol('KeyListener'),
    LayoutRegistration: Symbol('LayoutRegistration'),
    LayoutRegistry: Symbol('LayoutRegistry'),
    Layouter: Symbol('Layouter'),
    LogLevel: Symbol('LogLevel'),
    ILogger: Symbol('ILogger'),
    IModelFactory: Symbol('IModelFactory'),
    IModelLayoutEngine: Symbol('IModelLayoutEngine'),
    ModelRendererFactory: Symbol('ModelRendererFactory'),
    ModelSource: Symbol('ModelSource'),
    ModelSourceProvider: Symbol('ModelSourceProvider'),
    ModelViewer: Symbol('ModelViewer'),
    MouseListener: Symbol('MouseListener'),
    PatcherProvider: Symbol('PatcherProvider'),
    IPopupModelProvider: Symbol('IPopupModelProvider'),
    PopupModelViewer: Symbol('PopupModelViewer'),
    PopupMouseListener: Symbol('PopupMouseListener'),
    PopupVNodePostprocessor: Symbol('PopupVNodeDecorator'),
    SModelElementRegistration: Symbol('SModelElementRegistration'),
    SModelRegistry: Symbol('SModelRegistry'),
    ISnapper: Symbol('ISnapper'),
    SvgExporter: Symbol('SvgExporter'),
    IToolManager: Symbol('IToolManager'),
    IUIExtension: Symbol('IUIExtension'),
    UIExtensionRegistry: Symbol('UIExtensionRegistry'),
    IVNodePostprocessor: Symbol('IVNodePostprocessor'),
    ViewRegistration: Symbol('ViewRegistration'),
    ViewRegistry: Symbol('ViewRegistry'),
    IViewer: Symbol('IViewer'),
    ViewerOptions: Symbol('ViewerOptions'),
    IViewerProvider: Symbol('IViewerProvider'),
};
/* eslint-enable */


/***/ }),

/***/ "../../node_modules/sprotty/lib/base/ui-extensions/ui-extension-registry.js":
/*!**********************************************************************************!*\
  !*** ../../node_modules/sprotty/lib/base/ui-extensions/ui-extension-registry.js ***!
  \**********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SetUIExtensionVisibilityCommand = exports.SetUIExtensionVisibilityAction = exports.UIExtensionRegistry = void 0;
/********************************************************************************
 * Copyright (c) 2019 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const registry_1 = __webpack_require__(/*! ../../utils/registry */ "../../node_modules/sprotty/lib/utils/registry.js");
const command_1 = __webpack_require__(/*! ../commands/command */ "../../node_modules/sprotty/lib/base/commands/command.js");
const types_1 = __webpack_require__(/*! ../types */ "../../node_modules/sprotty/lib/base/types.js");
/**
 * The registry maintaining UI extensions registered via `TYPES.IUIExtension`.
 */
let UIExtensionRegistry = class UIExtensionRegistry extends registry_1.InstanceRegistry {
    constructor(extensions = []) {
        super();
        extensions.forEach((extension) => this.register(extension.id(), extension));
    }
};
UIExtensionRegistry = __decorate([
    (0, inversify_1.injectable)(),
    __param(0, (0, inversify_1.multiInject)(types_1.TYPES.IUIExtension)),
    __param(0, (0, inversify_1.optional)()),
    __metadata("design:paramtypes", [Array])
], UIExtensionRegistry);
exports.UIExtensionRegistry = UIExtensionRegistry;
var SetUIExtensionVisibilityAction;
(function (SetUIExtensionVisibilityAction) {
    SetUIExtensionVisibilityAction.KIND = "setUIExtensionVisibility";
    function create(options) {
        var _a;
        return {
            kind: SetUIExtensionVisibilityAction.KIND,
            extensionId: options.extensionId,
            visible: options.visible,
            contextElementsId: (_a = options.contextElementsId) !== null && _a !== void 0 ? _a : []
        };
    }
    SetUIExtensionVisibilityAction.create = create;
})(SetUIExtensionVisibilityAction = exports.SetUIExtensionVisibilityAction || (exports.SetUIExtensionVisibilityAction = {}));
let SetUIExtensionVisibilityCommand = class SetUIExtensionVisibilityCommand extends command_1.SystemCommand {
    constructor(action) {
        super();
        this.action = action;
    }
    execute(context) {
        const extension = this.registry.get(this.action.extensionId);
        if (extension) {
            this.action.visible ? extension.show(context.root, ...this.action.contextElementsId) : extension.hide();
        }
        return { model: context.root, modelChanged: false };
    }
    undo(context) {
        return { model: context.root, modelChanged: false };
    }
    redo(context) {
        return { model: context.root, modelChanged: false };
    }
};
SetUIExtensionVisibilityCommand.KIND = SetUIExtensionVisibilityAction.KIND;
__decorate([
    (0, inversify_1.inject)(types_1.TYPES.UIExtensionRegistry),
    __metadata("design:type", UIExtensionRegistry)
], SetUIExtensionVisibilityCommand.prototype, "registry", void 0);
SetUIExtensionVisibilityCommand = __decorate([
    (0, inversify_1.injectable)(),
    __param(0, (0, inversify_1.inject)(types_1.TYPES.Action)),
    __metadata("design:paramtypes", [Object])
], SetUIExtensionVisibilityCommand);
exports.SetUIExtensionVisibilityCommand = SetUIExtensionVisibilityCommand;


/***/ }),

/***/ "../../node_modules/sprotty/lib/base/ui-extensions/ui-extension.js":
/*!*************************************************************************!*\
  !*** ../../node_modules/sprotty/lib/base/ui-extensions/ui-extension.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AbstractUIExtension = exports.isUIExtension = void 0;
/********************************************************************************
 * Copyright (c) 2019 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const sprotty_protocol_1 = __webpack_require__(/*! sprotty-protocol */ "../../node_modules/sprotty-protocol/lib/index.js");
const types_1 = __webpack_require__(/*! ../types */ "../../node_modules/sprotty/lib/base/types.js");
function isUIExtension(object) {
    return (0, sprotty_protocol_1.hasOwnProperty)(object, 'id', 'function')
        && (0, sprotty_protocol_1.hasOwnProperty)(object, 'show', 'function')
        && (0, sprotty_protocol_1.hasOwnProperty)(object, 'hide', 'function');
}
exports.isUIExtension = isUIExtension;
/**
 * Abstract base class for UI extensions.
 */
let AbstractUIExtension = class AbstractUIExtension {
    show(root, ...contextElementIds) {
        this.activeElement = document.activeElement;
        if (!this.containerElement) {
            if (!this.initialize())
                return;
        }
        this.onBeforeShow(this.containerElement, root, ...contextElementIds);
        this.setContainerVisible(true);
    }
    hide() {
        this.setContainerVisible(false);
        this.restoreFocus();
        this.activeElement = null;
    }
    restoreFocus() {
        const focusedElement = this.activeElement;
        if (focusedElement) {
            focusedElement.focus();
        }
    }
    initialize() {
        const baseDiv = document.getElementById(this.options.baseDiv);
        if (!baseDiv) {
            this.logger.warn(this, `Could not obtain sprotty base container for initializing UI extension ${this.id}`, this);
            return false;
        }
        this.containerElement = this.getOrCreateContainer(baseDiv.id);
        this.initializeContents(this.containerElement);
        if (baseDiv) {
            baseDiv.insertBefore(this.containerElement, baseDiv.firstChild);
        }
        return true;
    }
    getOrCreateContainer(baseDivId) {
        let container = document.getElementById(this.id());
        if (container === null) {
            container = document.createElement('div');
            container.id = baseDivId + "_" + this.id();
            container.classList.add(this.containerClass());
        }
        return container;
    }
    setContainerVisible(visible) {
        if (this.containerElement) {
            if (visible) {
                this.containerElement.style.visibility = 'visible';
                this.containerElement.style.opacity = '1';
            }
            else {
                this.containerElement.style.visibility = 'hidden';
                this.containerElement.style.opacity = '0';
            }
        }
    }
    /**
     * Updates the `containerElement` under the given `context` before it becomes visible.
     *
     * Subclasses may override this method to, for instance, modifying the position of the
     * `containerElement`, add or remove elements, etc. depending on the specified `root`
     * or `contextElementIds`.
     */
    onBeforeShow(containerElement, root, ...contextElementIds) {
        // default: do nothing
    }
};
__decorate([
    (0, inversify_1.inject)(types_1.TYPES.ViewerOptions),
    __metadata("design:type", Object)
], AbstractUIExtension.prototype, "options", void 0);
__decorate([
    (0, inversify_1.inject)(types_1.TYPES.ILogger),
    __metadata("design:type", Object)
], AbstractUIExtension.prototype, "logger", void 0);
AbstractUIExtension = __decorate([
    (0, inversify_1.injectable)()
], AbstractUIExtension);
exports.AbstractUIExtension = AbstractUIExtension;


/***/ }),

/***/ "../../node_modules/sprotty/lib/base/views/css-class-postprocessor.js":
/*!****************************************************************************!*\
  !*** ../../node_modules/sprotty/lib/base/views/css-class-postprocessor.js ***!
  \****************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CssClassPostprocessor = void 0;
const model_utils_1 = __webpack_require__(/*! sprotty-protocol/lib/utils/model-utils */ "../../node_modules/sprotty-protocol/lib/utils/model-utils.js");
const vnode_utils_1 = __webpack_require__(/*! ./vnode-utils */ "../../node_modules/sprotty/lib/base/views/vnode-utils.js");
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
let CssClassPostprocessor = class CssClassPostprocessor {
    decorate(vnode, element) {
        if (element.cssClasses) {
            for (const cssClass of element.cssClasses)
                (0, vnode_utils_1.setClass)(vnode, cssClass, true);
        }
        // append model subtype as class
        const subType = (0, model_utils_1.getSubType)(element);
        if (subType && subType !== element.type) {
            (0, vnode_utils_1.setClass)(vnode, subType, true);
        }
        return vnode;
    }
    postUpdate() {
        // empty
    }
};
CssClassPostprocessor = __decorate([
    (0, inversify_1.injectable)()
], CssClassPostprocessor);
exports.CssClassPostprocessor = CssClassPostprocessor;


/***/ }),

/***/ "../../node_modules/sprotty/lib/base/views/dom-helper.js":
/*!***************************************************************!*\
  !*** ../../node_modules/sprotty/lib/base/views/dom-helper.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.DOMHelper = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const types_1 = __webpack_require__(/*! ../types */ "../../node_modules/sprotty/lib/base/types.js");
let DOMHelper = class DOMHelper {
    getPrefix() {
        const prefix = this.viewerOptions !== undefined && this.viewerOptions.baseDiv !== undefined ?
            this.viewerOptions.baseDiv + "_" : "";
        return prefix;
    }
    createUniqueDOMElementId(element) {
        return this.getPrefix() + element.id;
    }
    findSModelIdByDOMElement(element) {
        return element.id.replace(this.getPrefix(), '');
    }
};
__decorate([
    (0, inversify_1.inject)(types_1.TYPES.ViewerOptions),
    __metadata("design:type", Object)
], DOMHelper.prototype, "viewerOptions", void 0);
DOMHelper = __decorate([
    (0, inversify_1.injectable)()
], DOMHelper);
exports.DOMHelper = DOMHelper;


/***/ }),

/***/ "../../node_modules/sprotty/lib/base/views/id-postprocessor.js":
/*!*********************************************************************!*\
  !*** ../../node_modules/sprotty/lib/base/views/id-postprocessor.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.IdPostprocessor = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const types_1 = __webpack_require__(/*! ../types */ "../../node_modules/sprotty/lib/base/types.js");
const dom_helper_1 = __webpack_require__(/*! ./dom-helper */ "../../node_modules/sprotty/lib/base/views/dom-helper.js");
const vnode_utils_1 = __webpack_require__(/*! ./vnode-utils */ "../../node_modules/sprotty/lib/base/views/vnode-utils.js");
let IdPostprocessor = class IdPostprocessor {
    decorate(vnode, element) {
        const attrs = (0, vnode_utils_1.getAttrs)(vnode);
        if (attrs.id !== undefined)
            this.logger.warn(vnode, 'Overriding id of vnode (' + attrs.id + '). Make sure not to set it manually in view.');
        attrs.id = this.domHelper.createUniqueDOMElementId(element);
        if (!vnode.key)
            vnode.key = element.id;
        return vnode;
    }
    postUpdate() {
    }
};
__decorate([
    (0, inversify_1.inject)(types_1.TYPES.ILogger),
    __metadata("design:type", Object)
], IdPostprocessor.prototype, "logger", void 0);
__decorate([
    (0, inversify_1.inject)(types_1.TYPES.DOMHelper),
    __metadata("design:type", dom_helper_1.DOMHelper)
], IdPostprocessor.prototype, "domHelper", void 0);
IdPostprocessor = __decorate([
    (0, inversify_1.injectable)()
], IdPostprocessor);
exports.IdPostprocessor = IdPostprocessor;


/***/ }),

/***/ "../../node_modules/sprotty/lib/base/views/key-tool.js":
/*!*************************************************************!*\
  !*** ../../node_modules/sprotty/lib/base/views/key-tool.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeyListener = exports.KeyTool = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const types_1 = __webpack_require__(/*! ../types */ "../../node_modules/sprotty/lib/base/types.js");
const smodel_1 = __webpack_require__(/*! ../model/smodel */ "../../node_modules/sprotty/lib/base/model/smodel.js");
const vnode_utils_1 = __webpack_require__(/*! ./vnode-utils */ "../../node_modules/sprotty/lib/base/views/vnode-utils.js");
let KeyTool = class KeyTool {
    constructor(keyListeners = []) {
        this.keyListeners = keyListeners;
    }
    register(keyListener) {
        this.keyListeners.push(keyListener);
    }
    deregister(keyListener) {
        const index = this.keyListeners.indexOf(keyListener);
        if (index >= 0)
            this.keyListeners.splice(index, 1);
    }
    handleEvent(methodName, model, event) {
        const actions = this.keyListeners
            .map(listener => listener[methodName].apply(listener, [model, event]))
            .reduce((a, b) => a.concat(b));
        if (actions.length > 0) {
            event.preventDefault();
            this.actionDispatcher.dispatchAll(actions);
        }
    }
    keyDown(element, event) {
        this.handleEvent('keyDown', element, event);
    }
    keyUp(element, event) {
        this.handleEvent('keyUp', element, event);
    }
    focus() { }
    decorate(vnode, element) {
        if (element instanceof smodel_1.SModelRootImpl) {
            (0, vnode_utils_1.on)(vnode, 'focus', this.focus.bind(this, element));
            (0, vnode_utils_1.on)(vnode, 'keydown', this.keyDown.bind(this, element));
            (0, vnode_utils_1.on)(vnode, 'keyup', this.keyUp.bind(this, element));
        }
        return vnode;
    }
    postUpdate() {
    }
};
__decorate([
    (0, inversify_1.inject)(types_1.TYPES.IActionDispatcher),
    __metadata("design:type", Object)
], KeyTool.prototype, "actionDispatcher", void 0);
KeyTool = __decorate([
    (0, inversify_1.injectable)(),
    __param(0, (0, inversify_1.multiInject)(types_1.TYPES.KeyListener)),
    __param(0, (0, inversify_1.optional)()),
    __metadata("design:paramtypes", [Array])
], KeyTool);
exports.KeyTool = KeyTool;
let KeyListener = class KeyListener {
    keyDown(element, event) {
        return [];
    }
    keyUp(element, event) {
        return [];
    }
};
KeyListener = __decorate([
    (0, inversify_1.injectable)()
], KeyListener);
exports.KeyListener = KeyListener;


/***/ }),

/***/ "../../node_modules/sprotty/lib/base/views/mouse-tool.js":
/*!***************************************************************!*\
  !*** ../../node_modules/sprotty/lib/base/views/mouse-tool.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.MousePositionTracker = exports.MouseListener = exports.PopupMouseTool = exports.MouseTool = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const actions_1 = __webpack_require__(/*! sprotty-protocol/lib/actions */ "../../node_modules/sprotty-protocol/lib/actions.js");
const smodel_1 = __webpack_require__(/*! ../model/smodel */ "../../node_modules/sprotty/lib/base/model/smodel.js");
const types_1 = __webpack_require__(/*! ../types */ "../../node_modules/sprotty/lib/base/types.js");
const dom_helper_1 = __webpack_require__(/*! ./dom-helper */ "../../node_modules/sprotty/lib/base/views/dom-helper.js");
const vnode_utils_1 = __webpack_require__(/*! ./vnode-utils */ "../../node_modules/sprotty/lib/base/views/vnode-utils.js");
let MouseTool = class MouseTool {
    constructor(mouseListeners = []) {
        this.mouseListeners = mouseListeners;
    }
    register(mouseListener) {
        this.mouseListeners.push(mouseListener);
    }
    deregister(mouseListener) {
        const index = this.mouseListeners.indexOf(mouseListener);
        if (index >= 0)
            this.mouseListeners.splice(index, 1);
    }
    getTargetElement(model, event) {
        let target = event.target;
        const index = model.index;
        while (target) {
            if (target.id) {
                const element = index.getById(this.domHelper.findSModelIdByDOMElement(target));
                if (element !== undefined)
                    return element;
            }
            target = target.parentNode;
        }
        return undefined;
    }
    handleEvent(methodName, model, event) {
        this.focusOnMouseEvent(methodName, model);
        const element = this.getTargetElement(model, event);
        if (!element)
            return;
        const actions = this.mouseListeners
            .map(listener => listener[methodName](element, event))
            .reduce((a, b) => a.concat(b));
        if (actions.length > 0) {
            event.preventDefault();
            for (const actionOrPromise of actions) {
                if ((0, actions_1.isAction)(actionOrPromise)) {
                    this.actionDispatcher.dispatch(actionOrPromise);
                }
                else {
                    actionOrPromise.then((action) => {
                        this.actionDispatcher.dispatch(action);
                    });
                }
            }
        }
    }
    focusOnMouseEvent(methodName, model) {
        if (document && methodName === 'mouseDown') {
            const domElement = document.getElementById(this.domHelper.createUniqueDOMElementId(model));
            if (domElement !== null && typeof domElement.focus === 'function')
                domElement.focus();
        }
    }
    mouseOver(model, event) {
        this.handleEvent('mouseOver', model, event);
    }
    mouseOut(model, event) {
        this.handleEvent('mouseOut', model, event);
    }
    mouseEnter(model, event) {
        this.handleEvent('mouseEnter', model, event);
    }
    mouseLeave(model, event) {
        this.handleEvent('mouseLeave', model, event);
    }
    mouseDown(model, event) {
        this.handleEvent('mouseDown', model, event);
    }
    mouseMove(model, event) {
        this.handleEvent('mouseMove', model, event);
    }
    mouseUp(model, event) {
        this.handleEvent('mouseUp', model, event);
    }
    wheel(model, event) {
        this.handleEvent('wheel', model, event);
    }
    contextMenu(model, event) {
        event.preventDefault();
        this.handleEvent('contextMenu', model, event);
    }
    doubleClick(model, event) {
        this.handleEvent('doubleClick', model, event);
    }
    decorate(vnode, element) {
        if (element instanceof smodel_1.SModelRootImpl) {
            (0, vnode_utils_1.on)(vnode, 'mouseover', this.mouseOver.bind(this, element));
            (0, vnode_utils_1.on)(vnode, 'mouseout', this.mouseOut.bind(this, element));
            (0, vnode_utils_1.on)(vnode, 'mouseenter', this.mouseEnter.bind(this, element));
            (0, vnode_utils_1.on)(vnode, 'mouseleave', this.mouseLeave.bind(this, element));
            (0, vnode_utils_1.on)(vnode, 'mousedown', this.mouseDown.bind(this, element));
            (0, vnode_utils_1.on)(vnode, 'mouseup', this.mouseUp.bind(this, element));
            (0, vnode_utils_1.on)(vnode, 'mousemove', this.mouseMove.bind(this, element));
            (0, vnode_utils_1.on)(vnode, 'wheel', this.wheel.bind(this, element));
            (0, vnode_utils_1.on)(vnode, 'contextmenu', this.contextMenu.bind(this, element));
            (0, vnode_utils_1.on)(vnode, 'dblclick', this.doubleClick.bind(this, element));
            (0, vnode_utils_1.on)(vnode, 'dragover', (event) => this.handleEvent('dragOver', element, event));
            (0, vnode_utils_1.on)(vnode, 'drop', (event) => this.handleEvent('drop', element, event));
        }
        vnode = this.mouseListeners.reduce((n, listener) => listener.decorate(n, element), vnode);
        return vnode;
    }
    postUpdate() {
    }
};
__decorate([
    (0, inversify_1.inject)(types_1.TYPES.IActionDispatcher),
    __metadata("design:type", Object)
], MouseTool.prototype, "actionDispatcher", void 0);
__decorate([
    (0, inversify_1.inject)(types_1.TYPES.DOMHelper),
    __metadata("design:type", dom_helper_1.DOMHelper)
], MouseTool.prototype, "domHelper", void 0);
MouseTool = __decorate([
    (0, inversify_1.injectable)(),
    __param(0, (0, inversify_1.multiInject)(types_1.TYPES.MouseListener)),
    __param(0, (0, inversify_1.optional)()),
    __metadata("design:paramtypes", [Array])
], MouseTool);
exports.MouseTool = MouseTool;
let PopupMouseTool = class PopupMouseTool extends MouseTool {
    constructor(mouseListeners = []) {
        super(mouseListeners);
        this.mouseListeners = mouseListeners;
    }
};
PopupMouseTool = __decorate([
    (0, inversify_1.injectable)(),
    __param(0, (0, inversify_1.multiInject)(types_1.TYPES.PopupMouseListener)),
    __param(0, (0, inversify_1.optional)()),
    __metadata("design:paramtypes", [Array])
], PopupMouseTool);
exports.PopupMouseTool = PopupMouseTool;
let MouseListener = class MouseListener {
    mouseOver(target, event) {
        return [];
    }
    mouseOut(target, event) {
        return [];
    }
    mouseEnter(target, event) {
        return [];
    }
    mouseLeave(target, event) {
        return [];
    }
    mouseDown(target, event) {
        return [];
    }
    mouseMove(target, event) {
        return [];
    }
    mouseUp(target, event) {
        return [];
    }
    wheel(target, event) {
        return [];
    }
    doubleClick(target, event) {
        return [];
    }
    contextMenu(target, event) {
        return [];
    }
    dragOver(target, event) {
        return [];
    }
    drop(target, event) {
        return [];
    }
    decorate(vnode, element) {
        return vnode;
    }
};
MouseListener = __decorate([
    (0, inversify_1.injectable)()
], MouseListener);
exports.MouseListener = MouseListener;
let MousePositionTracker = class MousePositionTracker extends MouseListener {
    mouseMove(target, event) {
        this.lastPosition = target.root.parentToLocal({ x: event.offsetX, y: event.offsetY });
        return [];
    }
    /**
     * Returns the last tracked mouse cursor position relative to the diagram root or `undefined`
     * if no mouse cursor position was ever tracked yet.
     */
    get lastPositionOnDiagram() {
        return this.lastPosition;
    }
};
MousePositionTracker = __decorate([
    (0, inversify_1.injectable)()
], MousePositionTracker);
exports.MousePositionTracker = MousePositionTracker;


/***/ }),

/***/ "../../node_modules/sprotty/lib/base/views/thunk-view.js":
/*!***************************************************************!*\
  !*** ../../node_modules/sprotty/lib/base/views/thunk-view.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isThunk = exports.ThunkView = void 0;
const snabbdom_1 = __webpack_require__(/*! snabbdom */ "../../node_modules/snabbdom/build/index.js");
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
/**
 * An view that avoids calculation and patching of VNodes unless some model properties have changed.
 * Based on snabbdom's thunks.
 */
let ThunkView = class ThunkView {
    render(model, context) {
        return (0, snabbdom_1.h)(this.selector(model), {
            key: model.id,
            hook: {
                init: this.init.bind(this),
                prepatch: this.prepatch.bind(this)
            },
            fn: () => this.renderAndDecorate(model, context),
            args: this.watchedArgs(model),
            thunk: true
        });
    }
    renderAndDecorate(model, context) {
        const vnode = this.doRender(model, context);
        context.decorate(vnode, model);
        return vnode;
    }
    copyToThunk(vnode, thunk) {
        thunk.elm = vnode.elm;
        vnode.data.fn = thunk.data.fn;
        vnode.data.args = thunk.data.args;
        thunk.data = vnode.data;
        thunk.children = vnode.children;
        thunk.text = vnode.text;
        thunk.elm = vnode.elm;
    }
    init(thunk) {
        const cur = thunk.data;
        const vnode = cur.fn.apply(undefined, cur.args);
        this.copyToThunk(vnode, thunk);
    }
    prepatch(oldVnode, thunk) {
        const old = oldVnode.data, cur = thunk.data;
        if (!this.equals(old.args, cur.args))
            this.copyToThunk(cur.fn.apply(undefined, cur.args), thunk);
        else
            this.copyToThunk(oldVnode, thunk);
    }
    equals(oldArg, newArg) {
        if (Array.isArray(oldArg) && Array.isArray(newArg)) {
            if (oldArg.length !== newArg.length)
                return false;
            for (let i = 0; i < newArg.length; ++i) {
                if (!this.equals(oldArg[i], newArg[i]))
                    return false;
            }
        }
        else if (typeof oldArg === 'object' && typeof newArg === 'object') {
            if (Object.keys(oldArg).length !== Object.keys(newArg).length)
                return false;
            for (const key in oldArg) {
                if (key !== 'parent' && key !== 'root' && (!(key in newArg) || !this.equals(oldArg[key], newArg[key])))
                    return false;
            }
        }
        else if (oldArg !== newArg) {
            return false;
        }
        return true;
    }
};
ThunkView = __decorate([
    (0, inversify_1.injectable)()
], ThunkView);
exports.ThunkView = ThunkView;
function isThunk(vnode) {
    return 'thunk' in vnode;
}
exports.isThunk = isThunk;


/***/ }),

/***/ "../../node_modules/sprotty/lib/base/views/view.js":
/*!*********************************************************!*\
  !*** ../../node_modules/sprotty/lib/base/views/view.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.MissingView = exports.EmptyView = exports.configureView = exports.configureModelElement = exports.ViewRegistry = exports.findArgValue = void 0;
/** @jsx svg */
const jsx_1 = __webpack_require__(/*! ../../lib/jsx */ "../../node_modules/sprotty/lib/lib/jsx.js");
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const types_1 = __webpack_require__(/*! ../types */ "../../node_modules/sprotty/lib/base/types.js");
const registry_1 = __webpack_require__(/*! ../../utils/registry */ "../../node_modules/sprotty/lib/utils/registry.js");
const inversify_2 = __webpack_require__(/*! ../../utils/inversify */ "../../node_modules/sprotty/lib/utils/inversify.js");
const smodel_factory_1 = __webpack_require__(/*! ../model/smodel-factory */ "../../node_modules/sprotty/lib/base/model/smodel-factory.js");
const smodel_utils_1 = __webpack_require__(/*! ../model/smodel-utils */ "../../node_modules/sprotty/lib/base/model/smodel-utils.js");
const sprotty_protocol_1 = __webpack_require__(/*! sprotty-protocol */ "../../node_modules/sprotty-protocol/lib/index.js");
/**
 * Searches for the property specified in `key` in the specified `args`,
 * including its direct or indirect `IRenderingArgs#parentArgs`.
 *
 * @param arg the rendering arguments.
 * @param key the key to search for.
 * @returns the found value or `undefined.
 */
function findArgValue(arg, key) {
    while (arg !== undefined && !(key in arg) && arg.parentArgs) {
        arg = arg.parentArgs;
    }
    return arg ? arg[key] : undefined;
}
exports.findArgValue = findArgValue;
/**
 * Allows to look up the IView for a given SModelElement based on its type.
 */
let ViewRegistry = class ViewRegistry extends registry_1.InstanceRegistry {
    constructor(registrations) {
        super();
        this.registerDefaults();
        registrations.forEach(registration => this.register(registration.type, registration.factory()));
    }
    registerDefaults() {
        this.register(smodel_factory_1.EMPTY_ROOT.type, new EmptyView());
    }
    missing(key) {
        return new MissingView();
    }
};
ViewRegistry = __decorate([
    (0, inversify_1.injectable)(),
    __param(0, (0, inversify_1.multiInject)(types_1.TYPES.ViewRegistration)),
    __param(0, (0, inversify_1.optional)()),
    __metadata("design:paramtypes", [Array])
], ViewRegistry);
exports.ViewRegistry = ViewRegistry;
/**
 * Combines `registerModelElement` and `configureView`.
 */
function configureModelElement(context, type, modelConstr, viewConstr, features) {
    (0, smodel_utils_1.registerModelElement)(context, type, modelConstr, features);
    configureView(context, type, viewConstr);
}
exports.configureModelElement = configureModelElement;
/**
 * Utility function to register a view for a model element type.
 */
function configureView(context, type, constr) {
    if (typeof constr === 'function') {
        if (!(0, inversify_2.isInjectable)(constr)) {
            throw new Error(`Views should be @injectable: ${constr.name}`);
        }
        if (!context.isBound(constr)) {
            context.bind(constr).toSelf();
        }
    }
    context.bind(types_1.TYPES.ViewRegistration).toDynamicValue(ctx => ({
        type,
        factory: () => ctx.container.get(constr)
    }));
}
exports.configureView = configureView;
/**
 * This view is used when the model is the EMPTY_ROOT.
 */
let EmptyView = class EmptyView {
    render(model, context) {
        return (0, jsx_1.svg)("svg", { "class-sprotty-empty": true });
    }
};
EmptyView = __decorate([
    (0, inversify_1.injectable)()
], EmptyView);
exports.EmptyView = EmptyView;
/**
 * This view is used when no view has been registered for a model element type.
 */
let MissingView = class MissingView {
    render(model, context) {
        const position = model.position || sprotty_protocol_1.Point.ORIGIN;
        return (0, jsx_1.svg)("text", { "class-sprotty-missing": true, x: position.x, y: position.y },
            "?",
            model.id,
            "?");
    }
};
MissingView = __decorate([
    (0, inversify_1.injectable)()
], MissingView);
exports.MissingView = MissingView;


/***/ }),

/***/ "../../node_modules/sprotty/lib/base/views/viewer-cache.js":
/*!*****************************************************************!*\
  !*** ../../node_modules/sprotty/lib/base/views/viewer-cache.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ViewerCache = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const types_1 = __webpack_require__(/*! ../types */ "../../node_modules/sprotty/lib/base/types.js");
const animation_frame_syncer_1 = __webpack_require__(/*! ../animations/animation-frame-syncer */ "../../node_modules/sprotty/lib/base/animations/animation-frame-syncer.js");
/**
 * Updating the view is rather expensive, and it doesn't make sense to calculate
 * more then one update per animation (rendering) frame. So this class batches
 * all incoming model changes and only renders the last one when the next animation
 * frame comes.
 */
let ViewerCache = class ViewerCache {
    update(model, cause) {
        if (cause !== undefined) {
            // Forward the update immediately in order to pass the cause action
            this.delegate.update(model, cause);
            this.cachedModel = undefined;
        }
        else {
            const isCacheEmpty = this.cachedModel === undefined;
            this.cachedModel = model;
            if (isCacheEmpty) {
                this.scheduleUpdate();
            }
        }
    }
    scheduleUpdate() {
        this.syncer.onEndOfNextFrame(() => {
            if (this.cachedModel) {
                this.delegate.update(this.cachedModel);
                this.cachedModel = undefined;
            }
        });
    }
};
__decorate([
    (0, inversify_1.inject)(types_1.TYPES.IViewer),
    __metadata("design:type", Object)
], ViewerCache.prototype, "delegate", void 0);
__decorate([
    (0, inversify_1.inject)(types_1.TYPES.AnimationFrameSyncer),
    __metadata("design:type", animation_frame_syncer_1.AnimationFrameSyncer)
], ViewerCache.prototype, "syncer", void 0);
ViewerCache = __decorate([
    (0, inversify_1.injectable)()
], ViewerCache);
exports.ViewerCache = ViewerCache;


/***/ }),

/***/ "../../node_modules/sprotty/lib/base/views/viewer-options.js":
/*!*******************************************************************!*\
  !*** ../../node_modules/sprotty/lib/base/views/viewer-options.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2023 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.overrideViewerOptions = exports.configureViewerOptions = exports.defaultViewerOptions = void 0;
const object_1 = __webpack_require__(/*! sprotty-protocol/lib/utils/object */ "../../node_modules/sprotty-protocol/lib/utils/object.js");
const types_1 = __webpack_require__(/*! ../types */ "../../node_modules/sprotty/lib/base/types.js");
const defaultViewerOptions = () => ({
    baseDiv: 'sprotty',
    baseClass: 'sprotty',
    hiddenDiv: 'sprotty-hidden',
    hiddenClass: 'sprotty-hidden',
    popupDiv: 'sprotty-popup',
    popupClass: 'sprotty-popup',
    popupClosedClass: 'sprotty-popup-closed',
    needsClientLayout: true,
    needsServerLayout: false,
    popupOpenDelay: 1000,
    popupCloseDelay: 300,
    zoomLimits: { min: 0.01, max: 10 },
    horizontalScrollLimits: { min: -100000, max: 100000 },
    verticalScrollLimits: { min: -100000, max: 100000 }
});
exports.defaultViewerOptions = defaultViewerOptions;
/**
 * Utility function to partially set viewer options. Default values (from `defaultViewerOptions`) are used for
 * options that are not specified.
 */
function configureViewerOptions(context, options) {
    const opt = Object.assign(Object.assign({}, (0, exports.defaultViewerOptions)()), options);
    if (context.isBound(types_1.TYPES.ViewerOptions))
        context.rebind(types_1.TYPES.ViewerOptions).toConstantValue(opt);
    else
        context.bind(types_1.TYPES.ViewerOptions).toConstantValue(opt);
}
exports.configureViewerOptions = configureViewerOptions;
/**
 * Utility function to partially override the currently configured viewer options in a DI container.
 */
function overrideViewerOptions(container, options) {
    const opt = container.get(types_1.TYPES.ViewerOptions);
    (0, object_1.safeAssign)(opt, options);
    return opt;
}
exports.overrideViewerOptions = overrideViewerOptions;


/***/ }),

/***/ "../../node_modules/sprotty/lib/base/views/viewer.js":
/*!***********************************************************!*\
  !*** ../../node_modules/sprotty/lib/base/views/viewer.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.PopupModelViewer = exports.HiddenModelViewer = exports.ModelViewer = exports.PatcherProvider = exports.ModelRenderer = void 0;
/** @jsx html */
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const snabbdom_1 = __webpack_require__(/*! snabbdom */ "../../node_modules/snabbdom/build/index.js");
const jsx_1 = __webpack_require__(/*! ../../lib/jsx */ "../../node_modules/sprotty/lib/lib/jsx.js"); // must be html here, as we're creating a div
const browser_1 = __webpack_require__(/*! ../../utils/browser */ "../../node_modules/sprotty/lib/utils/browser.js");
const initialize_canvas_1 = __webpack_require__(/*! ../features/initialize-canvas */ "../../node_modules/sprotty/lib/base/features/initialize-canvas.js");
const smodel_factory_1 = __webpack_require__(/*! ../model/smodel-factory */ "../../node_modules/sprotty/lib/base/model/smodel-factory.js");
const types_1 = __webpack_require__(/*! ../types */ "../../node_modules/sprotty/lib/base/types.js");
const thunk_view_1 = __webpack_require__(/*! ./thunk-view */ "../../node_modules/sprotty/lib/base/views/thunk-view.js");
const vnode_utils_1 = __webpack_require__(/*! ./vnode-utils */ "../../node_modules/sprotty/lib/base/views/vnode-utils.js");
class ModelRenderer {
    constructor(viewRegistry, targetKind, postprocessors, args = {}) {
        this.viewRegistry = viewRegistry;
        this.targetKind = targetKind;
        this.postprocessors = postprocessors;
        this.args = args;
    }
    decorate(vnode, element) {
        if ((0, thunk_view_1.isThunk)(vnode)) {
            return vnode;
        }
        return this.postprocessors.reduce((n, processor) => processor.decorate(n, element), vnode);
    }
    renderElement(element) {
        const view = this.viewRegistry.get(element.type);
        const vnode = view.render(element, this, this.args);
        if (vnode) {
            return this.decorate(vnode, element);
        }
        else {
            return undefined;
        }
    }
    renderChildren(element, args) {
        const context = args ?
            new ModelRenderer(this.viewRegistry, this.targetKind, this.postprocessors, Object.assign(Object.assign({}, args), { parentArgs: this.args })) : this;
        return element.children
            .map(child => context.renderElement(child))
            .filter(vnode => vnode !== undefined);
    }
    postUpdate(cause) {
        this.postprocessors.forEach(processor => processor.postUpdate(cause));
    }
}
exports.ModelRenderer = ModelRenderer;
let PatcherProvider = class PatcherProvider {
    constructor() {
        this.patcher = (0, snabbdom_1.init)(this.createModules());
    }
    createModules() {
        return [
            snabbdom_1.propsModule,
            snabbdom_1.attributesModule,
            snabbdom_1.classModule,
            snabbdom_1.styleModule,
            snabbdom_1.eventListenersModule
        ];
    }
};
PatcherProvider = __decorate([
    (0, inversify_1.injectable)(),
    __metadata("design:paramtypes", [])
], PatcherProvider);
exports.PatcherProvider = PatcherProvider;
/**
 * The component that turns the model into an SVG DOM.
 * Uses a VDOM based on snabbdom.js for performance.
 */
let ModelViewer = class ModelViewer {
    constructor(modelRendererFactory, patcherProvider, postprocessors) {
        this.renderer = modelRendererFactory('main', postprocessors);
        this.patcher = patcherProvider.patcher;
    }
    update(model, cause) {
        this.logger.log(this, 'rendering', model);
        const newVDOM = (0, jsx_1.html)("div", { id: this.options.baseDiv }, this.renderer.renderElement(model));
        if (this.lastVDOM !== undefined) {
            const hadFocus = this.hasFocus();
            (0, vnode_utils_1.copyClassesFromVNode)(this.lastVDOM, newVDOM);
            this.lastVDOM = this.patcher.call(this, this.lastVDOM, newVDOM);
            this.restoreFocus(hadFocus);
        }
        else if (typeof document !== 'undefined') {
            const placeholder = document.getElementById(this.options.baseDiv);
            if (placeholder !== null) {
                if (typeof window !== 'undefined') {
                    window.addEventListener('resize', () => {
                        this.onWindowResize(newVDOM);
                    });
                }
                (0, vnode_utils_1.copyClassesFromElement)(placeholder, newVDOM);
                (0, vnode_utils_1.setClass)(newVDOM, this.options.baseClass, true);
                this.lastVDOM = this.patcher.call(this, placeholder, newVDOM);
            }
            else {
                this.logger.error(this, 'element not in DOM:', this.options.baseDiv);
            }
        }
        this.renderer.postUpdate(cause);
    }
    hasFocus() {
        if (typeof document !== 'undefined' && document.activeElement && this.lastVDOM.children && this.lastVDOM.children.length > 0) {
            const lastRootVNode = this.lastVDOM.children[0];
            if (typeof lastRootVNode === 'object') {
                const lastElement = lastRootVNode.elm;
                return document.activeElement === lastElement;
            }
        }
        return false;
    }
    restoreFocus(focus) {
        if (focus && this.lastVDOM.children && this.lastVDOM.children.length > 0) {
            const lastRootVNode = this.lastVDOM.children[0];
            if (typeof lastRootVNode === 'object') {
                const lastElement = lastRootVNode.elm;
                if (lastElement && typeof lastElement.focus === 'function')
                    lastElement.focus();
            }
        }
    }
    onWindowResize(vdom) {
        const baseDiv = document.getElementById(this.options.baseDiv);
        if (baseDiv !== null) {
            const newBounds = this.getBoundsInPage(baseDiv);
            this.actiondispatcher.dispatch(initialize_canvas_1.InitializeCanvasBoundsAction.create(newBounds));
        }
    }
    getBoundsInPage(element) {
        const bounds = element.getBoundingClientRect();
        const scroll = (0, browser_1.getWindowScroll)();
        return {
            x: bounds.left + scroll.x,
            y: bounds.top + scroll.y,
            width: bounds.width,
            height: bounds.height
        };
    }
};
__decorate([
    (0, inversify_1.inject)(types_1.TYPES.ViewerOptions),
    __metadata("design:type", Object)
], ModelViewer.prototype, "options", void 0);
__decorate([
    (0, inversify_1.inject)(types_1.TYPES.ILogger),
    __metadata("design:type", Object)
], ModelViewer.prototype, "logger", void 0);
__decorate([
    (0, inversify_1.inject)(types_1.TYPES.IActionDispatcher),
    __metadata("design:type", Object)
], ModelViewer.prototype, "actiondispatcher", void 0);
ModelViewer = __decorate([
    (0, inversify_1.injectable)(),
    __param(0, (0, inversify_1.inject)(types_1.TYPES.ModelRendererFactory)),
    __param(1, (0, inversify_1.inject)(types_1.TYPES.PatcherProvider)),
    __param(2, (0, inversify_1.multiInject)(types_1.TYPES.IVNodePostprocessor)),
    __param(2, (0, inversify_1.optional)()),
    __metadata("design:paramtypes", [Function, PatcherProvider, Array])
], ModelViewer);
exports.ModelViewer = ModelViewer;
/**
 * Viewer for the _hidden_ model. This serves as an intermediate step to compute bounds
 * of elements. The model is rendered in a section that is not visible to the user,
 * and then the bounds are extracted from the DOM.
 */
let HiddenModelViewer = class HiddenModelViewer {
    constructor(modelRendererFactory, patcherProvider, hiddenPostprocessors) {
        this.hiddenRenderer = modelRendererFactory('hidden', hiddenPostprocessors);
        this.patcher = patcherProvider.patcher;
    }
    update(hiddenModel, cause) {
        this.logger.log(this, 'rendering hidden');
        let newVDOM;
        if (hiddenModel.type === smodel_factory_1.EMPTY_ROOT.type) {
            newVDOM = (0, jsx_1.html)("div", { id: this.options.hiddenDiv });
        }
        else {
            const hiddenVNode = this.hiddenRenderer.renderElement(hiddenModel);
            if (hiddenVNode) {
                (0, vnode_utils_1.setAttr)(hiddenVNode, 'opacity', 0);
            }
            newVDOM = (0, jsx_1.html)("div", { id: this.options.hiddenDiv }, hiddenVNode);
        }
        if (this.lastHiddenVDOM !== undefined) {
            (0, vnode_utils_1.copyClassesFromVNode)(this.lastHiddenVDOM, newVDOM);
            this.lastHiddenVDOM = this.patcher.call(this, this.lastHiddenVDOM, newVDOM);
        }
        else {
            let placeholder = document.getElementById(this.options.hiddenDiv);
            if (placeholder === null) {
                placeholder = document.createElement('div');
                document.body.appendChild(placeholder);
            }
            else {
                (0, vnode_utils_1.copyClassesFromElement)(placeholder, newVDOM);
            }
            (0, vnode_utils_1.setClass)(newVDOM, this.options.baseClass, true);
            (0, vnode_utils_1.setClass)(newVDOM, this.options.hiddenClass, true);
            this.lastHiddenVDOM = this.patcher.call(this, placeholder, newVDOM);
        }
        this.hiddenRenderer.postUpdate(cause);
    }
};
__decorate([
    (0, inversify_1.inject)(types_1.TYPES.ViewerOptions),
    __metadata("design:type", Object)
], HiddenModelViewer.prototype, "options", void 0);
__decorate([
    (0, inversify_1.inject)(types_1.TYPES.ILogger),
    __metadata("design:type", Object)
], HiddenModelViewer.prototype, "logger", void 0);
HiddenModelViewer = __decorate([
    (0, inversify_1.injectable)(),
    __param(0, (0, inversify_1.inject)(types_1.TYPES.ModelRendererFactory)),
    __param(1, (0, inversify_1.inject)(types_1.TYPES.PatcherProvider)),
    __param(2, (0, inversify_1.multiInject)(types_1.TYPES.HiddenVNodePostprocessor)),
    __param(2, (0, inversify_1.optional)()),
    __metadata("design:paramtypes", [Function, PatcherProvider, Array])
], HiddenModelViewer);
exports.HiddenModelViewer = HiddenModelViewer;
let PopupModelViewer = class PopupModelViewer {
    constructor(modelRendererFactory, patcherProvider, popupPostprocessors) {
        this.modelRendererFactory = modelRendererFactory;
        this.popupRenderer = this.modelRendererFactory('popup', popupPostprocessors);
        this.patcher = patcherProvider.patcher;
    }
    update(model, cause) {
        this.logger.log(this, 'rendering popup', model);
        const popupClosed = model.type === smodel_factory_1.EMPTY_ROOT.type;
        let newVDOM;
        if (popupClosed) {
            newVDOM = (0, jsx_1.html)("div", { id: this.options.popupDiv });
        }
        else {
            const position = model.canvasBounds;
            const inlineStyle = {
                top: position.y + 'px',
                left: position.x + 'px'
            };
            newVDOM = (0, jsx_1.html)("div", { id: this.options.popupDiv, style: inlineStyle }, this.popupRenderer.renderElement(model));
        }
        if (this.lastPopupVDOM !== undefined) {
            (0, vnode_utils_1.copyClassesFromVNode)(this.lastPopupVDOM, newVDOM);
            (0, vnode_utils_1.setClass)(newVDOM, this.options.popupClosedClass, popupClosed);
            this.lastPopupVDOM = this.patcher.call(this, this.lastPopupVDOM, newVDOM);
        }
        else if (typeof document !== 'undefined') {
            let placeholder = document.getElementById(this.options.popupDiv);
            if (placeholder === null) {
                placeholder = document.createElement('div');
                document.body.appendChild(placeholder);
            }
            else {
                (0, vnode_utils_1.copyClassesFromElement)(placeholder, newVDOM);
            }
            (0, vnode_utils_1.setClass)(newVDOM, this.options.popupClass, true);
            (0, vnode_utils_1.setClass)(newVDOM, this.options.popupClosedClass, popupClosed);
            this.lastPopupVDOM = this.patcher.call(this, placeholder, newVDOM);
        }
        this.popupRenderer.postUpdate(cause);
    }
};
__decorate([
    (0, inversify_1.inject)(types_1.TYPES.ViewerOptions),
    __metadata("design:type", Object)
], PopupModelViewer.prototype, "options", void 0);
__decorate([
    (0, inversify_1.inject)(types_1.TYPES.ILogger),
    __metadata("design:type", Object)
], PopupModelViewer.prototype, "logger", void 0);
PopupModelViewer = __decorate([
    (0, inversify_1.injectable)(),
    __param(0, (0, inversify_1.inject)(types_1.TYPES.ModelRendererFactory)),
    __param(1, (0, inversify_1.inject)(types_1.TYPES.PatcherProvider)),
    __param(2, (0, inversify_1.multiInject)(types_1.TYPES.PopupVNodePostprocessor)),
    __param(2, (0, inversify_1.optional)()),
    __metadata("design:paramtypes", [Function, PatcherProvider, Array])
], PopupModelViewer);
exports.PopupModelViewer = PopupModelViewer;


/***/ }),

/***/ "../../node_modules/sprotty/lib/base/views/vnode-postprocessor.js":
/*!************************************************************************!*\
  !*** ../../node_modules/sprotty/lib/base/views/vnode-postprocessor.js ***!
  \************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.FocusFixPostprocessor = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const vnode_utils_1 = __webpack_require__(/*! ./vnode-utils */ "../../node_modules/sprotty/lib/base/views/vnode-utils.js");
let FocusFixPostprocessor = class FocusFixPostprocessor {
    decorate(vnode, element) {
        if (vnode.sel && vnode.sel.startsWith('svg'))
            // allows to set focus in Firefox
            (0, vnode_utils_1.setAttr)(vnode, 'tabindex', 0);
        return vnode;
    }
    postUpdate() {
    }
};
FocusFixPostprocessor = __decorate([
    (0, inversify_1.injectable)()
], FocusFixPostprocessor);
exports.FocusFixPostprocessor = FocusFixPostprocessor;


/***/ }),

/***/ "../../node_modules/sprotty/lib/base/views/vnode-utils.js":
/*!****************************************************************!*\
  !*** ../../node_modules/sprotty/lib/base/views/vnode-utils.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2021 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.getAttrs = exports.on = exports.mergeStyle = exports.copyClassesFromElement = exports.copyClassesFromVNode = exports.setNamespace = exports.setClass = exports.setAttr = void 0;
function setAttr(vnode, name, value) {
    getAttrs(vnode)[name] = value;
}
exports.setAttr = setAttr;
function setClass(vnode, name, value) {
    getClass(vnode)[name] = value;
}
exports.setClass = setClass;
function setNamespace(node, ns) {
    if (node.data === undefined)
        node.data = {};
    node.data.ns = ns;
    const children = node.children;
    if (children !== undefined) {
        for (let i = 0; i < children.length; i++) {
            const child = children[i];
            if (typeof child !== 'string')
                setNamespace(child, ns);
        }
    }
}
exports.setNamespace = setNamespace;
function copyClassesFromVNode(source, target) {
    const classList = getClass(source);
    Object.keys(classList).forEach(c => setClass(target, c, true));
}
exports.copyClassesFromVNode = copyClassesFromVNode;
function copyClassesFromElement(element, target) {
    const classList = element.classList;
    for (let i = 0; i < classList.length; i++) {
        const item = classList.item(i);
        if (item)
            setClass(target, item, true);
    }
}
exports.copyClassesFromElement = copyClassesFromElement;
function mergeStyle(vnode, style) {
    getData(vnode).style = Object.assign(Object.assign({}, (getData(vnode).style || {})), style);
}
exports.mergeStyle = mergeStyle;
function on(vnode, event, listener) {
    const val = getOn(vnode);
    if (val[event]) {
        throw new Error('EventListener for ' + event + ' already registered on VNode');
    }
    val[event] = listener;
}
exports.on = on;
function getAttrs(vnode) {
    const data = getData(vnode);
    if (!data.attrs)
        data.attrs = {};
    return data.attrs;
}
exports.getAttrs = getAttrs;
function getData(vnode) {
    if (!vnode.data)
        vnode.data = {};
    return vnode.data;
}
function getClass(vnode) {
    const data = getData(vnode);
    if (!data.class)
        data.class = {};
    return data.class;
}
function getOn(vnode) {
    const data = getData(vnode);
    if (!data.on)
        data.on = {};
    return data.on;
}


/***/ }),

/***/ "../../node_modules/sprotty/lib/features/bounds/abstract-layout.js":
/*!*************************************************************************!*\
  !*** ../../node_modules/sprotty/lib/features/bounds/abstract-layout.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AbstractLayout = void 0;
const geometry_1 = __webpack_require__(/*! sprotty-protocol/lib/utils/geometry */ "../../node_modules/sprotty-protocol/lib/utils/geometry.js");
const smodel_1 = __webpack_require__(/*! ../../base/model/smodel */ "../../node_modules/sprotty/lib/base/model/smodel.js");
const model_1 = __webpack_require__(/*! ./model */ "../../node_modules/sprotty/lib/features/bounds/model.js");
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
let AbstractLayout = class AbstractLayout {
    layout(container, layouter) {
        const boundsData = layouter.getBoundsData(container);
        const options = this.getLayoutOptions(container);
        const childrenSize = this.getChildrenSize(container, options, layouter);
        const maxWidth = options.paddingFactor * (options.resizeContainer
            ? childrenSize.width
            : Math.max(0, this.getFixedContainerBounds(container, options, layouter).width) - options.paddingLeft - options.paddingRight);
        const maxHeight = options.paddingFactor * (options.resizeContainer
            ? childrenSize.height
            : Math.max(0, this.getFixedContainerBounds(container, options, layouter).height) - options.paddingTop - options.paddingBottom);
        if (maxWidth > 0 && maxHeight > 0) {
            const offset = this.layoutChildren(container, layouter, options, maxWidth, maxHeight);
            boundsData.bounds = this.getFinalContainerBounds(container, offset, options, maxWidth, maxHeight);
            boundsData.boundsChanged = true;
        }
    }
    getFinalContainerBounds(container, lastOffset, options, maxWidth, maxHeight) {
        return {
            x: container.bounds.x,
            y: container.bounds.y,
            width: Math.max(options.minWidth, maxWidth + options.paddingLeft + options.paddingRight),
            height: Math.max(options.minHeight, maxHeight + options.paddingTop + options.paddingBottom)
        };
    }
    getFixedContainerBounds(container, layoutOptions, layouter) {
        let currentContainer = container;
        while (true) {
            if ((0, model_1.isBoundsAware)(currentContainer)) {
                const bounds = currentContainer.bounds;
                if ((0, model_1.isLayoutContainer)(currentContainer) && layoutOptions.resizeContainer)
                    layouter.log.error(currentContainer, 'Resizable container found while detecting fixed bounds');
                if (geometry_1.Dimension.isValid(bounds))
                    return bounds;
            }
            if (currentContainer instanceof smodel_1.SChildElementImpl) {
                currentContainer = currentContainer.parent;
            }
            else {
                layouter.log.error(currentContainer, 'Cannot detect fixed bounds');
                return geometry_1.Bounds.EMPTY;
            }
        }
    }
    layoutChildren(container, layouter, containerOptions, maxWidth, maxHeight) {
        let currentOffset = {
            x: containerOptions.paddingLeft + 0.5 * (maxWidth - (maxWidth / containerOptions.paddingFactor)),
            y: containerOptions.paddingTop + 0.5 * (maxHeight - (maxHeight / containerOptions.paddingFactor))
        };
        container.children.forEach(child => {
            if ((0, model_1.isLayoutableChild)(child)) {
                const boundsData = layouter.getBoundsData(child);
                const bounds = boundsData.bounds;
                const childOptions = this.getChildLayoutOptions(child, containerOptions);
                if (bounds !== undefined && geometry_1.Dimension.isValid(bounds)) {
                    currentOffset = this.layoutChild(child, boundsData, bounds, childOptions, containerOptions, currentOffset, maxWidth, maxHeight);
                }
            }
        });
        return currentOffset;
    }
    getDx(hAlign, bounds, maxWidth) {
        switch (hAlign) {
            case 'left':
                return 0;
            case 'center':
                return 0.5 * (maxWidth - bounds.width);
            case 'right':
                return maxWidth - bounds.width;
        }
    }
    getDy(vAlign, bounds, maxHeight) {
        switch (vAlign) {
            case 'top':
                return 0;
            case 'center':
                return 0.5 * (maxHeight - bounds.height);
            case 'bottom':
                return maxHeight - bounds.height;
        }
    }
    getChildLayoutOptions(child, containerOptions) {
        const layoutOptions = child.layoutOptions;
        if (layoutOptions === undefined)
            return containerOptions;
        else
            return this.spread(containerOptions, layoutOptions);
    }
    getLayoutOptions(element) {
        let current = element;
        const allOptions = [];
        while (current !== undefined) {
            const layoutOptions = current.layoutOptions;
            if (layoutOptions !== undefined)
                allOptions.push(layoutOptions);
            if (current instanceof smodel_1.SChildElementImpl)
                current = current.parent;
            else
                break;
        }
        return allOptions.reverse().reduce((a, b) => { return this.spread(a, b); }, this.getDefaultLayoutOptions());
    }
};
AbstractLayout = __decorate([
    (0, inversify_1.injectable)()
], AbstractLayout);
exports.AbstractLayout = AbstractLayout;


/***/ }),

/***/ "../../node_modules/sprotty/lib/features/bounds/bounds-manipulation.js":
/*!*****************************************************************************!*\
  !*** ../../node_modules/sprotty/lib/features/bounds/bounds-manipulation.js ***!
  \*****************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.LayoutAction = exports.ComputedBoundsAction = exports.RequestBoundsAction = exports.SetBoundsAction = exports.RequestBoundsCommand = exports.SetBoundsCommand = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const actions_1 = __webpack_require__(/*! sprotty-protocol/lib/actions */ "../../node_modules/sprotty-protocol/lib/actions.js");
const protocol = __importStar(__webpack_require__(/*! sprotty-protocol/lib/actions */ "../../node_modules/sprotty-protocol/lib/actions.js"));
const command_1 = __webpack_require__(/*! ../../base/commands/command */ "../../node_modules/sprotty/lib/base/commands/command.js");
const types_1 = __webpack_require__(/*! ../../base/types */ "../../node_modules/sprotty/lib/base/types.js");
const model_1 = __webpack_require__(/*! ./model */ "../../node_modules/sprotty/lib/features/bounds/model.js");
let SetBoundsCommand = class SetBoundsCommand extends command_1.SystemCommand {
    constructor(action) {
        super();
        this.action = action;
        this.bounds = [];
    }
    execute(context) {
        this.action.bounds.forEach(b => {
            const element = context.root.index.getById(b.elementId);
            if (element && (0, model_1.isBoundsAware)(element)) {
                this.bounds.push({
                    element: element,
                    oldBounds: element.bounds,
                    newPosition: b.newPosition,
                    newSize: b.newSize
                });
            }
        });
        return this.redo(context);
    }
    undo(context) {
        this.bounds.forEach(b => b.element.bounds = b.oldBounds);
        return context.root;
    }
    redo(context) {
        this.bounds.forEach(b => {
            if (b.newPosition)
                b.element.bounds = Object.assign(Object.assign({}, b.newPosition), b.newSize);
            else
                // keep the position
                b.element.bounds = Object.assign({ x: b.element.bounds.x, y: b.element.bounds.y }, b.newSize);
        });
        return context.root;
    }
};
SetBoundsCommand.KIND = protocol.SetBoundsAction.KIND;
SetBoundsCommand = __decorate([
    (0, inversify_1.injectable)(),
    __param(0, (0, inversify_1.inject)(types_1.TYPES.Action)),
    __metadata("design:paramtypes", [Object])
], SetBoundsCommand);
exports.SetBoundsCommand = SetBoundsCommand;
let RequestBoundsCommand = class RequestBoundsCommand extends command_1.HiddenCommand {
    constructor(action) {
        super();
        this.action = action;
    }
    execute(context) {
        return {
            model: context.modelFactory.createRoot(this.action.newRoot),
            modelChanged: true,
            cause: this.action
        };
    }
    get blockUntil() {
        return action => action.kind === actions_1.ComputedBoundsAction.KIND;
    }
};
RequestBoundsCommand.KIND = protocol.RequestBoundsAction.KIND;
RequestBoundsCommand = __decorate([
    (0, inversify_1.injectable)(),
    __param(0, (0, inversify_1.inject)(types_1.TYPES.Action)),
    __metadata("design:paramtypes", [Object])
], RequestBoundsCommand);
exports.RequestBoundsCommand = RequestBoundsCommand;
// Compatibility deprecation layer (will be removed with the graduation 1.0.0 release)
/**
 * Sent from the model source (e.g. a DiagramServer) to the client to update the bounds of some
 * (or all) model elements.
 *
 * @deprecated Use the declaration from `sprotty-protocol` instead.
 */
class SetBoundsAction {
    constructor(bounds) {
        this.bounds = bounds;
        this.kind = SetBoundsAction.KIND;
    }
}
SetBoundsAction.KIND = 'setBounds';
exports.SetBoundsAction = SetBoundsAction;
/**
 * Sent from the model source to the client to request bounds for the given model. The model is
 * rendered invisibly so the bounds can derived from the DOM. The response is a ComputedBoundsAction.
 * This hidden rendering round-trip is necessary if the client is responsible for parts of the layout
 * (see `needsClientLayout` viewer option).
 *
 * @deprecated Use the declaration from `sprotty-protocol` instead.
 */
class RequestBoundsAction {
    constructor(newRoot, requestId = '') {
        this.newRoot = newRoot;
        this.requestId = requestId;
        this.kind = RequestBoundsAction.KIND;
    }
    /** Factory function to dispatch a request with the `IActionDispatcher` */
    static create(newRoot) {
        return new RequestBoundsAction(newRoot, (0, actions_1.generateRequestId)());
    }
}
RequestBoundsAction.KIND = 'requestBounds';
exports.RequestBoundsAction = RequestBoundsAction;
/**
 * Sent from the client to the model source (e.g. a DiagramServer) to transmit the result of bounds
 * computation as a response to a RequestBoundsAction. If the server is responsible for parts of
 * the layout (see `needsServerLayout` viewer option), it can do so after applying the computed bounds
 * received with this action. Otherwise there is no need to send the computed bounds to the server,
 * so they can be processed locally by the client.
 *
 * @deprecated Use the declaration from `sprotty-protocol` instead.
 */
class ComputedBoundsAction {
    constructor(bounds, revision, alignments, responseId = '') {
        this.bounds = bounds;
        this.revision = revision;
        this.alignments = alignments;
        this.responseId = responseId;
        this.kind = ComputedBoundsAction.KIND;
    }
}
ComputedBoundsAction.KIND = 'computedBounds';
exports.ComputedBoundsAction = ComputedBoundsAction;
/**
 * Request a layout of the diagram or the selected elements only.
 *
 * @deprecated Use the declaration from `sprotty-protocol` instead.
 */
class LayoutAction {
    constructor() {
        this.kind = LayoutAction.KIND;
    }
}
LayoutAction.KIND = 'layout';
exports.LayoutAction = LayoutAction;


/***/ }),

/***/ "../../node_modules/sprotty/lib/features/bounds/di.config.js":
/*!*******************************************************************!*\
  !*** ../../node_modules/sprotty/lib/features/bounds/di.config.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const types_1 = __webpack_require__(/*! ../../base/types */ "../../node_modules/sprotty/lib/base/types.js");
const bounds_manipulation_1 = __webpack_require__(/*! ./bounds-manipulation */ "../../node_modules/sprotty/lib/features/bounds/bounds-manipulation.js");
const hidden_bounds_updater_1 = __webpack_require__(/*! ./hidden-bounds-updater */ "../../node_modules/sprotty/lib/features/bounds/hidden-bounds-updater.js");
const layout_1 = __webpack_require__(/*! ./layout */ "../../node_modules/sprotty/lib/features/bounds/layout.js");
const command_registration_1 = __webpack_require__(/*! ../../base/commands/command-registration */ "../../node_modules/sprotty/lib/base/commands/command-registration.js");
const hbox_layout_1 = __webpack_require__(/*! ./hbox-layout */ "../../node_modules/sprotty/lib/features/bounds/hbox-layout.js");
const vbox_layout_1 = __webpack_require__(/*! ./vbox-layout */ "../../node_modules/sprotty/lib/features/bounds/vbox-layout.js");
const stack_layout_1 = __webpack_require__(/*! ./stack-layout */ "../../node_modules/sprotty/lib/features/bounds/stack-layout.js");
const boundsModule = new inversify_1.ContainerModule((bind, _unbind, isBound) => {
    (0, command_registration_1.configureCommand)({ bind, isBound }, bounds_manipulation_1.SetBoundsCommand);
    (0, command_registration_1.configureCommand)({ bind, isBound }, bounds_manipulation_1.RequestBoundsCommand);
    bind(hidden_bounds_updater_1.HiddenBoundsUpdater).toSelf().inSingletonScope();
    bind(types_1.TYPES.HiddenVNodePostprocessor).toService(hidden_bounds_updater_1.HiddenBoundsUpdater);
    bind(types_1.TYPES.Layouter).to(layout_1.Layouter).inSingletonScope();
    bind(types_1.TYPES.LayoutRegistry).to(layout_1.LayoutRegistry).inSingletonScope();
    (0, layout_1.configureLayout)({ bind, isBound }, vbox_layout_1.VBoxLayouter.KIND, vbox_layout_1.VBoxLayouter);
    (0, layout_1.configureLayout)({ bind, isBound }, hbox_layout_1.HBoxLayouter.KIND, hbox_layout_1.HBoxLayouter);
    (0, layout_1.configureLayout)({ bind, isBound }, stack_layout_1.StackLayouter.KIND, stack_layout_1.StackLayouter);
});
exports["default"] = boundsModule;


/***/ }),

/***/ "../../node_modules/sprotty/lib/features/bounds/hbox-layout.js":
/*!*********************************************************************!*\
  !*** ../../node_modules/sprotty/lib/features/bounds/hbox-layout.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.HBoxLayouter = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const geometry_1 = __webpack_require__(/*! sprotty-protocol/lib/utils/geometry */ "../../node_modules/sprotty-protocol/lib/utils/geometry.js");
const abstract_layout_1 = __webpack_require__(/*! ./abstract-layout */ "../../node_modules/sprotty/lib/features/bounds/abstract-layout.js");
const model_1 = __webpack_require__(/*! ./model */ "../../node_modules/sprotty/lib/features/bounds/model.js");
/**
 * Layouts children of a container in horizontal (left->right) direction.
 */
let HBoxLayouter = class HBoxLayouter extends abstract_layout_1.AbstractLayout {
    getChildrenSize(container, containerOptions, layouter) {
        let maxWidth = 0;
        let maxHeight = -1;
        let isFirst = true;
        container.children.forEach(child => {
            if ((0, model_1.isLayoutableChild)(child)) {
                const bounds = layouter.getBoundsData(child).bounds;
                if (bounds !== undefined && geometry_1.Dimension.isValid(bounds)) {
                    if (isFirst)
                        isFirst = false;
                    else
                        maxWidth += containerOptions.hGap;
                    maxWidth += bounds.width;
                    maxHeight = Math.max(maxHeight, bounds.height);
                }
            }
        });
        return {
            width: maxWidth,
            height: maxHeight
        };
    }
    layoutChild(child, boundsData, bounds, childOptions, containerOptions, currentOffset, maxWidth, maxHeight) {
        const dy = this.getDy(childOptions.vAlign, bounds, maxHeight);
        boundsData.bounds = {
            x: currentOffset.x + child.bounds.x - bounds.x,
            y: containerOptions.paddingTop + child.bounds.y - bounds.y + dy,
            width: bounds.width,
            height: bounds.height
        };
        boundsData.boundsChanged = true;
        return {
            x: currentOffset.x + bounds.width + containerOptions.hGap,
            y: currentOffset.y
        };
    }
    getDefaultLayoutOptions() {
        return {
            resizeContainer: true,
            paddingTop: 5,
            paddingBottom: 5,
            paddingLeft: 5,
            paddingRight: 5,
            paddingFactor: 1,
            hGap: 1,
            vAlign: 'center',
            minWidth: 0,
            minHeight: 0
        };
    }
    spread(a, b) {
        return Object.assign(Object.assign({}, a), b);
    }
};
HBoxLayouter.KIND = 'hbox';
HBoxLayouter = __decorate([
    (0, inversify_1.injectable)()
], HBoxLayouter);
exports.HBoxLayouter = HBoxLayouter;


/***/ }),

/***/ "../../node_modules/sprotty/lib/features/bounds/hidden-bounds-updater.js":
/*!*******************************************************************************!*\
  !*** ../../node_modules/sprotty/lib/features/bounds/hidden-bounds-updater.js ***!
  \*******************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.HiddenBoundsUpdater = exports.BoundsData = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const actions_1 = __webpack_require__(/*! sprotty-protocol/lib/actions */ "../../node_modules/sprotty-protocol/lib/actions.js");
const geometry_1 = __webpack_require__(/*! sprotty-protocol/lib/utils/geometry */ "../../node_modules/sprotty-protocol/lib/utils/geometry.js");
const smodel_1 = __webpack_require__(/*! ../../base/model/smodel */ "../../node_modules/sprotty/lib/base/model/smodel.js");
const types_1 = __webpack_require__(/*! ../../base/types */ "../../node_modules/sprotty/lib/base/types.js");
const layout_1 = __webpack_require__(/*! ./layout */ "../../node_modules/sprotty/lib/features/bounds/layout.js");
const model_1 = __webpack_require__(/*! ./model */ "../../node_modules/sprotty/lib/features/bounds/model.js");
class BoundsData {
}
exports.BoundsData = BoundsData;
/**
 * Grabs the bounds from hidden SVG DOM elements, applies layouts and fires
 * ComputedBoundsActions.
 *
 * The actual bounds of an element can usually not be determined from the SModel
 * as they depend on the view implementation and CSS stylings. So the best way is
 * to grab them from a live (but hidden) SVG using getBBox().
 *
 * If an element is Alignable, and the top-left corner of its bounding box is not
 * the origin, we also issue a realign with the ComputedBoundsAction.
 */
let HiddenBoundsUpdater = class HiddenBoundsUpdater {
    constructor() {
        this.element2boundsData = new Map;
    }
    decorate(vnode, element) {
        if ((0, model_1.isSizeable)(element) || (0, model_1.isLayoutContainer)(element)) {
            this.element2boundsData.set(element, {
                vnode: vnode,
                bounds: element.bounds,
                boundsChanged: false,
                alignmentChanged: false
            });
        }
        if (element instanceof smodel_1.SModelRootImpl)
            this.root = element;
        return vnode;
    }
    postUpdate(cause) {
        if (cause === undefined || cause.kind !== actions_1.RequestBoundsAction.KIND) {
            return;
        }
        const request = cause;
        this.getBoundsFromDOM();
        this.layouter.layout(this.element2boundsData);
        const resizes = [];
        const alignments = [];
        this.element2boundsData.forEach((boundsData, element) => {
            if (boundsData.boundsChanged && boundsData.bounds !== undefined) {
                const resize = {
                    elementId: element.id,
                    newSize: {
                        width: boundsData.bounds.width,
                        height: boundsData.bounds.height
                    }
                };
                // don't copy position if the element is layouted by the server
                if (element instanceof smodel_1.SChildElementImpl && (0, model_1.isLayoutContainer)(element.parent)) {
                    resize.newPosition = {
                        x: boundsData.bounds.x,
                        y: boundsData.bounds.y,
                    };
                }
                resizes.push(resize);
            }
            if (boundsData.alignmentChanged && boundsData.alignment !== undefined) {
                alignments.push({
                    elementId: element.id,
                    newAlignment: boundsData.alignment
                });
            }
        });
        const revision = (this.root !== undefined) ? this.root.revision : undefined;
        this.actionDispatcher.dispatch(actions_1.ComputedBoundsAction.create(resizes, { revision, alignments, requestId: request.requestId }));
        this.element2boundsData.clear();
    }
    getBoundsFromDOM() {
        this.element2boundsData.forEach((boundsData, element) => {
            if (boundsData.bounds && (0, model_1.isSizeable)(element)) {
                const vnode = boundsData.vnode;
                if (vnode && vnode.elm) {
                    const boundingBox = this.getBounds(vnode.elm, element);
                    if ((0, model_1.isAlignable)(element) && !((0, geometry_1.almostEquals)(boundingBox.x, 0) && (0, geometry_1.almostEquals)(boundingBox.y, 0))) {
                        boundsData.alignment = {
                            x: -boundingBox.x,
                            y: -boundingBox.y
                        };
                        boundsData.alignmentChanged = true;
                    }
                    const newBounds = {
                        x: element.bounds.x,
                        y: element.bounds.y,
                        width: boundingBox.width,
                        height: boundingBox.height
                    };
                    if (!((0, geometry_1.almostEquals)(newBounds.x, element.bounds.x)
                        && (0, geometry_1.almostEquals)(newBounds.y, element.bounds.y)
                        && (0, geometry_1.almostEquals)(newBounds.width, element.bounds.width)
                        && (0, geometry_1.almostEquals)(newBounds.height, element.bounds.height))) {
                        boundsData.bounds = newBounds;
                        boundsData.boundsChanged = true;
                    }
                }
            }
        });
    }
    getBounds(elm, element) {
        if (typeof elm.getBBox !== 'function') {
            this.logger.error(this, 'Not an SVG element:', elm);
            return geometry_1.Bounds.EMPTY;
        }
        const bounds = elm.getBBox();
        return {
            x: bounds.x,
            y: bounds.y,
            width: bounds.width,
            height: bounds.height
        };
    }
};
__decorate([
    (0, inversify_1.inject)(types_1.TYPES.ILogger),
    __metadata("design:type", Object)
], HiddenBoundsUpdater.prototype, "logger", void 0);
__decorate([
    (0, inversify_1.inject)(types_1.TYPES.IActionDispatcher),
    __metadata("design:type", Object)
], HiddenBoundsUpdater.prototype, "actionDispatcher", void 0);
__decorate([
    (0, inversify_1.inject)(types_1.TYPES.Layouter),
    __metadata("design:type", layout_1.Layouter)
], HiddenBoundsUpdater.prototype, "layouter", void 0);
HiddenBoundsUpdater = __decorate([
    (0, inversify_1.injectable)()
], HiddenBoundsUpdater);
exports.HiddenBoundsUpdater = HiddenBoundsUpdater;


/***/ }),

/***/ "../../node_modules/sprotty/lib/features/bounds/layout-options.js":
/*!************************************************************************!*\
  !*** ../../node_modules/sprotty/lib/features/bounds/layout-options.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ "../../node_modules/sprotty/lib/features/bounds/layout.js":
/*!****************************************************************!*\
  !*** ../../node_modules/sprotty/lib/features/bounds/layout.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.configureLayout = exports.StatefulLayouter = exports.Layouter = exports.LayoutRegistry = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const geometry_1 = __webpack_require__(/*! sprotty-protocol/lib/utils/geometry */ "../../node_modules/sprotty-protocol/lib/utils/geometry.js");
const types_1 = __webpack_require__(/*! ../../base/types */ "../../node_modules/sprotty/lib/base/types.js");
const registry_1 = __webpack_require__(/*! ../../utils/registry */ "../../node_modules/sprotty/lib/utils/registry.js");
const model_1 = __webpack_require__(/*! ./model */ "../../node_modules/sprotty/lib/features/bounds/model.js");
const inversify_2 = __webpack_require__(/*! ../../utils/inversify */ "../../node_modules/sprotty/lib/utils/inversify.js");
let LayoutRegistry = class LayoutRegistry extends registry_1.InstanceRegistry {
    constructor(layouts = []) {
        super();
        layouts.forEach(layout => {
            if (this.hasKey(layout.layoutKind)) {
                this.logger.warn('Layout kind is already defined: ', layout.layoutKind);
            }
            else {
                this.register(layout.layoutKind, layout.factory());
            }
        });
    }
};
__decorate([
    (0, inversify_1.inject)(types_1.TYPES.ILogger),
    __metadata("design:type", Object)
], LayoutRegistry.prototype, "logger", void 0);
LayoutRegistry = __decorate([
    (0, inversify_1.injectable)(),
    __param(0, (0, inversify_1.multiInject)(types_1.TYPES.LayoutRegistration)),
    __param(0, (0, inversify_1.optional)()),
    __metadata("design:paramtypes", [Array])
], LayoutRegistry);
exports.LayoutRegistry = LayoutRegistry;
let Layouter = class Layouter {
    layout(element2boundsData) {
        new StatefulLayouter(element2boundsData, this.layoutRegistry, this.logger).layout();
    }
};
__decorate([
    (0, inversify_1.inject)(types_1.TYPES.LayoutRegistry),
    __metadata("design:type", LayoutRegistry)
], Layouter.prototype, "layoutRegistry", void 0);
__decorate([
    (0, inversify_1.inject)(types_1.TYPES.ILogger),
    __metadata("design:type", Object)
], Layouter.prototype, "logger", void 0);
Layouter = __decorate([
    (0, inversify_1.injectable)()
], Layouter);
exports.Layouter = Layouter;
class StatefulLayouter {
    constructor(element2boundsData, layoutRegistry, log) {
        this.element2boundsData = element2boundsData;
        this.layoutRegistry = layoutRegistry;
        this.log = log;
        this.toBeLayouted = [];
        element2boundsData.forEach((data, element) => {
            if ((0, model_1.isLayoutContainer)(element))
                this.toBeLayouted.push(element);
        });
    }
    getBoundsData(element) {
        let boundsData = this.element2boundsData.get(element);
        let bounds = element.bounds;
        if ((0, model_1.isLayoutContainer)(element) && this.toBeLayouted.indexOf(element) >= 0) {
            bounds = this.doLayout(element);
        }
        if (!boundsData) {
            boundsData = {
                bounds: bounds,
                boundsChanged: false,
                alignmentChanged: false
            };
            this.element2boundsData.set(element, boundsData);
        }
        return boundsData;
    }
    layout() {
        while (this.toBeLayouted.length > 0) {
            const element = this.toBeLayouted[0];
            this.doLayout(element);
        }
    }
    doLayout(element) {
        const index = this.toBeLayouted.indexOf(element);
        if (index >= 0)
            this.toBeLayouted.splice(index, 1);
        const layout = this.layoutRegistry.get(element.layout);
        if (layout)
            layout.layout(element, this);
        const boundsData = this.element2boundsData.get(element);
        if (boundsData !== undefined && boundsData.bounds !== undefined) {
            return boundsData.bounds;
        }
        else {
            this.log.error(element, 'Layout failed');
            return geometry_1.Bounds.EMPTY;
        }
    }
}
exports.StatefulLayouter = StatefulLayouter;
function configureLayout(context, kind, constr) {
    if (typeof constr === 'function') {
        if (!(0, inversify_2.isInjectable)(constr)) {
            throw new Error(`Layouts be @injectable: ${constr.name}`);
        }
        if (!context.isBound(constr)) {
            context.bind(constr).toSelf();
        }
    }
    context.bind(types_1.TYPES.LayoutRegistration).toDynamicValue(ctx => ({
        layoutKind: kind,
        factory: () => ctx.container.get(constr)
    }));
}
exports.configureLayout = configureLayout;


/***/ }),

/***/ "../../node_modules/sprotty/lib/features/bounds/model.js":
/*!***************************************************************!*\
  !*** ../../node_modules/sprotty/lib/features/bounds/model.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SShapeElement = exports.SShapeElementImpl = exports.findChildrenAtPosition = exports.getAbsoluteClientBounds = exports.getAbsoluteBounds = exports.isAlignable = exports.isSizeable = exports.isLayoutableChild = exports.isLayoutContainer = exports.isBoundsAware = exports.alignFeature = exports.layoutableChildFeature = exports.layoutContainerFeature = exports.boundsFeature = void 0;
const geometry_1 = __webpack_require__(/*! sprotty-protocol/lib/utils/geometry */ "../../node_modules/sprotty-protocol/lib/utils/geometry.js");
const smodel_1 = __webpack_require__(/*! ../../base/model/smodel */ "../../node_modules/sprotty/lib/base/model/smodel.js");
const smodel_utils_1 = __webpack_require__(/*! ../../base/model/smodel-utils */ "../../node_modules/sprotty/lib/base/model/smodel-utils.js");
const browser_1 = __webpack_require__(/*! ../../utils/browser */ "../../node_modules/sprotty/lib/utils/browser.js");
exports.boundsFeature = Symbol('boundsFeature');
exports.layoutContainerFeature = Symbol('layoutContainerFeature');
exports.layoutableChildFeature = Symbol('layoutableChildFeature');
exports.alignFeature = Symbol('alignFeature');
function isBoundsAware(element) {
    return 'bounds' in element;
}
exports.isBoundsAware = isBoundsAware;
function isLayoutContainer(element) {
    return isBoundsAware(element)
        && element.hasFeature(exports.layoutContainerFeature)
        && 'layout' in element;
}
exports.isLayoutContainer = isLayoutContainer;
function isLayoutableChild(element) {
    return isBoundsAware(element)
        && element.hasFeature(exports.layoutableChildFeature);
}
exports.isLayoutableChild = isLayoutableChild;
function isSizeable(element) {
    return element.hasFeature(exports.boundsFeature) && isBoundsAware(element);
}
exports.isSizeable = isSizeable;
function isAlignable(element) {
    return element.hasFeature(exports.alignFeature)
        && 'alignment' in element;
}
exports.isAlignable = isAlignable;
function getAbsoluteBounds(element) {
    const boundsAware = (0, smodel_utils_1.findParentByFeature)(element, isBoundsAware);
    if (boundsAware !== undefined) {
        let bounds = boundsAware.bounds;
        let current = boundsAware;
        while (current instanceof smodel_1.SChildElementImpl) {
            const parent = current.parent;
            bounds = parent.localToParent(bounds);
            current = parent;
        }
        return bounds;
    }
    else if (element instanceof smodel_1.SModelRootImpl) {
        const canvasBounds = element.canvasBounds;
        return { x: 0, y: 0, width: canvasBounds.width, height: canvasBounds.height };
    }
    else {
        return geometry_1.Bounds.EMPTY;
    }
}
exports.getAbsoluteBounds = getAbsoluteBounds;
/**
 * Returns the "client-absolute" bounds of the specified `element`.
 *
 * The client-absolute bounds are relative to the entire browser page.
 *
 * @param element The element to get the bounds for.
 * @param domHelper The dom helper to obtain the SVG element's id.
 * @param viewerOptions The viewer options to obtain sprotty's container div id.
 */
function getAbsoluteClientBounds(element, domHelper, viewerOptions) {
    let x = 0;
    let y = 0;
    let width = 0;
    let height = 0;
    const svgElementId = domHelper.createUniqueDOMElementId(element);
    const svgElement = document.getElementById(svgElementId);
    if (svgElement) {
        const rect = svgElement.getBoundingClientRect();
        const scroll = (0, browser_1.getWindowScroll)();
        x = rect.left + scroll.x;
        y = rect.top + scroll.y;
        width = rect.width;
        height = rect.height;
    }
    let container = document.getElementById(viewerOptions.baseDiv);
    if (container) {
        while (container.offsetParent instanceof HTMLElement
            && (container = container.offsetParent)) {
            x -= container.offsetLeft;
            y -= container.offsetTop;
        }
    }
    return { x, y, width, height };
}
exports.getAbsoluteClientBounds = getAbsoluteClientBounds;
function findChildrenAtPosition(parent, point) {
    const matches = [];
    doFindChildrenAtPosition(parent, point, matches);
    return matches;
}
exports.findChildrenAtPosition = findChildrenAtPosition;
function doFindChildrenAtPosition(parent, point, matches) {
    parent.children.forEach(child => {
        if (isBoundsAware(child) && geometry_1.Bounds.includes(child.bounds, point))
            matches.push(child);
        if (child instanceof smodel_1.SParentElementImpl) {
            const newPoint = child.parentToLocal(point);
            doFindChildrenAtPosition(child, newPoint, matches);
        }
    });
}
/**
 * Abstract class for elements with a position and a size.
 */
class SShapeElementImpl extends smodel_1.SChildElementImpl {
    constructor() {
        super(...arguments);
        this.position = geometry_1.Point.ORIGIN;
        this.size = geometry_1.Dimension.EMPTY;
    }
    get bounds() {
        return {
            x: this.position.x,
            y: this.position.y,
            width: this.size.width,
            height: this.size.height
        };
    }
    set bounds(newBounds) {
        this.position = {
            x: newBounds.x,
            y: newBounds.y
        };
        this.size = {
            width: newBounds.width,
            height: newBounds.height
        };
    }
    localToParent(point) {
        const result = {
            x: point.x + this.position.x,
            y: point.y + this.position.y,
            width: -1,
            height: -1
        };
        if ((0, geometry_1.isBounds)(point)) {
            result.width = point.width;
            result.height = point.height;
        }
        return result;
    }
    parentToLocal(point) {
        const result = {
            x: point.x - this.position.x,
            y: point.y - this.position.y,
            width: -1,
            height: -1
        };
        if ((0, geometry_1.isBounds)(point)) {
            result.width = point.width;
            result.height = point.height;
        }
        return result;
    }
}
exports.SShapeElementImpl = SShapeElementImpl;
// Compatibility deprecation layer (will be removed with the graduation 1.0.0 release)
/** @deprecated Use `SShapeElementImpl` instead. */
exports.SShapeElement = SShapeElementImpl;


/***/ }),

/***/ "../../node_modules/sprotty/lib/features/bounds/resize.js":
/*!****************************************************************!*\
  !*** ../../node_modules/sprotty/lib/features/bounds/resize.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ResizeAnimation = void 0;
const animation_1 = __webpack_require__(/*! ../../base/animations/animation */ "../../node_modules/sprotty/lib/base/animations/animation.js");
class ResizeAnimation extends animation_1.Animation {
    constructor(model, elementResizes, context, reverse = false) {
        super(context);
        this.model = model;
        this.elementResizes = elementResizes;
        this.reverse = reverse;
    }
    tween(t) {
        this.elementResizes.forEach((elementResize) => {
            const element = elementResize.element;
            const newDimension = (this.reverse) ? {
                width: (1 - t) * elementResize.toDimension.width + t * elementResize.fromDimension.width,
                height: (1 - t) * elementResize.toDimension.height + t * elementResize.fromDimension.height
            } : {
                width: (1 - t) * elementResize.fromDimension.width + t * elementResize.toDimension.width,
                height: (1 - t) * elementResize.fromDimension.height + t * elementResize.toDimension.height
            };
            element.bounds = {
                x: element.bounds.x,
                y: element.bounds.y,
                width: newDimension.width,
                height: newDimension.height
            };
        });
        return this.model;
    }
}
exports.ResizeAnimation = ResizeAnimation;


/***/ }),

/***/ "../../node_modules/sprotty/lib/features/bounds/stack-layout.js":
/*!**********************************************************************!*\
  !*** ../../node_modules/sprotty/lib/features/bounds/stack-layout.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.StackLayouter = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const geometry_1 = __webpack_require__(/*! sprotty-protocol/lib/utils/geometry */ "../../node_modules/sprotty-protocol/lib/utils/geometry.js");
const abstract_layout_1 = __webpack_require__(/*! ./abstract-layout */ "../../node_modules/sprotty/lib/features/bounds/abstract-layout.js");
const model_1 = __webpack_require__(/*! ./model */ "../../node_modules/sprotty/lib/features/bounds/model.js");
let StackLayouter = class StackLayouter extends abstract_layout_1.AbstractLayout {
    getChildrenSize(container, options, layouter) {
        let maxWidth = -1;
        let maxHeight = -1;
        container.children.forEach(child => {
            if ((0, model_1.isLayoutableChild)(child)) {
                const bounds = layouter.getBoundsData(child).bounds;
                if (bounds !== undefined && geometry_1.Dimension.isValid(bounds)) {
                    maxWidth = Math.max(maxWidth, bounds.width);
                    maxHeight = Math.max(maxHeight, bounds.height);
                }
            }
        });
        return {
            width: maxWidth,
            height: maxHeight
        };
    }
    layoutChild(child, boundsData, bounds, childOptions, containerOptions, currentOffset, maxWidth, maxHeight) {
        const dx = this.getDx(childOptions.hAlign, bounds, maxWidth);
        const dy = this.getDy(childOptions.vAlign, bounds, maxHeight);
        boundsData.bounds = {
            x: containerOptions.paddingLeft + child.bounds.x - bounds.x + dx,
            y: containerOptions.paddingTop + child.bounds.y - bounds.y + dy,
            width: bounds.width,
            height: bounds.height
        };
        boundsData.boundsChanged = true;
        return currentOffset;
    }
    getDefaultLayoutOptions() {
        return {
            resizeContainer: true,
            paddingTop: 5,
            paddingBottom: 5,
            paddingLeft: 5,
            paddingRight: 5,
            paddingFactor: 1,
            hAlign: 'center',
            vAlign: 'center',
            minWidth: 0,
            minHeight: 0
        };
    }
    spread(a, b) {
        return Object.assign(Object.assign({}, a), b);
    }
};
StackLayouter.KIND = 'stack';
StackLayouter = __decorate([
    (0, inversify_1.injectable)()
], StackLayouter);
exports.StackLayouter = StackLayouter;


/***/ }),

/***/ "../../node_modules/sprotty/lib/features/bounds/vbox-layout.js":
/*!*********************************************************************!*\
  !*** ../../node_modules/sprotty/lib/features/bounds/vbox-layout.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.VBoxLayouter = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const geometry_1 = __webpack_require__(/*! sprotty-protocol/lib/utils/geometry */ "../../node_modules/sprotty-protocol/lib/utils/geometry.js");
const abstract_layout_1 = __webpack_require__(/*! ./abstract-layout */ "../../node_modules/sprotty/lib/features/bounds/abstract-layout.js");
const model_1 = __webpack_require__(/*! ./model */ "../../node_modules/sprotty/lib/features/bounds/model.js");
/**
 * Layouts children of a container in vertical (top->bottom) direction.
 */
let VBoxLayouter = class VBoxLayouter extends abstract_layout_1.AbstractLayout {
    getChildrenSize(container, containerOptions, layouter) {
        let maxWidth = -1;
        let maxHeight = 0;
        let isFirst = true;
        container.children.forEach(child => {
            if ((0, model_1.isLayoutableChild)(child)) {
                const bounds = layouter.getBoundsData(child).bounds;
                if (bounds !== undefined && geometry_1.Dimension.isValid(bounds)) {
                    maxHeight += bounds.height;
                    if (isFirst)
                        isFirst = false;
                    else
                        maxHeight += containerOptions.vGap;
                    maxWidth = Math.max(maxWidth, bounds.width);
                }
            }
        });
        return {
            width: maxWidth,
            height: maxHeight
        };
    }
    layoutChild(child, boundsData, bounds, childOptions, containerOptions, currentOffset, maxWidth, maxHeight) {
        const dx = this.getDx(childOptions.hAlign, bounds, maxWidth);
        boundsData.bounds = {
            x: containerOptions.paddingLeft + child.bounds.x - bounds.x + dx,
            y: currentOffset.y + child.bounds.y - bounds.y,
            width: bounds.width,
            height: bounds.height
        };
        boundsData.boundsChanged = true;
        return {
            x: currentOffset.x,
            y: currentOffset.y + bounds.height + containerOptions.vGap
        };
    }
    getDefaultLayoutOptions() {
        return {
            resizeContainer: true,
            paddingTop: 5,
            paddingBottom: 5,
            paddingLeft: 5,
            paddingRight: 5,
            paddingFactor: 1,
            vGap: 1,
            hAlign: 'center',
            minWidth: 0,
            minHeight: 0
        };
    }
    spread(a, b) {
        return Object.assign(Object.assign({}, a), b);
    }
};
VBoxLayouter.KIND = 'vbox';
VBoxLayouter = __decorate([
    (0, inversify_1.injectable)()
], VBoxLayouter);
exports.VBoxLayouter = VBoxLayouter;


/***/ }),

/***/ "../../node_modules/sprotty/lib/features/bounds/views.js":
/*!***************************************************************!*\
  !*** ../../node_modules/sprotty/lib/features/bounds/views.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2020 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ShapeView = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const geometry_1 = __webpack_require__(/*! sprotty-protocol/lib/utils/geometry */ "../../node_modules/sprotty-protocol/lib/utils/geometry.js");
const model_1 = __webpack_require__(/*! ./model */ "../../node_modules/sprotty/lib/features/bounds/model.js");
let ShapeView = class ShapeView {
    /**
     * Check whether the given model element is in the current viewport. Use this method
     * in your `render` implementation to skip rendering in case the element is not visible.
     * This can greatly enhance performance for large models.
     */
    isVisible(model, context) {
        if (context.targetKind === 'hidden') {
            // Don't hide any element for hidden rendering
            return true;
        }
        if (!geometry_1.Dimension.isValid(model.bounds)) {
            // We should hide only if we know the element's bounds
            return true;
        }
        const ab = (0, model_1.getAbsoluteBounds)(model);
        const canvasBounds = model.root.canvasBounds;
        return ab.x <= canvasBounds.width
            && ab.x + ab.width >= 0
            && ab.y <= canvasBounds.height
            && ab.y + ab.height >= 0;
    }
};
ShapeView = __decorate([
    (0, inversify_1.injectable)()
], ShapeView);
exports.ShapeView = ShapeView;


/***/ }),

/***/ "../../node_modules/sprotty/lib/features/button/button-handler.js":
/*!************************************************************************!*\
  !*** ../../node_modules/sprotty/lib/features/button/button-handler.js ***!
  \************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.configureButtonHandler = exports.ButtonHandlerRegistry = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const registry_1 = __webpack_require__(/*! ../../utils/registry */ "../../node_modules/sprotty/lib/utils/registry.js");
const types_1 = __webpack_require__(/*! ../../base/types */ "../../node_modules/sprotty/lib/base/types.js");
const inversify_2 = __webpack_require__(/*! ../../utils/inversify */ "../../node_modules/sprotty/lib/utils/inversify.js");
let ButtonHandlerRegistry = class ButtonHandlerRegistry extends registry_1.InstanceRegistry {
    constructor(buttonHandlerRegistrations, buttonHandlerFactories) {
        super();
        buttonHandlerRegistrations.forEach(factory => this.register(factory.TYPE, factory.factory()));
        // deprecated, but keep support for now
        buttonHandlerFactories.forEach(factory => this.register(factory.TYPE, new factory()));
    }
};
ButtonHandlerRegistry = __decorate([
    (0, inversify_1.injectable)(),
    __param(0, (0, inversify_1.multiInject)(types_1.TYPES.IButtonHandlerRegistration)),
    __param(0, (0, inversify_1.optional)()),
    __param(1, (0, inversify_1.multiInject)(types_1.TYPES.IButtonHandler)),
    __param(1, (0, inversify_1.optional)()),
    __metadata("design:paramtypes", [Array, Array])
], ButtonHandlerRegistry);
exports.ButtonHandlerRegistry = ButtonHandlerRegistry;
/**
 * Utility function to register a button handler for an button type.
 */
function configureButtonHandler(context, type, constr) {
    if (typeof constr === 'function') {
        if (!(0, inversify_2.isInjectable)(constr)) {
            throw new Error(`Button handlers should be @injectable: ${constr.name}`);
        }
        if (!context.isBound(constr)) {
            context.bind(constr).toSelf();
        }
    }
    context.bind(types_1.TYPES.IButtonHandlerRegistration).toDynamicValue(ctx => ({
        TYPE: type,
        factory: () => ctx.container.get(constr)
    }));
}
exports.configureButtonHandler = configureButtonHandler;


/***/ }),

/***/ "../../node_modules/sprotty/lib/features/button/di.config.js":
/*!*******************************************************************!*\
  !*** ../../node_modules/sprotty/lib/features/button/di.config.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const button_handler_1 = __webpack_require__(/*! ./button-handler */ "../../node_modules/sprotty/lib/features/button/button-handler.js");
const buttonModule = new inversify_1.ContainerModule(bind => {
    bind(button_handler_1.ButtonHandlerRegistry).toSelf().inSingletonScope();
});
exports["default"] = buttonModule;


/***/ }),

/***/ "../../node_modules/sprotty/lib/features/button/model.js":
/*!***************************************************************!*\
  !*** ../../node_modules/sprotty/lib/features/button/model.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SButton = exports.SButtonImpl = void 0;
const model_1 = __webpack_require__(/*! ../bounds/model */ "../../node_modules/sprotty/lib/features/bounds/model.js");
const model_2 = __webpack_require__(/*! ../fade/model */ "../../node_modules/sprotty/lib/features/fade/model.js");
class SButtonImpl extends model_1.SShapeElementImpl {
    constructor() {
        super(...arguments);
        this.enabled = true;
    }
}
SButtonImpl.DEFAULT_FEATURES = [model_1.boundsFeature, model_1.layoutableChildFeature, model_2.fadeFeature];
exports.SButtonImpl = SButtonImpl;
// Compatibility deprecation layer (will be removed with the graduation 1.0.0 release)
/** @deprecated Use `SButtonImpl` instead. */
exports.SButton = SButtonImpl;


/***/ }),

/***/ "../../node_modules/sprotty/lib/features/command-palette/action-providers.js":
/*!***********************************************************************************!*\
  !*** ../../node_modules/sprotty/lib/features/command-palette/action-providers.js ***!
  \***********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2019 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.RevealNamedElementActionProvider = exports.CommandPaletteActionProviderRegistry = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const actions_1 = __webpack_require__(/*! sprotty-protocol/lib/actions */ "../../node_modules/sprotty-protocol/lib/actions.js");
const action_1 = __webpack_require__(/*! ../../base/actions/action */ "../../node_modules/sprotty/lib/base/actions/action.js");
const types_1 = __webpack_require__(/*! ../../base/types */ "../../node_modules/sprotty/lib/base/types.js");
const iterable_1 = __webpack_require__(/*! ../../utils/iterable */ "../../node_modules/sprotty/lib/utils/iterable.js");
const model_1 = __webpack_require__(/*! ../nameable/model */ "../../node_modules/sprotty/lib/features/nameable/model.js");
let CommandPaletteActionProviderRegistry = class CommandPaletteActionProviderRegistry {
    constructor(actionProviders = []) {
        this.actionProviders = actionProviders;
    }
    getActions(root, text, lastMousePosition, index) {
        const actionLists = this.actionProviders.map(provider => provider.getActions(root, text, lastMousePosition, index));
        return Promise.all(actionLists).then(p => p.reduce((acc, promise) => promise !== undefined ? acc.concat(promise) : acc));
    }
};
CommandPaletteActionProviderRegistry = __decorate([
    (0, inversify_1.injectable)(),
    __param(0, (0, inversify_1.multiInject)(types_1.TYPES.ICommandPaletteActionProvider)),
    __param(0, (0, inversify_1.optional)()),
    __metadata("design:paramtypes", [Array])
], CommandPaletteActionProviderRegistry);
exports.CommandPaletteActionProviderRegistry = CommandPaletteActionProviderRegistry;
let RevealNamedElementActionProvider = class RevealNamedElementActionProvider {
    constructor(logger) {
        this.logger = logger;
    }
    getActions(root, text, lastMousePosition, index) {
        if (index !== undefined && index % 2 === 0)
            return Promise.resolve(this.createSelectActions(root));
        else
            return Promise.resolve([new action_1.LabeledAction("Select all", [actions_1.SelectAllAction.create()])]);
    }
    createSelectActions(modelRoot) {
        const nameables = (0, iterable_1.toArray)(modelRoot.index.all().filter(element => (0, model_1.isNameable)(element)));
        return nameables.map(nameable => new action_1.LabeledAction(`Reveal ${(0, model_1.name)(nameable)}`, [actions_1.SelectAction.create({ selectedElementsIDs: [nameable.id] }), actions_1.CenterAction.create([nameable.id])], 'eye'));
    }
};
RevealNamedElementActionProvider = __decorate([
    (0, inversify_1.injectable)(),
    __param(0, (0, inversify_1.inject)(types_1.TYPES.ILogger)),
    __metadata("design:paramtypes", [Object])
], RevealNamedElementActionProvider);
exports.RevealNamedElementActionProvider = RevealNamedElementActionProvider;


/***/ }),

/***/ "../../node_modules/sprotty/lib/features/command-palette/command-palette.js":
/*!**********************************************************************************!*\
  !*** ../../node_modules/sprotty/lib/features/command-palette/command-palette.js ***!
  \**********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var CommandPalette_1;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CommandPaletteKeyListener = exports.CommandPalette = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const actions_1 = __webpack_require__(/*! sprotty-protocol/lib/actions */ "../../node_modules/sprotty-protocol/lib/actions.js");
const action_1 = __webpack_require__(/*! ../../base/actions/action */ "../../node_modules/sprotty/lib/base/actions/action.js");
const types_1 = __webpack_require__(/*! ../../base/types */ "../../node_modules/sprotty/lib/base/types.js");
const ui_extension_1 = __webpack_require__(/*! ../../base/ui-extensions/ui-extension */ "../../node_modules/sprotty/lib/base/ui-extensions/ui-extension.js");
const ui_extension_registry_1 = __webpack_require__(/*! ../../base/ui-extensions/ui-extension-registry */ "../../node_modules/sprotty/lib/base/ui-extensions/ui-extension-registry.js");
const dom_helper_1 = __webpack_require__(/*! ../../base/views/dom-helper */ "../../node_modules/sprotty/lib/base/views/dom-helper.js");
const key_tool_1 = __webpack_require__(/*! ../../base/views/key-tool */ "../../node_modules/sprotty/lib/base/views/key-tool.js");
const codicon_1 = __webpack_require__(/*! ../../utils/codicon */ "../../node_modules/sprotty/lib/utils/codicon.js");
const iterable_1 = __webpack_require__(/*! ../../utils/iterable */ "../../node_modules/sprotty/lib/utils/iterable.js");
const keyboard_1 = __webpack_require__(/*! ../../utils/keyboard */ "../../node_modules/sprotty/lib/utils/keyboard.js");
const model_1 = __webpack_require__(/*! ../bounds/model */ "../../node_modules/sprotty/lib/features/bounds/model.js");
const model_2 = __webpack_require__(/*! ../select/model */ "../../node_modules/sprotty/lib/features/select/model.js");
const action_providers_1 = __webpack_require__(/*! ./action-providers */ "../../node_modules/sprotty/lib/features/command-palette/action-providers.js");
const mouse_tool_1 = __webpack_require__(/*! ../../base/views/mouse-tool */ "../../node_modules/sprotty/lib/base/views/mouse-tool.js");
const autocompleter_1 = __importDefault(__webpack_require__(/*! autocompleter */ "../../node_modules/sprotty/node_modules/autocompleter/autocomplete.js"));
let CommandPalette = CommandPalette_1 = class CommandPalette extends ui_extension_1.AbstractUIExtension {
    constructor() {
        super(...arguments);
        this.loadingIndicatorClasses = (0, codicon_1.codiconCSSClasses)('loading', false, true, ['loading']);
        this.xOffset = 20;
        this.yOffset = 20;
        this.defaultWidth = 400;
        this.debounceWaitMs = 100;
        this.noCommandsMsg = "No commands available";
        this.paletteIndex = 0;
    }
    id() { return CommandPalette_1.ID; }
    containerClass() { return "command-palette"; }
    show(root, ...contextElementIds) {
        super.show(root, ...contextElementIds);
        this.paletteIndex = 0;
        this.contextActions = undefined;
        this.inputElement.value = "";
        this.autoCompleteResult = (0, autocompleter_1.default)(this.autocompleteSettings(root));
        this.inputElement.focus();
    }
    initializeContents(containerElement) {
        containerElement.style.position = "absolute";
        this.inputElement = document.createElement('input');
        this.inputElement.style.width = '100%';
        this.inputElement.addEventListener('keydown', (event) => this.hideIfEscapeEvent(event));
        this.inputElement.addEventListener('keydown', (event) => this.cylceIfInvokePaletteKey(event));
        this.inputElement.onblur = () => window.setTimeout(() => this.hide(), 200);
        containerElement.appendChild(this.inputElement);
    }
    hideIfEscapeEvent(event) {
        if ((0, keyboard_1.matchesKeystroke)(event, 'Escape')) {
            this.hide();
        }
    }
    cylceIfInvokePaletteKey(event) {
        if (CommandPalette_1.isInvokePaletteKey(event)) {
            this.cycle();
        }
    }
    cycle() {
        this.contextActions = undefined;
        this.paletteIndex++;
    }
    onBeforeShow(containerElement, root, ...selectedElementIds) {
        let x = this.xOffset;
        let y = this.yOffset;
        const selectedElements = (0, iterable_1.toArray)(root.index.all().filter(e => (0, model_2.isSelectable)(e) && e.selected));
        if (selectedElements.length === 1) {
            const bounds = (0, model_1.getAbsoluteClientBounds)(selectedElements[0], this.domHelper, this.viewerOptions);
            x += bounds.x + bounds.width;
            y += bounds.y;
        }
        else {
            const bounds = (0, model_1.getAbsoluteClientBounds)(root, this.domHelper, this.viewerOptions);
            x += bounds.x;
            y += bounds.y;
        }
        containerElement.style.left = `${x}px`;
        containerElement.style.top = `${y}px`;
        containerElement.style.width = `${this.defaultWidth}px`;
    }
    autocompleteSettings(root) {
        return {
            input: this.inputElement,
            emptyMsg: this.noCommandsMsg,
            className: "command-palette-suggestions",
            debounceWaitMs: this.debounceWaitMs,
            showOnFocus: true,
            minLength: -1,
            fetch: (text, update) => this.updateAutoCompleteActions(update, text, root),
            onSelect: (item) => this.onSelect(item),
            render: (item, currentValue) => this.renderLabeledActionSuggestion(item, currentValue),
            customize: (input, inputRect, container, maxHeight) => {
                this.customizeSuggestionContainer(container, inputRect, maxHeight);
            }
        };
    }
    onSelect(item) {
        this.executeAction(item);
        this.hide();
    }
    updateAutoCompleteActions(update, text, root) {
        this.onLoading();
        if (this.contextActions) {
            update(this.filterActions(text, this.contextActions));
            this.onLoaded('success');
        }
        else {
            this.actionProviderRegistry
                .getActions(root, text, this.mousePositionTracker.lastPositionOnDiagram, this.paletteIndex)
                .then(actions => {
                this.contextActions = actions;
                update(this.filterActions(text, actions));
                this.onLoaded('success');
            })
                .catch((reason) => {
                this.logger.error(this, "Failed to obtain actions from command palette action providers", reason);
                this.onLoaded('error');
            });
        }
    }
    onLoading() {
        if (this.loadingIndicator && this.containerElement.contains(this.loadingIndicator)) {
            return;
        }
        this.loadingIndicator = document.createElement('span');
        this.loadingIndicator.classList.add(...this.loadingIndicatorClasses);
        this.containerElement.appendChild(this.loadingIndicator);
    }
    onLoaded(success) {
        if (this.containerElement.contains(this.loadingIndicator)) {
            this.containerElement.removeChild(this.loadingIndicator);
        }
    }
    renderLabeledActionSuggestion(item, value) {
        const itemElement = document.createElement("div");
        const wordMatcher = espaceForRegExp(value).split(" ").join("|");
        const regex = new RegExp(wordMatcher, "gi");
        if (item.icon) {
            this.renderIcon(itemElement, item.icon);
        }
        if (value.length > 0) {
            itemElement.innerHTML += item.label.replace(regex, (match) => "<em>" + match + "</em>").replace(/ /g, '&nbsp;');
        }
        else {
            itemElement.innerHTML += item.label.replace(/ /g, '&nbsp;');
        }
        return itemElement;
    }
    renderIcon(itemElement, iconId) {
        itemElement.innerHTML += `<span class="icon ${this.getCodicon(iconId)}"></span>`;
    }
    getFontAwesomeIcon(iconId) {
        return `fa fa-${iconId}`;
    }
    getCodicon(iconId) {
        return (0, codicon_1.codiconCSSString)(iconId);
    }
    filterActions(filterText, actions) {
        return (0, iterable_1.toArray)(actions.filter(action => {
            const label = action.label.toLowerCase();
            const searchWords = filterText.split(' ');
            return searchWords.every(word => label.indexOf(word.toLowerCase()) !== -1);
        }));
    }
    customizeSuggestionContainer(container, inputRect, maxHeight) {
        // move container into our command palette container as this is already positioned correctly
        if (this.containerElement) {
            this.containerElement.appendChild(container);
        }
    }
    hide() {
        super.hide();
        if (this.autoCompleteResult) {
            this.autoCompleteResult.destroy();
        }
    }
    executeAction(input) {
        this.actionDispatcherProvider()
            .then((actionDispatcher) => actionDispatcher.dispatchAll(toActionArray(input)))
            .catch((reason) => this.logger.error(this, 'No action dispatcher available to execute command palette action', reason));
    }
};
CommandPalette.ID = "command-palette";
CommandPalette.isInvokePaletteKey = (event) => (0, keyboard_1.matchesKeystroke)(event, 'Space', 'ctrl');
__decorate([
    (0, inversify_1.inject)(types_1.TYPES.IActionDispatcherProvider),
    __metadata("design:type", Function)
], CommandPalette.prototype, "actionDispatcherProvider", void 0);
__decorate([
    (0, inversify_1.inject)(types_1.TYPES.ICommandPaletteActionProviderRegistry),
    __metadata("design:type", action_providers_1.CommandPaletteActionProviderRegistry)
], CommandPalette.prototype, "actionProviderRegistry", void 0);
__decorate([
    (0, inversify_1.inject)(types_1.TYPES.ViewerOptions),
    __metadata("design:type", Object)
], CommandPalette.prototype, "viewerOptions", void 0);
__decorate([
    (0, inversify_1.inject)(types_1.TYPES.DOMHelper),
    __metadata("design:type", dom_helper_1.DOMHelper)
], CommandPalette.prototype, "domHelper", void 0);
__decorate([
    (0, inversify_1.inject)(mouse_tool_1.MousePositionTracker),
    __metadata("design:type", mouse_tool_1.MousePositionTracker)
], CommandPalette.prototype, "mousePositionTracker", void 0);
CommandPalette = CommandPalette_1 = __decorate([
    (0, inversify_1.injectable)()
], CommandPalette);
exports.CommandPalette = CommandPalette;
function toActionArray(input) {
    if ((0, action_1.isLabeledAction)(input)) {
        return input.actions;
    }
    else if ((0, actions_1.isAction)(input)) {
        return [input];
    }
    return [];
}
function espaceForRegExp(value) {
    return value.replace(/([.?*+^$[\]\\(){}|-])/g, '\\$1');
}
class CommandPaletteKeyListener extends key_tool_1.KeyListener {
    keyDown(element, event) {
        if ((0, keyboard_1.matchesKeystroke)(event, 'Escape')) {
            return [ui_extension_registry_1.SetUIExtensionVisibilityAction.create({ extensionId: CommandPalette.ID, visible: false, contextElementsId: [] })];
        }
        else if (CommandPalette.isInvokePaletteKey(event)) {
            const selectedElements = (0, iterable_1.toArray)(element.index.all().filter(e => (0, model_2.isSelectable)(e) && e.selected).map(e => e.id));
            return [ui_extension_registry_1.SetUIExtensionVisibilityAction.create({ extensionId: CommandPalette.ID, visible: true, contextElementsId: selectedElements })];
        }
        return [];
    }
}
exports.CommandPaletteKeyListener = CommandPaletteKeyListener;


/***/ }),

/***/ "../../node_modules/sprotty/lib/features/command-palette/di.config.js":
/*!****************************************************************************!*\
  !*** ../../node_modules/sprotty/lib/features/command-palette/di.config.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
/********************************************************************************
 * Copyright (c) 2019 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const types_1 = __webpack_require__(/*! ../../base/types */ "../../node_modules/sprotty/lib/base/types.js");
const action_providers_1 = __webpack_require__(/*! ./action-providers */ "../../node_modules/sprotty/lib/features/command-palette/action-providers.js");
const command_palette_1 = __webpack_require__(/*! ./command-palette */ "../../node_modules/sprotty/lib/features/command-palette/command-palette.js");
const commandPaletteModule = new inversify_1.ContainerModule((bind) => {
    bind(command_palette_1.CommandPalette).toSelf().inSingletonScope();
    bind(types_1.TYPES.IUIExtension).toService(command_palette_1.CommandPalette);
    bind(command_palette_1.CommandPaletteKeyListener).toSelf().inSingletonScope();
    bind(types_1.TYPES.KeyListener).toService(command_palette_1.CommandPaletteKeyListener);
    bind(action_providers_1.CommandPaletteActionProviderRegistry).toSelf().inSingletonScope();
    bind(types_1.TYPES.ICommandPaletteActionProviderRegistry).toService(action_providers_1.CommandPaletteActionProviderRegistry);
});
exports["default"] = commandPaletteModule;


/***/ }),

/***/ "../../node_modules/sprotty/lib/features/context-menu/context-menu-service.js":
/*!************************************************************************************!*\
  !*** ../../node_modules/sprotty/lib/features/context-menu/context-menu-service.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.toAnchor = void 0;
function toAnchor(anchor) {
    return anchor instanceof HTMLElement ? { x: anchor.offsetLeft, y: anchor.offsetTop } : anchor;
}
exports.toAnchor = toAnchor;


/***/ }),

/***/ "../../node_modules/sprotty/lib/features/context-menu/di.config.js":
/*!*************************************************************************!*\
  !*** ../../node_modules/sprotty/lib/features/context-menu/di.config.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
/********************************************************************************
 * Copyright (c) 2019 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const menu_providers_1 = __webpack_require__(/*! ./menu-providers */ "../../node_modules/sprotty/lib/features/context-menu/menu-providers.js");
const mouse_listener_1 = __webpack_require__(/*! ./mouse-listener */ "../../node_modules/sprotty/lib/features/context-menu/mouse-listener.js");
const types_1 = __webpack_require__(/*! ../../base/types */ "../../node_modules/sprotty/lib/base/types.js");
const contextMenuModule = new inversify_1.ContainerModule(bind => {
    bind(types_1.TYPES.IContextMenuServiceProvider).toProvider(ctx => {
        return () => {
            return new Promise((resolve, reject) => {
                if (ctx.container.isBound(types_1.TYPES.IContextMenuService)) {
                    resolve(ctx.container.get(types_1.TYPES.IContextMenuService));
                }
                else {
                    reject();
                }
            });
        };
    });
    bind(mouse_listener_1.ContextMenuMouseListener).toSelf().inSingletonScope();
    bind(types_1.TYPES.MouseListener).toService(mouse_listener_1.ContextMenuMouseListener);
    bind(types_1.TYPES.IContextMenuProviderRegistry).to(menu_providers_1.ContextMenuProviderRegistry);
});
exports["default"] = contextMenuModule;


/***/ }),

/***/ "../../node_modules/sprotty/lib/features/context-menu/menu-providers.js":
/*!******************************************************************************!*\
  !*** ../../node_modules/sprotty/lib/features/context-menu/menu-providers.js ***!
  \******************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2019 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.DeleteContextMenuItemProvider = exports.ContextMenuProviderRegistry = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const types_1 = __webpack_require__(/*! ../../base/types */ "../../node_modules/sprotty/lib/base/types.js");
const delete_1 = __webpack_require__(/*! ../edit/delete */ "../../node_modules/sprotty/lib/features/edit/delete.js");
const model_1 = __webpack_require__(/*! ../select/model */ "../../node_modules/sprotty/lib/features/select/model.js");
const sprotty_protocol_1 = __webpack_require__(/*! sprotty-protocol */ "../../node_modules/sprotty-protocol/lib/index.js");
let ContextMenuProviderRegistry = class ContextMenuProviderRegistry {
    constructor(menuProviders = []) {
        this.menuProviders = menuProviders;
    }
    getItems(root, lastMousePosition) {
        const menues = this.menuProviders.map(provider => provider.getItems(root, lastMousePosition));
        return Promise.all(menues).then(this.flattenAndRestructure);
    }
    flattenAndRestructure(p) {
        let menuItems = p.reduce((acc, promise) => promise !== undefined ? acc.concat(promise) : acc, []);
        const menuItemsWithParentId = menuItems.filter(menuItem => menuItem.parentId);
        for (const menuItem of menuItemsWithParentId) {
            if (menuItem.parentId) {
                const fragments = menuItem.parentId.split('.');
                let matchingParent = undefined;
                let nextParents = menuItems;
                for (const fragment of fragments) {
                    matchingParent = nextParents.find(item => fragment === item.id);
                    if (matchingParent && matchingParent.children)
                        nextParents = matchingParent.children;
                }
                if (matchingParent) {
                    if (matchingParent.children) {
                        matchingParent.children.push(menuItem);
                    }
                    else {
                        matchingParent.children = [menuItem];
                    }
                    menuItems = menuItems.filter(item => item !== menuItem);
                }
            }
        }
        return menuItems;
    }
};
ContextMenuProviderRegistry = __decorate([
    (0, inversify_1.injectable)(),
    __param(0, (0, inversify_1.multiInject)(types_1.TYPES.IContextMenuItemProvider)),
    __param(0, (0, inversify_1.optional)()),
    __metadata("design:paramtypes", [Array])
], ContextMenuProviderRegistry);
exports.ContextMenuProviderRegistry = ContextMenuProviderRegistry;
let DeleteContextMenuItemProvider = class DeleteContextMenuItemProvider {
    getItems(root, lastMousePosition) {
        const selectedElements = Array.from(root.index.all().filter(model_1.isSelected).filter(delete_1.isDeletable));
        return Promise.resolve([
            {
                id: 'delete',
                label: 'Delete',
                sortString: 'd',
                group: 'edit',
                actions: [sprotty_protocol_1.DeleteElementAction.create(selectedElements.map(e => e.id))],
                isEnabled: () => selectedElements.length > 0
            }
        ]);
    }
};
DeleteContextMenuItemProvider = __decorate([
    (0, inversify_1.injectable)()
], DeleteContextMenuItemProvider);
exports.DeleteContextMenuItemProvider = DeleteContextMenuItemProvider;


/***/ }),

/***/ "../../node_modules/sprotty/lib/features/context-menu/mouse-listener.js":
/*!******************************************************************************!*\
  !*** ../../node_modules/sprotty/lib/features/context-menu/mouse-listener.js ***!
  \******************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2019 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ContextMenuMouseListener = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const actions_1 = __webpack_require__(/*! sprotty-protocol/lib/actions */ "../../node_modules/sprotty-protocol/lib/actions.js");
const smodel_utils_1 = __webpack_require__(/*! ../../base/model/smodel-utils */ "../../node_modules/sprotty/lib/base/model/smodel-utils.js");
const types_1 = __webpack_require__(/*! ../../base/types */ "../../node_modules/sprotty/lib/base/types.js");
const mouse_tool_1 = __webpack_require__(/*! ../../base/views/mouse-tool */ "../../node_modules/sprotty/lib/base/views/mouse-tool.js");
const model_1 = __webpack_require__(/*! ../select/model */ "../../node_modules/sprotty/lib/features/select/model.js");
const menu_providers_1 = __webpack_require__(/*! ./menu-providers */ "../../node_modules/sprotty/lib/features/context-menu/menu-providers.js");
let ContextMenuMouseListener = class ContextMenuMouseListener extends mouse_tool_1.MouseListener {
    constructor(contextMenuService, menuProvider) {
        super();
        this.contextMenuService = contextMenuService;
        this.menuProvider = menuProvider;
    }
    contextMenu(target, event) {
        this.showContextMenu(target, event);
        return [];
    }
    async showContextMenu(target, event) {
        let menuService;
        try {
            menuService = await this.contextMenuService();
        }
        catch (rejected) {
            // IContextMenuService is not bound => do nothing
            return;
        }
        let isTargetSelected = false;
        const selectableTarget = (0, smodel_utils_1.findParentByFeature)(target, model_1.isSelectable);
        if (selectableTarget) {
            isTargetSelected = selectableTarget.selected;
            selectableTarget.selected = true;
        }
        const root = target.root;
        const mousePosition = { x: event.x, y: event.y };
        if (target.id === root.id || (0, model_1.isSelected)(selectableTarget)) {
            const menuItems = await this.menuProvider.getItems(root, mousePosition);
            const restoreSelection = () => { if (selectableTarget)
                selectableTarget.selected = isTargetSelected; };
            menuService.show(menuItems, mousePosition, restoreSelection);
        }
        else {
            if ((0, model_1.isSelectable)(target)) {
                const options = { selectedElementsIDs: [target.id], deselectedElementsIDs: Array.from(root.index.all().filter(model_1.isSelected), (val) => { return val.id; }) };
                await this.actionDispatcher.dispatch(actions_1.SelectAction.create(options));
            }
            const items = await this.menuProvider.getItems(root, mousePosition);
            menuService.show(items, mousePosition);
        }
    }
};
__decorate([
    (0, inversify_1.inject)(types_1.TYPES.IActionDispatcher),
    __metadata("design:type", Object)
], ContextMenuMouseListener.prototype, "actionDispatcher", void 0);
ContextMenuMouseListener = __decorate([
    __param(0, (0, inversify_1.inject)(types_1.TYPES.IContextMenuServiceProvider)),
    __param(1, (0, inversify_1.inject)(types_1.TYPES.IContextMenuProviderRegistry)),
    __metadata("design:paramtypes", [Function, menu_providers_1.ContextMenuProviderRegistry])
], ContextMenuMouseListener);
exports.ContextMenuMouseListener = ContextMenuMouseListener;


/***/ }),

/***/ "../../node_modules/sprotty/lib/features/decoration/decoration-placer.js":
/*!*******************************************************************************!*\
  !*** ../../node_modules/sprotty/lib/features/decoration/decoration-placer.js ***!
  \*******************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.DecorationPlacer = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const smodel_1 = __webpack_require__(/*! ../../base/model/smodel */ "../../node_modules/sprotty/lib/base/model/smodel.js");
const model_1 = __webpack_require__(/*! ./model */ "../../node_modules/sprotty/lib/features/decoration/model.js");
const vnode_utils_1 = __webpack_require__(/*! ../../base/views/vnode-utils */ "../../node_modules/sprotty/lib/base/views/vnode-utils.js");
const model_2 = __webpack_require__(/*! ../bounds/model */ "../../node_modules/sprotty/lib/features/bounds/model.js");
const model_3 = __webpack_require__(/*! ../routing/model */ "../../node_modules/sprotty/lib/features/routing/model.js");
const routing_1 = __webpack_require__(/*! ../routing/routing */ "../../node_modules/sprotty/lib/features/routing/routing.js");
const sprotty_protocol_1 = __webpack_require__(/*! sprotty-protocol */ "../../node_modules/sprotty-protocol/lib/index.js");
let DecorationPlacer = class DecorationPlacer {
    decorate(vnode, element) {
        if ((0, model_1.isDecoration)(element)) {
            const position = this.getPosition(element);
            const translate = 'translate(' + position.x + ', ' + position.y + ')';
            (0, vnode_utils_1.setAttr)(vnode, 'transform', translate);
        }
        return vnode;
    }
    getPosition(element) {
        if (element instanceof smodel_1.SChildElementImpl && element.parent instanceof model_3.SRoutableElementImpl) {
            const route = this.edgeRouterRegistry.route(element.parent);
            if (route.length > 1) {
                const index = Math.floor(0.5 * (route.length - 1));
                const offset = (0, model_2.isSizeable)(element)
                    ? {
                        x: -0.5 * element.bounds.width,
                        y: -0.5 * element.bounds.width
                    }
                    : sprotty_protocol_1.Point.ORIGIN;
                return {
                    x: 0.5 * (route[index].x + route[index + 1].x) + offset.x,
                    y: 0.5 * (route[index].y + route[index + 1].y) + offset.y
                };
            }
        }
        if ((0, model_2.isSizeable)(element))
            return {
                x: -0.666 * element.bounds.width,
                y: -0.666 * element.bounds.height
            };
        return sprotty_protocol_1.Point.ORIGIN;
    }
    postUpdate() {
    }
};
__decorate([
    (0, inversify_1.inject)(routing_1.EdgeRouterRegistry),
    __metadata("design:type", routing_1.EdgeRouterRegistry)
], DecorationPlacer.prototype, "edgeRouterRegistry", void 0);
DecorationPlacer = __decorate([
    (0, inversify_1.injectable)()
], DecorationPlacer);
exports.DecorationPlacer = DecorationPlacer;


/***/ }),

/***/ "../../node_modules/sprotty/lib/features/decoration/di.config.js":
/*!***********************************************************************!*\
  !*** ../../node_modules/sprotty/lib/features/decoration/di.config.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
const view_1 = __webpack_require__(/*! ../../base/views/view */ "../../node_modules/sprotty/lib/base/views/view.js");
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const model_1 = __webpack_require__(/*! ./model */ "../../node_modules/sprotty/lib/features/decoration/model.js");
const views_1 = __webpack_require__(/*! ./views */ "../../node_modules/sprotty/lib/features/decoration/views.js");
const types_1 = __webpack_require__(/*! ../../base/types */ "../../node_modules/sprotty/lib/base/types.js");
const decoration_placer_1 = __webpack_require__(/*! ./decoration-placer */ "../../node_modules/sprotty/lib/features/decoration/decoration-placer.js");
const decorationModule = new inversify_1.ContainerModule((bind, _unbind, isBound) => {
    (0, view_1.configureModelElement)({ bind, isBound }, 'marker', model_1.SIssueMarker, views_1.IssueMarkerView);
    bind(decoration_placer_1.DecorationPlacer).toSelf().inSingletonScope();
    bind(types_1.TYPES.IVNodePostprocessor).toService(decoration_placer_1.DecorationPlacer);
});
exports["default"] = decorationModule;


/***/ }),

/***/ "../../node_modules/sprotty/lib/features/decoration/model.js":
/*!*******************************************************************!*\
  !*** ../../node_modules/sprotty/lib/features/decoration/model.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SIssue = exports.SIssueMarker = exports.SDecoration = exports.isDecoration = exports.decorationFeature = void 0;
const model_1 = __webpack_require__(/*! ../bounds/model */ "../../node_modules/sprotty/lib/features/bounds/model.js");
const model_2 = __webpack_require__(/*! ../hover/model */ "../../node_modules/sprotty/lib/features/hover/model.js");
exports.decorationFeature = Symbol('decorationFeature');
function isDecoration(e) {
    return e.hasFeature(exports.decorationFeature);
}
exports.isDecoration = isDecoration;
class SDecoration extends model_1.SShapeElementImpl {
}
SDecoration.DEFAULT_FEATURES = [exports.decorationFeature, model_1.boundsFeature, model_2.hoverFeedbackFeature, model_2.popupFeature];
exports.SDecoration = SDecoration;
class SIssueMarker extends SDecoration {
}
exports.SIssueMarker = SIssueMarker;
class SIssue {
}
exports.SIssue = SIssue;


/***/ }),

/***/ "../../node_modules/sprotty/lib/features/decoration/views.js":
/*!*******************************************************************!*\
  !*** ../../node_modules/sprotty/lib/features/decoration/views.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.IssueMarkerView = void 0;
/** @jsx svg */
const jsx_1 = __webpack_require__(/*! ../../lib/jsx */ "../../node_modules/sprotty/lib/lib/jsx.js");
const vnode_utils_1 = __webpack_require__(/*! ../../base/views/vnode-utils */ "../../node_modules/sprotty/lib/base/views/vnode-utils.js");
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
let IssueMarkerView = class IssueMarkerView {
    render(marker, context) {
        const scale = 16 / 1792;
        const trafo = `scale(${scale}, ${scale})`;
        const maxSeverity = this.getMaxSeverity(marker);
        const group = (0, jsx_1.svg)("g", { "class-sprotty-issue": true },
            (0, jsx_1.svg)("g", { transform: trafo },
                (0, jsx_1.svg)("path", { d: this.getPath(maxSeverity) })));
        (0, vnode_utils_1.setClass)(group, 'sprotty-' + maxSeverity, true);
        return group;
    }
    getMaxSeverity(marker) {
        let currentSeverity = 'info';
        for (const severity of marker.issues.map(s => s.severity)) {
            if (severity === 'error' || (severity === 'warning' && currentSeverity === 'info'))
                currentSeverity = severity;
        }
        return currentSeverity;
    }
    getPath(severity) {
        switch (severity) {
            case 'error':
            case 'warning':
                // eslint-disable-next-line max-len
                return "M768 128q209 0 385.5 103t279.5 279.5 103 385.5-103 385.5-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103zm128 1247v-190q0-14-9-23.5t-22-9.5h-192q-13 0-23 10t-10 23v190q0 13 10 23t23 10h192q13 0 22-9.5t9-23.5zm-2-344l18-621q0-12-10-18-10-8-24-8h-220q-14 0-24 8-10 6-10 18l17 621q0 10 10 17.5t24 7.5h185q14 0 23.5-7.5t10.5-17.5z";
            case 'info':
                // eslint-disable-next-line max-len
                return "M1024 1376v-160q0-14-9-23t-23-9h-96v-512q0-14-9-23t-23-9h-320q-14 0-23 9t-9 23v160q0 14 9 23t23 9h96v320h-96q-14 0-23 9t-9 23v160q0 14 9 23t23 9h448q14 0 23-9t9-23zm-128-896v-160q0-14-9-23t-23-9h-192q-14 0-23 9t-9 23v160q0 14 9 23t23 9h192q14 0 23-9t9-23zm640 416q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z";
        }
    }
};
IssueMarkerView = __decorate([
    (0, inversify_1.injectable)()
], IssueMarkerView);
exports.IssueMarkerView = IssueMarkerView;


/***/ }),

/***/ "../../node_modules/sprotty/lib/features/edge-intersection/di.config.js":
/*!******************************************************************************!*\
  !*** ../../node_modules/sprotty/lib/features/edge-intersection/di.config.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2021 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const types_1 = __webpack_require__(/*! ../../base/types */ "../../node_modules/sprotty/lib/base/types.js");
const intersection_finder_1 = __webpack_require__(/*! ../edge-intersection/intersection-finder */ "../../node_modules/sprotty/lib/features/edge-intersection/intersection-finder.js");
const edgeIntersectionModule = new inversify_1.ContainerModule(bind => {
    bind(intersection_finder_1.IntersectionFinder).toSelf().inSingletonScope();
    bind(types_1.TYPES.IEdgeRoutePostprocessor).toService(intersection_finder_1.IntersectionFinder);
});
exports["default"] = edgeIntersectionModule;


/***/ }),

/***/ "../../node_modules/sprotty/lib/features/edge-intersection/intersection-finder.js":
/*!****************************************************************************************!*\
  !*** ../../node_modules/sprotty/lib/features/edge-intersection/intersection-finder.js ***!
  \****************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2021-2022 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.IntersectionFinder = exports.BY_DESCENDING_X_THEN_DESCENDING_Y = exports.BY_X_THEN_DESCENDING_Y = exports.BY_DESCENDING_X_THEN_Y = exports.BY_X_THEN_Y = exports.isIntersectingRoutedPoint = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const tinyqueue_1 = __importDefault(__webpack_require__(/*! tinyqueue */ "../../node_modules/tinyqueue/index.js"));
const sweepline_1 = __webpack_require__(/*! ./sweepline */ "../../node_modules/sprotty/lib/features/edge-intersection/sweepline.js");
function isIntersectingRoutedPoint(routedPoint) {
    return routedPoint !== undefined && 'intersections' in routedPoint && 'kind' in routedPoint;
}
exports.isIntersectingRoutedPoint = isIntersectingRoutedPoint;
const BY_X_THEN_Y = (a, b) => {
    if (a.intersectionPoint.x === b.intersectionPoint.x) {
        return a.intersectionPoint.y - b.intersectionPoint.y;
    }
    return a.intersectionPoint.x - b.intersectionPoint.x;
};
exports.BY_X_THEN_Y = BY_X_THEN_Y;
const BY_DESCENDING_X_THEN_Y = (a, b) => {
    if (a.intersectionPoint.x === b.intersectionPoint.x) {
        return a.intersectionPoint.y - b.intersectionPoint.y;
    }
    return b.intersectionPoint.x - a.intersectionPoint.x;
};
exports.BY_DESCENDING_X_THEN_Y = BY_DESCENDING_X_THEN_Y;
const BY_X_THEN_DESCENDING_Y = (a, b) => {
    if (a.intersectionPoint.x === b.intersectionPoint.x) {
        return b.intersectionPoint.y - a.intersectionPoint.y;
    }
    return a.intersectionPoint.x - b.intersectionPoint.x;
};
exports.BY_X_THEN_DESCENDING_Y = BY_X_THEN_DESCENDING_Y;
const BY_DESCENDING_X_THEN_DESCENDING_Y = (a, b) => {
    if (a.intersectionPoint.x === b.intersectionPoint.x) {
        return b.intersectionPoint.y - a.intersectionPoint.y;
    }
    return b.intersectionPoint.x - a.intersectionPoint.x;
};
exports.BY_DESCENDING_X_THEN_DESCENDING_Y = BY_DESCENDING_X_THEN_DESCENDING_Y;
/**
 * Finds intersections among edges and updates routed points to reflect those intersections.
 *
 * This only yields correct intersections among straight line segments and doesn't work with bezier curves.
 */
let IntersectionFinder = class IntersectionFinder {
    /**
     * Finds all intersections in the specified `routing` and replaces the `RoutedPoints` that are
     * intersecting by adding intersection information to routing points (@see `IntersectingRoutedPoints`).
     * @param routing the edge routing to find intersections for and update.
     */
    apply(routing) {
        const intersections = this.find(routing);
        this.addToRouting(intersections, routing);
    }
    /**
     * Finds the intersections in the specified `routing` and returns them.
     * @param routing the edge routing to find intersections for and update.
     * @returns the identified intersections.
     */
    find(routing) {
        const eventQueue = new tinyqueue_1.default(undefined, sweepline_1.checkWhichEventIsLeft);
        routing.routes.forEach((route, routeId) => {
            if (this.isSupportedRoute(route)) {
                (0, sweepline_1.addRoute)(routeId, route, eventQueue);
            }
        });
        return (0, sweepline_1.runSweep)(eventQueue);
    }
    /**
     * Specifies whether or not a specific route should be included in this intersection search or not.
     *
     * As this intersection finder only supports linear line segments, this method only returns `true`
     * for routes that only contain routed points, which are either 'source', 'target' or 'linear'.
     */
    isSupportedRoute(route) {
        return route.find(point => point.kind !== 'source' && point.kind !== 'target' && point.kind !== 'linear') === undefined;
    }
    addToRouting(intersections, routing) {
        for (const intersection of intersections) {
            const routable1 = routing.get(intersection.routable1);
            const routable2 = routing.get(intersection.routable2);
            this.addIntersectionToRoutedPoint(intersection, routable1, intersection.segmentIndex1);
            this.addIntersectionToRoutedPoint(intersection, routable2, intersection.segmentIndex2);
        }
    }
    addIntersectionToRoutedPoint(intersection, routedPoint, segmentIndex) {
        if (routedPoint && routedPoint.length > segmentIndex) {
            const segment = routedPoint[segmentIndex + 1];
            if (isIntersectingRoutedPoint(segment)) {
                segment.intersections.push(intersection);
            }
            else {
                const intersectingRoutedPoint = Object.assign(Object.assign({}, segment), { intersections: [intersection] });
                routedPoint[segmentIndex + 1] = intersectingRoutedPoint;
            }
        }
    }
};
IntersectionFinder = __decorate([
    (0, inversify_1.injectable)()
], IntersectionFinder);
exports.IntersectionFinder = IntersectionFinder;


/***/ }),

/***/ "../../node_modules/sprotty/lib/features/edge-intersection/sweepline.js":
/*!******************************************************************************!*\
  !*** ../../node_modules/sprotty/lib/features/edge-intersection/sweepline.js ***!
  \******************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.intersectionOfSegments = exports.getSegmentIndex = exports.checkWhichSegmentHasRightEndpointFirst = exports.runSweep = exports.Segment = exports.SweepEvent = exports.checkWhichEventIsLeft = exports.addRoute = void 0;
/********************************************************************************
 * Copyright (c) 2019 Rowan Winsemius and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
// Based on the sweepline implementation at https://github.com/rowanwins/sweepline-intersections
// which is published under the terms of MIT, but has been adapted to the use case of sprotty.
const tinyqueue_1 = __importDefault(__webpack_require__(/*! tinyqueue */ "../../node_modules/tinyqueue/index.js"));
const geometry_1 = __webpack_require__(/*! ../../utils/geometry */ "../../node_modules/sprotty/lib/utils/geometry.js");
/*
 * The algorithm implemented in this module is loosely based on the Bentley-Ottmann algorithm for
 * finding intersection among line segments in `O((n+k) log n)`, whereas `n` is the number of line
 * segments and `k` is the number of intersections.
 * The underlying idea is to use a imaginary sweep line that moves over the x/y plane and testing
 * only the line segments for intersection that the sweepline currently crosses, instead of
 * testing all segment with each other, which would be `O(n^2)`.
 * It does so by generating a prioritized event queue for start and end events of the line segments
 * and working its way through the queue (i.e., sweeping).
 * More information can be found at https://en.wikipedia.org/wiki/Bentley%E2%80%93Ottmann_algorithm
 * In contrast to the original Bently-Ottmann algorithm, the implementation below does not use a tree
 * data structure to store the segments in order to simplify the implementation.
 * See also https://github.com/rowanwins/sweepline-intersections#algorithm-notes
 */
/**
 * Add the specified `route` to the event `queue` from left to right.
 * @param routeId id of the route.
 * @param route the route as array of points.
 * @param queue the queue to add the route to.
 */
function addRoute(routeId, route, queue) {
    if (route.length < 1)
        return;
    let currentPoint = route[0];
    let nextPoint = undefined;
    for (let i = 0; i < route.length - 1; i++) {
        nextPoint = route[i + 1];
        const e1 = new SweepEvent(routeId, currentPoint, i);
        const e2 = new SweepEvent(routeId, nextPoint, i + 1);
        e1.otherEvent = e2;
        e2.otherEvent = e1;
        if (checkWhichEventIsLeft(e1, e2) > 0) {
            e2.isLeftEndpoint = true;
            e1.isLeftEndpoint = false;
        }
        else {
            e1.isLeftEndpoint = true;
            e2.isLeftEndpoint = false;
        }
        queue.push(e1);
        queue.push(e2);
        currentPoint = nextPoint;
    }
}
exports.addRoute = addRoute;
/**
 * Returns which of the two events is left.
 * This is used to classify the endpoints of a segment when generating the
 * event queue.
 */
function checkWhichEventIsLeft(e1, e2) {
    if (e1.point.x > e2.point.x)
        return 1;
    if (e1.point.x < e2.point.x)
        return -1;
    if (e1.point.y !== e2.point.y)
        return e1.point.y > e2.point.y ? 1 : -1;
    return 1;
}
exports.checkWhichEventIsLeft = checkWhichEventIsLeft;
/**
 * An event -- or with other words a start or end point of a segment -- in the context
 * of the event queue for the sweep.
 *
 * Stores the original Sprotty `edgeId` and the segment index of this segment in the edge
 * to keep track of which edge and segment this event originated from.
 */
class SweepEvent {
    constructor(edgeId, point, segmentIndex) {
        this.edgeId = edgeId;
        this.point = point;
        this.segmentIndex = segmentIndex;
    }
}
exports.SweepEvent = SweepEvent;
/**
 * A line segment consists of a start and a stop event.
 */
class Segment {
    constructor(event) {
        this.leftSweepEvent = event;
        this.rightSweepEvent = event.otherEvent;
    }
}
exports.Segment = Segment;
/**
 * Performs the main sweep algorithm on the specified event queue.
 *
 * An empty priority queue is created to store segments encountered.
 * An item is removed from the priority queue if the vertex is the left endpoint
 * of a segment, we test it against every other segment in the segment queue for
 * intersections with any intersection recorded. We then add the vertex (and it's
 * associated right endpoint) to the segment queue.
 * If we encounter a right endpoint we remove the first item from the segment queue.
 *
 * Each pair of segments are only tested once. And only segments that overlap on the
 * x plane are tested against each other.
 *
 * @param eventQueue the event queue.
 * @returns the identified intersections.
 */
function runSweep(eventQueue) {
    const intersectionPoints = [];
    const outQueue = new tinyqueue_1.default([], checkWhichSegmentHasRightEndpointFirst);
    while (eventQueue.length) {
        const event = eventQueue.pop();
        if (event === null || event === void 0 ? void 0 : event.isLeftEndpoint) {
            const segment = new Segment(event);
            for (let i = 0; i < outQueue.data.length; i++) {
                const otherSegment = outQueue.data[i];
                const intersection = intersectionOfSegments(segment, otherSegment);
                if (intersection) {
                    intersectionPoints.push({
                        routable1: event.edgeId,
                        routable2: otherSegment.leftSweepEvent.edgeId,
                        segmentIndex1: getSegmentIndex(segment),
                        segmentIndex2: getSegmentIndex(otherSegment),
                        intersectionPoint: intersection
                    });
                }
            }
            outQueue.push(segment);
        }
        else if ((event === null || event === void 0 ? void 0 : event.isLeftEndpoint) === false) {
            outQueue.pop();
        }
    }
    return intersectionPoints;
}
exports.runSweep = runSweep;
/**
 * Specifies which of the two specified segments has a right endpoint first.
 * Used as a comparator to sort the event queue.
 */
function checkWhichSegmentHasRightEndpointFirst(seg1, seg2) {
    if (seg1.rightSweepEvent.point.x > seg2.rightSweepEvent.point.x)
        return 1;
    if (seg1.rightSweepEvent.point.x < seg2.rightSweepEvent.point.x)
        return -1;
    if (seg1.rightSweepEvent.point.y !== seg2.rightSweepEvent.point.y)
        return seg1.rightSweepEvent.point.y < seg2.rightSweepEvent.point.y ? 1 : -1;
    return 1;
}
exports.checkWhichSegmentHasRightEndpointFirst = checkWhichSegmentHasRightEndpointFirst;
function getSegmentIndex(segment) {
    return Math.min(segment.leftSweepEvent.segmentIndex, segment.rightSweepEvent.segmentIndex);
}
exports.getSegmentIndex = getSegmentIndex;
/**
 * Tests whether two segments intersect and returns the intersection point if existing.
 */
function intersectionOfSegments(seg1, seg2) {
    if (seg1.leftSweepEvent.edgeId === seg2.leftSweepEvent.edgeId) {
        return undefined;
    }
    const seg1Line = new geometry_1.PointToPointLine(seg1.leftSweepEvent.point, seg1.rightSweepEvent.point);
    const seg2Line = new geometry_1.PointToPointLine(seg2.leftSweepEvent.point, seg2.rightSweepEvent.point);
    return seg1Line.intersection(seg2Line);
}
exports.intersectionOfSegments = intersectionOfSegments;


/***/ }),

/***/ "../../node_modules/sprotty/lib/features/edge-layout/di.config.js":
/*!************************************************************************!*\
  !*** ../../node_modules/sprotty/lib/features/edge-layout/di.config.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const types_1 = __webpack_require__(/*! ../../base/types */ "../../node_modules/sprotty/lib/base/types.js");
const edge_layout_1 = __webpack_require__(/*! ./edge-layout */ "../../node_modules/sprotty/lib/features/edge-layout/edge-layout.js");
const edgeLayoutModule = new inversify_1.ContainerModule(bind => {
    bind(edge_layout_1.EdgeLayoutPostprocessor).toSelf().inSingletonScope();
    bind(types_1.TYPES.IVNodePostprocessor).toService(edge_layout_1.EdgeLayoutPostprocessor);
    bind(types_1.TYPES.HiddenVNodePostprocessor).toService(edge_layout_1.EdgeLayoutPostprocessor);
});
exports["default"] = edgeLayoutModule;


/***/ }),

/***/ "../../node_modules/sprotty/lib/features/edge-layout/edge-layout.js":
/*!**************************************************************************!*\
  !*** ../../node_modules/sprotty/lib/features/edge-layout/edge-layout.js ***!
  \**************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.EdgeLayoutPostprocessor = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const geometry_1 = __webpack_require__(/*! sprotty-protocol/lib/utils/geometry */ "../../node_modules/sprotty-protocol/lib/utils/geometry.js");
const smodel_1 = __webpack_require__(/*! ../../base/model/smodel */ "../../node_modules/sprotty/lib/base/model/smodel.js");
const vnode_utils_1 = __webpack_require__(/*! ../../base/views/vnode-utils */ "../../node_modules/sprotty/lib/base/views/vnode-utils.js");
const sgraph_1 = __webpack_require__(/*! ../../graph/sgraph */ "../../node_modules/sprotty/lib/graph/sgraph.js");
const model_1 = __webpack_require__(/*! ../bounds/model */ "../../node_modules/sprotty/lib/features/bounds/model.js");
const model_2 = __webpack_require__(/*! ./model */ "../../node_modules/sprotty/lib/features/edge-layout/model.js");
const routing_1 = __webpack_require__(/*! ../routing/routing */ "../../node_modules/sprotty/lib/features/routing/routing.js");
let EdgeLayoutPostprocessor = class EdgeLayoutPostprocessor {
    decorate(vnode, element) {
        if ((0, model_2.isEdgeLayoutable)(element) && element.parent instanceof sgraph_1.SEdgeImpl) {
            if (element.bounds !== geometry_1.Bounds.EMPTY) {
                const placement = this.getEdgePlacement(element);
                const edge = element.parent;
                const position = Math.min(1, Math.max(0, placement.position));
                const router = this.edgeRouterRegistry.get(edge.routerKind);
                const pointOnEdge = router.pointAt(edge, position);
                const derivativeOnEdge = router.derivativeAt(edge, position);
                let transform = '';
                if (pointOnEdge && derivativeOnEdge) {
                    transform += `translate(${pointOnEdge.x}, ${pointOnEdge.y})`;
                    const angle = (0, geometry_1.toDegrees)(Math.atan2(derivativeOnEdge.y, derivativeOnEdge.x));
                    if (placement.rotate) {
                        let flippedAngle = angle;
                        if (Math.abs(angle) > 90) {
                            if (angle < 0)
                                flippedAngle += 180;
                            else if (angle > 0)
                                flippedAngle -= 180;
                        }
                        transform += ` rotate(${flippedAngle})`;
                        const alignment = this.getRotatedAlignment(element, placement, flippedAngle !== angle);
                        transform += ` translate(${alignment.x}, ${alignment.y})`;
                    }
                    else {
                        const alignment = this.getAlignment(element, placement, angle);
                        transform += ` translate(${alignment.x}, ${alignment.y})`;
                    }
                    (0, vnode_utils_1.setAttr)(vnode, 'transform', transform);
                }
            }
        }
        return vnode;
    }
    getRotatedAlignment(element, placement, flip) {
        let x = (0, model_1.isAlignable)(element) ? element.alignment.x : 0;
        let y = (0, model_1.isAlignable)(element) ? element.alignment.y : 0;
        const bounds = element.bounds;
        if (placement.side === 'on')
            return { x: x - 0.5 * bounds.height, y: y - 0.5 * bounds.height };
        if (flip) {
            if (placement.position < 0.3333333)
                x -= bounds.width + placement.offset;
            else if (placement.position < 0.6666666)
                x -= 0.5 * bounds.width;
            else
                x += placement.offset;
            switch (placement.side) {
                case 'left':
                case 'bottom':
                    y -= placement.offset + bounds.height;
                    break;
                case 'right':
                case 'top':
                    y += placement.offset;
            }
        }
        else {
            if (placement.position < 0.3333333)
                x += placement.offset;
            else if (placement.position < 0.6666666)
                x -= 0.5 * bounds.width;
            else
                x -= bounds.width + placement.offset;
            switch (placement.side) {
                case 'right':
                case 'bottom':
                    y += -placement.offset - bounds.height;
                    break;
                case 'left':
                case 'top':
                    y += placement.offset;
            }
        }
        return { x, y };
    }
    getEdgePlacement(element) {
        let current = element;
        const allPlacements = [];
        while (current !== undefined) {
            const placement = current.edgePlacement;
            if (placement !== undefined)
                allPlacements.push(placement);
            if (current instanceof smodel_1.SChildElementImpl)
                current = current.parent;
            else
                break;
        }
        return allPlacements.reverse().reduce((a, b) => { return Object.assign(Object.assign({}, a), b); }, model_2.DEFAULT_EDGE_PLACEMENT);
    }
    getAlignment(label, placement, angle) {
        const bounds = label.bounds;
        const x = (0, model_1.isAlignable)(label) ? label.alignment.x - bounds.width : 0;
        const y = (0, model_1.isAlignable)(label) ? label.alignment.y - bounds.height : 0;
        if (placement.side === 'on') {
            return { x: x + 0.5 * bounds.width, y: y + 0.5 * bounds.height };
        }
        const quadrant = this.getQuadrant(angle);
        const midLeft = { x: placement.offset, y: y + 0.5 * bounds.height };
        const topLeft = { x: placement.offset, y: y + bounds.height + placement.offset };
        const topRight = { x: -bounds.width - placement.offset, y: y + bounds.height + placement.offset };
        const midRight = { x: -bounds.width - placement.offset, y: y + 0.5 * bounds.height };
        const bottomRight = { x: -bounds.width - placement.offset, y: y - placement.offset };
        const bottomLeft = { x: placement.offset, y: y - placement.offset };
        switch (placement.side) {
            case 'left':
                switch (quadrant.orientation) {
                    case 'west':
                        return geometry_1.Point.linear(topLeft, topRight, quadrant.position);
                    case 'north':
                        return geometry_1.Point.linear(topRight, bottomRight, quadrant.position);
                    case 'east':
                        return geometry_1.Point.linear(bottomRight, bottomLeft, quadrant.position);
                    case 'south':
                        return geometry_1.Point.linear(bottomLeft, topLeft, quadrant.position);
                }
                break;
            case 'right':
                switch (quadrant.orientation) {
                    case 'west':
                        return geometry_1.Point.linear(bottomRight, bottomLeft, quadrant.position);
                    case 'north':
                        return geometry_1.Point.linear(bottomLeft, topLeft, quadrant.position);
                    case 'east':
                        return geometry_1.Point.linear(topLeft, topRight, quadrant.position);
                    case 'south':
                        return geometry_1.Point.linear(topRight, bottomRight, quadrant.position);
                }
                break;
            case 'top':
                switch (quadrant.orientation) {
                    case 'west':
                        return geometry_1.Point.linear(bottomRight, bottomLeft, quadrant.position);
                    case 'north':
                        return this.linearFlip(bottomLeft, midLeft, midRight, bottomRight, quadrant.position);
                    case 'east':
                        return geometry_1.Point.linear(bottomRight, bottomLeft, quadrant.position);
                    case 'south':
                        return this.linearFlip(bottomLeft, midLeft, midRight, bottomRight, quadrant.position);
                }
                break;
            case 'bottom':
                switch (quadrant.orientation) {
                    case 'west':
                        return geometry_1.Point.linear(topLeft, topRight, quadrant.position);
                    case 'north':
                        return this.linearFlip(topRight, midRight, midLeft, topLeft, quadrant.position);
                    case 'east':
                        return geometry_1.Point.linear(topLeft, topRight, quadrant.position);
                    case 'south':
                        return this.linearFlip(topRight, midRight, midLeft, topLeft, quadrant.position);
                }
                break;
        }
        return { x: 0, y: 0 };
    }
    getQuadrant(angle) {
        if (Math.abs(angle) > 135)
            return { orientation: 'west', position: (angle > 0 ? angle - 135 : angle + 225) / 90 };
        else if (angle < -45)
            return { orientation: 'north', position: (angle + 135) / 90 };
        else if (angle < 45)
            return { orientation: 'east', position: (angle + 45) / 90 };
        else
            return { orientation: 'south', position: (angle - 45) / 90 };
    }
    linearFlip(p0, p1, p2, p3, position) {
        return position < 0.5 ? geometry_1.Point.linear(p0, p1, 2 * position) : geometry_1.Point.linear(p2, p3, 2 * position - 1);
    }
    postUpdate() { }
};
__decorate([
    (0, inversify_1.inject)(routing_1.EdgeRouterRegistry),
    __metadata("design:type", routing_1.EdgeRouterRegistry)
], EdgeLayoutPostprocessor.prototype, "edgeRouterRegistry", void 0);
EdgeLayoutPostprocessor = __decorate([
    (0, inversify_1.injectable)()
], EdgeLayoutPostprocessor);
exports.EdgeLayoutPostprocessor = EdgeLayoutPostprocessor;


/***/ }),

/***/ "../../node_modules/sprotty/lib/features/edge-layout/model.js":
/*!********************************************************************!*\
  !*** ../../node_modules/sprotty/lib/features/edge-layout/model.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.DEFAULT_EDGE_PLACEMENT = exports.EdgePlacement = exports.isEdgeLayoutable = exports.edgeLayoutFeature = void 0;
const smodel_1 = __webpack_require__(/*! ../../base/model/smodel */ "../../node_modules/sprotty/lib/base/model/smodel.js");
const model_1 = __webpack_require__(/*! ../bounds/model */ "../../node_modules/sprotty/lib/features/bounds/model.js");
const model_2 = __webpack_require__(/*! ../routing/model */ "../../node_modules/sprotty/lib/features/routing/model.js");
exports.edgeLayoutFeature = Symbol('edgeLayout');
function isEdgeLayoutable(element) {
    return element instanceof smodel_1.SChildElementImpl
        && element.parent instanceof model_2.SRoutableElementImpl
        && checkEdgeLayoutable(element)
        && (0, model_1.isBoundsAware)(element)
        && element.hasFeature(exports.edgeLayoutFeature);
}
exports.isEdgeLayoutable = isEdgeLayoutable;
function checkEdgeLayoutable(element) {
    return 'edgePlacement' in element;
}
class EdgePlacement extends Object {
}
exports.EdgePlacement = EdgePlacement;
exports.DEFAULT_EDGE_PLACEMENT = {
    rotate: true,
    side: 'top',
    position: 0.5,
    offset: 7
};


/***/ }),

/***/ "../../node_modules/sprotty/lib/features/edit/create-on-drag.js":
/*!**********************************************************************!*\
  !*** ../../node_modules/sprotty/lib/features/edit/create-on-drag.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isCreatingOnDrag = exports.creatingOnDragFeature = void 0;
exports.creatingOnDragFeature = Symbol('creatingOnDragFeature');
function isCreatingOnDrag(element) {
    return element.hasFeature(exports.creatingOnDragFeature) && element.createAction !== undefined;
}
exports.isCreatingOnDrag = isCreatingOnDrag;


/***/ }),

/***/ "../../node_modules/sprotty/lib/features/edit/create.js":
/*!**************************************************************!*\
  !*** ../../node_modules/sprotty/lib/features/edit/create.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CreateElementAction = exports.CreateElementCommand = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const actions_1 = __webpack_require__(/*! sprotty-protocol/lib/actions */ "../../node_modules/sprotty-protocol/lib/actions.js");
const command_1 = __webpack_require__(/*! ../../base/commands/command */ "../../node_modules/sprotty/lib/base/commands/command.js");
const smodel_1 = __webpack_require__(/*! ../../base/model/smodel */ "../../node_modules/sprotty/lib/base/model/smodel.js");
const types_1 = __webpack_require__(/*! ../../base/types */ "../../node_modules/sprotty/lib/base/types.js");
let CreateElementCommand = class CreateElementCommand extends command_1.Command {
    constructor(action) {
        super();
        this.action = action;
    }
    execute(context) {
        const container = context.root.index.getById(this.action.containerId);
        if (container instanceof smodel_1.SParentElementImpl) {
            this.container = container;
            this.newElement = context.modelFactory.createElement(this.action.elementSchema);
            this.container.add(this.newElement);
        }
        return context.root;
    }
    undo(context) {
        this.container.remove(this.newElement);
        return context.root;
    }
    redo(context) {
        this.container.add(this.newElement);
        return context.root;
    }
};
CreateElementCommand.KIND = actions_1.CreateElementAction.KIND;
CreateElementCommand = __decorate([
    (0, inversify_1.injectable)(),
    __param(0, (0, inversify_1.inject)(types_1.TYPES.Action)),
    __metadata("design:paramtypes", [Object])
], CreateElementCommand);
exports.CreateElementCommand = CreateElementCommand;
var CreateElementAction;
(function (CreateElementAction) {
    CreateElementAction.KIND = 'createElement';
    function create(elementSchema, options) {
        return {
            kind: CreateElementAction.KIND,
            elementSchema,
            containerId: options.containerId
        };
    }
    CreateElementAction.create = create;
})(CreateElementAction = exports.CreateElementAction || (exports.CreateElementAction = {}));


/***/ }),

/***/ "../../node_modules/sprotty/lib/features/edit/delete.js":
/*!**************************************************************!*\
  !*** ../../node_modules/sprotty/lib/features/edit/delete.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.DeleteElementAction = exports.DeleteElementCommand = exports.ResolvedDelete = exports.isDeletable = exports.deletableFeature = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const actions_1 = __webpack_require__(/*! sprotty-protocol/lib/actions */ "../../node_modules/sprotty-protocol/lib/actions.js");
const command_1 = __webpack_require__(/*! ../../base/commands/command */ "../../node_modules/sprotty/lib/base/commands/command.js");
const smodel_1 = __webpack_require__(/*! ../../base/model/smodel */ "../../node_modules/sprotty/lib/base/model/smodel.js");
const types_1 = __webpack_require__(/*! ../../base/types */ "../../node_modules/sprotty/lib/base/types.js");
exports.deletableFeature = Symbol('deletableFeature');
function isDeletable(element) {
    return element instanceof smodel_1.SChildElementImpl && element.hasFeature(exports.deletableFeature);
}
exports.isDeletable = isDeletable;
class ResolvedDelete {
}
exports.ResolvedDelete = ResolvedDelete;
let DeleteElementCommand = class DeleteElementCommand extends command_1.Command {
    constructor(action) {
        super();
        this.action = action;
        this.resolvedDeletes = [];
    }
    execute(context) {
        const index = context.root.index;
        for (const id of this.action.elementIds) {
            const element = index.getById(id);
            if (element && isDeletable(element)) {
                this.resolvedDeletes.push({ child: element, parent: element.parent });
                element.parent.remove(element);
            }
        }
        return context.root;
    }
    undo(context) {
        for (const resolvedDelete of this.resolvedDeletes)
            resolvedDelete.parent.add(resolvedDelete.child);
        return context.root;
    }
    redo(context) {
        for (const resolvedDelete of this.resolvedDeletes)
            resolvedDelete.parent.remove(resolvedDelete.child);
        return context.root;
    }
};
DeleteElementCommand.KIND = actions_1.DeleteElementAction.KIND;
DeleteElementCommand = __decorate([
    (0, inversify_1.injectable)(),
    __param(0, (0, inversify_1.inject)(types_1.TYPES.Action)),
    __metadata("design:paramtypes", [Object])
], DeleteElementCommand);
exports.DeleteElementCommand = DeleteElementCommand;
var DeleteElementAction;
(function (DeleteElementAction) {
    DeleteElementAction.KIND = 'delete';
    function create(elementIds) {
        return {
            kind: DeleteElementAction.KIND,
            elementIds
        };
    }
    DeleteElementAction.create = create;
})(DeleteElementAction = exports.DeleteElementAction || (exports.DeleteElementAction = {}));


/***/ }),

/***/ "../../node_modules/sprotty/lib/features/edit/di.config.js":
/*!*****************************************************************!*\
  !*** ../../node_modules/sprotty/lib/features/edit/di.config.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.labelEditUiModule = exports.labelEditModule = exports.edgeEditModule = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const types_1 = __webpack_require__(/*! ../../base/types */ "../../node_modules/sprotty/lib/base/types.js");
const command_registration_1 = __webpack_require__(/*! ../../base/commands/command-registration */ "../../node_modules/sprotty/lib/base/commands/command-registration.js");
const action_handler_1 = __webpack_require__(/*! ../../base/actions/action-handler */ "../../node_modules/sprotty/lib/base/actions/action-handler.js");
const view_1 = __webpack_require__(/*! ../../base/views/view */ "../../node_modules/sprotty/lib/base/views/view.js");
const model_1 = __webpack_require__(/*! ../../features/routing/model */ "../../node_modules/sprotty/lib/features/routing/model.js");
const svg_views_1 = __webpack_require__(/*! ../../lib/svg-views */ "../../node_modules/sprotty/lib/lib/svg-views.js");
const delete_1 = __webpack_require__(/*! ./delete */ "../../node_modules/sprotty/lib/features/edit/delete.js");
const edit_label_1 = __webpack_require__(/*! ./edit-label */ "../../node_modules/sprotty/lib/features/edit/edit-label.js");
const edit_label_ui_1 = __webpack_require__(/*! ./edit-label-ui */ "../../node_modules/sprotty/lib/features/edit/edit-label-ui.js");
const edit_routing_1 = __webpack_require__(/*! ./edit-routing */ "../../node_modules/sprotty/lib/features/edit/edit-routing.js");
const reconnect_1 = __webpack_require__(/*! ./reconnect */ "../../node_modules/sprotty/lib/features/edit/reconnect.js");
exports.edgeEditModule = new inversify_1.ContainerModule((bind, _unbind, isBound) => {
    const context = { bind, isBound };
    (0, command_registration_1.configureCommand)(context, edit_routing_1.SwitchEditModeCommand);
    (0, command_registration_1.configureCommand)(context, reconnect_1.ReconnectCommand);
    (0, command_registration_1.configureCommand)(context, delete_1.DeleteElementCommand);
    (0, view_1.configureModelElement)(context, 'dangling-anchor', model_1.SDanglingAnchorImpl, svg_views_1.EmptyGroupView);
});
exports.labelEditModule = new inversify_1.ContainerModule((bind, _unbind, isBound) => {
    bind(edit_label_1.EditLabelMouseListener).toSelf().inSingletonScope();
    bind(types_1.TYPES.MouseListener).toService(edit_label_1.EditLabelMouseListener);
    bind(edit_label_1.EditLabelKeyListener).toSelf().inSingletonScope();
    bind(types_1.TYPES.KeyListener).toService(edit_label_1.EditLabelKeyListener);
    (0, command_registration_1.configureCommand)({ bind, isBound }, edit_label_1.ApplyLabelEditCommand);
});
exports.labelEditUiModule = new inversify_1.ContainerModule((bind, _unbind, isBound) => {
    const context = { bind, isBound };
    (0, action_handler_1.configureActionHandler)(context, edit_label_1.EditLabelAction.KIND, edit_label_ui_1.EditLabelActionHandler);
    bind(edit_label_ui_1.EditLabelUI).toSelf().inSingletonScope();
    bind(types_1.TYPES.IUIExtension).toService(edit_label_ui_1.EditLabelUI);
});


/***/ }),

/***/ "../../node_modules/sprotty/lib/features/edit/edit-label-ui.js":
/*!*********************************************************************!*\
  !*** ../../node_modules/sprotty/lib/features/edit/edit-label-ui.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2019-2022 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var EditLabelUI_1;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.EditLabelUI = exports.EditLabelActionHandler = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const actions_1 = __webpack_require__(/*! sprotty-protocol/lib/actions */ "../../node_modules/sprotty-protocol/lib/actions.js");
const types_1 = __webpack_require__(/*! ../../base/types */ "../../node_modules/sprotty/lib/base/types.js");
const ui_extension_1 = __webpack_require__(/*! ../../base/ui-extensions/ui-extension */ "../../node_modules/sprotty/lib/base/ui-extensions/ui-extension.js");
const ui_extension_registry_1 = __webpack_require__(/*! ../../base/ui-extensions/ui-extension-registry */ "../../node_modules/sprotty/lib/base/ui-extensions/ui-extension-registry.js");
const dom_helper_1 = __webpack_require__(/*! ../../base/views/dom-helper */ "../../node_modules/sprotty/lib/base/views/dom-helper.js");
const commit_model_1 = __webpack_require__(/*! ../../model-source/commit-model */ "../../node_modules/sprotty/lib/model-source/commit-model.js");
const keyboard_1 = __webpack_require__(/*! ../../utils/keyboard */ "../../node_modules/sprotty/lib/utils/keyboard.js");
const model_1 = __webpack_require__(/*! ../bounds/model */ "../../node_modules/sprotty/lib/features/bounds/model.js");
const zoom_1 = __webpack_require__(/*! ../viewport/zoom */ "../../node_modules/sprotty/lib/features/viewport/zoom.js");
const edit_label_1 = __webpack_require__(/*! ./edit-label */ "../../node_modules/sprotty/lib/features/edit/edit-label.js");
const model_2 = __webpack_require__(/*! ./model */ "../../node_modules/sprotty/lib/features/edit/model.js");
/** Shows a UI extension for editing a label on emitted `EditLabelAction`s. */
let EditLabelActionHandler = class EditLabelActionHandler {
    handle(action) {
        if ((0, edit_label_1.isEditLabelAction)(action)) {
            return ui_extension_registry_1.SetUIExtensionVisibilityAction.create({ extensionId: EditLabelUI.ID, visible: true, contextElementsId: [action.labelId] });
        }
    }
};
EditLabelActionHandler = __decorate([
    (0, inversify_1.injectable)()
], EditLabelActionHandler);
exports.EditLabelActionHandler = EditLabelActionHandler;
let EditLabelUI = EditLabelUI_1 = class EditLabelUI extends ui_extension_1.AbstractUIExtension {
    constructor() {
        super(...arguments);
        this.validationTimeout = undefined;
        this.isActive = false;
        this.blockApplyEditOnInvalidInput = true;
        this.isCurrentLabelValid = true;
    }
    id() { return EditLabelUI_1.ID; }
    containerClass() { return 'label-edit'; }
    get labelId() { return this.label ? this.label.id : 'unknown'; }
    initializeContents(containerElement) {
        containerElement.style.position = 'absolute';
        this.inputElement = document.createElement('input');
        this.textAreaElement = document.createElement('textarea');
        [this.inputElement, this.textAreaElement].forEach((element) => {
            element.onkeydown = event => this.applyLabelEditOnEvent(event, 'Enter');
            this.configureAndAdd(element, containerElement);
        });
    }
    configureAndAdd(element, containerElement) {
        element.style.visibility = 'hidden';
        element.style.position = 'absolute';
        element.style.top = '0px';
        element.style.left = '0px';
        element.addEventListener('keydown', (event) => this.hideIfEscapeEvent(event));
        element.addEventListener('keyup', (event) => this.validateLabelIfContentChange(event, element.value));
        element.addEventListener('blur', () => window.setTimeout(() => this.applyLabelEdit(), 200));
        containerElement.appendChild(element);
    }
    get editControl() {
        if (this.label && this.label.isMultiLine) {
            return this.textAreaElement;
        }
        return this.inputElement;
    }
    hideIfEscapeEvent(event) {
        if ((0, keyboard_1.matchesKeystroke)(event, 'Escape')) {
            this.hide();
        }
    }
    applyLabelEditOnEvent(event, code, ...modifiers) {
        if ((0, keyboard_1.matchesKeystroke)(event, code ? code : 'Enter', ...modifiers)) {
            event.preventDefault();
            this.applyLabelEdit();
        }
    }
    validateLabelIfContentChange(event, value) {
        if (this.previousLabelContent === undefined || this.previousLabelContent !== value) {
            this.previousLabelContent = value;
            this.performLabelValidation(event, this.editControl.value);
        }
    }
    async applyLabelEdit() {
        var _a;
        if (!this.isActive) {
            return;
        }
        if (((_a = this.label) === null || _a === void 0 ? void 0 : _a.text) === this.editControl.value) {
            // no action necessary
            this.hide();
            return;
        }
        if (this.blockApplyEditOnInvalidInput) {
            const result = await this.validateLabel(this.editControl.value);
            if ('error' === result.severity) {
                this.editControl.focus();
                return;
            }
        }
        this.actionDispatcherProvider()
            .then((actionDispatcher) => actionDispatcher.dispatchAll([actions_1.ApplyLabelEditAction.create(this.labelId, this.editControl.value), commit_model_1.CommitModelAction.create()]))
            .catch((reason) => this.logger.error(this, 'No action dispatcher available to execute apply label edit action', reason));
        this.hide();
    }
    performLabelValidation(event, value) {
        if (this.validationTimeout) {
            window.clearTimeout(this.validationTimeout);
        }
        this.validationTimeout = window.setTimeout(() => this.validateLabel(value), 200);
    }
    async validateLabel(value) {
        if (this.labelValidator && this.label) {
            try {
                const result = await this.labelValidator.validate(value, this.label);
                this.isCurrentLabelValid = 'error' !== result.severity;
                this.showValidationResult(result);
                return result;
            }
            catch (reason) {
                this.logger.error(this, 'Error validating edited label', reason);
            }
        }
        this.isCurrentLabelValid = true;
        return { severity: 'ok', message: undefined };
    }
    showValidationResult(result) {
        this.clearValidationResult();
        if (this.validationDecorator) {
            this.validationDecorator.decorate(this.editControl, result);
        }
    }
    clearValidationResult() {
        if (this.validationDecorator) {
            this.validationDecorator.dispose(this.editControl);
        }
    }
    show(root, ...contextElementIds) {
        if (!hasEditableLabel(contextElementIds, root) || this.isActive) {
            return;
        }
        super.show(root, ...contextElementIds);
        this.isActive = true;
    }
    hide() {
        this.editControl.style.visibility = 'hidden';
        super.hide();
        this.clearValidationResult();
        this.isActive = false;
        this.isCurrentLabelValid = true;
        this.previousLabelContent = undefined;
        if (this.labelElement) {
            this.labelElement.style.visibility = 'visible';
        }
    }
    onBeforeShow(containerElement, root, ...contextElementIds) {
        this.label = getEditableLabels(contextElementIds, root)[0];
        this.previousLabelContent = this.label.text;
        this.setPosition(containerElement);
        this.applyTextContents();
        this.applyFontStyling();
        this.editControl.style.visibility = 'visible';
        this.editControl.focus();
    }
    setPosition(containerElement) {
        let x = 0;
        let y = 0;
        let width = 100;
        let height = 20;
        if (this.label) {
            const zoom = (0, zoom_1.getZoom)(this.label);
            const bounds = (0, model_1.getAbsoluteClientBounds)(this.label, this.domHelper, this.viewerOptions);
            x = bounds.x + (this.label.editControlPositionCorrection ? this.label.editControlPositionCorrection.x : 0) * zoom;
            y = bounds.y + (this.label.editControlPositionCorrection ? this.label.editControlPositionCorrection.y : 0) * zoom;
            height = (this.label.editControlDimension ? this.label.editControlDimension.height : height) * zoom;
            width = (this.label.editControlDimension ? this.label.editControlDimension.width : width) * zoom;
        }
        containerElement.style.left = `${x}px`;
        containerElement.style.top = `${y}px`;
        containerElement.style.width = `${width}px`;
        this.editControl.style.width = `${width}px`;
        containerElement.style.height = `${height}px`;
        this.editControl.style.height = `${height}px`;
    }
    applyTextContents() {
        if (this.label) {
            this.editControl.value = this.label.text;
            if (this.editControl instanceof HTMLTextAreaElement) {
                this.editControl.selectionStart = 0;
                this.editControl.selectionEnd = 0;
                this.editControl.scrollTop = 0;
                this.editControl.scrollLeft = 0;
            }
            else {
                this.editControl.setSelectionRange(0, this.editControl.value.length);
            }
        }
    }
    applyFontStyling() {
        if (this.label) {
            this.labelElement = document.getElementById(this.domHelper.createUniqueDOMElementId(this.label));
            if (this.labelElement) {
                this.labelElement.style.visibility = 'hidden';
                const style = window.getComputedStyle(this.labelElement);
                this.editControl.style.font = style.font;
                this.editControl.style.fontStyle = style.fontStyle;
                this.editControl.style.fontFamily = style.fontFamily;
                this.editControl.style.fontSize = scaledFont(style.fontSize, (0, zoom_1.getZoom)(this.label));
                this.editControl.style.fontWeight = style.fontWeight;
                this.editControl.style.lineHeight = style.lineHeight;
            }
        }
    }
};
EditLabelUI.ID = 'editLabelUi';
__decorate([
    (0, inversify_1.inject)(types_1.TYPES.IActionDispatcherProvider),
    __metadata("design:type", Function)
], EditLabelUI.prototype, "actionDispatcherProvider", void 0);
__decorate([
    (0, inversify_1.inject)(types_1.TYPES.ViewerOptions),
    __metadata("design:type", Object)
], EditLabelUI.prototype, "viewerOptions", void 0);
__decorate([
    (0, inversify_1.inject)(types_1.TYPES.DOMHelper),
    __metadata("design:type", dom_helper_1.DOMHelper)
], EditLabelUI.prototype, "domHelper", void 0);
__decorate([
    (0, inversify_1.inject)(types_1.TYPES.IEditLabelValidator),
    (0, inversify_1.optional)(),
    __metadata("design:type", Object)
], EditLabelUI.prototype, "labelValidator", void 0);
__decorate([
    (0, inversify_1.inject)(types_1.TYPES.IEditLabelValidationDecorator),
    (0, inversify_1.optional)(),
    __metadata("design:type", Object)
], EditLabelUI.prototype, "validationDecorator", void 0);
EditLabelUI = EditLabelUI_1 = __decorate([
    (0, inversify_1.injectable)()
], EditLabelUI);
exports.EditLabelUI = EditLabelUI;
function hasEditableLabel(contextElementIds, root) {
    return getEditableLabels(contextElementIds, root).length === 1;
}
function getEditableLabels(contextElementIds, root) {
    return contextElementIds.map(id => root.index.getById(id)).filter(model_2.isEditableLabel);
}
function scaledFont(font, zoom) {
    return font.replace(/\d+(\.\d+)?/, (match) => {
        return String(Number.parseInt(match, 10) * zoom);
    });
}


/***/ }),

/***/ "../../node_modules/sprotty/lib/features/edit/edit-label.js":
/*!******************************************************************!*\
  !*** ../../node_modules/sprotty/lib/features/edit/edit-label.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApplyLabelEditAction = exports.getEditableLabel = exports.EditLabelKeyListener = exports.EditLabelMouseListener = exports.ApplyLabelEditCommand = exports.ResolvedLabelEdit = exports.isApplyLabelEditAction = exports.isEditLabelAction = exports.EditLabelAction = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const actions_1 = __webpack_require__(/*! sprotty-protocol/lib/actions */ "../../node_modules/sprotty-protocol/lib/actions.js");
const command_1 = __webpack_require__(/*! ../../base/commands/command */ "../../node_modules/sprotty/lib/base/commands/command.js");
const types_1 = __webpack_require__(/*! ../../base/types */ "../../node_modules/sprotty/lib/base/types.js");
const mouse_tool_1 = __webpack_require__(/*! ../../base/views/mouse-tool */ "../../node_modules/sprotty/lib/base/views/mouse-tool.js");
const key_tool_1 = __webpack_require__(/*! ../../base/views/key-tool */ "../../node_modules/sprotty/lib/base/views/key-tool.js");
const keyboard_1 = __webpack_require__(/*! ../../utils/keyboard */ "../../node_modules/sprotty/lib/utils/keyboard.js");
const model_1 = __webpack_require__(/*! ../select/model */ "../../node_modules/sprotty/lib/features/select/model.js");
const iterable_1 = __webpack_require__(/*! ../../utils/iterable */ "../../node_modules/sprotty/lib/utils/iterable.js");
const model_2 = __webpack_require__(/*! ./model */ "../../node_modules/sprotty/lib/features/edit/model.js");
var EditLabelAction;
(function (EditLabelAction) {
    EditLabelAction.KIND = 'EditLabel';
    function create(labelId) {
        return {
            kind: EditLabelAction.KIND,
            labelId
        };
    }
    EditLabelAction.create = create;
})(EditLabelAction = exports.EditLabelAction || (exports.EditLabelAction = {}));
function isEditLabelAction(element) {
    return (0, actions_1.isAction)(element) && element.kind === EditLabelAction.KIND && 'labelId' in element;
}
exports.isEditLabelAction = isEditLabelAction;
function isApplyLabelEditAction(element) {
    return (0, actions_1.isAction)(element) && element.kind === actions_1.ApplyLabelEditAction.KIND && 'labelId' in element && 'text' in element;
}
exports.isApplyLabelEditAction = isApplyLabelEditAction;
class ResolvedLabelEdit {
}
exports.ResolvedLabelEdit = ResolvedLabelEdit;
let ApplyLabelEditCommand = class ApplyLabelEditCommand extends command_1.Command {
    constructor(action) {
        super();
        this.action = action;
    }
    execute(context) {
        const index = context.root.index;
        const label = index.getById(this.action.labelId);
        if (label && (0, model_2.isEditableLabel)(label)) {
            this.resolvedLabelEdit = { label, oldLabel: label.text, newLabel: this.action.text };
            label.text = this.action.text;
        }
        return context.root;
    }
    undo(context) {
        if (this.resolvedLabelEdit) {
            this.resolvedLabelEdit.label.text = this.resolvedLabelEdit.oldLabel;
        }
        return context.root;
    }
    redo(context) {
        if (this.resolvedLabelEdit) {
            this.resolvedLabelEdit.label.text = this.resolvedLabelEdit.newLabel;
        }
        return context.root;
    }
};
ApplyLabelEditCommand.KIND = actions_1.ApplyLabelEditAction.KIND;
ApplyLabelEditCommand = __decorate([
    __param(0, (0, inversify_1.inject)(types_1.TYPES.Action)),
    __metadata("design:paramtypes", [Object])
], ApplyLabelEditCommand);
exports.ApplyLabelEditCommand = ApplyLabelEditCommand;
class EditLabelMouseListener extends mouse_tool_1.MouseListener {
    doubleClick(target, event) {
        const editableLabel = getEditableLabel(target);
        if (editableLabel) {
            return [EditLabelAction.create(editableLabel.id)];
        }
        return [];
    }
}
exports.EditLabelMouseListener = EditLabelMouseListener;
class EditLabelKeyListener extends key_tool_1.KeyListener {
    keyDown(element, event) {
        if ((0, keyboard_1.matchesKeystroke)(event, 'F2')) {
            const editableLabels = (0, iterable_1.toArray)(element.index.all()
                .filter(e => (0, model_1.isSelectable)(e) && e.selected)).map(getEditableLabel)
                .filter((e) => e !== undefined);
            if (editableLabels.length === 1) {
                return [EditLabelAction.create(editableLabels[0].id)];
            }
        }
        return [];
    }
}
exports.EditLabelKeyListener = EditLabelKeyListener;
function getEditableLabel(element) {
    if ((0, model_2.isEditableLabel)(element)) {
        return element;
    }
    else if ((0, model_2.isWithEditableLabel)(element) && element.editableLabel) {
        return element.editableLabel;
    }
    return undefined;
}
exports.getEditableLabel = getEditableLabel;
/**
 * @deprecated Use the declaration from `sprotty-protocol` instead.
 */
var ApplyLabelEditAction;
(function (ApplyLabelEditAction) {
    ApplyLabelEditAction.KIND = 'applyLabelEdit';
    function create(labelId, text) {
        return {
            kind: ApplyLabelEditAction.KIND,
            labelId,
            text
        };
    }
    ApplyLabelEditAction.create = create;
})(ApplyLabelEditAction = exports.ApplyLabelEditAction || (exports.ApplyLabelEditAction = {}));


/***/ }),

/***/ "../../node_modules/sprotty/lib/features/edit/edit-routing.js":
/*!********************************************************************!*\
  !*** ../../node_modules/sprotty/lib/features/edit/edit-routing.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SwitchEditModeCommand = exports.SwitchEditModeAction = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const command_1 = __webpack_require__(/*! ../../base/commands/command */ "../../node_modules/sprotty/lib/base/commands/command.js");
const smodel_1 = __webpack_require__(/*! ../../base/model/smodel */ "../../node_modules/sprotty/lib/base/model/smodel.js");
const types_1 = __webpack_require__(/*! ../../base/types */ "../../node_modules/sprotty/lib/base/types.js");
const model_1 = __webpack_require__(/*! ../routing/model */ "../../node_modules/sprotty/lib/features/routing/model.js");
const routing_1 = __webpack_require__(/*! ../routing/routing */ "../../node_modules/sprotty/lib/features/routing/routing.js");
const model_2 = __webpack_require__(/*! ./model */ "../../node_modules/sprotty/lib/features/edit/model.js");
var SwitchEditModeAction;
(function (SwitchEditModeAction) {
    SwitchEditModeAction.KIND = "switchEditMode";
    function create(options) {
        var _a, _b;
        return {
            kind: SwitchEditModeAction.KIND,
            elementsToActivate: (_a = options.elementsToActivate) !== null && _a !== void 0 ? _a : [],
            elementsToDeactivate: (_b = options.elementsToDeactivate) !== null && _b !== void 0 ? _b : []
        };
    }
    SwitchEditModeAction.create = create;
})(SwitchEditModeAction = exports.SwitchEditModeAction || (exports.SwitchEditModeAction = {}));
let SwitchEditModeCommand = class SwitchEditModeCommand extends command_1.Command {
    constructor(action) {
        super();
        this.action = action;
        this.elementsToActivate = [];
        this.elementsToDeactivate = [];
        this.handlesToRemove = [];
    }
    execute(context) {
        const index = context.root.index;
        this.action.elementsToActivate.forEach(id => {
            const element = index.getById(id);
            if (element !== undefined)
                this.elementsToActivate.push(element);
        });
        this.action.elementsToDeactivate.forEach(id => {
            const element = index.getById(id);
            if (element !== undefined)
                this.elementsToDeactivate.push(element);
            if (element instanceof model_1.SRoutingHandleImpl && element.parent instanceof model_1.SRoutableElementImpl) {
                const parent = element.parent;
                if (this.shouldRemoveHandle(element, parent)) {
                    this.handlesToRemove.push({ handle: element, parent });
                    this.elementsToDeactivate.push(parent);
                    this.elementsToActivate.push(parent);
                }
            }
        });
        return this.doExecute(context);
    }
    doExecute(context) {
        this.handlesToRemove.forEach(entry => {
            entry.point = entry.parent.routingPoints.splice(entry.handle.pointIndex, 1)[0];
        });
        this.elementsToDeactivate.forEach(element => {
            if (element instanceof model_1.SRoutableElementImpl)
                element.removeAll(child => child instanceof model_1.SRoutingHandleImpl);
            else if (element instanceof model_1.SRoutingHandleImpl) {
                element.editMode = false;
                if (element.danglingAnchor) {
                    if (element.parent instanceof model_1.SRoutableElementImpl && element.danglingAnchor.original) {
                        if (element.parent.source === element.danglingAnchor)
                            element.parent.sourceId = element.danglingAnchor.original.id;
                        else if (element.parent.target === element.danglingAnchor)
                            element.parent.targetId = element.danglingAnchor.original.id;
                        element.danglingAnchor.parent.remove(element.danglingAnchor);
                        element.danglingAnchor = undefined;
                    }
                }
            }
        });
        this.elementsToActivate.forEach(element => {
            if ((0, model_2.canEditRouting)(element) && element instanceof smodel_1.SParentElementImpl) {
                const router = this.edgeRouterRegistry.get(element.routerKind);
                router.createRoutingHandles(element);
            }
            else if (element instanceof model_1.SRoutingHandleImpl)
                element.editMode = true;
        });
        return context.root;
    }
    shouldRemoveHandle(handle, parent) {
        if (handle.kind === 'junction') {
            const route = this.edgeRouterRegistry.route(parent);
            return route.find(rp => rp.pointIndex === handle.pointIndex) === undefined;
        }
        return false;
    }
    undo(context) {
        this.handlesToRemove.forEach(entry => {
            if (entry.point !== undefined)
                entry.parent.routingPoints.splice(entry.handle.pointIndex, 0, entry.point);
        });
        this.elementsToActivate.forEach(element => {
            if (element instanceof model_1.SRoutableElementImpl)
                element.removeAll(child => child instanceof model_1.SRoutingHandleImpl);
            else if (element instanceof model_1.SRoutingHandleImpl)
                element.editMode = false;
        });
        this.elementsToDeactivate.forEach(element => {
            if ((0, model_2.canEditRouting)(element)) {
                const router = this.edgeRouterRegistry.get(element.routerKind);
                router.createRoutingHandles(element);
            }
            else if (element instanceof model_1.SRoutingHandleImpl)
                element.editMode = true;
        });
        return context.root;
    }
    redo(context) {
        return this.doExecute(context);
    }
};
SwitchEditModeCommand.KIND = SwitchEditModeAction.KIND;
__decorate([
    (0, inversify_1.inject)(routing_1.EdgeRouterRegistry),
    __metadata("design:type", routing_1.EdgeRouterRegistry)
], SwitchEditModeCommand.prototype, "edgeRouterRegistry", void 0);
SwitchEditModeCommand = __decorate([
    (0, inversify_1.injectable)(),
    __param(0, (0, inversify_1.inject)(types_1.TYPES.Action)),
    __metadata("design:paramtypes", [Object])
], SwitchEditModeCommand);
exports.SwitchEditModeCommand = SwitchEditModeCommand;


/***/ }),

/***/ "../../node_modules/sprotty/lib/features/edit/model.js":
/*!*************************************************************!*\
  !*** ../../node_modules/sprotty/lib/features/edit/model.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2020 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isWithEditableLabel = exports.withEditLabelFeature = exports.isEditableLabel = exports.editLabelFeature = exports.canEditRouting = exports.editFeature = void 0;
const model_1 = __webpack_require__(/*! ../routing/model */ "../../node_modules/sprotty/lib/features/routing/model.js");
exports.editFeature = Symbol('editFeature');
function canEditRouting(element) {
    return element instanceof model_1.SRoutableElementImpl && element.hasFeature(exports.editFeature);
}
exports.canEditRouting = canEditRouting;
exports.editLabelFeature = Symbol('editLabelFeature');
function isEditableLabel(element) {
    return 'text' in element && element.hasFeature(exports.editLabelFeature);
}
exports.isEditableLabel = isEditableLabel;
exports.withEditLabelFeature = Symbol('withEditLabelFeature');
function isWithEditableLabel(element) {
    return 'editableLabel' in element && element.hasFeature(exports.withEditLabelFeature);
}
exports.isWithEditableLabel = isWithEditableLabel;


/***/ }),

/***/ "../../node_modules/sprotty/lib/features/edit/reconnect.js":
/*!*****************************************************************!*\
  !*** ../../node_modules/sprotty/lib/features/edit/reconnect.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ReconnectAction = exports.ReconnectCommand = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const actions_1 = __webpack_require__(/*! sprotty-protocol/lib/actions */ "../../node_modules/sprotty-protocol/lib/actions.js");
const command_1 = __webpack_require__(/*! ../../base/commands/command */ "../../node_modules/sprotty/lib/base/commands/command.js");
const types_1 = __webpack_require__(/*! ../../base/types */ "../../node_modules/sprotty/lib/base/types.js");
const model_1 = __webpack_require__(/*! ../routing/model */ "../../node_modules/sprotty/lib/features/routing/model.js");
const routing_1 = __webpack_require__(/*! ../routing/routing */ "../../node_modules/sprotty/lib/features/routing/routing.js");
let ReconnectCommand = class ReconnectCommand extends command_1.Command {
    constructor(action) {
        super();
        this.action = action;
    }
    execute(context) {
        this.doExecute(context);
        return context.root;
    }
    doExecute(context) {
        const index = context.root.index;
        const edge = index.getById(this.action.routableId);
        if (edge instanceof model_1.SRoutableElementImpl) {
            const router = this.edgeRouterRegistry.get(edge.routerKind);
            const before = router.takeSnapshot(edge);
            router.applyReconnect(edge, this.action.newSourceId, this.action.newTargetId);
            const after = router.takeSnapshot(edge);
            this.memento = {
                edge: edge,
                before,
                after
            };
        }
    }
    undo(context) {
        if (this.memento) {
            const router = this.edgeRouterRegistry.get(this.memento.edge.routerKind);
            router.applySnapshot(this.memento.edge, this.memento.before);
        }
        return context.root;
    }
    redo(context) {
        if (this.memento) {
            const router = this.edgeRouterRegistry.get(this.memento.edge.routerKind);
            router.applySnapshot(this.memento.edge, this.memento.after);
        }
        return context.root;
    }
};
ReconnectCommand.KIND = actions_1.ReconnectAction.KIND;
__decorate([
    (0, inversify_1.inject)(routing_1.EdgeRouterRegistry),
    __metadata("design:type", routing_1.EdgeRouterRegistry)
], ReconnectCommand.prototype, "edgeRouterRegistry", void 0);
ReconnectCommand = __decorate([
    (0, inversify_1.injectable)(),
    __param(0, (0, inversify_1.inject)(types_1.TYPES.Action)),
    __metadata("design:paramtypes", [Object])
], ReconnectCommand);
exports.ReconnectCommand = ReconnectCommand;
/**
 * @deprecated Use the declaration from `sprotty-protocol` instead.
 */
var ReconnectAction;
(function (ReconnectAction) {
    ReconnectAction.KIND = 'reconnect';
    function create(options) {
        return {
            kind: ReconnectAction.KIND,
            routableId: options.routableId,
            newSourceId: options.newSourceId,
            newTargetId: options.newTargetId
        };
    }
    ReconnectAction.create = create;
})(ReconnectAction = exports.ReconnectAction || (exports.ReconnectAction = {}));


/***/ }),

/***/ "../../node_modules/sprotty/lib/features/expand/di.config.js":
/*!*******************************************************************!*\
  !*** ../../node_modules/sprotty/lib/features/expand/di.config.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const button_handler_1 = __webpack_require__(/*! ../button/button-handler */ "../../node_modules/sprotty/lib/features/button/button-handler.js");
const expand_1 = __webpack_require__(/*! ./expand */ "../../node_modules/sprotty/lib/features/expand/expand.js");
const expandModule = new inversify_1.ContainerModule((bind, _unbind, isBound) => {
    (0, button_handler_1.configureButtonHandler)({ bind, isBound }, expand_1.ExpandButtonHandler.TYPE, expand_1.ExpandButtonHandler);
});
exports["default"] = expandModule;


/***/ }),

/***/ "../../node_modules/sprotty/lib/features/expand/expand.js":
/*!****************************************************************!*\
  !*** ../../node_modules/sprotty/lib/features/expand/expand.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CollapseExpandAllAction = exports.CollapseExpandAction = exports.ExpandButtonHandler = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const actions_1 = __webpack_require__(/*! sprotty-protocol/lib/actions */ "../../node_modules/sprotty-protocol/lib/actions.js");
const smodel_utils_1 = __webpack_require__(/*! ../../base/model/smodel-utils */ "../../node_modules/sprotty/lib/base/model/smodel-utils.js");
const model_1 = __webpack_require__(/*! ./model */ "../../node_modules/sprotty/lib/features/expand/model.js");
let ExpandButtonHandler = class ExpandButtonHandler {
    buttonPressed(button) {
        const expandable = (0, smodel_utils_1.findParentByFeature)(button, model_1.isExpandable);
        if (expandable !== undefined) {
            return [actions_1.CollapseExpandAction.create({
                    expandIds: expandable.expanded ? [] : [expandable.id],
                    collapseIds: expandable.expanded ? [expandable.id] : []
                })];
        }
        else {
            return [];
        }
    }
};
ExpandButtonHandler.TYPE = 'button:expand';
ExpandButtonHandler = __decorate([
    (0, inversify_1.injectable)()
], ExpandButtonHandler);
exports.ExpandButtonHandler = ExpandButtonHandler;
// Compatibility deprecation layer (will be removed with the graduation 1.0.0 release)
/**
 * Sent from the client to the model source to recalculate a diagram when elements
 * are collapsed/expanded by the client.
 *
 * @deprecated Use the declaration from `sprotty-protocol` instead.
 */
class CollapseExpandAction {
    constructor(expandIds, collapseIds) {
        this.expandIds = expandIds;
        this.collapseIds = collapseIds;
        this.kind = CollapseExpandAction.KIND;
    }
}
CollapseExpandAction.KIND = 'collapseExpand';
exports.CollapseExpandAction = CollapseExpandAction;
/**
 * Programmatic action for expanding or collapsing all elements.
 *
 * @deprecated Use the declaration from `sprotty-protocol` instead.
 */
class CollapseExpandAllAction {
    /**
     * If `expand` is true, all elements are expanded, othewise they are collapsed.
     */
    constructor(expand = true) {
        this.expand = expand;
        this.kind = CollapseExpandAllAction.KIND;
    }
}
CollapseExpandAllAction.KIND = 'collapseExpandAll';
exports.CollapseExpandAllAction = CollapseExpandAllAction;


/***/ }),

/***/ "../../node_modules/sprotty/lib/features/expand/model.js":
/*!***************************************************************!*\
  !*** ../../node_modules/sprotty/lib/features/expand/model.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isExpandable = exports.expandFeature = void 0;
exports.expandFeature = Symbol('expandFeature');
function isExpandable(element) {
    return element.hasFeature(exports.expandFeature) && 'expanded' in element;
}
exports.isExpandable = isExpandable;


/***/ }),

/***/ "../../node_modules/sprotty/lib/features/expand/views.js":
/*!***************************************************************!*\
  !*** ../../node_modules/sprotty/lib/features/expand/views.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ExpandButtonView = void 0;
/** @jsx svg */
const jsx_1 = __webpack_require__(/*! ../../lib/jsx */ "../../node_modules/sprotty/lib/lib/jsx.js");
const model_1 = __webpack_require__(/*! ./model */ "../../node_modules/sprotty/lib/features/expand/model.js");
const smodel_utils_1 = __webpack_require__(/*! ../../base/model/smodel-utils */ "../../node_modules/sprotty/lib/base/model/smodel-utils.js");
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
let ExpandButtonView = class ExpandButtonView {
    render(button, context) {
        const expandable = (0, smodel_utils_1.findParentByFeature)(button, model_1.isExpandable);
        const path = (expandable !== undefined && expandable.expanded)
            ? 'M 1,5 L 8,12 L 15,5 Z'
            : 'M 1,8 L 8,15 L 8,1 Z';
        return (0, jsx_1.svg)("g", { "class-sprotty-button": "{true}", "class-enabled": "{button.enabled}" },
            (0, jsx_1.svg)("rect", { x: 0, y: 0, width: 16, height: 16, opacity: 0 }),
            (0, jsx_1.svg)("path", { d: path }));
    }
};
ExpandButtonView = __decorate([
    (0, inversify_1.injectable)()
], ExpandButtonView);
exports.ExpandButtonView = ExpandButtonView;


/***/ }),

/***/ "../../node_modules/sprotty/lib/features/export/di.config.js":
/*!*******************************************************************!*\
  !*** ../../node_modules/sprotty/lib/features/export/di.config.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const types_1 = __webpack_require__(/*! ../../base/types */ "../../node_modules/sprotty/lib/base/types.js");
const export_1 = __webpack_require__(/*! ./export */ "../../node_modules/sprotty/lib/features/export/export.js");
const svg_exporter_1 = __webpack_require__(/*! ./svg-exporter */ "../../node_modules/sprotty/lib/features/export/svg-exporter.js");
const command_registration_1 = __webpack_require__(/*! ../../base/commands/command-registration */ "../../node_modules/sprotty/lib/base/commands/command-registration.js");
const exportSvgModule = new inversify_1.ContainerModule((bind, _unbind, isBound) => {
    bind(export_1.ExportSvgKeyListener).toSelf().inSingletonScope();
    bind(types_1.TYPES.KeyListener).toService(export_1.ExportSvgKeyListener);
    bind(export_1.ExportSvgPostprocessor).toSelf().inSingletonScope();
    bind(types_1.TYPES.HiddenVNodePostprocessor).toService(export_1.ExportSvgPostprocessor);
    (0, command_registration_1.configureCommand)({ bind, isBound }, export_1.ExportSvgCommand);
    bind(types_1.TYPES.SvgExporter).to(svg_exporter_1.SvgExporter).inSingletonScope();
});
exports["default"] = exportSvgModule;


/***/ }),

/***/ "../../node_modules/sprotty/lib/features/export/export.js":
/*!****************************************************************!*\
  !*** ../../node_modules/sprotty/lib/features/export/export.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ExportSvgPostprocessor = exports.ExportSvgCommand = exports.RequestExportSvgAction = exports.ExportSvgKeyListener = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const actions_1 = __webpack_require__(/*! sprotty-protocol/lib/actions */ "../../node_modules/sprotty-protocol/lib/actions.js");
const command_1 = __webpack_require__(/*! ../../base/commands/command */ "../../node_modules/sprotty/lib/base/commands/command.js");
const model_1 = __webpack_require__(/*! ../select/model */ "../../node_modules/sprotty/lib/features/select/model.js");
const smodel_1 = __webpack_require__(/*! ../../base/model/smodel */ "../../node_modules/sprotty/lib/base/model/smodel.js");
const key_tool_1 = __webpack_require__(/*! ../../base/views/key-tool */ "../../node_modules/sprotty/lib/base/views/key-tool.js");
const keyboard_1 = __webpack_require__(/*! ../../utils/keyboard */ "../../node_modules/sprotty/lib/utils/keyboard.js");
const model_2 = __webpack_require__(/*! ./model */ "../../node_modules/sprotty/lib/features/export/model.js");
const svg_exporter_1 = __webpack_require__(/*! ./svg-exporter */ "../../node_modules/sprotty/lib/features/export/svg-exporter.js");
const model_3 = __webpack_require__(/*! ../viewport/model */ "../../node_modules/sprotty/lib/features/viewport/model.js");
const model_4 = __webpack_require__(/*! ../hover/model */ "../../node_modules/sprotty/lib/features/hover/model.js");
const types_1 = __webpack_require__(/*! ../../base/types */ "../../node_modules/sprotty/lib/base/types.js");
let ExportSvgKeyListener = class ExportSvgKeyListener extends key_tool_1.KeyListener {
    keyDown(element, event) {
        if ((0, keyboard_1.matchesKeystroke)(event, 'KeyE', 'ctrlCmd', 'shift'))
            return [RequestExportSvgAction.create()];
        else
            return [];
    }
};
ExportSvgKeyListener = __decorate([
    (0, inversify_1.injectable)()
], ExportSvgKeyListener);
exports.ExportSvgKeyListener = ExportSvgKeyListener;
var RequestExportSvgAction;
(function (RequestExportSvgAction) {
    RequestExportSvgAction.KIND = 'requestExportSvg';
    function create() {
        return {
            kind: RequestExportSvgAction.KIND,
            requestId: (0, actions_1.generateRequestId)()
        };
    }
    RequestExportSvgAction.create = create;
})(RequestExportSvgAction = exports.RequestExportSvgAction || (exports.RequestExportSvgAction = {}));
let ExportSvgCommand = class ExportSvgCommand extends command_1.HiddenCommand {
    constructor(action) {
        super();
        this.action = action;
    }
    execute(context) {
        if ((0, model_2.isExportable)(context.root)) {
            const root = context.modelFactory.createRoot(context.root);
            if ((0, model_2.isExportable)(root)) {
                if ((0, model_3.isViewport)(root)) {
                    root.zoom = 1;
                    root.scroll = { x: 0, y: 0 };
                }
                root.index.all().forEach(element => {
                    if ((0, model_1.isSelectable)(element) && element.selected)
                        element.selected = false;
                    if ((0, model_4.isHoverable)(element) && element.hoverFeedback)
                        element.hoverFeedback = false;
                });
                return {
                    model: root,
                    modelChanged: true,
                    cause: this.action
                };
            }
        }
        return {
            model: context.root,
            modelChanged: false
        };
    }
};
ExportSvgCommand.KIND = RequestExportSvgAction.KIND;
ExportSvgCommand = __decorate([
    __param(0, (0, inversify_1.inject)(types_1.TYPES.Action)),
    __metadata("design:paramtypes", [Object])
], ExportSvgCommand);
exports.ExportSvgCommand = ExportSvgCommand;
let ExportSvgPostprocessor = class ExportSvgPostprocessor {
    decorate(vnode, element) {
        if (element instanceof smodel_1.SModelRootImpl)
            this.root = element;
        return vnode;
    }
    postUpdate(cause) {
        if (this.root && cause !== undefined && cause.kind === RequestExportSvgAction.KIND) {
            this.svgExporter.export(this.root, cause);
        }
    }
};
__decorate([
    (0, inversify_1.inject)(types_1.TYPES.SvgExporter),
    __metadata("design:type", svg_exporter_1.SvgExporter)
], ExportSvgPostprocessor.prototype, "svgExporter", void 0);
ExportSvgPostprocessor = __decorate([
    (0, inversify_1.injectable)()
], ExportSvgPostprocessor);
exports.ExportSvgPostprocessor = ExportSvgPostprocessor;


/***/ }),

/***/ "../../node_modules/sprotty/lib/features/export/model.js":
/*!***************************************************************!*\
  !*** ../../node_modules/sprotty/lib/features/export/model.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isExportable = exports.exportFeature = void 0;
exports.exportFeature = Symbol('exportFeature');
function isExportable(element) {
    return element.hasFeature(exports.exportFeature);
}
exports.isExportable = isExportable;


/***/ }),

/***/ "../../node_modules/sprotty/lib/features/export/svg-exporter.js":
/*!**********************************************************************!*\
  !*** ../../node_modules/sprotty/lib/features/export/svg-exporter.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SvgExporter = exports.ExportSvgAction = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const geometry_1 = __webpack_require__(/*! sprotty-protocol/lib/utils/geometry */ "../../node_modules/sprotty-protocol/lib/utils/geometry.js");
const model_1 = __webpack_require__(/*! ../bounds/model */ "../../node_modules/sprotty/lib/features/bounds/model.js");
const action_dispatcher_1 = __webpack_require__(/*! ../../base/actions/action-dispatcher */ "../../node_modules/sprotty/lib/base/actions/action-dispatcher.js");
const types_1 = __webpack_require__(/*! ../../base/types */ "../../node_modules/sprotty/lib/base/types.js");
var ExportSvgAction;
(function (ExportSvgAction) {
    ExportSvgAction.KIND = 'exportSvg';
    function create(svg, requestId) {
        return {
            kind: ExportSvgAction.KIND,
            svg,
            responseId: requestId
        };
    }
    ExportSvgAction.create = create;
})(ExportSvgAction = exports.ExportSvgAction || (exports.ExportSvgAction = {}));
let SvgExporter = class SvgExporter {
    export(root, request) {
        if (typeof document !== 'undefined') {
            const div = document.getElementById(this.options.hiddenDiv);
            if (div !== null && div.firstElementChild && div.firstElementChild.tagName === 'svg') {
                const svgElement = div.firstElementChild;
                const svg = this.createSvg(svgElement, root);
                this.actionDispatcher.dispatch(ExportSvgAction.create(svg, request ? request.requestId : ''));
            }
        }
    }
    createSvg(svgElementOrig, root) {
        const serializer = new XMLSerializer();
        const svgCopy = serializer.serializeToString(svgElementOrig);
        const iframe = document.createElement('iframe');
        document.body.appendChild(iframe);
        if (!iframe.contentWindow)
            throw new Error('IFrame has no contentWindow');
        const docCopy = iframe.contentWindow.document;
        docCopy.open();
        docCopy.write(svgCopy);
        docCopy.close();
        const svgElementNew = docCopy.getElementById(svgElementOrig.id);
        svgElementNew.removeAttribute('opacity');
        this.copyStyles(svgElementOrig, svgElementNew, ['width', 'height', 'opacity']);
        svgElementNew.setAttribute('version', '1.1');
        const bounds = this.getBounds(root);
        svgElementNew.setAttribute('viewBox', `${bounds.x} ${bounds.y} ${bounds.width} ${bounds.height}`);
        const svgCode = serializer.serializeToString(svgElementNew);
        document.body.removeChild(iframe);
        return svgCode;
    }
    copyStyles(source, target, skipedProperties) {
        const sourceStyle = getComputedStyle(source);
        const targetStyle = getComputedStyle(target);
        let diffStyle = '';
        for (let i = 0; i < sourceStyle.length; i++) {
            const key = sourceStyle[i];
            if (skipedProperties.indexOf(key) === -1) {
                const value = sourceStyle.getPropertyValue(key);
                if (targetStyle.getPropertyValue(key) !== value) {
                    diffStyle += key + ":" + value + ";";
                }
            }
        }
        if (diffStyle !== '')
            target.setAttribute('style', diffStyle);
        // IE doesn't retrun anything on source.children
        for (let i = 0; i < source.childNodes.length; ++i) {
            const sourceChild = source.childNodes[i];
            const targetChild = target.childNodes[i];
            if (sourceChild instanceof Element)
                this.copyStyles(sourceChild, targetChild, []);
        }
    }
    getBounds(root) {
        const allBounds = [geometry_1.Bounds.EMPTY];
        root.children.forEach(element => {
            if ((0, model_1.isBoundsAware)(element)) {
                allBounds.push(element.bounds);
            }
        });
        return allBounds.reduce((one, two) => geometry_1.Bounds.combine(one, two));
    }
};
__decorate([
    (0, inversify_1.inject)(types_1.TYPES.ViewerOptions),
    __metadata("design:type", Object)
], SvgExporter.prototype, "options", void 0);
__decorate([
    (0, inversify_1.inject)(types_1.TYPES.IActionDispatcher),
    __metadata("design:type", action_dispatcher_1.ActionDispatcher)
], SvgExporter.prototype, "actionDispatcher", void 0);
__decorate([
    (0, inversify_1.inject)(types_1.TYPES.ILogger),
    __metadata("design:type", Object)
], SvgExporter.prototype, "log", void 0);
SvgExporter = __decorate([
    (0, inversify_1.injectable)()
], SvgExporter);
exports.SvgExporter = SvgExporter;


/***/ }),

/***/ "../../node_modules/sprotty/lib/features/fade/di.config.js":
/*!*****************************************************************!*\
  !*** ../../node_modules/sprotty/lib/features/fade/di.config.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const types_1 = __webpack_require__(/*! ../../base/types */ "../../node_modules/sprotty/lib/base/types.js");
const fade_1 = __webpack_require__(/*! ./fade */ "../../node_modules/sprotty/lib/features/fade/fade.js");
const fadeModule = new inversify_1.ContainerModule(bind => {
    bind(fade_1.ElementFader).toSelf().inSingletonScope();
    bind(types_1.TYPES.IVNodePostprocessor).toService(fade_1.ElementFader);
});
exports["default"] = fadeModule;


/***/ }),

/***/ "../../node_modules/sprotty/lib/features/fade/fade.js":
/*!************************************************************!*\
  !*** ../../node_modules/sprotty/lib/features/fade/fade.js ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ElementFader = exports.FadeAnimation = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const animation_1 = __webpack_require__(/*! ../../base/animations/animation */ "../../node_modules/sprotty/lib/base/animations/animation.js");
const smodel_1 = __webpack_require__(/*! ../../base/model/smodel */ "../../node_modules/sprotty/lib/base/model/smodel.js");
const vnode_utils_1 = __webpack_require__(/*! ../../base/views/vnode-utils */ "../../node_modules/sprotty/lib/base/views/vnode-utils.js");
const model_1 = __webpack_require__(/*! ./model */ "../../node_modules/sprotty/lib/features/fade/model.js");
class FadeAnimation extends animation_1.Animation {
    constructor(model, elementFades, context, removeAfterFadeOut = false) {
        super(context);
        this.model = model;
        this.elementFades = elementFades;
        this.removeAfterFadeOut = removeAfterFadeOut;
    }
    tween(t, context) {
        for (const elementFade of this.elementFades) {
            const element = elementFade.element;
            if (elementFade.type === 'in') {
                element.opacity = t;
            }
            else if (elementFade.type === 'out') {
                element.opacity = 1 - t;
                if (t === 1 && this.removeAfterFadeOut && element instanceof smodel_1.SChildElementImpl) {
                    element.parent.remove(element);
                }
            }
        }
        return this.model;
    }
}
exports.FadeAnimation = FadeAnimation;
let ElementFader = class ElementFader {
    decorate(vnode, element) {
        if ((0, model_1.isFadeable)(element) && element.opacity !== 1) {
            (0, vnode_utils_1.setAttr)(vnode, 'opacity', element.opacity);
        }
        return vnode;
    }
    postUpdate() {
    }
};
ElementFader = __decorate([
    (0, inversify_1.injectable)()
], ElementFader);
exports.ElementFader = ElementFader;


/***/ }),

/***/ "../../node_modules/sprotty/lib/features/fade/model.js":
/*!*************************************************************!*\
  !*** ../../node_modules/sprotty/lib/features/fade/model.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isFadeable = exports.fadeFeature = void 0;
exports.fadeFeature = Symbol('fadeFeature');
function isFadeable(element) {
    return element.hasFeature(exports.fadeFeature) && element['opacity'] !== undefined;
}
exports.isFadeable = isFadeable;


/***/ }),

/***/ "../../node_modules/sprotty/lib/features/hover/di.config.js":
/*!******************************************************************!*\
  !*** ../../node_modules/sprotty/lib/features/hover/di.config.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const types_1 = __webpack_require__(/*! ../../base/types */ "../../node_modules/sprotty/lib/base/types.js");
const hover_1 = __webpack_require__(/*! ./hover */ "../../node_modules/sprotty/lib/features/hover/hover.js");
const popup_position_updater_1 = __webpack_require__(/*! ./popup-position-updater */ "../../node_modules/sprotty/lib/features/hover/popup-position-updater.js");
const command_registration_1 = __webpack_require__(/*! ../../base/commands/command-registration */ "../../node_modules/sprotty/lib/base/commands/command-registration.js");
const action_handler_1 = __webpack_require__(/*! ../../base/actions/action-handler */ "../../node_modules/sprotty/lib/base/actions/action-handler.js");
const center_fit_1 = __webpack_require__(/*! ../viewport/center-fit */ "../../node_modules/sprotty/lib/features/viewport/center-fit.js");
const viewport_1 = __webpack_require__(/*! ../viewport/viewport */ "../../node_modules/sprotty/lib/features/viewport/viewport.js");
const move_1 = __webpack_require__(/*! ../move/move */ "../../node_modules/sprotty/lib/features/move/move.js");
const hoverModule = new inversify_1.ContainerModule((bind, _unbind, isBound) => {
    bind(popup_position_updater_1.PopupPositionUpdater).toSelf().inSingletonScope();
    bind(types_1.TYPES.PopupVNodePostprocessor).toService(popup_position_updater_1.PopupPositionUpdater);
    bind(hover_1.HoverMouseListener).toSelf().inSingletonScope();
    bind(types_1.TYPES.MouseListener).toService(hover_1.HoverMouseListener);
    bind(hover_1.PopupHoverMouseListener).toSelf().inSingletonScope();
    bind(types_1.TYPES.PopupMouseListener).toService(hover_1.PopupHoverMouseListener);
    bind(hover_1.HoverKeyListener).toSelf().inSingletonScope();
    bind(types_1.TYPES.KeyListener).toService(hover_1.HoverKeyListener);
    bind(types_1.TYPES.HoverState).toConstantValue({
        mouseOverTimer: undefined,
        mouseOutTimer: undefined,
        popupOpen: false,
        previousPopupElement: undefined
    });
    bind(hover_1.ClosePopupActionHandler).toSelf().inSingletonScope();
    const context = { bind, isBound };
    (0, command_registration_1.configureCommand)(context, hover_1.HoverFeedbackCommand);
    (0, command_registration_1.configureCommand)(context, hover_1.SetPopupModelCommand);
    (0, action_handler_1.configureActionHandler)(context, hover_1.SetPopupModelCommand.KIND, hover_1.ClosePopupActionHandler);
    (0, action_handler_1.configureActionHandler)(context, center_fit_1.FitToScreenCommand.KIND, hover_1.ClosePopupActionHandler);
    (0, action_handler_1.configureActionHandler)(context, center_fit_1.CenterCommand.KIND, hover_1.ClosePopupActionHandler);
    (0, action_handler_1.configureActionHandler)(context, viewport_1.SetViewportCommand.KIND, hover_1.ClosePopupActionHandler);
    (0, action_handler_1.configureActionHandler)(context, move_1.MoveCommand.KIND, hover_1.ClosePopupActionHandler);
});
exports["default"] = hoverModule;


/***/ }),

/***/ "../../node_modules/sprotty/lib/features/hover/hover.js":
/*!**************************************************************!*\
  !*** ../../node_modules/sprotty/lib/features/hover/hover.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SetPopupModelAction = exports.RequestPopupModelAction = exports.HoverFeedbackAction = exports.ClosePopupActionHandler = exports.HoverKeyListener = exports.PopupHoverMouseListener = exports.HoverMouseListener = exports.AbstractHoverMouseListener = exports.SetPopupModelCommand = exports.HoverFeedbackCommand = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const actions_1 = __webpack_require__(/*! sprotty-protocol/lib/actions */ "../../node_modules/sprotty-protocol/lib/actions.js");
const geometry_1 = __webpack_require__(/*! sprotty-protocol/lib/utils/geometry */ "../../node_modules/sprotty-protocol/lib/utils/geometry.js");
const keyboard_1 = __webpack_require__(/*! ../../utils/keyboard */ "../../node_modules/sprotty/lib/utils/keyboard.js");
const types_1 = __webpack_require__(/*! ../../base/types */ "../../node_modules/sprotty/lib/base/types.js");
const smodel_1 = __webpack_require__(/*! ../../base/model/smodel */ "../../node_modules/sprotty/lib/base/model/smodel.js");
const mouse_tool_1 = __webpack_require__(/*! ../../base/views/mouse-tool */ "../../node_modules/sprotty/lib/base/views/mouse-tool.js");
const command_1 = __webpack_require__(/*! ../../base/commands/command */ "../../node_modules/sprotty/lib/base/commands/command.js");
const smodel_factory_1 = __webpack_require__(/*! ../../base/model/smodel-factory */ "../../node_modules/sprotty/lib/base/model/smodel-factory.js");
const key_tool_1 = __webpack_require__(/*! ../../base/views/key-tool */ "../../node_modules/sprotty/lib/base/views/key-tool.js");
const smodel_utils_1 = __webpack_require__(/*! ../../base/model/smodel-utils */ "../../node_modules/sprotty/lib/base/model/smodel-utils.js");
const model_1 = __webpack_require__(/*! ../bounds/model */ "../../node_modules/sprotty/lib/features/bounds/model.js");
const model_2 = __webpack_require__(/*! ./model */ "../../node_modules/sprotty/lib/features/hover/model.js");
let HoverFeedbackCommand = class HoverFeedbackCommand extends command_1.SystemCommand {
    constructor(action) {
        super();
        this.action = action;
    }
    execute(context) {
        const model = context.root;
        const modelElement = model.index.getById(this.action.mouseoverElement);
        if (modelElement) {
            if ((0, model_2.isHoverable)(modelElement)) {
                modelElement.hoverFeedback = this.action.mouseIsOver;
            }
        }
        return this.redo(context);
    }
    undo(context) {
        return context.root;
    }
    redo(context) {
        return context.root;
    }
};
HoverFeedbackCommand.KIND = actions_1.HoverFeedbackAction.KIND;
HoverFeedbackCommand = __decorate([
    (0, inversify_1.injectable)(),
    __param(0, (0, inversify_1.inject)(types_1.TYPES.Action)),
    __metadata("design:paramtypes", [Object])
], HoverFeedbackCommand);
exports.HoverFeedbackCommand = HoverFeedbackCommand;
let SetPopupModelCommand = class SetPopupModelCommand extends command_1.PopupCommand {
    constructor(action) {
        super();
        this.action = action;
    }
    execute(context) {
        this.oldRoot = context.root;
        this.newRoot = context.modelFactory.createRoot(this.action.newRoot);
        return this.newRoot;
    }
    undo(context) {
        return this.oldRoot;
    }
    redo(context) {
        return this.newRoot;
    }
};
SetPopupModelCommand.KIND = actions_1.SetPopupModelAction.KIND;
SetPopupModelCommand = __decorate([
    (0, inversify_1.injectable)(),
    __param(0, (0, inversify_1.inject)(types_1.TYPES.Action)),
    __metadata("design:paramtypes", [Object])
], SetPopupModelCommand);
exports.SetPopupModelCommand = SetPopupModelCommand;
class AbstractHoverMouseListener extends mouse_tool_1.MouseListener {
    mouseDown(target, event) {
        this.mouseIsDown = true;
        return [];
    }
    mouseUp(target, event) {
        this.mouseIsDown = false;
        return [];
    }
    stopMouseOutTimer() {
        if (this.state.mouseOutTimer !== undefined) {
            window.clearTimeout(this.state.mouseOutTimer);
            this.state.mouseOutTimer = undefined;
        }
    }
    startMouseOutTimer() {
        this.stopMouseOutTimer();
        return new Promise((resolve) => {
            this.state.mouseOutTimer = window.setTimeout(() => {
                this.state.popupOpen = false;
                this.state.previousPopupElement = undefined;
                resolve(actions_1.SetPopupModelAction.create({ type: smodel_factory_1.EMPTY_ROOT.type, id: smodel_factory_1.EMPTY_ROOT.id }));
            }, this.options.popupCloseDelay);
        });
    }
    stopMouseOverTimer() {
        if (this.state.mouseOverTimer !== undefined) {
            window.clearTimeout(this.state.mouseOverTimer);
            this.state.mouseOverTimer = undefined;
        }
    }
}
__decorate([
    (0, inversify_1.inject)(types_1.TYPES.ViewerOptions),
    __metadata("design:type", Object)
], AbstractHoverMouseListener.prototype, "options", void 0);
__decorate([
    (0, inversify_1.inject)(types_1.TYPES.HoverState),
    __metadata("design:type", Object)
], AbstractHoverMouseListener.prototype, "state", void 0);
exports.AbstractHoverMouseListener = AbstractHoverMouseListener;
let HoverMouseListener = class HoverMouseListener extends AbstractHoverMouseListener {
    computePopupBounds(target, mousePosition) {
        // Default position: below the mouse cursor
        let offset = { x: -5, y: 20 };
        const targetBounds = (0, model_1.getAbsoluteBounds)(target);
        const canvasBounds = target.root.canvasBounds;
        const boundsInWindow = geometry_1.Bounds.translate(targetBounds, canvasBounds);
        const distRight = boundsInWindow.x + boundsInWindow.width - mousePosition.x;
        const distBottom = boundsInWindow.y + boundsInWindow.height - mousePosition.y;
        if (distBottom <= distRight && this.allowSidePosition(target, 'below', distBottom)) {
            // Put the popup below the target element
            offset = { x: -5, y: Math.round(distBottom + 5) };
        }
        else if (distRight <= distBottom && this.allowSidePosition(target, 'right', distRight)) {
            // Put the popup right of the target element
            offset = { x: Math.round(distRight + 5), y: -5 };
        }
        let leftPopupPosition = mousePosition.x + offset.x;
        const canvasRightBorderPosition = canvasBounds.x + canvasBounds.width;
        if (leftPopupPosition > canvasRightBorderPosition) {
            leftPopupPosition = canvasRightBorderPosition;
        }
        let topPopupPosition = mousePosition.y + offset.y;
        const canvasBottomBorderPosition = canvasBounds.y + canvasBounds.height;
        if (topPopupPosition > canvasBottomBorderPosition) {
            topPopupPosition = canvasBottomBorderPosition;
        }
        return { x: leftPopupPosition, y: topPopupPosition, width: -1, height: -1 };
    }
    allowSidePosition(target, side, distance) {
        return !(target instanceof smodel_1.SModelRootImpl) && distance <= 150;
    }
    startMouseOverTimer(target, event) {
        this.stopMouseOverTimer();
        return new Promise((resolve) => {
            this.state.mouseOverTimer = window.setTimeout(() => {
                const popupBounds = this.computePopupBounds(target, { x: event.pageX, y: event.pageY });
                resolve(actions_1.RequestPopupModelAction.create({ elementId: target.id, bounds: popupBounds }));
                this.state.popupOpen = true;
                this.state.previousPopupElement = target;
            }, this.options.popupOpenDelay);
        });
    }
    mouseOver(target, event) {
        const result = [];
        if (!this.mouseIsDown) {
            const popupTarget = (0, smodel_utils_1.findParent)(target, model_2.hasPopupFeature);
            if (this.state.popupOpen && (popupTarget === undefined ||
                this.state.previousPopupElement !== undefined && this.state.previousPopupElement.id !== popupTarget.id)) {
                result.push(this.startMouseOutTimer());
            }
            else {
                this.stopMouseOverTimer();
                this.stopMouseOutTimer();
            }
            if (popupTarget !== undefined &&
                (this.state.previousPopupElement === undefined || this.state.previousPopupElement.id !== popupTarget.id)) {
                result.push(this.startMouseOverTimer(popupTarget, event));
            }
            if (this.lastHoverFeedbackElementId) {
                result.push(actions_1.HoverFeedbackAction.create({ mouseoverElement: this.lastHoverFeedbackElementId, mouseIsOver: false }));
                this.lastHoverFeedbackElementId = undefined;
            }
            const hoverTarget = (0, smodel_utils_1.findParentByFeature)(target, model_2.isHoverable);
            if (hoverTarget !== undefined) {
                result.push(actions_1.HoverFeedbackAction.create({ mouseoverElement: hoverTarget.id, mouseIsOver: true }));
                this.lastHoverFeedbackElementId = hoverTarget.id;
            }
        }
        return result;
    }
    mouseOut(target, event) {
        const result = [];
        if (!this.mouseIsDown) {
            const elementUnderMouse = this.getElementFromEventPosition(event);
            if (!this.isSprottyPopup(elementUnderMouse)) {
                if (this.state.popupOpen) {
                    const popupTarget = (0, smodel_utils_1.findParent)(target, model_2.hasPopupFeature);
                    if (this.state.previousPopupElement !== undefined && popupTarget !== undefined
                        && this.state.previousPopupElement.id === popupTarget.id)
                        result.push(this.startMouseOutTimer());
                }
                this.stopMouseOverTimer();
                const hoverTarget = (0, smodel_utils_1.findParentByFeature)(target, model_2.isHoverable);
                if (hoverTarget !== undefined) {
                    result.push(actions_1.HoverFeedbackAction.create({ mouseoverElement: hoverTarget.id, mouseIsOver: false }));
                    if (this.lastHoverFeedbackElementId && this.lastHoverFeedbackElementId !== hoverTarget.id) {
                        result.push(actions_1.HoverFeedbackAction.create({ mouseoverElement: this.lastHoverFeedbackElementId, mouseIsOver: false }));
                    }
                    this.lastHoverFeedbackElementId = undefined;
                }
            }
        }
        return result;
    }
    getElementFromEventPosition(event) {
        return document.elementFromPoint(event.x, event.y);
    }
    isSprottyPopup(element) {
        return element
            ? (element.id === this.options.popupDiv
                || (!!element.parentElement && this.isSprottyPopup(element.parentElement)))
            : false;
    }
    mouseMove(target, event) {
        const result = [];
        if (!this.mouseIsDown) {
            if (this.state.previousPopupElement !== undefined && this.closeOnMouseMove(this.state.previousPopupElement, event)) {
                result.push(this.startMouseOutTimer());
            }
            const popupTarget = (0, smodel_utils_1.findParent)(target, model_2.hasPopupFeature);
            if (popupTarget !== undefined && (this.state.previousPopupElement === undefined
                || this.state.previousPopupElement.id !== popupTarget.id)) {
                result.push(this.startMouseOverTimer(popupTarget, event));
            }
        }
        return result;
    }
    closeOnMouseMove(target, event) {
        return target instanceof smodel_1.SModelRootImpl;
    }
};
__decorate([
    (0, inversify_1.inject)(types_1.TYPES.ViewerOptions),
    __metadata("design:type", Object)
], HoverMouseListener.prototype, "options", void 0);
HoverMouseListener = __decorate([
    (0, inversify_1.injectable)()
], HoverMouseListener);
exports.HoverMouseListener = HoverMouseListener;
let PopupHoverMouseListener = class PopupHoverMouseListener extends AbstractHoverMouseListener {
    mouseOut(target, event) {
        return [this.startMouseOutTimer()];
    }
    mouseOver(target, event) {
        this.stopMouseOutTimer();
        this.stopMouseOverTimer();
        return [];
    }
};
PopupHoverMouseListener = __decorate([
    (0, inversify_1.injectable)()
], PopupHoverMouseListener);
exports.PopupHoverMouseListener = PopupHoverMouseListener;
class HoverKeyListener extends key_tool_1.KeyListener {
    keyDown(element, event) {
        if ((0, keyboard_1.matchesKeystroke)(event, 'Escape')) {
            return [actions_1.SetPopupModelAction.create({ type: smodel_factory_1.EMPTY_ROOT.type, id: smodel_factory_1.EMPTY_ROOT.id })];
        }
        return [];
    }
}
exports.HoverKeyListener = HoverKeyListener;
let ClosePopupActionHandler = class ClosePopupActionHandler {
    constructor() {
        this.popupOpen = false;
    }
    handle(action) {
        if (action.kind === SetPopupModelCommand.KIND) {
            this.popupOpen = action.newRoot.type !== smodel_factory_1.EMPTY_ROOT.type;
        }
        else if (this.popupOpen) {
            return actions_1.SetPopupModelAction.create({ id: smodel_factory_1.EMPTY_ROOT.id, type: smodel_factory_1.EMPTY_ROOT.type });
        }
    }
};
ClosePopupActionHandler = __decorate([
    (0, inversify_1.injectable)()
], ClosePopupActionHandler);
exports.ClosePopupActionHandler = ClosePopupActionHandler;
/**
 * @deprecated Use the declaration from `sprotty-protocol` instead.
 */
var HoverFeedbackAction;
(function (HoverFeedbackAction) {
    HoverFeedbackAction.KIND = 'hoverFeedback';
    function create(options) {
        return {
            kind: HoverFeedbackAction.KIND,
            mouseoverElement: options.mouseoverElement,
            mouseIsOver: options.mouseIsOver
        };
    }
    HoverFeedbackAction.create = create;
})(HoverFeedbackAction = exports.HoverFeedbackAction || (exports.HoverFeedbackAction = {}));
/**
 * Triggered when the user hovers the mouse pointer over an element to get a popup with details on
 * that element. This action is sent from the client to the model source, e.g. a DiagramServer.
 * The response is a SetPopupModelAction.
 *
 * @deprecated Use the declaration from `sprotty-protocol` instead.
 */
class RequestPopupModelAction {
    constructor(elementId, bounds, requestId = '') {
        this.elementId = elementId;
        this.bounds = bounds;
        this.requestId = requestId;
        this.kind = RequestPopupModelAction.KIND;
    }
    /** Factory function to dispatch a request with the `IActionDispatcher` */
    static create(elementId, bounds) {
        return new RequestPopupModelAction(elementId, bounds, (0, actions_1.generateRequestId)());
    }
}
RequestPopupModelAction.KIND = 'requestPopupModel';
exports.RequestPopupModelAction = RequestPopupModelAction;
/**
 * Sent from the model source to the client to display a popup in response to a RequestPopupModelAction.
 * This action can also be used to remove any existing popup by choosing EMPTY_ROOT as root element.
 *
 * @deprecated Use the declaration from `sprotty-protocol` instead.
 */
class SetPopupModelAction {
    constructor(newRoot, responseId = '') {
        this.newRoot = newRoot;
        this.responseId = responseId;
        this.kind = SetPopupModelAction.KIND;
    }
}
SetPopupModelAction.KIND = 'setPopupModel';
exports.SetPopupModelAction = SetPopupModelAction;


/***/ }),

/***/ "../../node_modules/sprotty/lib/features/hover/model.js":
/*!**************************************************************!*\
  !*** ../../node_modules/sprotty/lib/features/hover/model.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.hasPopupFeature = exports.popupFeature = exports.isHoverable = exports.hoverFeedbackFeature = void 0;
exports.hoverFeedbackFeature = Symbol('hoverFeedbackFeature');
function isHoverable(element) {
    return element.hasFeature(exports.hoverFeedbackFeature);
}
exports.isHoverable = isHoverable;
exports.popupFeature = Symbol('popupFeature');
function hasPopupFeature(element) {
    return element.hasFeature(exports.popupFeature);
}
exports.hasPopupFeature = hasPopupFeature;


/***/ }),

/***/ "../../node_modules/sprotty/lib/features/hover/popup-position-updater.js":
/*!*******************************************************************************!*\
  !*** ../../node_modules/sprotty/lib/features/hover/popup-position-updater.js ***!
  \*******************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.PopupPositionUpdater = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const types_1 = __webpack_require__(/*! ../../base/types */ "../../node_modules/sprotty/lib/base/types.js");
let PopupPositionUpdater = class PopupPositionUpdater {
    decorate(vnode, element) {
        return vnode;
    }
    postUpdate() {
        const popupDiv = document.getElementById(this.options.popupDiv);
        if (popupDiv !== null && typeof window !== 'undefined') {
            const boundingClientRect = popupDiv.getBoundingClientRect();
            if (window.innerHeight < boundingClientRect.height + boundingClientRect.top) {
                popupDiv.style.top = (window.pageYOffset + window.innerHeight - boundingClientRect.height - 5) + 'px';
            }
            if (window.innerWidth < boundingClientRect.left + boundingClientRect.width) {
                popupDiv.style.left = (window.pageXOffset + window.innerWidth - boundingClientRect.width - 5) + 'px';
            }
            if (boundingClientRect.left < 0) {
                popupDiv.style.left = '0px';
            }
            if (boundingClientRect.top < 0) {
                popupDiv.style.top = '0px';
            }
        }
    }
};
__decorate([
    (0, inversify_1.inject)(types_1.TYPES.ViewerOptions),
    __metadata("design:type", Object)
], PopupPositionUpdater.prototype, "options", void 0);
PopupPositionUpdater = __decorate([
    (0, inversify_1.injectable)()
], PopupPositionUpdater);
exports.PopupPositionUpdater = PopupPositionUpdater;


/***/ }),

/***/ "../../node_modules/sprotty/lib/features/move/di.config.js":
/*!*****************************************************************!*\
  !*** ../../node_modules/sprotty/lib/features/move/di.config.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const types_1 = __webpack_require__(/*! ../../base/types */ "../../node_modules/sprotty/lib/base/types.js");
const move_1 = __webpack_require__(/*! ./move */ "../../node_modules/sprotty/lib/features/move/move.js");
const command_registration_1 = __webpack_require__(/*! ../../base/commands/command-registration */ "../../node_modules/sprotty/lib/base/commands/command-registration.js");
const moveModule = new inversify_1.ContainerModule((bind, _unbind, isBound) => {
    bind(move_1.MoveMouseListener).toSelf().inSingletonScope();
    bind(types_1.TYPES.MouseListener).toService(move_1.MoveMouseListener);
    (0, command_registration_1.configureCommand)({ bind, isBound }, move_1.MoveCommand);
    bind(move_1.LocationPostprocessor).toSelf().inSingletonScope();
    bind(types_1.TYPES.IVNodePostprocessor).toService(move_1.LocationPostprocessor);
    bind(types_1.TYPES.HiddenVNodePostprocessor).toService(move_1.LocationPostprocessor);
});
exports["default"] = moveModule;


/***/ }),

/***/ "../../node_modules/sprotty/lib/features/move/model.js":
/*!*************************************************************!*\
  !*** ../../node_modules/sprotty/lib/features/move/model.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isMoveable = exports.isLocateable = exports.moveFeature = void 0;
exports.moveFeature = Symbol('moveFeature');
function isLocateable(element) {
    return element['position'] !== undefined;
}
exports.isLocateable = isLocateable;
function isMoveable(element) {
    return element.hasFeature(exports.moveFeature) && isLocateable(element);
}
exports.isMoveable = isMoveable;


/***/ }),

/***/ "../../node_modules/sprotty/lib/features/move/move.js":
/*!************************************************************!*\
  !*** ../../node_modules/sprotty/lib/features/move/move.js ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2020 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var MoveCommand_1;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.MoveAction = exports.LocationPostprocessor = exports.MoveMouseListener = exports.MorphEdgesAnimation = exports.MoveAnimation = exports.MoveCommand = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const geometry_1 = __webpack_require__(/*! sprotty-protocol/lib/utils/geometry */ "../../node_modules/sprotty-protocol/lib/utils/geometry.js");
const actions_1 = __webpack_require__(/*! sprotty-protocol/lib/actions */ "../../node_modules/sprotty-protocol/lib/actions.js");
const animation_1 = __webpack_require__(/*! ../../base/animations/animation */ "../../node_modules/sprotty/lib/base/animations/animation.js");
const command_1 = __webpack_require__(/*! ../../base/commands/command */ "../../node_modules/sprotty/lib/base/commands/command.js");
const smodel_1 = __webpack_require__(/*! ../../base/model/smodel */ "../../node_modules/sprotty/lib/base/model/smodel.js");
const smodel_utils_1 = __webpack_require__(/*! ../../base/model/smodel-utils */ "../../node_modules/sprotty/lib/base/model/smodel-utils.js");
const types_1 = __webpack_require__(/*! ../../base/types */ "../../node_modules/sprotty/lib/base/types.js");
const mouse_tool_1 = __webpack_require__(/*! ../../base/views/mouse-tool */ "../../node_modules/sprotty/lib/base/views/mouse-tool.js");
const vnode_utils_1 = __webpack_require__(/*! ../../base/views/vnode-utils */ "../../node_modules/sprotty/lib/base/views/vnode-utils.js");
const sgraph_1 = __webpack_require__(/*! ../../graph/sgraph */ "../../node_modules/sprotty/lib/graph/sgraph.js");
const commit_model_1 = __webpack_require__(/*! ../../model-source/commit-model */ "../../node_modules/sprotty/lib/model-source/commit-model.js");
const model_1 = __webpack_require__(/*! ../bounds/model */ "../../node_modules/sprotty/lib/features/bounds/model.js");
const create_on_drag_1 = __webpack_require__(/*! ../edit/create-on-drag */ "../../node_modules/sprotty/lib/features/edit/create-on-drag.js");
const edit_routing_1 = __webpack_require__(/*! ../edit/edit-routing */ "../../node_modules/sprotty/lib/features/edit/edit-routing.js");
const reconnect_1 = __webpack_require__(/*! ../edit/reconnect */ "../../node_modules/sprotty/lib/features/edit/reconnect.js");
const model_2 = __webpack_require__(/*! ../routing/model */ "../../node_modules/sprotty/lib/features/routing/model.js");
const routing_1 = __webpack_require__(/*! ../routing/routing */ "../../node_modules/sprotty/lib/features/routing/routing.js");
const model_3 = __webpack_require__(/*! ../edge-layout/model */ "../../node_modules/sprotty/lib/features/edge-layout/model.js");
const model_4 = __webpack_require__(/*! ../select/model */ "../../node_modules/sprotty/lib/features/select/model.js");
const model_5 = __webpack_require__(/*! ../viewport/model */ "../../node_modules/sprotty/lib/features/viewport/model.js");
const model_6 = __webpack_require__(/*! ./model */ "../../node_modules/sprotty/lib/features/move/model.js");
let MoveCommand = MoveCommand_1 = class MoveCommand extends command_1.MergeableCommand {
    constructor(action) {
        super();
        this.action = action;
        this.resolvedMoves = new Map;
        this.edgeMementi = [];
    }
    execute(context) {
        const index = context.root.index;
        const edge2handleMoves = new Map();
        const attachedEdgeShifts = new Map();
        this.action.moves.forEach(move => {
            const element = index.getById(move.elementId);
            if (element instanceof model_2.SRoutingHandleImpl && this.edgeRouterRegistry) {
                const edge = element.parent;
                if (edge instanceof model_2.SRoutableElementImpl) {
                    const resolvedMove = this.resolveHandleMove(element, edge, move);
                    if (resolvedMove) {
                        let movesByEdge = edge2handleMoves.get(edge);
                        if (!movesByEdge) {
                            movesByEdge = [];
                            edge2handleMoves.set(edge, movesByEdge);
                        }
                        movesByEdge.push(resolvedMove);
                    }
                }
            }
            else if (element && (0, model_6.isLocateable)(element)) {
                const resolvedMove = this.resolveElementMove(element, move);
                if (resolvedMove) {
                    this.resolvedMoves.set(resolvedMove.element.id, resolvedMove);
                    if (this.edgeRouterRegistry) {
                        index.getAttachedElements(element).forEach(edge => {
                            if (edge instanceof model_2.SRoutableElementImpl) {
                                const existingDelta = attachedEdgeShifts.get(edge);
                                const newDelta = geometry_1.Point.subtract(resolvedMove.toPosition, resolvedMove.fromPosition);
                                const delta = (existingDelta)
                                    ? geometry_1.Point.linear(existingDelta, newDelta, 0.5)
                                    : newDelta;
                                attachedEdgeShifts.set(edge, delta);
                            }
                        });
                    }
                }
            }
        });
        this.doMove(edge2handleMoves, attachedEdgeShifts);
        if (this.action.animate) {
            this.undoMove();
            return new animation_1.CompoundAnimation(context.root, context, [
                new MoveAnimation(context.root, this.resolvedMoves, context, false),
                new MorphEdgesAnimation(context.root, this.edgeMementi, context, false)
            ]).start();
        }
        return context.root;
    }
    resolveHandleMove(handle, edge, move) {
        let fromPosition = move.fromPosition;
        if (!fromPosition) {
            const router = this.edgeRouterRegistry.get(edge.routerKind);
            fromPosition = router.getHandlePosition(edge, router.route(edge), handle);
        }
        if (fromPosition)
            return {
                handle,
                fromPosition,
                toPosition: move.toPosition
            };
        return undefined;
    }
    resolveElementMove(element, move) {
        const fromPosition = move.fromPosition
            || { x: element.position.x, y: element.position.y };
        return {
            element,
            fromPosition,
            toPosition: move.toPosition
        };
    }
    doMove(edge2move, attachedEdgeShifts) {
        this.resolvedMoves.forEach(res => {
            res.element.position = res.toPosition;
        });
        // reset edges to state before
        edge2move.forEach((moves, edge) => {
            const router = this.edgeRouterRegistry.get(edge.routerKind);
            const before = router.takeSnapshot(edge);
            router.applyHandleMoves(edge, moves);
            const after = router.takeSnapshot(edge);
            this.edgeMementi.push({ edge, before, after });
        });
        attachedEdgeShifts.forEach((delta, edge) => {
            if (!edge2move.get(edge)) {
                const router = this.edgeRouterRegistry.get(edge.routerKind);
                const before = router.takeSnapshot(edge);
                if (edge.source
                    && edge.target
                    && this.resolvedMoves.get(edge.source.id)
                    && this.resolvedMoves.get(edge.target.id)) {
                    // move the entire edge when both source and target are moved
                    edge.routingPoints = edge.routingPoints.map(rp => geometry_1.Point.add(rp, delta));
                }
                else {
                    // add/remove RPs according to the new source/target positions
                    const updateHandles = (0, model_4.isSelectable)(edge) && edge.selected;
                    router.cleanupRoutingPoints(edge, edge.routingPoints, updateHandles, this.action.finished);
                }
                const after = router.takeSnapshot(edge);
                this.edgeMementi.push({ edge, before, after });
            }
        });
    }
    undoMove() {
        this.resolvedMoves.forEach(res => {
            res.element.position = res.fromPosition;
        });
        this.edgeMementi.forEach(memento => {
            const router = this.edgeRouterRegistry.get(memento.edge.routerKind);
            router.applySnapshot(memento.edge, memento.before);
        });
    }
    undo(context) {
        return new animation_1.CompoundAnimation(context.root, context, [
            new MoveAnimation(context.root, this.resolvedMoves, context, true),
            new MorphEdgesAnimation(context.root, this.edgeMementi, context, true)
        ]).start();
    }
    redo(context) {
        return new animation_1.CompoundAnimation(context.root, context, [
            new MoveAnimation(context.root, this.resolvedMoves, context, false),
            new MorphEdgesAnimation(context.root, this.edgeMementi, context, false)
        ]).start();
    }
    merge(other, context) {
        if (!this.action.animate && other instanceof MoveCommand_1) {
            other.resolvedMoves.forEach((otherMove, otherElementId) => {
                const existingMove = this.resolvedMoves.get(otherElementId);
                if (existingMove) {
                    existingMove.toPosition = otherMove.toPosition;
                }
                else {
                    this.resolvedMoves.set(otherElementId, otherMove);
                }
            });
            other.edgeMementi.forEach(otherMemento => {
                const existingMemento = this.edgeMementi.find(edgeMemento => edgeMemento.edge.id === otherMemento.edge.id);
                if (existingMemento) {
                    existingMemento.after = otherMemento.after;
                }
                else {
                    this.edgeMementi.push(otherMemento);
                }
            });
            return true;
        }
        else if (other instanceof reconnect_1.ReconnectCommand) {
            const otherMemento = other.memento;
            if (otherMemento) {
                const existingMemento = this.edgeMementi.find(edgeMemento => edgeMemento.edge.id === otherMemento.edge.id);
                if (existingMemento) {
                    existingMemento.after = otherMemento.after;
                }
                else {
                    this.edgeMementi.push(otherMemento);
                }
            }
            return true;
        }
        return false;
    }
};
MoveCommand.KIND = actions_1.MoveAction.KIND;
__decorate([
    (0, inversify_1.inject)(routing_1.EdgeRouterRegistry),
    (0, inversify_1.optional)(),
    __metadata("design:type", routing_1.EdgeRouterRegistry)
], MoveCommand.prototype, "edgeRouterRegistry", void 0);
MoveCommand = MoveCommand_1 = __decorate([
    (0, inversify_1.injectable)(),
    __param(0, (0, inversify_1.inject)(types_1.TYPES.Action)),
    __metadata("design:paramtypes", [Object])
], MoveCommand);
exports.MoveCommand = MoveCommand;
class MoveAnimation extends animation_1.Animation {
    constructor(model, elementMoves, context, reverse = false) {
        super(context);
        this.model = model;
        this.elementMoves = elementMoves;
        this.reverse = reverse;
    }
    tween(t) {
        this.elementMoves.forEach((elementMove) => {
            if (this.reverse) {
                elementMove.element.position = {
                    x: (1 - t) * elementMove.toPosition.x + t * elementMove.fromPosition.x,
                    y: (1 - t) * elementMove.toPosition.y + t * elementMove.fromPosition.y
                };
            }
            else {
                elementMove.element.position = {
                    x: (1 - t) * elementMove.fromPosition.x + t * elementMove.toPosition.x,
                    y: (1 - t) * elementMove.fromPosition.y + t * elementMove.toPosition.y
                };
            }
        });
        return this.model;
    }
}
exports.MoveAnimation = MoveAnimation;
class MorphEdgesAnimation extends animation_1.Animation {
    constructor(model, originalMementi, context, reverse = false) {
        super(context);
        this.model = model;
        this.reverse = reverse;
        this.expanded = [];
        originalMementi.forEach(edgeMemento => {
            const start = this.reverse ? edgeMemento.after : edgeMemento.before;
            const end = this.reverse ? edgeMemento.before : edgeMemento.after;
            const startRoute = start.routedPoints;
            const endRoute = end.routedPoints;
            const maxRoutingPoints = Math.max(startRoute.length, endRoute.length);
            this.expanded.push({
                startExpandedRoute: this.growToSize(startRoute, maxRoutingPoints),
                endExpandedRoute: this.growToSize(endRoute, maxRoutingPoints),
                memento: edgeMemento
            });
        });
    }
    midPoint(edgeMemento) {
        const edge = edgeMemento.edge;
        const source = edgeMemento.edge.source;
        const target = edgeMemento.edge.target;
        return geometry_1.Point.linear((0, smodel_utils_1.translatePoint)(geometry_1.Bounds.center(source.bounds), source.parent, edge.parent), (0, smodel_utils_1.translatePoint)(geometry_1.Bounds.center(target.bounds), target.parent, edge.parent), 0.5);
    }
    start() {
        this.expanded.forEach(morph => {
            morph.memento.edge.removeAll(e => e instanceof model_2.SRoutingHandleImpl);
        });
        return super.start();
    }
    tween(t) {
        if (t === 1) {
            this.expanded.forEach(morph => {
                const memento = morph.memento;
                if (this.reverse)
                    memento.before.router.applySnapshot(memento.edge, memento.before);
                else
                    memento.after.router.applySnapshot(memento.edge, memento.after);
            });
        }
        else {
            this.expanded.forEach(morph => {
                const newRoutingPoints = [];
                // ignore source and target anchor
                for (let i = 1; i < morph.startExpandedRoute.length - 1; ++i)
                    newRoutingPoints.push(geometry_1.Point.linear(morph.startExpandedRoute[i], morph.endExpandedRoute[i], t));
                const closestSnapshot = t < 0.5 ? morph.memento.before : morph.memento.after;
                const newSnapshot = Object.assign(Object.assign({}, closestSnapshot), { routingPoints: newRoutingPoints, routingHandles: [] });
                closestSnapshot.router.applySnapshot(morph.memento.edge, newSnapshot);
            });
        }
        return this.model;
    }
    growToSize(route, targetSize) {
        const diff = targetSize - route.length;
        if (diff <= 0)
            return route;
        const result = [];
        result.push(route[0]);
        const deltaDiff = 1 / (diff + 1);
        const deltaSmaller = 1 / (route.length - 1);
        let nextInsertion = 1;
        for (let i = 1; i < route.length; ++i) {
            const pos = deltaSmaller * i;
            let insertions = 0;
            while (pos > (nextInsertion + insertions) * deltaDiff)
                ++insertions;
            nextInsertion += insertions;
            for (let j = 0; j < insertions; ++j) {
                const p = geometry_1.Point.linear(route[i - 1], route[i], (j + 1) / (insertions + 1));
                result.push(p);
            }
            result.push(route[i]);
        }
        return result;
    }
}
exports.MorphEdgesAnimation = MorphEdgesAnimation;
class MoveMouseListener extends mouse_tool_1.MouseListener {
    constructor() {
        super(...arguments);
        this.hasDragged = false;
        this.elementId2startPos = new Map();
    }
    mouseDown(target, event) {
        if (event.button === 0) {
            const moveable = (0, smodel_utils_1.findParentByFeature)(target, model_6.isMoveable);
            const isRoutingHandle = target instanceof model_2.SRoutingHandleImpl;
            if (moveable !== undefined || isRoutingHandle || (0, create_on_drag_1.isCreatingOnDrag)(target)) {
                this.startDragPosition = { x: event.pageX, y: event.pageY };
            }
            else {
                this.startDragPosition = undefined;
            }
            this.hasDragged = false;
            if ((0, create_on_drag_1.isCreatingOnDrag)(target)) {
                return this.startCreatingOnDrag(target, event);
            }
            else if (isRoutingHandle) {
                return this.activateRoutingHandle(target, event);
            }
        }
        return [];
    }
    startCreatingOnDrag(target, event) {
        const result = [];
        result.push(actions_1.SelectAllAction.create({ select: false }));
        result.push(target.createAction(model_2.edgeInProgressID));
        result.push(actions_1.SelectAction.create({ selectedElementsIDs: [model_2.edgeInProgressID] }));
        result.push(edit_routing_1.SwitchEditModeAction.create({ elementsToActivate: [model_2.edgeInProgressID] }));
        result.push(actions_1.SelectAction.create({ selectedElementsIDs: [model_2.edgeInProgressTargetHandleID] }));
        result.push(edit_routing_1.SwitchEditModeAction.create({ elementsToActivate: [model_2.edgeInProgressTargetHandleID] }));
        return result;
    }
    activateRoutingHandle(target, event) {
        return [edit_routing_1.SwitchEditModeAction.create({ elementsToActivate: [target.id] })];
    }
    mouseMove(target, event) {
        const result = [];
        if (event.buttons === 0)
            this.mouseUp(target, event);
        else if (this.startDragPosition) {
            if (this.elementId2startPos.size === 0) {
                this.collectStartPositions(target.root);
            }
            this.hasDragged = true;
            const moveAction = this.getElementMoves(target, event, false);
            if (moveAction)
                result.push(moveAction);
        }
        return result;
    }
    collectStartPositions(root) {
        const selectedElements = new Set(root.index.all()
            .filter(element => (0, model_4.isSelectable)(element) && element.selected));
        selectedElements.forEach(element => {
            if (!this.isChildOfSelected(selectedElements, element)) {
                if ((0, model_6.isMoveable)(element))
                    this.elementId2startPos.set(element.id, element.position);
                else if (element instanceof model_2.SRoutingHandleImpl) {
                    const position = this.getHandlePosition(element);
                    if (position)
                        this.elementId2startPos.set(element.id, position);
                }
            }
        });
    }
    isChildOfSelected(selectedElements, element) {
        while (element instanceof smodel_1.SChildElementImpl) {
            element = element.parent;
            if ((0, model_6.isMoveable)(element) && selectedElements.has(element)) {
                return true;
            }
        }
        return false;
    }
    getElementMoves(target, event, isFinished) {
        if (!this.startDragPosition)
            return undefined;
        const elementMoves = [];
        const viewport = (0, smodel_utils_1.findParentByFeature)(target, model_5.isViewport);
        const zoom = viewport ? viewport.zoom : 1;
        const delta = {
            x: (event.pageX - this.startDragPosition.x) / zoom,
            y: (event.pageY - this.startDragPosition.y) / zoom
        };
        this.elementId2startPos.forEach((startPosition, elementId) => {
            const element = target.root.index.getById(elementId);
            if (element) {
                const move = this.createElementMove(element, startPosition, delta, event);
                if (move) {
                    elementMoves.push(move);
                }
            }
        });
        if (elementMoves.length > 0)
            return actions_1.MoveAction.create(elementMoves, { animate: false, finished: isFinished });
        else
            return undefined;
    }
    createElementMove(element, startPosition, delta, event) {
        const toPosition = this.snap({
            x: startPosition.x + delta.x,
            y: startPosition.y + delta.y
        }, element, !event.shiftKey);
        if ((0, model_6.isMoveable)(element)) {
            return {
                elementId: element.id,
                elementType: element.type,
                fromPosition: {
                    x: element.position.x,
                    y: element.position.y
                },
                toPosition
            };
        }
        else if (element instanceof model_2.SRoutingHandleImpl) {
            const point = this.getHandlePosition(element);
            if (point !== undefined) {
                return {
                    elementId: element.id,
                    elementType: element.type,
                    fromPosition: point,
                    toPosition
                };
            }
        }
        return undefined;
    }
    snap(position, element, isSnap) {
        if (isSnap && this.snapper)
            return this.snapper.snap(position, element);
        else
            return position;
    }
    getHandlePosition(handle) {
        if (this.edgeRouterRegistry) {
            const parent = handle.parent;
            if (!(parent instanceof model_2.SRoutableElementImpl))
                return undefined;
            const router = this.edgeRouterRegistry.get(parent.routerKind);
            const route = router.route(parent);
            return router.getHandlePosition(parent, route, handle);
        }
        return undefined;
    }
    mouseEnter(target, event) {
        if (target instanceof smodel_1.SModelRootImpl && event.buttons === 0 && !this.startDragPosition)
            this.mouseUp(target, event);
        return [];
    }
    mouseUp(target, event) {
        const result = [];
        if (this.startDragPosition) {
            const moveAction = this.getElementMoves(target, event, true);
            if (moveAction) {
                result.push(moveAction);
            }
            target.root.index.all().forEach(element => {
                if (element instanceof model_2.SRoutingHandleImpl) {
                    result.push(...this.deactivateRoutingHandle(element, target, event));
                }
            });
        }
        if (!result.some(a => a.kind === actions_1.ReconnectAction.KIND)) {
            const edgeInProgress = target.root.index.getById(model_2.edgeInProgressID);
            if (edgeInProgress instanceof smodel_1.SChildElementImpl) {
                result.push(this.deleteEdgeInProgress(edgeInProgress));
            }
        }
        if (this.hasDragged) {
            result.push(commit_model_1.CommitModelAction.create());
        }
        this.hasDragged = false;
        this.startDragPosition = undefined;
        this.elementId2startPos.clear();
        return result;
    }
    deactivateRoutingHandle(element, target, event) {
        const result = [];
        const parent = element.parent;
        if (parent instanceof model_2.SRoutableElementImpl && element.danglingAnchor) {
            const handlePos = this.getHandlePosition(element);
            if (handlePos) {
                const handlePosAbs = (0, smodel_utils_1.translatePoint)(handlePos, element.parent, element.root);
                const newEnd = (0, model_1.findChildrenAtPosition)(target.root, handlePosAbs)
                    .find(e => (0, model_2.isConnectable)(e) && e.canConnect(parent, element.kind));
                if (newEnd && this.hasDragged) {
                    result.push(actions_1.ReconnectAction.create({
                        routableId: element.parent.id,
                        newSourceId: element.kind === 'source' ? newEnd.id : parent.sourceId,
                        newTargetId: element.kind === 'target' ? newEnd.id : parent.targetId
                    }));
                }
            }
        }
        if (element.editMode) {
            result.push(edit_routing_1.SwitchEditModeAction.create({ elementsToDeactivate: [element.id] }));
        }
        return result;
    }
    deleteEdgeInProgress(edgeInProgress) {
        const deleteIds = [];
        deleteIds.push(model_2.edgeInProgressID);
        edgeInProgress.children.forEach(c => {
            if (c instanceof model_2.SRoutingHandleImpl && c.danglingAnchor)
                deleteIds.push(c.danglingAnchor.id);
        });
        return actions_1.DeleteElementAction.create(deleteIds);
    }
    decorate(vnode, element) {
        return vnode;
    }
}
__decorate([
    (0, inversify_1.inject)(routing_1.EdgeRouterRegistry),
    (0, inversify_1.optional)(),
    __metadata("design:type", routing_1.EdgeRouterRegistry)
], MoveMouseListener.prototype, "edgeRouterRegistry", void 0);
__decorate([
    (0, inversify_1.inject)(types_1.TYPES.ISnapper),
    (0, inversify_1.optional)(),
    __metadata("design:type", Object)
], MoveMouseListener.prototype, "snapper", void 0);
exports.MoveMouseListener = MoveMouseListener;
let LocationPostprocessor = class LocationPostprocessor {
    decorate(vnode, element) {
        if ((0, model_3.isEdgeLayoutable)(element) && element.parent instanceof sgraph_1.SEdgeImpl) {
            // The element is handled by EdgeLayoutDecorator
            return vnode;
        }
        let translate = '';
        if ((0, model_6.isLocateable)(element) && element instanceof smodel_1.SChildElementImpl && element.parent !== undefined) {
            const pos = element.position;
            if (pos.x !== 0 || pos.y !== 0) {
                translate = 'translate(' + pos.x + ', ' + pos.y + ')';
            }
        }
        if ((0, model_1.isAlignable)(element)) {
            const ali = element.alignment;
            if (ali.x !== 0 || ali.y !== 0) {
                if (translate.length > 0) {
                    translate += ' ';
                }
                translate += 'translate(' + ali.x + ', ' + ali.y + ')';
            }
        }
        if (translate.length > 0) {
            (0, vnode_utils_1.setAttr)(vnode, 'transform', translate);
        }
        return vnode;
    }
    postUpdate() {
    }
};
LocationPostprocessor = __decorate([
    (0, inversify_1.injectable)()
], LocationPostprocessor);
exports.LocationPostprocessor = LocationPostprocessor;
var MoveAction;
(function (MoveAction) {
    MoveAction.KIND = 'move';
    function create(moves, options = {}) {
        var _a, _b;
        return {
            kind: MoveAction.KIND,
            moves,
            animate: (_a = options.animate) !== null && _a !== void 0 ? _a : true,
            finished: (_b = options.finished) !== null && _b !== void 0 ? _b : false
        };
    }
    MoveAction.create = create;
})(MoveAction = exports.MoveAction || (exports.MoveAction = {}));


/***/ }),

/***/ "../../node_modules/sprotty/lib/features/move/snap.js":
/*!************************************************************!*\
  !*** ../../node_modules/sprotty/lib/features/move/snap.js ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2019 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CenterGridSnapper = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const model_1 = __webpack_require__(/*! ../bounds/model */ "../../node_modules/sprotty/lib/features/bounds/model.js");
/**
 * A simple snapper that snaps the center of nodes and routing points to a grid.
 */
let CenterGridSnapper = class CenterGridSnapper {
    get gridX() {
        return 10;
    }
    get gridY() {
        return 10;
    }
    snap(position, element) {
        if (element && (0, model_1.isBoundsAware)(element))
            return {
                x: Math.round((position.x + 0.5 * element.bounds.width) / this.gridX) * this.gridX - 0.5 * element.bounds.width,
                y: Math.round((position.y + 0.5 * element.bounds.height) / this.gridY) * this.gridY - 0.5 * element.bounds.height
            };
        else
            return {
                x: Math.round(position.x / this.gridX) * this.gridX,
                y: Math.round(position.y / this.gridY) * this.gridY
            };
    }
};
CenterGridSnapper = __decorate([
    (0, inversify_1.injectable)()
], CenterGridSnapper);
exports.CenterGridSnapper = CenterGridSnapper;


/***/ }),

/***/ "../../node_modules/sprotty/lib/features/nameable/model.js":
/*!*****************************************************************!*\
  !*** ../../node_modules/sprotty/lib/features/nameable/model.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2019 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.name = exports.isNameable = exports.nameFeature = void 0;
exports.nameFeature = Symbol('nameableFeature');
function isNameable(element) {
    return element.hasFeature(exports.nameFeature);
}
exports.isNameable = isNameable;
function name(element) {
    if (isNameable(element)) {
        return element.name;
    }
    else {
        return undefined;
    }
}
exports.name = name;


/***/ }),

/***/ "../../node_modules/sprotty/lib/features/open/di.config.js":
/*!*****************************************************************!*\
  !*** ../../node_modules/sprotty/lib/features/open/di.config.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const types_1 = __webpack_require__(/*! ../../base/types */ "../../node_modules/sprotty/lib/base/types.js");
const open_1 = __webpack_require__(/*! ./open */ "../../node_modules/sprotty/lib/features/open/open.js");
const openModule = new inversify_1.ContainerModule(bind => {
    bind(open_1.OpenMouseListener).toSelf().inSingletonScope();
    bind(types_1.TYPES.MouseListener).toService(open_1.OpenMouseListener);
});
exports["default"] = openModule;


/***/ }),

/***/ "../../node_modules/sprotty/lib/features/open/model.js":
/*!*************************************************************!*\
  !*** ../../node_modules/sprotty/lib/features/open/model.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isOpenable = exports.openFeature = void 0;
exports.openFeature = Symbol('openFeature');
function isOpenable(element) {
    return element.hasFeature(exports.openFeature);
}
exports.isOpenable = isOpenable;


/***/ }),

/***/ "../../node_modules/sprotty/lib/features/open/open.js":
/*!************************************************************!*\
  !*** ../../node_modules/sprotty/lib/features/open/open.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.OpenMouseListener = void 0;
const actions_1 = __webpack_require__(/*! sprotty-protocol/lib/actions */ "../../node_modules/sprotty-protocol/lib/actions.js");
const mouse_tool_1 = __webpack_require__(/*! ../../base/views/mouse-tool */ "../../node_modules/sprotty/lib/base/views/mouse-tool.js");
const smodel_utils_1 = __webpack_require__(/*! ../../base/model/smodel-utils */ "../../node_modules/sprotty/lib/base/model/smodel-utils.js");
const model_1 = __webpack_require__(/*! ./model */ "../../node_modules/sprotty/lib/features/open/model.js");
class OpenMouseListener extends mouse_tool_1.MouseListener {
    doubleClick(target, event) {
        const openableTarget = (0, smodel_utils_1.findParentByFeature)(target, model_1.isOpenable);
        if (openableTarget !== undefined) {
            return [actions_1.OpenAction.create(openableTarget.id)];
        }
        return [];
    }
}
exports.OpenMouseListener = OpenMouseListener;


/***/ }),

/***/ "../../node_modules/sprotty/lib/features/projection/model.js":
/*!*******************************************************************!*\
  !*** ../../node_modules/sprotty/lib/features/projection/model.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2021 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.getModelBounds = exports.getProjectedBounds = exports.getProjections = exports.isProjectable = void 0;
const geometry_1 = __webpack_require__(/*! sprotty-protocol/lib/utils/geometry */ "../../node_modules/sprotty-protocol/lib/utils/geometry.js");
const object_1 = __webpack_require__(/*! sprotty-protocol/lib/utils/object */ "../../node_modules/sprotty-protocol/lib/utils/object.js");
const smodel_utils_1 = __webpack_require__(/*! ../../base/model/smodel-utils */ "../../node_modules/sprotty/lib/base/model/smodel-utils.js");
const model_1 = __webpack_require__(/*! ../bounds/model */ "../../node_modules/sprotty/lib/features/bounds/model.js");
function isProjectable(arg) {
    return (0, object_1.hasOwnProperty)(arg, 'projectionCssClasses');
}
exports.isProjectable = isProjectable;
/**
 * Gather all projections of elements contained in the given parent element.
 */
function getProjections(parent) {
    let result;
    for (const child of parent.children) {
        if (isProjectable(child) && child.projectionCssClasses.length > 0) {
            const projectedBounds = getProjectedBounds(child);
            if (projectedBounds) {
                const projection = {
                    elementId: child.id,
                    projectedBounds,
                    cssClasses: child.projectionCssClasses
                };
                if (result) {
                    result.push(projection);
                }
                else {
                    result = [projection];
                }
            }
        }
        if (child.children.length > 0) {
            const childProj = getProjections(child);
            if (childProj) {
                if (result) {
                    result.push(...childProj);
                }
                else {
                    result = childProj;
                }
            }
        }
    }
    return result;
}
exports.getProjections = getProjections;
/**
 * Compute the projected bounds of the given model element, that is the absolute position in the diagram.
 */
function getProjectedBounds(model) {
    const parent = model.parent;
    if (model.projectedBounds) {
        let bounds = model.projectedBounds;
        if ((0, model_1.isBoundsAware)(parent)) {
            bounds = (0, smodel_utils_1.transformToRootBounds)(parent, bounds);
        }
        return bounds;
    }
    else if ((0, model_1.isBoundsAware)(model)) {
        let bounds = model.bounds;
        bounds = (0, smodel_utils_1.transformToRootBounds)(parent, bounds);
        return bounds;
    }
    return undefined;
}
exports.getProjectedBounds = getProjectedBounds;
const MAX_COORD = 1000000000;
/**
 * Determine the total bounds of a model; this takes the viewport into consideration
 * so it can be shown in the projections.
 */
function getModelBounds(model) {
    let minX = MAX_COORD;
    let minY = MAX_COORD;
    let maxX = -MAX_COORD;
    let maxY = -MAX_COORD;
    const bounds = (0, model_1.isBoundsAware)(model) ? model.bounds : undefined;
    if (bounds && geometry_1.Dimension.isValid(bounds)) {
        // Get the bounds directly from the model if it returns a valid size
        minX = bounds.x;
        minY = bounds.y;
        maxX = minX + bounds.width;
        maxY = minY + bounds.height;
    }
    else {
        // Determine the min. / max coordinates of top-level model elements
        // Note that this approach is slower, so provide valid bounds to speed up the process.
        for (const element of model.children) {
            if ((0, model_1.isBoundsAware)(element)) {
                const b = element.bounds;
                minX = Math.min(minX, b.x);
                minY = Math.min(minY, b.y);
                maxX = Math.max(maxX, b.x + b.width);
                maxY = Math.max(maxY, b.y + b.height);
            }
        }
    }
    // Enlarge the bounds by the current viewport to ensure it always fits into the projection
    minX = Math.min(minX, model.scroll.x);
    minY = Math.min(minY, model.scroll.y);
    maxX = Math.max(maxX, model.scroll.x + model.canvasBounds.width / model.zoom);
    maxY = Math.max(maxY, model.scroll.y + model.canvasBounds.height / model.zoom);
    if (minX < maxX && minY < maxY) {
        return {
            x: minX,
            y: minY,
            width: maxX - minX,
            height: maxY - minY
        };
    }
    return undefined;
}
exports.getModelBounds = getModelBounds;


/***/ }),

/***/ "../../node_modules/sprotty/lib/features/projection/views.js":
/*!*******************************************************************!*\
  !*** ../../node_modules/sprotty/lib/features/projection/views.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ProjectedViewportView = void 0;
/** @jsx html */
const jsx_1 = __webpack_require__(/*! ../../lib/jsx */ "../../node_modules/sprotty/lib/lib/jsx.js");
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const snabbdom_1 = __webpack_require__(/*! snabbdom */ "../../node_modules/snabbdom/build/index.js");
const vnode_utils_1 = __webpack_require__(/*! ../../base/views/vnode-utils */ "../../node_modules/sprotty/lib/base/views/vnode-utils.js");
const model_1 = __webpack_require__(/*! ./model */ "../../node_modules/sprotty/lib/features/projection/model.js");
/**
 * Special viewport root view that renders horizontal and vertical projection bars for quick navigation.
 */
let ProjectedViewportView = class ProjectedViewportView {
    render(model, context, args) {
        const rootNode = (0, jsx_1.html)("div", { "class-sprotty-root": true },
            this.renderSvg(model, context, args),
            this.renderProjections(model, context, args));
        (0, vnode_utils_1.setAttr)(rootNode, 'tabindex', 0); // make root div focus-able
        return rootNode;
    }
    renderSvg(model, context, args) {
        const transform = `scale(${model.zoom}) translate(${-model.scroll.x},${-model.scroll.y})`;
        const ns = 'http://www.w3.org/2000/svg';
        return (0, snabbdom_1.h)('svg', { ns }, (0, snabbdom_1.h)('g', { ns, attrs: { transform } }, context.renderChildren(model)));
    }
    renderProjections(model, context, args) {
        var _a;
        if (model.zoom <= 0) {
            return [];
        }
        const modelBounds = (0, model_1.getModelBounds)(model);
        if (!modelBounds) {
            return [];
        }
        const projections = (_a = (0, model_1.getProjections)(model)) !== null && _a !== void 0 ? _a : [];
        return [
            this.renderProjectionBar(projections, model, modelBounds, 'vertical'),
            this.renderProjectionBar(projections, model, modelBounds, 'horizontal')
        ];
    }
    renderProjectionBar(projections, model, modelBounds, orientation) {
        const params = { modelBounds, orientation };
        // NOTE: Here we assume that the projection bars have the same size as the diagram canvas, i.e. they are drawn as overlay above the canvas.
        params.factor = orientation === 'horizontal' ? model.canvasBounds.width / modelBounds.width : model.canvasBounds.height / modelBounds.height;
        params.zoomedFactor = params.factor / model.zoom;
        return (0, jsx_1.html)("div", { "class-sprotty-projection-bar": true, "class-horizontal": orientation === 'horizontal', "class-vertical": orientation === 'vertical' },
            this.renderViewport(model, params),
            projections.map(p => this.renderProjection(p, model, params)));
    }
    renderViewport(model, params) {
        let canvasSize, viewportPos;
        if (params.orientation === 'horizontal') {
            canvasSize = model.canvasBounds.width;
            viewportPos = (model.scroll.x - params.modelBounds.x) * params.factor;
        }
        else {
            canvasSize = model.canvasBounds.height;
            viewportPos = (model.scroll.y - params.modelBounds.y) * params.factor;
        }
        let viewportSize = canvasSize * params.zoomedFactor;
        if (viewportPos < 0) {
            viewportSize += viewportPos;
            viewportPos = 0;
        }
        else if (viewportPos > canvasSize) {
            viewportPos = canvasSize;
        }
        if (viewportSize < 0) {
            viewportSize = 0;
        }
        else if (viewportPos + viewportSize > canvasSize) {
            viewportSize = canvasSize - viewportPos;
        }
        const style = params.orientation === 'horizontal' ? {
            left: `${viewportPos}px`,
            width: `${viewportSize}px`
        } : {
            top: `${viewportPos}px`,
            height: `${viewportSize}px`
        };
        return (0, jsx_1.html)("div", { "class-sprotty-viewport": true, style: style });
    }
    renderProjection(projection, model, params) {
        let canvasSize, projPos, projSize;
        if (params.orientation === 'horizontal') {
            canvasSize = model.canvasBounds.width;
            projPos = (projection.projectedBounds.x - params.modelBounds.x) * params.factor;
            projSize = projection.projectedBounds.width * params.factor;
        }
        else {
            canvasSize = model.canvasBounds.height;
            projPos = (projection.projectedBounds.y - params.modelBounds.y) * params.factor;
            projSize = projection.projectedBounds.height * params.factor;
        }
        if (projPos < 0) {
            projSize += projPos;
            projPos = 0;
        }
        else if (projPos > canvasSize) {
            projPos = canvasSize;
        }
        if (projSize < 0) {
            projSize = 0;
        }
        else if (projPos + projSize > canvasSize) {
            projSize = canvasSize - projPos;
        }
        const style = params.orientation === 'horizontal' ? {
            left: `${projPos}px`,
            width: `${projSize}px`
        } : {
            top: `${projPos}px`,
            height: `${projSize}px`
        };
        const result = (0, jsx_1.html)("div", { id: `${params.orientation}-projection:${projection.elementId}`, "class-sprotty-projection": true, style: style });
        projection.cssClasses.forEach(cl => (0, vnode_utils_1.setClass)(result, cl, true));
        return result;
    }
};
ProjectedViewportView = __decorate([
    (0, inversify_1.injectable)()
], ProjectedViewportView);
exports.ProjectedViewportView = ProjectedViewportView;


/***/ }),

/***/ "../../node_modules/sprotty/lib/features/routing/abstract-edge-router.js":
/*!*******************************************************************************!*\
  !*** ../../node_modules/sprotty/lib/features/routing/abstract-edge-router.js ***!
  \*******************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2019-2020 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AbstractEdgeRouter = exports.DefaultAnchors = exports.Side = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const geometry_1 = __webpack_require__(/*! sprotty-protocol/lib/utils/geometry */ "../../node_modules/sprotty-protocol/lib/utils/geometry.js");
const smodel_utils_1 = __webpack_require__(/*! ../../base/model/smodel-utils */ "../../node_modules/sprotty/lib/base/model/smodel-utils.js");
const model_1 = __webpack_require__(/*! ./model */ "../../node_modules/sprotty/lib/features/routing/model.js");
const anchor_1 = __webpack_require__(/*! ./anchor */ "../../node_modules/sprotty/lib/features/routing/anchor.js");
const model_2 = __webpack_require__(/*! ./model */ "../../node_modules/sprotty/lib/features/routing/model.js");
var Side;
(function (Side) {
    Side[Side["RIGHT"] = 0] = "RIGHT";
    Side[Side["LEFT"] = 1] = "LEFT";
    Side[Side["TOP"] = 2] = "TOP";
    Side[Side["BOTTOM"] = 3] = "BOTTOM";
})(Side = exports.Side || (exports.Side = {}));
class DefaultAnchors {
    constructor(element, edgeParent, kind) {
        this.element = element;
        this.kind = kind;
        const bounds = element.bounds;
        this.bounds = (0, smodel_utils_1.translateBounds)(bounds, element.parent, edgeParent);
        this.left = { x: this.bounds.x, y: this.bounds.y + 0.5 * this.bounds.height, kind };
        this.right = { x: this.bounds.x + this.bounds.width, y: this.bounds.y + 0.5 * this.bounds.height, kind };
        this.top = { x: this.bounds.x + 0.5 * this.bounds.width, y: this.bounds.y, kind };
        this.bottom = { x: this.bounds.x + 0.5 * this.bounds.width, y: this.bounds.y + this.bounds.height, kind };
    }
    get(side) {
        return this[Side[side].toLowerCase()];
    }
    getNearestSide(point) {
        const leftDistance = geometry_1.Point.euclideanDistance(point, this.left);
        const rightDistance = geometry_1.Point.euclideanDistance(point, this.right);
        const topDistance = geometry_1.Point.euclideanDistance(point, this.top);
        const bottomDistance = geometry_1.Point.euclideanDistance(point, this.bottom);
        let currentNearestSide = Side.LEFT;
        let currentMinDist = leftDistance;
        if (rightDistance < currentMinDist) {
            currentMinDist = rightDistance;
            currentNearestSide = Side.RIGHT;
        }
        if (topDistance < currentMinDist) {
            currentMinDist = topDistance;
            currentNearestSide = Side.TOP;
        }
        if (bottomDistance < currentMinDist) {
            currentMinDist = bottomDistance;
            currentNearestSide = Side.BOTTOM;
        }
        return currentNearestSide;
    }
}
exports.DefaultAnchors = DefaultAnchors;
let AbstractEdgeRouter = class AbstractEdgeRouter {
    pointAt(edge, t) {
        const segments = this.calculateSegment(edge, t);
        if (!segments)
            return undefined;
        const { segmentStart, segmentEnd, lambda } = segments;
        return geometry_1.Point.linear(segmentStart, segmentEnd, lambda);
    }
    derivativeAt(edge, t) {
        const segments = this.calculateSegment(edge, t);
        if (!segments)
            return undefined;
        const { segmentStart, segmentEnd } = segments;
        return {
            x: segmentEnd.x - segmentStart.x,
            y: segmentEnd.y - segmentStart.y
        };
    }
    calculateSegment(edge, t) {
        if (t < 0 || t > 1)
            return undefined;
        const routedPoints = this.route(edge);
        if (routedPoints.length < 2)
            return undefined;
        const segmentLengths = [];
        let totalLength = 0;
        for (let i = 0; i < routedPoints.length - 1; ++i) {
            segmentLengths[i] = geometry_1.Point.euclideanDistance(routedPoints[i], routedPoints[i + 1]);
            totalLength += segmentLengths[i];
        }
        let currentLenght = 0;
        const tAsLenght = t * totalLength;
        for (let i = 0; i < routedPoints.length - 1; ++i) {
            const newLength = currentLenght + segmentLengths[i];
            // avoid division by (almost) zero
            if (segmentLengths[i] > 1E-8) {
                if (newLength >= tAsLenght) {
                    const lambda = Math.max(0, (tAsLenght - currentLenght)) / segmentLengths[i];
                    return {
                        segmentStart: routedPoints[i],
                        segmentEnd: routedPoints[i + 1],
                        lambda
                    };
                }
            }
            currentLenght = newLength;
        }
        return {
            segmentEnd: routedPoints.pop(),
            segmentStart: routedPoints.pop(),
            lambda: 1
        };
    }
    addHandle(edge, kind, type, routingPointIndex) {
        const handle = new model_1.SRoutingHandleImpl();
        handle.kind = kind;
        handle.pointIndex = routingPointIndex;
        handle.type = type;
        if (kind === 'target' && edge.id === model_1.edgeInProgressID)
            handle.id = model_1.edgeInProgressTargetHandleID;
        edge.add(handle);
        return handle;
    }
    getHandlePosition(edge, route, handle) {
        switch (handle.kind) {
            case 'source':
                if (edge.source instanceof model_1.SDanglingAnchorImpl)
                    return edge.source.position;
                else
                    return route[0];
            case 'target':
                if (edge.target instanceof model_1.SDanglingAnchorImpl)
                    return edge.target.position;
                else {
                    return route[route.length - 1];
                }
            default:
                const position = this.getInnerHandlePosition(edge, route, handle);
                if (position !== undefined)
                    return position;
                if (handle.pointIndex >= 0 && handle.pointIndex < edge.routingPoints.length)
                    return edge.routingPoints[handle.pointIndex];
        }
        return undefined;
    }
    findRouteSegment(edge, route, handleIndex) {
        const getIndex = (rp) => {
            if (rp.pointIndex !== undefined)
                return rp.pointIndex;
            else if (rp.kind === 'target')
                return edge.routingPoints.length;
            else
                return -2;
        };
        let start, end;
        for (const rp of route) {
            const i = getIndex(rp);
            if (i <= handleIndex && (start === undefined || i > getIndex(start)))
                start = rp;
            if (i > handleIndex && (end === undefined || i < getIndex(end)))
                end = rp;
        }
        return { start, end };
    }
    getTranslatedAnchor(connectable, refPoint, refContainer, edge, anchorCorrection = 0) {
        const translatedRefPoint = (0, smodel_utils_1.translatePoint)(refPoint, refContainer, connectable.parent);
        const anchorComputer = this.getAnchorComputer(connectable);
        const strokeCorrection = 0.5 * connectable.strokeWidth;
        const anchor = anchorComputer.getAnchor(connectable, translatedRefPoint, anchorCorrection + strokeCorrection);
        return (0, smodel_utils_1.translatePoint)(anchor, connectable.parent, edge.parent);
    }
    getAnchorComputer(connectable) {
        return this.anchorRegistry.get(this.kind, connectable.anchorKind);
    }
    applyHandleMoves(edge, moves) {
        const remainingMoves = moves.slice();
        moves.forEach(move => {
            const handle = move.handle;
            if (handle.kind === 'source' && !(edge.source instanceof model_1.SDanglingAnchorImpl)) {
                // detach source
                const anchor = new model_1.SDanglingAnchorImpl();
                anchor.id = edge.id + '_dangling-source';
                anchor.original = edge.source;
                anchor.position = move.toPosition;
                handle.root.add(anchor);
                handle.danglingAnchor = anchor;
                edge.sourceId = anchor.id;
            }
            else if (handle.kind === 'target' && !(edge.target instanceof model_1.SDanglingAnchorImpl)) {
                // detach target
                const anchor = new model_1.SDanglingAnchorImpl();
                anchor.id = edge.id + '_dangling-target';
                anchor.original = edge.target;
                anchor.position = move.toPosition;
                handle.root.add(anchor);
                handle.danglingAnchor = anchor;
                edge.targetId = anchor.id;
            }
            if (handle.danglingAnchor) {
                handle.danglingAnchor.position = move.toPosition;
                remainingMoves.splice(remainingMoves.indexOf(move), 1);
            }
        });
        if (remainingMoves.length > 0)
            this.applyInnerHandleMoves(edge, remainingMoves);
        this.cleanupRoutingPoints(edge, edge.routingPoints, true, true);
    }
    cleanupRoutingPoints(edge, routingPoints, updateHandles, addRoutingPoints) {
        const sourceAnchors = new DefaultAnchors(edge.source, edge.parent, "source");
        const targetAnchors = new DefaultAnchors(edge.target, edge.parent, "target");
        this.resetRoutingPointsOnReconnect(edge, routingPoints, updateHandles, sourceAnchors, targetAnchors);
    }
    resetRoutingPointsOnReconnect(edge, routingPoints, updateHandles, sourceAnchors, targetAnchors) {
        if (routingPoints.length === 0 || edge.source instanceof model_1.SDanglingAnchorImpl || edge.target instanceof model_1.SDanglingAnchorImpl) {
            const options = this.getOptions(edge);
            const corners = this.calculateDefaultCorners(edge, sourceAnchors, targetAnchors, options);
            routingPoints.splice(0, routingPoints.length, ...corners);
            if (updateHandles) {
                let maxPointIndex = -2;
                edge.children.forEach(child => {
                    if (child instanceof model_1.SRoutingHandleImpl) {
                        if (child.kind === 'target')
                            child.pointIndex = routingPoints.length;
                        else if (child.kind === 'line' && child.pointIndex >= routingPoints.length)
                            edge.remove(child);
                        else
                            maxPointIndex = Math.max(child.pointIndex, maxPointIndex);
                    }
                });
                for (let i = maxPointIndex; i < routingPoints.length - 1; ++i)
                    this.addHandle(edge, 'manhattan-50%', 'volatile-routing-point', i);
            }
            return true;
        }
        return false;
    }
    applyReconnect(edge, newSourceId, newTargetId) {
        let hasChanged = false;
        if (newSourceId) {
            const newSource = edge.root.index.getById(newSourceId);
            if (newSource instanceof model_2.SConnectableElementImpl) {
                edge.sourceId = newSource.id;
                hasChanged = true;
            }
        }
        if (newTargetId) {
            const newTarget = edge.root.index.getById(newTargetId);
            if (newTarget instanceof model_2.SConnectableElementImpl) {
                edge.targetId = newTarget.id;
                hasChanged = true;
            }
        }
        if (hasChanged) {
            // reset attached elements in index
            edge.index.remove(edge);
            edge.index.add(edge);
            if (this.getSelfEdgeIndex(edge) > -1) {
                edge.routingPoints = [];
                this.cleanupRoutingPoints(edge, edge.routingPoints, true, true);
            }
        }
    }
    takeSnapshot(edge) {
        return {
            routingPoints: edge.routingPoints.slice(),
            routingHandles: edge.children
                .filter(child => child instanceof model_1.SRoutingHandleImpl)
                .map(child => child),
            routedPoints: this.route(edge),
            router: this,
            source: edge.source,
            target: edge.target
        };
    }
    applySnapshot(edge, snapshot) {
        edge.routingPoints = snapshot.routingPoints;
        edge.removeAll(child => child instanceof model_1.SRoutingHandleImpl);
        edge.routerKind = snapshot.router.kind;
        snapshot.routingHandles.forEach(handle => edge.add(handle));
        if (snapshot.source)
            edge.sourceId = snapshot.source.id;
        if (snapshot.target)
            edge.targetId = snapshot.target.id;
        // update index
        edge.root.index.remove(edge);
        edge.root.index.add(edge);
    }
    calculateDefaultCorners(edge, sourceAnchors, targetAnchors, options) {
        const selfEdgeIndex = this.getSelfEdgeIndex(edge);
        if (selfEdgeIndex >= 0) {
            const standardDist = options.standardDistance;
            const delta = options.selfEdgeOffset * Math.min(sourceAnchors.bounds.width, sourceAnchors.bounds.height);
            switch (selfEdgeIndex % 4) {
                case 0:
                    return [
                        { x: sourceAnchors.get(Side.RIGHT).x + standardDist, y: sourceAnchors.get(Side.RIGHT).y + delta },
                        { x: sourceAnchors.get(Side.RIGHT).x + standardDist, y: sourceAnchors.get(Side.BOTTOM).y + standardDist },
                        { x: sourceAnchors.get(Side.BOTTOM).x + delta, y: sourceAnchors.get(Side.BOTTOM).y + standardDist },
                    ];
                case 1:
                    return [
                        { x: sourceAnchors.get(Side.BOTTOM).x - delta, y: sourceAnchors.get(Side.BOTTOM).y + standardDist },
                        { x: sourceAnchors.get(Side.LEFT).x - standardDist, y: sourceAnchors.get(Side.BOTTOM).y + standardDist },
                        { x: sourceAnchors.get(Side.LEFT).x - standardDist, y: sourceAnchors.get(Side.LEFT).y + delta },
                    ];
                case 2:
                    return [
                        { x: sourceAnchors.get(Side.LEFT).x - standardDist, y: sourceAnchors.get(Side.LEFT).y - delta },
                        { x: sourceAnchors.get(Side.LEFT).x - standardDist, y: sourceAnchors.get(Side.TOP).y - standardDist },
                        { x: sourceAnchors.get(Side.TOP).x - delta, y: sourceAnchors.get(Side.TOP).y - standardDist },
                    ];
                case 3:
                    return [
                        { x: sourceAnchors.get(Side.TOP).x + delta, y: sourceAnchors.get(Side.TOP).y - standardDist },
                        { x: sourceAnchors.get(Side.RIGHT).x + standardDist, y: sourceAnchors.get(Side.TOP).y - standardDist },
                        { x: sourceAnchors.get(Side.RIGHT).x + standardDist, y: sourceAnchors.get(Side.RIGHT).y - delta },
                    ];
            }
        }
        return [];
    }
    getSelfEdgeIndex(edge) {
        if (!edge.source || edge.source !== edge.target)
            return -1;
        return edge.source.outgoingEdges
            .filter(otherEdge => otherEdge.target === edge.source)
            .indexOf(edge);
    }
    commitRoute(edge, routedPoints) {
        const newRoutingPoints = [];
        for (let i = 1; i < routedPoints.length - 1; ++i)
            newRoutingPoints.push({ x: routedPoints[i].x, y: routedPoints[i].y });
        edge.routingPoints = newRoutingPoints;
    }
};
__decorate([
    (0, inversify_1.inject)(anchor_1.AnchorComputerRegistry),
    __metadata("design:type", anchor_1.AnchorComputerRegistry)
], AbstractEdgeRouter.prototype, "anchorRegistry", void 0);
AbstractEdgeRouter = __decorate([
    (0, inversify_1.injectable)()
], AbstractEdgeRouter);
exports.AbstractEdgeRouter = AbstractEdgeRouter;


/***/ }),

/***/ "../../node_modules/sprotty/lib/features/routing/anchor.js":
/*!*****************************************************************!*\
  !*** ../../node_modules/sprotty/lib/features/routing/anchor.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2019 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AnchorComputerRegistry = exports.RECTANGULAR_ANCHOR_KIND = exports.ELLIPTIC_ANCHOR_KIND = exports.DIAMOND_ANCHOR_KIND = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const types_1 = __webpack_require__(/*! ../../base/types */ "../../node_modules/sprotty/lib/base/types.js");
const registry_1 = __webpack_require__(/*! ../../utils/registry */ "../../node_modules/sprotty/lib/utils/registry.js");
exports.DIAMOND_ANCHOR_KIND = 'diamond';
exports.ELLIPTIC_ANCHOR_KIND = 'elliptic';
exports.RECTANGULAR_ANCHOR_KIND = 'rectangular';
let AnchorComputerRegistry = class AnchorComputerRegistry extends registry_1.InstanceRegistry {
    constructor(anchors) {
        super();
        anchors.forEach(anchor => this.register(anchor.kind, anchor));
    }
    get defaultAnchorKind() {
        return exports.RECTANGULAR_ANCHOR_KIND;
    }
    get(routerKind, anchorKind) {
        return super.get(`${routerKind}:${anchorKind || this.defaultAnchorKind}`);
    }
};
AnchorComputerRegistry = __decorate([
    (0, inversify_1.injectable)(),
    __param(0, (0, inversify_1.multiInject)(types_1.TYPES.IAnchorComputer)),
    __metadata("design:paramtypes", [Array])
], AnchorComputerRegistry);
exports.AnchorComputerRegistry = AnchorComputerRegistry;


/***/ }),

/***/ "../../node_modules/sprotty/lib/features/routing/bezier-anchors.js":
/*!*************************************************************************!*\
  !*** ../../node_modules/sprotty/lib/features/routing/bezier-anchors.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2021 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.BezierDiamondAnchor = exports.BezierRectangleAnchor = exports.BezierEllipseAnchor = void 0;
const anchor_1 = __webpack_require__(/*! ./anchor */ "../../node_modules/sprotty/lib/features/routing/anchor.js");
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const polyline_anchors_1 = __webpack_require__(/*! ./polyline-anchors */ "../../node_modules/sprotty/lib/features/routing/polyline-anchors.js");
const bezier_edge_router_1 = __webpack_require__(/*! ./bezier-edge-router */ "../../node_modules/sprotty/lib/features/routing/bezier-edge-router.js");
let BezierEllipseAnchor = class BezierEllipseAnchor extends polyline_anchors_1.EllipseAnchor {
    get kind() {
        return bezier_edge_router_1.BezierEdgeRouter.KIND + ':' + anchor_1.ELLIPTIC_ANCHOR_KIND;
    }
};
BezierEllipseAnchor = __decorate([
    (0, inversify_1.injectable)()
], BezierEllipseAnchor);
exports.BezierEllipseAnchor = BezierEllipseAnchor;
let BezierRectangleAnchor = class BezierRectangleAnchor extends polyline_anchors_1.RectangleAnchor {
    get kind() {
        return bezier_edge_router_1.BezierEdgeRouter.KIND + ':' + anchor_1.RECTANGULAR_ANCHOR_KIND;
    }
};
BezierRectangleAnchor = __decorate([
    (0, inversify_1.injectable)()
], BezierRectangleAnchor);
exports.BezierRectangleAnchor = BezierRectangleAnchor;
let BezierDiamondAnchor = class BezierDiamondAnchor extends polyline_anchors_1.DiamondAnchor {
    get kind() {
        return bezier_edge_router_1.BezierEdgeRouter.KIND + ':' + anchor_1.DIAMOND_ANCHOR_KIND;
    }
};
BezierDiamondAnchor = __decorate([
    (0, inversify_1.injectable)()
], BezierDiamondAnchor);
exports.BezierDiamondAnchor = BezierDiamondAnchor;


/***/ }),

/***/ "../../node_modules/sprotty/lib/features/routing/bezier-edge-router.js":
/*!*****************************************************************************!*\
  !*** ../../node_modules/sprotty/lib/features/routing/bezier-edge-router.js ***!
  \*****************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2021 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var BezierEdgeRouter_1;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AddRemoveBezierSegmentCommand = exports.AddRemoveBezierSegmentAction = exports.BezierMouseListener = exports.BezierEdgeRouter = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const geometry_1 = __webpack_require__(/*! sprotty-protocol/lib/utils/geometry */ "../../node_modules/sprotty-protocol/lib/utils/geometry.js");
const model_1 = __webpack_require__(/*! ./model */ "../../node_modules/sprotty/lib/features/routing/model.js");
const routing_1 = __webpack_require__(/*! ./routing */ "../../node_modules/sprotty/lib/features/routing/routing.js");
const abstract_edge_router_1 = __webpack_require__(/*! ./abstract-edge-router */ "../../node_modules/sprotty/lib/features/routing/abstract-edge-router.js");
const mouse_tool_1 = __webpack_require__(/*! ../../base/views/mouse-tool */ "../../node_modules/sprotty/lib/base/views/mouse-tool.js");
const command_1 = __webpack_require__(/*! ../../base/commands/command */ "../../node_modules/sprotty/lib/base/commands/command.js");
const types_1 = __webpack_require__(/*! ../../base/types */ "../../node_modules/sprotty/lib/base/types.js");
let BezierEdgeRouter = BezierEdgeRouter_1 = class BezierEdgeRouter extends abstract_edge_router_1.AbstractEdgeRouter {
    get kind() {
        return BezierEdgeRouter_1.KIND;
    }
    route(edge) {
        if (!edge.source || !edge.target)
            return [];
        const rpCount = edge.routingPoints.length;
        const source = edge.source;
        const target = edge.target;
        const result = [];
        result.push({ kind: 'source', x: 0, y: 0 });
        if (rpCount === 0) {
            // initial values
            const [h1, h2] = this.createDefaultBezierHandles(source.position, target.position);
            result.push({ kind: 'bezier-control-after', x: h1.x, y: h1.y, pointIndex: 0 });
            result.push({ kind: 'bezier-control-before', x: h2.x, y: h2.y, pointIndex: 1 });
            edge.routingPoints.push(h1);
            edge.routingPoints.push(h2);
        }
        else if (rpCount >= 2) {
            for (let i = 0; i < rpCount; i++) {
                const p = edge.routingPoints[i];
                if (i % 3 === 0) {
                    result.push({ kind: 'bezier-control-after', x: p.x, y: p.y, pointIndex: i });
                }
                if ((i + 1) % 3 === 0) {
                    result.push({ kind: 'bezier-junction', x: p.x, y: p.y, pointIndex: i });
                }
                else if ((i + 2) % 3 === 0) {
                    result.push({ kind: 'bezier-control-before', x: p.x, y: p.y, pointIndex: i });
                }
            }
        }
        result.push({ kind: 'target', x: 0, y: 0 });
        // use "ends" of edge as reference or next bezier-junction
        const p0 = rpCount > 2 ? edge.routingPoints[2] : target.position;
        const pn = rpCount > 2 ? edge.routingPoints[edge.routingPoints.length - 3] : source.position;
        const sourceAnchor = this.getTranslatedAnchor(source, p0, target.parent, edge, edge.sourceAnchorCorrection);
        const targetAnchor = this.getTranslatedAnchor(target, pn, source.parent, edge, edge.targetAnchorCorrection);
        result[0] = { kind: 'source', x: sourceAnchor.x, y: sourceAnchor.y };
        result[result.length - 1] = { kind: 'target', x: targetAnchor.x, y: targetAnchor.y };
        return result;
    }
    createDefaultBezierHandles(relH1, relH2) {
        const h1 = {
            x: relH1.x - BezierEdgeRouter_1.DEFAULT_BEZIER_HANDLE_OFFSET,
            y: relH1.y
        };
        const h2 = {
            x: relH2.x + BezierEdgeRouter_1.DEFAULT_BEZIER_HANDLE_OFFSET,
            y: relH2.y
        };
        return [h1, h2];
    }
    createRoutingHandles(edge) {
        // route ensure there are at least 2 routed points
        this.route(edge);
        this.rebuildHandles(edge);
    }
    rebuildHandles(edge) {
        this.addHandle(edge, 'source', 'routing-point', -2);
        this.addHandle(edge, 'bezier-control-after', 'bezier-routing-point', 0);
        this.addHandle(edge, 'bezier-add', 'bezier-create-routing-point', 0);
        const rpCount = edge.routingPoints.length;
        if (rpCount > 2) {
            for (let i = 1; i < rpCount - 1; i += 3) {
                this.addHandle(edge, 'bezier-control-before', 'bezier-routing-point', i);
                // Add two circle for add/remove segments
                this.addHandle(edge, 'bezier-add', 'bezier-create-routing-point', i + 1);
                this.addHandle(edge, 'bezier-junction', 'routing-point', i + 1);
                this.addHandle(edge, 'bezier-remove', 'bezier-remove-routing-point', i + 1);
                this.addHandle(edge, 'bezier-control-after', 'bezier-routing-point', i + 2);
                // re-position control-pairs
                this.moveBezierControlPair(edge.routingPoints[i], i, edge);
            }
        }
        this.addHandle(edge, 'bezier-control-before', 'bezier-routing-point', rpCount - 1);
        this.addHandle(edge, 'target', 'routing-point', -1);
    }
    getInnerHandlePosition(edge, route, handle) {
        if (handle.kind === 'bezier-control-before' || handle.kind === 'bezier-junction' || handle.kind === 'bezier-control-after') {
            for (let i = 0; i < route.length; i++) {
                const p = route[i];
                if (p.pointIndex === handle.pointIndex && p.kind === handle.kind)
                    return p;
            }
        }
        else if (handle.kind === 'bezier-add') {
            const ctrlPoint = this.findBezierControl(edge, route, handle.pointIndex);
            return { x: ctrlPoint.x, y: ctrlPoint.y + 12.5 };
        }
        else if (handle.kind === 'bezier-remove') {
            const ctrlPoint = this.findBezierControl(edge, route, handle.pointIndex);
            return { x: ctrlPoint.x, y: ctrlPoint.y - 12.5 };
        }
        return undefined;
    }
    findBezierControl(edge, route, handleIndex) {
        let result = { x: route[0].x, y: route[0].y };
        if (handleIndex > 0) {
            for (const rp of route) {
                if (rp.pointIndex !== undefined && rp.pointIndex === handleIndex && rp.kind === 'bezier-junction') {
                    result = { x: rp.x, y: rp.y };
                    break;
                }
            }
        }
        return result;
    }
    applyHandleMoves(edge, moves) {
        moves.forEach(move => {
            const handle = move.handle;
            let orgPosition = { x: 0, y: 0 };
            let relativePos, newControlPos, ctrlPointIndex;
            const moveToPos = move.toPosition;
            switch (handle.kind) {
                case 'bezier-control-before':
                case 'bezier-control-after':
                    // find potential other handle/rp and move
                    this.moveBezierControlPair(moveToPos, move.handle.pointIndex, edge);
                    break;
                case 'bezier-junction':
                    const index = handle.pointIndex;
                    if (index >= 0 && index < edge.routingPoints.length) {
                        ctrlPointIndex = index - 1;
                        orgPosition = edge.routingPoints[index];
                        relativePos = edge.routingPoints[ctrlPointIndex];
                        newControlPos = this.calcRelativeMove(orgPosition, moveToPos, relativePos);
                        edge.routingPoints[index] = moveToPos;
                        this.moveBezierControlPair(newControlPos, ctrlPointIndex, edge);
                    }
                    break;
                case 'source':
                    ctrlPointIndex = 0;
                    relativePos = edge.routingPoints[ctrlPointIndex];
                    if (!(edge.source instanceof model_1.SDanglingAnchorImpl)) {
                        // detach source
                        const anchor = new model_1.SDanglingAnchorImpl();
                        anchor.id = edge.id + '_dangling-source';
                        anchor.original = edge.source;
                        anchor.position = move.toPosition;
                        handle.root.add(anchor);
                        handle.danglingAnchor = anchor;
                        edge.sourceId = anchor.id;
                        if (edge.source)
                            orgPosition = edge.source.position;
                    }
                    else if (handle.danglingAnchor) {
                        orgPosition = handle.danglingAnchor.position;
                        handle.danglingAnchor.position = moveToPos;
                    }
                    newControlPos = this.calcRelativeMove(orgPosition, moveToPos, relativePos);
                    this.moveBezierControlPair(newControlPos, ctrlPointIndex, edge);
                    break;
                case 'target':
                    ctrlPointIndex = edge.routingPoints.length - 1;
                    relativePos = edge.routingPoints[ctrlPointIndex];
                    if (!(edge.target instanceof model_1.SDanglingAnchorImpl)) {
                        // detach target
                        const anchor = new model_1.SDanglingAnchorImpl();
                        anchor.id = edge.id + '_dangling-target';
                        anchor.original = edge.target;
                        anchor.position = moveToPos;
                        handle.root.add(anchor);
                        handle.danglingAnchor = anchor;
                        edge.targetId = anchor.id;
                        if (edge.target)
                            orgPosition = edge.target.position;
                    }
                    else if (handle.danglingAnchor) {
                        orgPosition = handle.danglingAnchor.position;
                        handle.danglingAnchor.position = moveToPos;
                    }
                    newControlPos = this.calcRelativeMove(orgPosition, moveToPos, relativePos);
                    this.moveBezierControlPair(newControlPos, ctrlPointIndex, edge);
                    break;
                default:
                    break;
            }
        });
    }
    applyInnerHandleMoves(edge, moves) {
        // not required
    }
    getOptions(edge) {
        return {
            minimalPointDistance: 2,
            standardDistance: 0.1,
            selfEdgeOffset: 20
        };
    }
    calcRelativeMove(oldPos, newPos, relativePoint) {
        return {
            x: relativePoint.x - (oldPos.x - newPos.x),
            y: relativePoint.y - (oldPos.y - newPos.y)
        };
    }
    createNewBezierSegment(index, edge) {
        const routingPoints = edge.routingPoints;
        let bezierJunctionPos, start, end;
        if (routingPoints.length === 2) {
            start = routingPoints[index < 0 ? 0 : index];
            end = routingPoints[routingPoints.length - 1];
            bezierJunctionPos = (0, geometry_1.centerOfLine)(start, end);
        }
        else {
            start = routingPoints[index];
            end = routingPoints[index + 2];
            bezierJunctionPos = (0, geometry_1.centerOfLine)(start, end);
        }
        const [h1, h2] = this.createDefaultBezierHandles(bezierJunctionPos, bezierJunctionPos);
        routingPoints.splice(index + 1, 0, h1);
        routingPoints.splice(index + 2, 0, bezierJunctionPos);
        routingPoints.splice(index + 3, 0, h2);
        // ensure handles are correctly positioned
        this.moveBezierControlPair(h1, index + 1, edge);
        // simple solution for now: just rebuildHandles
        edge.removeAll(c => c instanceof model_1.SRoutingHandleImpl);
        this.rebuildHandles(edge);
    }
    removeBezierSegment(index, edge) {
        const routingPoints = edge.routingPoints;
        routingPoints.splice(index - 1, 3);
        // simple solution for now: just rebuildHandles
        edge.removeAll(c => c instanceof model_1.SRoutingHandleImpl);
        this.rebuildHandles(edge);
    }
    moveBezierControlPair(newPos, ctrlPointIndex, edge) {
        if (ctrlPointIndex >= 0 && ctrlPointIndex < edge.routingPoints.length) {
            // find neighbors
            const before = ctrlPointIndex - 1;
            const after = ctrlPointIndex + 1;
            // this is the first control or the last control => nothing to do further
            if (before < 0 || after === edge.routingPoints.length) {
                edge.routingPoints[ctrlPointIndex] = newPos;
            }
            else {
                // behind bezier-junction
                if (ctrlPointIndex % 3 === 0) {
                    this.setBezierMirror(edge, newPos, ctrlPointIndex, false);
                    // before bezier-junction
                }
                else if ((ctrlPointIndex + 2) % 3 === 0) {
                    this.setBezierMirror(edge, newPos, ctrlPointIndex, true);
                }
            }
        }
    }
    setBezierMirror(edge, newPos, pointIndex, before) {
        edge.routingPoints[pointIndex] = newPos;
        const jct = edge.routingPoints[before ? (pointIndex + 1) : (pointIndex - 1)];
        edge.routingPoints[before ? (pointIndex + 2) : (pointIndex - 2)] = {
            x: jct.x - (newPos.x - jct.x),
            y: jct.y - (newPos.y - jct.y)
        };
    }
};
BezierEdgeRouter.KIND = 'bezier';
BezierEdgeRouter.DEFAULT_BEZIER_HANDLE_OFFSET = 25;
BezierEdgeRouter = BezierEdgeRouter_1 = __decorate([
    (0, inversify_1.injectable)()
], BezierEdgeRouter);
exports.BezierEdgeRouter = BezierEdgeRouter;
/**
 * Reacts on mouseDown events if the target kind is bezier-add or bezier-remove
 */
class BezierMouseListener extends mouse_tool_1.MouseListener {
    mouseDown(target, event) {
        const result = [];
        if (target instanceof model_1.SRoutingHandleImpl && (target.kind === 'bezier-add' || target.kind === 'bezier-remove')) {
            if (target.type === 'bezier-create-routing-point') {
                result.push(AddRemoveBezierSegmentAction.create('add', target.id));
            }
            else if (target.type === 'bezier-remove-routing-point') {
                result.push(AddRemoveBezierSegmentAction.create('remove', target.id));
            }
        }
        return result;
    }
}
exports.BezierMouseListener = BezierMouseListener;
;
var AddRemoveBezierSegmentAction;
(function (AddRemoveBezierSegmentAction) {
    AddRemoveBezierSegmentAction.KIND = 'addRemoveBezierSegment';
    function create(actionTask, targetId) {
        return {
            kind: AddRemoveBezierSegmentAction.KIND,
            actionTask,
            targetId
        };
    }
    AddRemoveBezierSegmentAction.create = create;
})(AddRemoveBezierSegmentAction = exports.AddRemoveBezierSegmentAction || (exports.AddRemoveBezierSegmentAction = {}));
let AddRemoveBezierSegmentCommand = class AddRemoveBezierSegmentCommand extends command_1.Command {
    constructor(action, edgeRouterRegistry) {
        super();
        this.action = action;
        this.edgeRouterRegistry = edgeRouterRegistry;
    }
    execute(context) {
        const index = context.root.index;
        const target = index.getById(this.action.targetId);
        if (this.edgeRouterRegistry && target instanceof model_1.SRoutingHandleImpl) {
            const raw = this.edgeRouterRegistry.get(target.parent.routerKind);
            if (raw instanceof BezierEdgeRouter) {
                const router = raw;
                for (const child of context.root.children) {
                    if (child.id === target.parent.id) {
                        if (this.action.actionTask === 'add') {
                            router.createNewBezierSegment(target.pointIndex, child);
                        }
                        else if (this.action.actionTask === 'remove') {
                            router.removeBezierSegment(target.pointIndex, child);
                        }
                        break;
                    }
                }
            }
        }
        return context.root;
    }
    undo(context) {
        throw new Error('Method not implemented.');
    }
    redo(context) {
        throw new Error('Method not implemented.');
    }
};
AddRemoveBezierSegmentCommand.KIND = AddRemoveBezierSegmentAction.KIND;
AddRemoveBezierSegmentCommand = __decorate([
    (0, inversify_1.injectable)(),
    __param(0, (0, inversify_1.inject)(types_1.TYPES.Action)),
    __param(1, (0, inversify_1.inject)(routing_1.EdgeRouterRegistry)),
    __metadata("design:paramtypes", [Object, routing_1.EdgeRouterRegistry])
], AddRemoveBezierSegmentCommand);
exports.AddRemoveBezierSegmentCommand = AddRemoveBezierSegmentCommand;


/***/ }),

/***/ "../../node_modules/sprotty/lib/features/routing/di.config.js":
/*!********************************************************************!*\
  !*** ../../node_modules/sprotty/lib/features/routing/di.config.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2019 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const types_1 = __webpack_require__(/*! ../../base/types */ "../../node_modules/sprotty/lib/base/types.js");
const manhattan_edge_router_1 = __webpack_require__(/*! ./manhattan-edge-router */ "../../node_modules/sprotty/lib/features/routing/manhattan-edge-router.js");
const polyline_edge_router_1 = __webpack_require__(/*! ./polyline-edge-router */ "../../node_modules/sprotty/lib/features/routing/polyline-edge-router.js");
const manhattan_anchors_1 = __webpack_require__(/*! ./manhattan-anchors */ "../../node_modules/sprotty/lib/features/routing/manhattan-anchors.js");
const polyline_anchors_1 = __webpack_require__(/*! ./polyline-anchors */ "../../node_modules/sprotty/lib/features/routing/polyline-anchors.js");
const anchor_1 = __webpack_require__(/*! ./anchor */ "../../node_modules/sprotty/lib/features/routing/anchor.js");
const routing_1 = __webpack_require__(/*! ./routing */ "../../node_modules/sprotty/lib/features/routing/routing.js");
const bezier_edge_router_1 = __webpack_require__(/*! ./bezier-edge-router */ "../../node_modules/sprotty/lib/features/routing/bezier-edge-router.js");
const bezier_anchors_1 = __webpack_require__(/*! ./bezier-anchors */ "../../node_modules/sprotty/lib/features/routing/bezier-anchors.js");
const command_registration_1 = __webpack_require__(/*! ../../base/commands/command-registration */ "../../node_modules/sprotty/lib/base/commands/command-registration.js");
const routingModule = new inversify_1.ContainerModule((bind, _unbind, isBound) => {
    bind(routing_1.EdgeRouterRegistry).toSelf().inSingletonScope();
    bind(anchor_1.AnchorComputerRegistry).toSelf().inSingletonScope();
    bind(manhattan_edge_router_1.ManhattanEdgeRouter).toSelf().inSingletonScope();
    bind(types_1.TYPES.IEdgeRouter).toService(manhattan_edge_router_1.ManhattanEdgeRouter);
    bind(manhattan_anchors_1.ManhattanEllipticAnchor).toSelf().inSingletonScope();
    bind(types_1.TYPES.IAnchorComputer).toService(manhattan_anchors_1.ManhattanEllipticAnchor);
    bind(manhattan_anchors_1.ManhattanRectangularAnchor).toSelf().inSingletonScope();
    bind(types_1.TYPES.IAnchorComputer).toService(manhattan_anchors_1.ManhattanRectangularAnchor);
    bind(manhattan_anchors_1.ManhattanDiamondAnchor).toSelf().inSingletonScope();
    bind(types_1.TYPES.IAnchorComputer).toService(manhattan_anchors_1.ManhattanDiamondAnchor);
    bind(polyline_edge_router_1.PolylineEdgeRouter).toSelf().inSingletonScope();
    bind(types_1.TYPES.IEdgeRouter).toService(polyline_edge_router_1.PolylineEdgeRouter);
    bind(polyline_anchors_1.EllipseAnchor).toSelf().inSingletonScope();
    bind(types_1.TYPES.IAnchorComputer).toService(polyline_anchors_1.EllipseAnchor);
    bind(polyline_anchors_1.RectangleAnchor).toSelf().inSingletonScope();
    bind(types_1.TYPES.IAnchorComputer).toService(polyline_anchors_1.RectangleAnchor);
    bind(polyline_anchors_1.DiamondAnchor).toSelf().inSingletonScope();
    bind(types_1.TYPES.IAnchorComputer).toService(polyline_anchors_1.DiamondAnchor);
    bind(bezier_edge_router_1.BezierEdgeRouter).toSelf().inSingletonScope();
    bind(types_1.TYPES.IEdgeRouter).toService(bezier_edge_router_1.BezierEdgeRouter);
    bind(bezier_anchors_1.BezierEllipseAnchor).toSelf().inSingletonScope();
    bind(types_1.TYPES.IAnchorComputer).toService(bezier_anchors_1.BezierEllipseAnchor);
    bind(bezier_anchors_1.BezierRectangleAnchor).toSelf().inSingletonScope();
    bind(types_1.TYPES.IAnchorComputer).toService(bezier_anchors_1.BezierRectangleAnchor);
    bind(bezier_anchors_1.BezierDiamondAnchor).toSelf().inSingletonScope();
    bind(types_1.TYPES.IAnchorComputer).toService(bezier_anchors_1.BezierDiamondAnchor);
    (0, command_registration_1.configureCommand)({ bind, isBound }, bezier_edge_router_1.AddRemoveBezierSegmentCommand);
});
exports["default"] = routingModule;


/***/ }),

/***/ "../../node_modules/sprotty/lib/features/routing/manhattan-anchors.js":
/*!****************************************************************************!*\
  !*** ../../node_modules/sprotty/lib/features/routing/manhattan-anchors.js ***!
  \****************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2019 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var ManhattanRectangularAnchor_1, ManhattanDiamondAnchor_1, ManhattanEllipticAnchor_1;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ManhattanEllipticAnchor = exports.ManhattanDiamondAnchor = exports.ManhattanRectangularAnchor = void 0;
const geometry_1 = __webpack_require__(/*! sprotty-protocol/lib/utils/geometry */ "../../node_modules/sprotty-protocol/lib/utils/geometry.js");
const geometry_2 = __webpack_require__(/*! ../../utils/geometry */ "../../node_modules/sprotty/lib/utils/geometry.js");
const anchor_1 = __webpack_require__(/*! ./anchor */ "../../node_modules/sprotty/lib/features/routing/anchor.js");
const manhattan_edge_router_1 = __webpack_require__(/*! ./manhattan-edge-router */ "../../node_modules/sprotty/lib/features/routing/manhattan-edge-router.js");
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
let ManhattanRectangularAnchor = ManhattanRectangularAnchor_1 = class ManhattanRectangularAnchor {
    get kind() {
        return ManhattanRectangularAnchor_1.KIND;
    }
    getAnchor(connectable, refPoint, offset) {
        const b = connectable.bounds;
        if (b.width <= 0 || b.height <= 0) {
            return b;
        }
        const bounds = {
            x: b.x - offset,
            y: b.y - offset,
            width: b.width + 2 * offset,
            height: b.height + 2 * offset
        };
        if (refPoint.x >= bounds.x && bounds.x + bounds.width >= refPoint.x) {
            if (refPoint.y < bounds.y + 0.5 * bounds.height)
                return { x: refPoint.x, y: bounds.y };
            else
                return { x: refPoint.x, y: bounds.y + bounds.height };
        }
        if (refPoint.y >= bounds.y && bounds.y + bounds.height >= refPoint.y) {
            if (refPoint.x < bounds.x + 0.5 * bounds.width)
                return { x: bounds.x, y: refPoint.y };
            else
                return { x: bounds.x + bounds.width, y: refPoint.y };
        }
        return geometry_1.Bounds.center(bounds);
    }
};
ManhattanRectangularAnchor.KIND = manhattan_edge_router_1.ManhattanEdgeRouter.KIND + ':' + anchor_1.RECTANGULAR_ANCHOR_KIND;
ManhattanRectangularAnchor = ManhattanRectangularAnchor_1 = __decorate([
    (0, inversify_1.injectable)()
], ManhattanRectangularAnchor);
exports.ManhattanRectangularAnchor = ManhattanRectangularAnchor;
let ManhattanDiamondAnchor = ManhattanDiamondAnchor_1 = class ManhattanDiamondAnchor {
    get kind() {
        return ManhattanDiamondAnchor_1.KIND;
    }
    getAnchor(connectable, refPoint, offset = 0) {
        const b = connectable.bounds;
        if (b.width <= 0 || b.height <= 0) {
            return b;
        }
        const bounds = {
            x: b.x - offset,
            y: b.y - offset,
            width: b.width + 2 * offset,
            height: b.height + 2 * offset
        };
        const c = geometry_1.Bounds.center(bounds);
        let outline = undefined;
        let refLine = undefined;
        if (refPoint.x >= bounds.x && refPoint.x <= bounds.x + bounds.width) {
            if (bounds.x + 0.5 * bounds.width >= refPoint.x) {
                refLine = new geometry_2.PointToPointLine(refPoint, { x: refPoint.x, y: c.y });
                if (refPoint.y < c.y)
                    outline = new geometry_2.PointToPointLine({ x: bounds.x, y: c.y }, { x: c.x, y: bounds.y });
                else
                    outline = new geometry_2.PointToPointLine({ x: bounds.x, y: c.y }, { x: c.x, y: bounds.y + bounds.height });
            }
            else {
                refLine = new geometry_2.PointToPointLine(refPoint, { x: refPoint.x, y: c.y });
                if (refPoint.y < c.y)
                    outline = new geometry_2.PointToPointLine({ x: bounds.x + bounds.width, y: c.y }, { x: c.x, y: bounds.y });
                else
                    outline = new geometry_2.PointToPointLine({ x: bounds.x + bounds.width, y: c.y }, { x: c.x, y: bounds.y + bounds.height });
            }
        }
        else if (refPoint.y >= bounds.y && refPoint.y <= bounds.y + bounds.height) {
            if (bounds.y + 0.5 * bounds.height >= refPoint.y) {
                refLine = new geometry_2.PointToPointLine(refPoint, { x: c.x, y: refPoint.y });
                if (refPoint.x < c.x)
                    outline = new geometry_2.PointToPointLine({ x: bounds.x, y: c.y }, { x: c.x, y: bounds.y });
                else
                    outline = new geometry_2.PointToPointLine({ x: bounds.x + bounds.width, y: c.y }, { x: c.x, y: bounds.y });
            }
            else {
                refLine = new geometry_2.PointToPointLine(refPoint, { x: c.x, y: refPoint.y });
                if (refPoint.x < c.x)
                    outline = new geometry_2.PointToPointLine({ x: bounds.x, y: c.y }, { x: c.x, y: bounds.y + bounds.height });
                else
                    outline = new geometry_2.PointToPointLine({ x: bounds.x + bounds.width, y: c.y }, { x: c.x, y: bounds.y + bounds.height });
            }
        }
        if (!!refLine && !!outline)
            return (0, geometry_2.intersection)(outline, refLine);
        else
            return c;
    }
};
ManhattanDiamondAnchor.KIND = manhattan_edge_router_1.ManhattanEdgeRouter.KIND + ':' + anchor_1.DIAMOND_ANCHOR_KIND;
ManhattanDiamondAnchor = ManhattanDiamondAnchor_1 = __decorate([
    (0, inversify_1.injectable)()
], ManhattanDiamondAnchor);
exports.ManhattanDiamondAnchor = ManhattanDiamondAnchor;
let ManhattanEllipticAnchor = ManhattanEllipticAnchor_1 = class ManhattanEllipticAnchor {
    get kind() {
        return ManhattanEllipticAnchor_1.KIND;
    }
    getAnchor(connectable, refPoint, offset = 0) {
        const b = connectable.bounds;
        if (b.width <= 0 || b.height <= 0) {
            return b;
        }
        const bounds = {
            x: b.x - offset,
            y: b.y - offset,
            width: b.width + 2 * offset,
            height: b.height + 2 * offset
        };
        const c = geometry_1.Bounds.center(bounds);
        const refRelative = geometry_1.Point.subtract(refPoint, c);
        let x = c.x;
        let y = c.y;
        if (refPoint.x >= bounds.x && bounds.x + bounds.width >= refPoint.x) {
            x += refRelative.x;
            const dy = 0.5 * bounds.height * Math.sqrt(1 - (refRelative.x * refRelative.x) / (0.25 * bounds.width * bounds.width));
            if (refRelative.y < 0)
                y -= dy;
            else
                y += dy;
        }
        else if (refPoint.y >= bounds.y && bounds.y + bounds.height >= refPoint.y) {
            y += refRelative.y;
            const dx = 0.5 * bounds.width * Math.sqrt(1 - (refRelative.y * refRelative.y) / (0.25 * bounds.height * bounds.height));
            if (refRelative.x < 0)
                x -= dx;
            else
                x += dx;
        }
        return { x, y };
    }
};
ManhattanEllipticAnchor.KIND = manhattan_edge_router_1.ManhattanEdgeRouter.KIND + ':' + anchor_1.ELLIPTIC_ANCHOR_KIND;
ManhattanEllipticAnchor = ManhattanEllipticAnchor_1 = __decorate([
    (0, inversify_1.injectable)()
], ManhattanEllipticAnchor);
exports.ManhattanEllipticAnchor = ManhattanEllipticAnchor;


/***/ }),

/***/ "../../node_modules/sprotty/lib/features/routing/manhattan-edge-router.js":
/*!********************************************************************************!*\
  !*** ../../node_modules/sprotty/lib/features/routing/manhattan-edge-router.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2019-2020 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ManhattanEdgeRouter = void 0;
const geometry_1 = __webpack_require__(/*! sprotty-protocol/lib/utils/geometry */ "../../node_modules/sprotty-protocol/lib/utils/geometry.js");
const smodel_utils_1 = __webpack_require__(/*! ../../base/model/smodel-utils */ "../../node_modules/sprotty/lib/base/model/smodel-utils.js");
const abstract_edge_router_1 = __webpack_require__(/*! ./abstract-edge-router */ "../../node_modules/sprotty/lib/features/routing/abstract-edge-router.js");
const model_1 = __webpack_require__(/*! ./model */ "../../node_modules/sprotty/lib/features/routing/model.js");
class ManhattanEdgeRouter extends abstract_edge_router_1.AbstractEdgeRouter {
    get kind() {
        return ManhattanEdgeRouter.KIND;
    }
    getOptions(edge) {
        return {
            standardDistance: 20,
            minimalPointDistance: 3,
            selfEdgeOffset: 0.25
        };
    }
    route(edge) {
        if (!edge.source || !edge.target)
            return [];
        const routedCorners = this.createRoutedCorners(edge);
        const sourceRefPoint = routedCorners[0]
            || (0, smodel_utils_1.translatePoint)(geometry_1.Bounds.center(edge.target.bounds), edge.target.parent, edge.parent);
        const sourceAnchor = this.getTranslatedAnchor(edge.source, sourceRefPoint, edge.parent, edge, edge.sourceAnchorCorrection);
        const targetRefPoint = routedCorners[routedCorners.length - 1]
            || (0, smodel_utils_1.translatePoint)(geometry_1.Bounds.center(edge.source.bounds), edge.source.parent, edge.parent);
        const targetAnchor = this.getTranslatedAnchor(edge.target, targetRefPoint, edge.parent, edge, edge.targetAnchorCorrection);
        if (!sourceAnchor || !targetAnchor)
            return [];
        const routedPoints = [];
        routedPoints.push(Object.assign({ kind: 'source' }, sourceAnchor));
        routedCorners.forEach(corner => routedPoints.push(corner));
        routedPoints.push(Object.assign({ kind: 'target' }, targetAnchor));
        return routedPoints;
    }
    createRoutedCorners(edge) {
        const sourceAnchors = new abstract_edge_router_1.DefaultAnchors(edge.source, edge.parent, 'source');
        const targetAnchors = new abstract_edge_router_1.DefaultAnchors(edge.target, edge.parent, 'target');
        if (edge.routingPoints.length > 0) {
            const routingPointsCopy = edge.routingPoints.slice();
            this.cleanupRoutingPoints(edge, routingPointsCopy, false, true);
            if (routingPointsCopy.length > 0)
                return routingPointsCopy.map((routingPoint, index) => {
                    return Object.assign({ kind: 'linear', pointIndex: index }, routingPoint);
                });
        }
        const options = this.getOptions(edge);
        const corners = this.calculateDefaultCorners(edge, sourceAnchors, targetAnchors, options);
        return corners.map(corner => {
            return Object.assign({ kind: 'linear' }, corner);
        });
    }
    createRoutingHandles(edge) {
        const routedPoints = this.route(edge);
        this.commitRoute(edge, routedPoints);
        if (routedPoints.length > 0) {
            this.addHandle(edge, 'source', 'routing-point', -2);
            for (let i = 0; i < routedPoints.length - 1; ++i)
                this.addHandle(edge, 'manhattan-50%', 'volatile-routing-point', i - 1);
            this.addHandle(edge, 'target', 'routing-point', routedPoints.length - 2);
        }
    }
    getInnerHandlePosition(edge, route, handle) {
        const fraction = this.getFraction(handle.kind);
        if (fraction !== undefined) {
            const { start, end } = this.findRouteSegment(edge, route, handle.pointIndex);
            if (start !== undefined && end !== undefined)
                return geometry_1.Point.linear(start, end, fraction);
        }
        return undefined;
    }
    getFraction(kind) {
        switch (kind) {
            case 'manhattan-50%': return 0.5;
            default: return undefined;
        }
    }
    applyInnerHandleMoves(edge, moves) {
        const route = this.route(edge);
        const routingPoints = edge.routingPoints;
        const minimalPointDistance = this.getOptions(edge).minimalPointDistance;
        moves.forEach(move => {
            const handle = move.handle;
            const index = handle.pointIndex;
            const correctedX = this.correctX(routingPoints, index, move.toPosition.x, minimalPointDistance);
            const correctedY = this.correctY(routingPoints, index, move.toPosition.y, minimalPointDistance);
            switch (handle.kind) {
                case 'manhattan-50%':
                    if (index < 0) {
                        if (routingPoints.length === 0) {
                            routingPoints.push({ x: correctedX, y: correctedY });
                            handle.pointIndex = 0;
                        }
                        else if ((0, geometry_1.almostEquals)(route[0].x, route[1].x)) {
                            this.alignX(routingPoints, 0, correctedX);
                        }
                        else {
                            this.alignY(routingPoints, 0, correctedY);
                        }
                    }
                    else if (index < routingPoints.length - 1) {
                        if ((0, geometry_1.almostEquals)(routingPoints[index].x, routingPoints[index + 1].x)) {
                            this.alignX(routingPoints, index, correctedX);
                            this.alignX(routingPoints, index + 1, correctedX);
                        }
                        else {
                            this.alignY(routingPoints, index, correctedY);
                            this.alignY(routingPoints, index + 1, correctedY);
                        }
                    }
                    else {
                        if ((0, geometry_1.almostEquals)(route[route.length - 2].x, route[route.length - 1].x)) {
                            this.alignX(routingPoints, routingPoints.length - 1, correctedX);
                        }
                        else {
                            this.alignY(routingPoints, routingPoints.length - 1, correctedY);
                        }
                    }
                    break;
            }
        });
    }
    correctX(routingPoints, index, x, minimalPointDistance) {
        if (index > 0 && Math.abs(x - routingPoints[index - 1].x) < minimalPointDistance)
            return routingPoints[index - 1].x;
        else if (index < routingPoints.length - 2 && Math.abs(x - routingPoints[index + 2].x) < minimalPointDistance)
            return routingPoints[index + 2].x;
        else
            return x;
    }
    alignX(routingPoints, index, x) {
        if (index >= 0 && index < routingPoints.length)
            routingPoints[index] = {
                x,
                y: routingPoints[index].y
            };
    }
    correctY(routingPoints, index, y, minimalPointDistance) {
        if (index > 0 && Math.abs(y - routingPoints[index - 1].y) < minimalPointDistance)
            return routingPoints[index - 1].y;
        else if (index < routingPoints.length - 2 && Math.abs(y - routingPoints[index + 2].y) < minimalPointDistance)
            return routingPoints[index + 2].y;
        else
            return y;
    }
    alignY(routingPoints, index, y) {
        if (index >= 0 && index < routingPoints.length)
            routingPoints[index] = {
                x: routingPoints[index].x,
                y
            };
    }
    cleanupRoutingPoints(edge, routingPoints, updateHandles, addRoutingPoints) {
        const sourceAnchors = new abstract_edge_router_1.DefaultAnchors(edge.source, edge.parent, "source");
        const targetAnchors = new abstract_edge_router_1.DefaultAnchors(edge.target, edge.parent, "target");
        if (this.resetRoutingPointsOnReconnect(edge, routingPoints, updateHandles, sourceAnchors, targetAnchors))
            return;
        // delete leading RPs inside the bounds of the source
        for (let i = 0; i < routingPoints.length; ++i)
            if (geometry_1.Bounds.includes(sourceAnchors.bounds, routingPoints[i])) {
                routingPoints.splice(0, 1);
                if (updateHandles) {
                    this.removeHandle(edge, -1);
                }
            }
            else {
                break;
            }
        // delete trailing RPs inside the bounds of the target
        for (let i = routingPoints.length - 1; i >= 0; --i)
            if (geometry_1.Bounds.includes(targetAnchors.bounds, routingPoints[i])) {
                routingPoints.splice(i, 1);
                if (updateHandles) {
                    this.removeHandle(edge, i);
                }
            }
            else {
                break;
            }
        if (routingPoints.length >= 2) {
            const options = this.getOptions(edge);
            for (let i = routingPoints.length - 2; i >= 0; --i) {
                if (geometry_1.Point.manhattanDistance(routingPoints[i], routingPoints[i + 1]) < options.minimalPointDistance) {
                    routingPoints.splice(i, 2);
                    --i;
                    if (updateHandles) {
                        this.removeHandle(edge, i - 1);
                        this.removeHandle(edge, i);
                    }
                }
            }
        }
        if (addRoutingPoints) {
            this.addAdditionalCorner(edge, routingPoints, sourceAnchors, targetAnchors, updateHandles);
            this.addAdditionalCorner(edge, routingPoints, targetAnchors, sourceAnchors, updateHandles);
            this.manhattanify(edge, routingPoints);
        }
    }
    removeHandle(edge, pointIndex) {
        const toBeRemoved = [];
        edge.children.forEach(child => {
            if (child instanceof model_1.SRoutingHandleImpl) {
                if (child.pointIndex > pointIndex)
                    --child.pointIndex;
                else if (child.pointIndex === pointIndex)
                    toBeRemoved.push(child);
            }
        });
        toBeRemoved.forEach(child => edge.remove(child));
    }
    addAdditionalCorner(edge, routingPoints, currentAnchors, otherAnchors, updateHandles) {
        if (routingPoints.length === 0)
            return;
        const refPoint = currentAnchors.kind === 'source' ? routingPoints[0] : routingPoints[routingPoints.length - 1];
        const index = currentAnchors.kind === 'source' ? 0 : routingPoints.length;
        const shiftIndex = index - (currentAnchors.kind === 'source' ? 1 : 0);
        let isHorizontal;
        if (routingPoints.length > 1) {
            isHorizontal = index === 0
                ? (0, geometry_1.almostEquals)(routingPoints[0].x, routingPoints[1].x)
                : (0, geometry_1.almostEquals)(routingPoints[routingPoints.length - 1].x, routingPoints[routingPoints.length - 2].x);
        }
        else {
            const nearestSide = otherAnchors.getNearestSide(refPoint);
            isHorizontal = nearestSide === abstract_edge_router_1.Side.TOP || nearestSide === abstract_edge_router_1.Side.BOTTOM;
        }
        if (isHorizontal) {
            if (refPoint.y < currentAnchors.get(abstract_edge_router_1.Side.TOP).y || refPoint.y > currentAnchors.get(abstract_edge_router_1.Side.BOTTOM).y) {
                const newPoint = { x: currentAnchors.get(abstract_edge_router_1.Side.TOP).x, y: refPoint.y };
                routingPoints.splice(index, 0, newPoint);
                if (updateHandles) {
                    edge.children.forEach(child => {
                        if (child instanceof model_1.SRoutingHandleImpl && child.pointIndex >= shiftIndex)
                            ++child.pointIndex;
                    });
                    this.addHandle(edge, 'manhattan-50%', 'volatile-routing-point', shiftIndex);
                }
            }
        }
        else {
            if (refPoint.x < currentAnchors.get(abstract_edge_router_1.Side.LEFT).x || refPoint.x > currentAnchors.get(abstract_edge_router_1.Side.RIGHT).x) {
                const newPoint = { x: refPoint.x, y: currentAnchors.get(abstract_edge_router_1.Side.LEFT).y };
                routingPoints.splice(index, 0, newPoint);
                if (updateHandles) {
                    edge.children.forEach(child => {
                        if (child instanceof model_1.SRoutingHandleImpl && child.pointIndex >= shiftIndex)
                            ++child.pointIndex;
                    });
                    this.addHandle(edge, 'manhattan-50%', 'volatile-routing-point', shiftIndex);
                }
            }
        }
    }
    /**
     * Add artificial routing points to keep all angles rectilinear.
     *
     * This makes edge morphing look a lot smoother, where RP positions are interpolated
     * linearly probably resulting in non-rectilinear angles. We don't add handles for
     * these additional RPs.
     */
    manhattanify(edge, routingPoints) {
        for (let i = 1; i < routingPoints.length; ++i) {
            const isVertical = Math.abs(routingPoints[i - 1].x - routingPoints[i].x) < 1;
            const isHorizontal = Math.abs(routingPoints[i - 1].y - routingPoints[i].y) < 1;
            if (!isVertical && !isHorizontal) {
                routingPoints.splice(i, 0, {
                    x: routingPoints[i - 1].x,
                    y: routingPoints[i].y
                });
                ++i;
            }
        }
    }
    calculateDefaultCorners(edge, sourceAnchors, targetAnchors, options) {
        const selfEdge = super.calculateDefaultCorners(edge, sourceAnchors, targetAnchors, options);
        if (selfEdge.length > 0)
            return selfEdge;
        const bestAnchors = this.getBestConnectionAnchors(edge, sourceAnchors, targetAnchors, options);
        const sourceSide = bestAnchors.source;
        const targetSide = bestAnchors.target;
        const corners = [];
        const startPoint = sourceAnchors.get(sourceSide);
        let endPoint = targetAnchors.get(targetSide);
        switch (sourceSide) {
            case abstract_edge_router_1.Side.RIGHT:
                switch (targetSide) {
                    case abstract_edge_router_1.Side.BOTTOM:
                        corners.push({ x: endPoint.x, y: startPoint.y });
                        break;
                    case abstract_edge_router_1.Side.TOP:
                        corners.push({ x: endPoint.x, y: startPoint.y });
                        break;
                    case abstract_edge_router_1.Side.RIGHT:
                        corners.push({ x: Math.max(startPoint.x, endPoint.x) + 1.5 * options.standardDistance, y: startPoint.y });
                        corners.push({ x: Math.max(startPoint.x, endPoint.x) + 1.5 * options.standardDistance, y: endPoint.y });
                        break;
                    case abstract_edge_router_1.Side.LEFT:
                        if (endPoint.y !== startPoint.y) {
                            corners.push({ x: (startPoint.x + endPoint.x) / 2, y: startPoint.y });
                            corners.push({ x: (startPoint.x + endPoint.x) / 2, y: endPoint.y });
                        }
                        break;
                }
                break;
            case abstract_edge_router_1.Side.LEFT:
                switch (targetSide) {
                    case abstract_edge_router_1.Side.BOTTOM:
                        corners.push({ x: endPoint.x, y: startPoint.y });
                        break;
                    case abstract_edge_router_1.Side.TOP:
                        corners.push({ x: endPoint.x, y: startPoint.y });
                        break;
                    default:
                        endPoint = targetAnchors.get(abstract_edge_router_1.Side.RIGHT);
                        if (endPoint.y !== startPoint.y) {
                            corners.push({ x: (startPoint.x + endPoint.x) / 2, y: startPoint.y });
                            corners.push({ x: (startPoint.x + endPoint.x) / 2, y: endPoint.y });
                        }
                        break;
                }
                break;
            case abstract_edge_router_1.Side.TOP:
                switch (targetSide) {
                    case abstract_edge_router_1.Side.RIGHT:
                        if ((endPoint.x - startPoint.x) > 0) {
                            corners.push({ x: startPoint.x, y: startPoint.y - options.standardDistance });
                            corners.push({ x: endPoint.x + 1.5 * options.standardDistance, y: startPoint.y - options.standardDistance });
                            corners.push({ x: endPoint.x + 1.5 * options.standardDistance, y: endPoint.y });
                        }
                        else {
                            corners.push({ x: startPoint.x, y: endPoint.y });
                        }
                        break;
                    case abstract_edge_router_1.Side.LEFT:
                        if ((endPoint.x - startPoint.x) < 0) {
                            corners.push({ x: startPoint.x, y: startPoint.y - options.standardDistance });
                            corners.push({ x: endPoint.x - 1.5 * options.standardDistance, y: startPoint.y - options.standardDistance });
                            corners.push({ x: endPoint.x - 1.5 * options.standardDistance, y: endPoint.y });
                        }
                        else {
                            corners.push({ x: startPoint.x, y: endPoint.y });
                        }
                        break;
                    case abstract_edge_router_1.Side.TOP:
                        corners.push({ x: startPoint.x, y: Math.min(startPoint.y, endPoint.y) - 1.5 * options.standardDistance });
                        corners.push({ x: endPoint.x, y: Math.min(startPoint.y, endPoint.y) - 1.5 * options.standardDistance });
                        break;
                    case abstract_edge_router_1.Side.BOTTOM:
                        if (endPoint.x !== startPoint.x) {
                            corners.push({ x: startPoint.x, y: (startPoint.y + endPoint.y) / 2 });
                            corners.push({ x: endPoint.x, y: (startPoint.y + endPoint.y) / 2 });
                        }
                        break;
                }
                break;
            case abstract_edge_router_1.Side.BOTTOM:
                switch (targetSide) {
                    case abstract_edge_router_1.Side.RIGHT:
                        if ((endPoint.x - startPoint.x) > 0) {
                            corners.push({ x: startPoint.x, y: startPoint.y + options.standardDistance });
                            corners.push({ x: endPoint.x + 1.5 * options.standardDistance, y: startPoint.y + options.standardDistance });
                            corners.push({ x: endPoint.x + 1.5 * options.standardDistance, y: endPoint.y });
                        }
                        else {
                            corners.push({ x: startPoint.x, y: endPoint.y });
                        }
                        break;
                    case abstract_edge_router_1.Side.LEFT:
                        if ((endPoint.x - startPoint.x) < 0) {
                            corners.push({ x: startPoint.x, y: startPoint.y + options.standardDistance });
                            corners.push({ x: endPoint.x - 1.5 * options.standardDistance, y: startPoint.y + options.standardDistance });
                            corners.push({ x: endPoint.x - 1.5 * options.standardDistance, y: endPoint.y });
                        }
                        else {
                            corners.push({ x: startPoint.x, y: endPoint.y });
                        }
                        break;
                    default:
                        endPoint = targetAnchors.get(abstract_edge_router_1.Side.TOP);
                        if (endPoint.x !== startPoint.x) {
                            corners.push({ x: startPoint.x, y: (startPoint.y + endPoint.y) / 2 });
                            corners.push({ x: endPoint.x, y: (startPoint.y + endPoint.y) / 2 });
                        }
                        break;
                }
                break;
        }
        return corners;
    }
    getBestConnectionAnchors(edge, sourceAnchors, targetAnchors, options) {
        // distance is enough
        let sourcePoint = sourceAnchors.get(abstract_edge_router_1.Side.RIGHT);
        let targetPoint = targetAnchors.get(abstract_edge_router_1.Side.LEFT);
        if ((targetPoint.x - sourcePoint.x) > options.standardDistance)
            return { source: abstract_edge_router_1.Side.RIGHT, target: abstract_edge_router_1.Side.LEFT };
        sourcePoint = sourceAnchors.get(abstract_edge_router_1.Side.LEFT);
        targetPoint = targetAnchors.get(abstract_edge_router_1.Side.RIGHT);
        if ((sourcePoint.x - targetPoint.x) > options.standardDistance)
            return { source: abstract_edge_router_1.Side.LEFT, target: abstract_edge_router_1.Side.RIGHT };
        sourcePoint = sourceAnchors.get(abstract_edge_router_1.Side.TOP);
        targetPoint = targetAnchors.get(abstract_edge_router_1.Side.BOTTOM);
        if ((sourcePoint.y - targetPoint.y) > options.standardDistance)
            return { source: abstract_edge_router_1.Side.TOP, target: abstract_edge_router_1.Side.BOTTOM };
        sourcePoint = sourceAnchors.get(abstract_edge_router_1.Side.BOTTOM);
        targetPoint = targetAnchors.get(abstract_edge_router_1.Side.TOP);
        if ((targetPoint.y - sourcePoint.y) > options.standardDistance)
            return { source: abstract_edge_router_1.Side.BOTTOM, target: abstract_edge_router_1.Side.TOP };
        // One additional point
        sourcePoint = sourceAnchors.get(abstract_edge_router_1.Side.RIGHT);
        targetPoint = targetAnchors.get(abstract_edge_router_1.Side.TOP);
        if (((targetPoint.x - sourcePoint.x) > 0.5 * options.standardDistance) && ((targetPoint.y - sourcePoint.y) > options.standardDistance))
            return { source: abstract_edge_router_1.Side.RIGHT, target: abstract_edge_router_1.Side.TOP };
        targetPoint = targetAnchors.get(abstract_edge_router_1.Side.BOTTOM);
        if (((targetPoint.x - sourcePoint.x) > 0.5 * options.standardDistance) && ((sourcePoint.y - targetPoint.y) > options.standardDistance))
            return { source: abstract_edge_router_1.Side.RIGHT, target: abstract_edge_router_1.Side.BOTTOM };
        sourcePoint = sourceAnchors.get(abstract_edge_router_1.Side.LEFT);
        targetPoint = targetAnchors.get(abstract_edge_router_1.Side.BOTTOM);
        if (((sourcePoint.x - targetPoint.x) > 0.5 * options.standardDistance) && ((sourcePoint.y - targetPoint.y) > options.standardDistance))
            return { source: abstract_edge_router_1.Side.LEFT, target: abstract_edge_router_1.Side.BOTTOM };
        targetPoint = targetAnchors.get(abstract_edge_router_1.Side.TOP);
        if (((sourcePoint.x - targetPoint.x) > 0.5 * options.standardDistance) && ((targetPoint.y - sourcePoint.y) > options.standardDistance))
            return { source: abstract_edge_router_1.Side.LEFT, target: abstract_edge_router_1.Side.TOP };
        sourcePoint = sourceAnchors.get(abstract_edge_router_1.Side.TOP);
        targetPoint = targetAnchors.get(abstract_edge_router_1.Side.RIGHT);
        if (((sourcePoint.y - targetPoint.y) > 0.5 * options.standardDistance) && ((sourcePoint.x - targetPoint.x) > options.standardDistance))
            return { source: abstract_edge_router_1.Side.TOP, target: abstract_edge_router_1.Side.RIGHT };
        targetPoint = targetAnchors.get(abstract_edge_router_1.Side.LEFT);
        if (((sourcePoint.y - targetPoint.y) > 0.5 * options.standardDistance) && ((targetPoint.x - sourcePoint.x) > options.standardDistance))
            return { source: abstract_edge_router_1.Side.TOP, target: abstract_edge_router_1.Side.LEFT };
        sourcePoint = sourceAnchors.get(abstract_edge_router_1.Side.BOTTOM);
        targetPoint = targetAnchors.get(abstract_edge_router_1.Side.RIGHT);
        if (((targetPoint.y - sourcePoint.y) > 0.5 * options.standardDistance) && ((sourcePoint.x - targetPoint.x) > options.standardDistance))
            return { source: abstract_edge_router_1.Side.BOTTOM, target: abstract_edge_router_1.Side.RIGHT };
        targetPoint = targetAnchors.get(abstract_edge_router_1.Side.LEFT);
        if (((targetPoint.y - sourcePoint.y) > 0.5 * options.standardDistance) && ((targetPoint.x - sourcePoint.x) > options.standardDistance))
            return { source: abstract_edge_router_1.Side.BOTTOM, target: abstract_edge_router_1.Side.LEFT };
        // Two points
        // priority NN >> EE >> NE >> NW >> SE >> SW
        sourcePoint = sourceAnchors.get(abstract_edge_router_1.Side.TOP);
        targetPoint = targetAnchors.get(abstract_edge_router_1.Side.TOP);
        if (!geometry_1.Bounds.includes(targetAnchors.bounds, sourcePoint) && !geometry_1.Bounds.includes(sourceAnchors.bounds, targetPoint)) {
            if ((sourcePoint.y - targetPoint.y) < 0) {
                if (Math.abs(sourcePoint.x - targetPoint.x) > ((sourceAnchors.bounds.width + options.standardDistance) / 2))
                    return { source: abstract_edge_router_1.Side.TOP, target: abstract_edge_router_1.Side.TOP };
            }
            else {
                if (Math.abs(sourcePoint.x - targetPoint.x) > (targetAnchors.bounds.width / 2))
                    return { source: abstract_edge_router_1.Side.TOP, target: abstract_edge_router_1.Side.TOP };
            }
        }
        sourcePoint = sourceAnchors.get(abstract_edge_router_1.Side.RIGHT);
        targetPoint = targetAnchors.get(abstract_edge_router_1.Side.RIGHT);
        if (!geometry_1.Bounds.includes(targetAnchors.bounds, sourcePoint) && !geometry_1.Bounds.includes(sourceAnchors.bounds, targetPoint)) {
            if ((sourcePoint.x - targetPoint.x) > 0) {
                if (Math.abs(sourcePoint.y - targetPoint.y) > ((sourceAnchors.bounds.height + options.standardDistance) / 2))
                    return { source: abstract_edge_router_1.Side.RIGHT, target: abstract_edge_router_1.Side.RIGHT };
            }
            else if (Math.abs(sourcePoint.y - targetPoint.y) > (targetAnchors.bounds.height / 2))
                return { source: abstract_edge_router_1.Side.RIGHT, target: abstract_edge_router_1.Side.RIGHT };
        }
        // Secondly, judge NE NW is available
        sourcePoint = sourceAnchors.get(abstract_edge_router_1.Side.TOP);
        targetPoint = targetAnchors.get(abstract_edge_router_1.Side.RIGHT);
        if (!geometry_1.Bounds.includes(targetAnchors.bounds, sourcePoint) && !geometry_1.Bounds.includes(sourceAnchors.bounds, targetPoint))
            return { source: abstract_edge_router_1.Side.TOP, target: abstract_edge_router_1.Side.RIGHT };
        targetPoint = targetAnchors.get(abstract_edge_router_1.Side.LEFT);
        if (!geometry_1.Bounds.includes(targetAnchors.bounds, sourcePoint) && !geometry_1.Bounds.includes(sourceAnchors.bounds, targetPoint))
            return { source: abstract_edge_router_1.Side.TOP, target: abstract_edge_router_1.Side.LEFT };
        // Finally, judge SE SW is available
        sourcePoint = sourceAnchors.get(abstract_edge_router_1.Side.BOTTOM);
        targetPoint = targetAnchors.get(abstract_edge_router_1.Side.RIGHT);
        if (!geometry_1.Bounds.includes(targetAnchors.bounds, sourcePoint) && !geometry_1.Bounds.includes(sourceAnchors.bounds, targetPoint))
            return { source: abstract_edge_router_1.Side.BOTTOM, target: abstract_edge_router_1.Side.RIGHT };
        targetPoint = targetAnchors.get(abstract_edge_router_1.Side.LEFT);
        if (!geometry_1.Bounds.includes(targetAnchors.bounds, sourcePoint) && !geometry_1.Bounds.includes(sourceAnchors.bounds, targetPoint))
            return { source: abstract_edge_router_1.Side.BOTTOM, target: abstract_edge_router_1.Side.LEFT };
        // Only to return to the
        return { source: abstract_edge_router_1.Side.RIGHT, target: abstract_edge_router_1.Side.BOTTOM };
    }
}
ManhattanEdgeRouter.KIND = 'manhattan';
exports.ManhattanEdgeRouter = ManhattanEdgeRouter;


/***/ }),

/***/ "../../node_modules/sprotty/lib/features/routing/model.js":
/*!****************************************************************!*\
  !*** ../../node_modules/sprotty/lib/features/routing/model.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SDanglingAnchor = exports.SRoutingHandle = exports.SConnectableElement = exports.SRoutableElement = exports.edgeInProgressTargetHandleID = exports.edgeInProgressID = exports.SDanglingAnchorImpl = exports.SRoutingHandleImpl = exports.SConnectableElementImpl = exports.getRouteBounds = exports.getAbsoluteRouteBounds = exports.isConnectable = exports.connectableFeature = exports.SRoutableElementImpl = void 0;
const geometry_1 = __webpack_require__(/*! sprotty-protocol/lib/utils/geometry */ "../../node_modules/sprotty-protocol/lib/utils/geometry.js");
const smodel_1 = __webpack_require__(/*! ../../base/model/smodel */ "../../node_modules/sprotty/lib/base/model/smodel.js");
const model_1 = __webpack_require__(/*! ../bounds/model */ "../../node_modules/sprotty/lib/features/bounds/model.js");
const delete_1 = __webpack_require__(/*! ../edit/delete */ "../../node_modules/sprotty/lib/features/edit/delete.js");
const model_2 = __webpack_require__(/*! ../select/model */ "../../node_modules/sprotty/lib/features/select/model.js");
const model_3 = __webpack_require__(/*! ../hover/model */ "../../node_modules/sprotty/lib/features/hover/model.js");
const model_4 = __webpack_require__(/*! ../move/model */ "../../node_modules/sprotty/lib/features/move/model.js");
class SRoutableElementImpl extends smodel_1.SChildElementImpl {
    constructor() {
        super(...arguments);
        this.routingPoints = [];
    }
    get source() {
        return this.index.getById(this.sourceId);
    }
    get target() {
        return this.index.getById(this.targetId);
    }
    get bounds() {
        // this should also work for splines, which have the convex hull property
        return this.routingPoints.reduce((bounds, routingPoint) => geometry_1.Bounds.combine(bounds, {
            x: routingPoint.x,
            y: routingPoint.y,
            width: 0,
            height: 0
        }), geometry_1.Bounds.EMPTY);
    }
}
exports.SRoutableElementImpl = SRoutableElementImpl;
exports.connectableFeature = Symbol('connectableFeature');
function isConnectable(element) {
    return element.hasFeature(exports.connectableFeature) && element.canConnect;
}
exports.isConnectable = isConnectable;
function getAbsoluteRouteBounds(model, route = model.routingPoints) {
    let bounds = getRouteBounds(route);
    let current = model;
    while (current instanceof smodel_1.SChildElementImpl) {
        const parent = current.parent;
        bounds = parent.localToParent(bounds);
        current = parent;
    }
    return bounds;
}
exports.getAbsoluteRouteBounds = getAbsoluteRouteBounds;
function getRouteBounds(route) {
    const bounds = { x: NaN, y: NaN, width: 0, height: 0 };
    for (const point of route) {
        if (isNaN(bounds.x)) {
            bounds.x = point.x;
            bounds.y = point.y;
        }
        else {
            if (point.x < bounds.x) {
                bounds.width += bounds.x - point.x;
                bounds.x = point.x;
            }
            else if (point.x > bounds.x + bounds.width) {
                bounds.width = point.x - bounds.x;
            }
            if (point.y < bounds.y) {
                bounds.height += bounds.y - point.y;
                bounds.y = point.y;
            }
            else if (point.y > bounds.y + bounds.height) {
                bounds.height = point.y - bounds.y;
            }
        }
    }
    return bounds;
}
exports.getRouteBounds = getRouteBounds;
/**
 * A connectable element is one that can have outgoing and incoming edges, i.e. it can be the source
 * or target element of an edge. There are two kinds of connectable elements: nodes (`SNode`) and
 * ports (`SPort`). A node represents a main entity, while a port is a connection point inside a node.
 */
class SConnectableElementImpl extends model_1.SShapeElementImpl {
    constructor() {
        super(...arguments);
        this.strokeWidth = 0;
    }
    get anchorKind() {
        return undefined;
    }
    /**
     * The incoming edges of this connectable element. They are resolved by the index, which must
     * be an `SGraphIndex` for efficient lookup.
     */
    get incomingEdges() {
        const allEdges = this.index.all().filter(e => e instanceof SRoutableElementImpl);
        return allEdges.filter(e => e.targetId === this.id);
    }
    /**
     * The outgoing edges of this connectable element. They are resolved by the index, which must
     * be an `SGraphIndex` for efficient lookup.
     */
    get outgoingEdges() {
        const allEdges = this.index.all().filter(e => e instanceof SRoutableElementImpl);
        return allEdges.filter(e => e.sourceId === this.id);
    }
    canConnect(routable, role) {
        return true;
    }
}
exports.SConnectableElementImpl = SConnectableElementImpl;
class SRoutingHandleImpl extends smodel_1.SChildElementImpl {
    constructor() {
        super(...arguments);
        /** Whether the routing point is being dragged. */
        this.editMode = false;
        this.hoverFeedback = false;
        this.selected = false;
    }
    /**
     * SRoutingHandles are created using the constructor, so we hard-wire the
     * default features
     */
    hasFeature(feature) {
        return SRoutingHandleImpl.DEFAULT_FEATURES.indexOf(feature) !== -1;
    }
}
SRoutingHandleImpl.DEFAULT_FEATURES = [model_2.selectFeature, model_4.moveFeature, model_3.hoverFeedbackFeature];
exports.SRoutingHandleImpl = SRoutingHandleImpl;
class SDanglingAnchorImpl extends SConnectableElementImpl {
    constructor() {
        super();
        this.type = 'dangling-anchor';
        this.size = { width: 0, height: 0 };
    }
}
SDanglingAnchorImpl.DEFAULT_FEATURES = [delete_1.deletableFeature];
exports.SDanglingAnchorImpl = SDanglingAnchorImpl;
exports.edgeInProgressID = 'edge-in-progress';
exports.edgeInProgressTargetHandleID = exports.edgeInProgressID + '-target-anchor';
// Compatibility deprecation layer (will be removed with the graduation 1.0.0 release)
/** @deprecated Use `SRoutableElementImpl` instead. */
exports.SRoutableElement = SRoutableElementImpl;
/** @deprecated Use `SConnectableElementImpl` instead. */
exports.SConnectableElement = SConnectableElementImpl;
/** @deprecated Use `SRoutingHandleImpl` instead. */
exports.SRoutingHandle = SRoutingHandleImpl;
/** @deprecated Use `SDanglingAnchorImpl` instead. */
exports.SDanglingAnchor = SDanglingAnchorImpl;


/***/ }),

/***/ "../../node_modules/sprotty/lib/features/routing/polyline-anchors.js":
/*!***************************************************************************!*\
  !*** ../../node_modules/sprotty/lib/features/routing/polyline-anchors.js ***!
  \***************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2019 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.DiamondAnchor = exports.RectangleAnchor = exports.EllipseAnchor = void 0;
const anchor_1 = __webpack_require__(/*! ./anchor */ "../../node_modules/sprotty/lib/features/routing/anchor.js");
const geometry_1 = __webpack_require__(/*! ../../utils/geometry */ "../../node_modules/sprotty/lib/utils/geometry.js");
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const polyline_edge_router_1 = __webpack_require__(/*! ./polyline-edge-router */ "../../node_modules/sprotty/lib/features/routing/polyline-edge-router.js");
const geometry_2 = __webpack_require__(/*! sprotty-protocol/lib/utils/geometry */ "../../node_modules/sprotty-protocol/lib/utils/geometry.js");
let EllipseAnchor = class EllipseAnchor {
    get kind() {
        return polyline_edge_router_1.PolylineEdgeRouter.KIND + ':' + anchor_1.ELLIPTIC_ANCHOR_KIND;
    }
    getAnchor(connectable, refPoint, offset = 0) {
        const bounds = connectable.bounds;
        const c = geometry_2.Bounds.center(bounds);
        const dx = c.x - refPoint.x;
        const dy = c.y - refPoint.y;
        const distance = Math.sqrt(dx * dx + dy * dy);
        const normX = (dx / distance) || 0;
        const normY = (dy / distance) || 0;
        return {
            x: c.x - normX * (0.5 * bounds.width + offset),
            y: c.y - normY * (0.5 * bounds.height + offset)
        };
    }
};
EllipseAnchor = __decorate([
    (0, inversify_1.injectable)()
], EllipseAnchor);
exports.EllipseAnchor = EllipseAnchor;
let RectangleAnchor = class RectangleAnchor {
    get kind() {
        return polyline_edge_router_1.PolylineEdgeRouter.KIND + ':' + anchor_1.RECTANGULAR_ANCHOR_KIND;
    }
    getAnchor(connectable, refPoint, offset = 0) {
        const bounds = connectable.bounds;
        const c = geometry_2.Bounds.center(bounds);
        const finder = new NearestPointFinder(c, refPoint);
        if (!(0, geometry_2.almostEquals)(c.y, refPoint.y)) {
            const xTop = this.getXIntersection(bounds.y, c, refPoint);
            if (xTop >= bounds.x && xTop <= bounds.x + bounds.width)
                finder.addCandidate(xTop, bounds.y - offset);
            const xBottom = this.getXIntersection(bounds.y + bounds.height, c, refPoint);
            if (xBottom >= bounds.x && xBottom <= bounds.x + bounds.width)
                finder.addCandidate(xBottom, bounds.y + bounds.height + offset);
        }
        if (!(0, geometry_2.almostEquals)(c.x, refPoint.x)) {
            const yLeft = this.getYIntersection(bounds.x, c, refPoint);
            if (yLeft >= bounds.y && yLeft <= bounds.y + bounds.height)
                finder.addCandidate(bounds.x - offset, yLeft);
            const yRight = this.getYIntersection(bounds.x + bounds.width, c, refPoint);
            if (yRight >= bounds.y && yRight <= bounds.y + bounds.height)
                finder.addCandidate(bounds.x + bounds.width + offset, yRight);
        }
        return finder.best;
    }
    getXIntersection(yIntersection, centerPoint, point) {
        const t = (yIntersection - centerPoint.y) / (point.y - centerPoint.y);
        return (point.x - centerPoint.x) * t + centerPoint.x;
    }
    getYIntersection(xIntersection, centerPoint, point) {
        const t = (xIntersection - centerPoint.x) / (point.x - centerPoint.x);
        return (point.y - centerPoint.y) * t + centerPoint.y;
    }
};
RectangleAnchor = __decorate([
    (0, inversify_1.injectable)()
], RectangleAnchor);
exports.RectangleAnchor = RectangleAnchor;
class NearestPointFinder {
    constructor(centerPoint, refPoint) {
        this.centerPoint = centerPoint;
        this.refPoint = refPoint;
        this.currentDist = -1;
    }
    addCandidate(x, y) {
        const dx = this.refPoint.x - x;
        const dy = this.refPoint.y - y;
        const dist = dx * dx + dy * dy;
        if (this.currentDist < 0 || dist < this.currentDist) {
            this.currentBest = {
                x: x,
                y: y
            };
            this.currentDist = dist;
        }
    }
    get best() {
        if (this.currentBest === undefined)
            return this.centerPoint;
        else
            return this.currentBest;
    }
}
let DiamondAnchor = class DiamondAnchor {
    get kind() {
        return polyline_edge_router_1.PolylineEdgeRouter.KIND + ':' + anchor_1.DIAMOND_ANCHOR_KIND;
    }
    getAnchor(connectable, refPoint, offset) {
        const bounds = connectable.bounds;
        const referenceLine = new geometry_1.PointToPointLine(geometry_2.Bounds.center(bounds), refPoint);
        const closestDiamondSide = new geometry_1.Diamond(bounds).closestSideLine(refPoint);
        const anchorPoint = (0, geometry_1.intersection)(closestDiamondSide, referenceLine);
        return geometry_2.Point.shiftTowards(anchorPoint, refPoint, offset);
    }
};
DiamondAnchor = __decorate([
    (0, inversify_1.injectable)()
], DiamondAnchor);
exports.DiamondAnchor = DiamondAnchor;


/***/ }),

/***/ "../../node_modules/sprotty/lib/features/routing/polyline-edge-router.js":
/*!*******************************************************************************!*\
  !*** ../../node_modules/sprotty/lib/features/routing/polyline-edge-router.js ***!
  \*******************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2019 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var PolylineEdgeRouter_1;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.PolylineEdgeRouter = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const geometry_1 = __webpack_require__(/*! sprotty-protocol/lib/utils/geometry */ "../../node_modules/sprotty-protocol/lib/utils/geometry.js");
const model_1 = __webpack_require__(/*! ./model */ "../../node_modules/sprotty/lib/features/routing/model.js");
const anchor_1 = __webpack_require__(/*! ./anchor */ "../../node_modules/sprotty/lib/features/routing/anchor.js");
const abstract_edge_router_1 = __webpack_require__(/*! ./abstract-edge-router */ "../../node_modules/sprotty/lib/features/routing/abstract-edge-router.js");
let PolylineEdgeRouter = PolylineEdgeRouter_1 = class PolylineEdgeRouter extends abstract_edge_router_1.AbstractEdgeRouter {
    get kind() {
        return PolylineEdgeRouter_1.KIND;
    }
    getOptions(edge) {
        return {
            minimalPointDistance: 2,
            removeAngleThreshold: 0.1,
            standardDistance: 20,
            selfEdgeOffset: 0.25
        };
    }
    route(edge) {
        const source = edge.source;
        const target = edge.target;
        if (source === undefined || target === undefined) {
            return [];
        }
        let sourceAnchor;
        let targetAnchor;
        const options = this.getOptions(edge);
        const routingPoints = edge.routingPoints.length > 0
            ? edge.routingPoints
            : [];
        this.cleanupRoutingPoints(edge, routingPoints, false, false);
        const rpCount = routingPoints !== undefined ? routingPoints.length : 0;
        if (rpCount === 0) {
            // Use the target center as start anchor reference
            const startRef = geometry_1.Bounds.center(target.bounds);
            sourceAnchor = this.getTranslatedAnchor(source, startRef, target.parent, edge, edge.sourceAnchorCorrection);
            // Use the source center as end anchor reference
            const endRef = geometry_1.Bounds.center(source.bounds);
            targetAnchor = this.getTranslatedAnchor(target, endRef, source.parent, edge, edge.targetAnchorCorrection);
        }
        else {
            // Use the first routing point as start anchor reference
            const p0 = routingPoints[0];
            sourceAnchor = this.getTranslatedAnchor(source, p0, edge.parent, edge, edge.sourceAnchorCorrection);
            // Use the last routing point as end anchor reference
            const pn = routingPoints[rpCount - 1];
            targetAnchor = this.getTranslatedAnchor(target, pn, edge.parent, edge, edge.targetAnchorCorrection);
        }
        const result = [];
        result.push({ kind: 'source', x: sourceAnchor.x, y: sourceAnchor.y });
        for (let i = 0; i < rpCount; i++) {
            const p = routingPoints[i];
            if (i > 0 && i < rpCount - 1
                || i === 0 && geometry_1.Point.maxDistance(sourceAnchor, p) >= options.minimalPointDistance + (edge.sourceAnchorCorrection || 0)
                || i === rpCount - 1 && geometry_1.Point.maxDistance(p, targetAnchor) >= options.minimalPointDistance + (edge.targetAnchorCorrection || 0)) {
                result.push({ kind: 'linear', x: p.x, y: p.y, pointIndex: i });
            }
        }
        result.push({ kind: 'target', x: targetAnchor.x, y: targetAnchor.y });
        return this.filterEditModeHandles(result, edge, options);
    }
    /**
     * Remove routed points that are in edit mode and for which the angle between the preceding and
     * following points falls below a threshold.
     */
    filterEditModeHandles(route, edge, options) {
        if (edge.children.length === 0)
            return route;
        let i = 0;
        while (i < route.length) {
            const curr = route[i];
            if (curr.pointIndex !== undefined) {
                const handle = edge.children.find(child => child instanceof model_1.SRoutingHandleImpl && child.kind === 'junction' && child.pointIndex === curr.pointIndex);
                if (handle !== undefined && handle.editMode && i > 0 && i < route.length - 1) {
                    const prev = route[i - 1], next = route[i + 1];
                    const prevDiff = { x: prev.x - curr.x, y: prev.y - curr.y };
                    const nextDiff = { x: next.x - curr.x, y: next.y - curr.y };
                    const angle = (0, geometry_1.angleBetweenPoints)(prevDiff, nextDiff);
                    if (Math.abs(Math.PI - angle) < options.removeAngleThreshold) {
                        route.splice(i, 1);
                        continue;
                    }
                }
            }
            i++;
        }
        return route;
    }
    createRoutingHandles(edge) {
        const rpCount = edge.routingPoints.length;
        this.addHandle(edge, 'source', 'routing-point', -2);
        this.addHandle(edge, 'line', 'volatile-routing-point', -1);
        for (let i = 0; i < rpCount; i++) {
            this.addHandle(edge, 'junction', 'routing-point', i);
            this.addHandle(edge, 'line', 'volatile-routing-point', i);
        }
        this.addHandle(edge, 'target', 'routing-point', rpCount);
    }
    getInnerHandlePosition(edge, route, handle) {
        if (handle.kind === 'line') {
            const { start, end } = this.findRouteSegment(edge, route, handle.pointIndex);
            if (start !== undefined && end !== undefined)
                return (0, geometry_1.centerOfLine)(start, end);
        }
        return undefined;
    }
    applyInnerHandleMoves(edge, moves) {
        moves.forEach(move => {
            const handle = move.handle;
            const points = edge.routingPoints;
            let index = handle.pointIndex;
            if (handle.kind === 'line') {
                // Upgrade to a proper routing point
                handle.kind = 'junction';
                handle.type = 'routing-point';
                points.splice(index + 1, 0, move.fromPosition || points[Math.max(index, 0)]);
                edge.children.forEach(child => {
                    if (child instanceof model_1.SRoutingHandleImpl && (child === handle || child.pointIndex > index))
                        child.pointIndex++;
                });
                this.addHandle(edge, 'line', 'volatile-routing-point', index);
                index++;
                this.addHandle(edge, 'line', 'volatile-routing-point', index);
            }
            if (index >= 0 && index < points.length) {
                points[index] = move.toPosition;
            }
        });
    }
};
PolylineEdgeRouter.KIND = 'polyline';
__decorate([
    (0, inversify_1.inject)(anchor_1.AnchorComputerRegistry),
    __metadata("design:type", anchor_1.AnchorComputerRegistry)
], PolylineEdgeRouter.prototype, "anchorRegistry", void 0);
PolylineEdgeRouter = PolylineEdgeRouter_1 = __decorate([
    (0, inversify_1.injectable)()
], PolylineEdgeRouter);
exports.PolylineEdgeRouter = PolylineEdgeRouter;


/***/ }),

/***/ "../../node_modules/sprotty/lib/features/routing/routing.js":
/*!******************************************************************!*\
  !*** ../../node_modules/sprotty/lib/features/routing/routing.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2018-2021 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.EdgeRouting = exports.EdgeRouterRegistry = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const smodel_1 = __webpack_require__(/*! ../../base/model/smodel */ "../../node_modules/sprotty/lib/base/model/smodel.js");
const types_1 = __webpack_require__(/*! ../../base/types */ "../../node_modules/sprotty/lib/base/types.js");
const view_1 = __webpack_require__(/*! ../../base/views/view */ "../../node_modules/sprotty/lib/base/views/view.js");
const registry_1 = __webpack_require__(/*! ../../utils/registry */ "../../node_modules/sprotty/lib/utils/registry.js");
const model_1 = __webpack_require__(/*! ./model */ "../../node_modules/sprotty/lib/features/routing/model.js");
const polyline_edge_router_1 = __webpack_require__(/*! ./polyline-edge-router */ "../../node_modules/sprotty/lib/features/routing/polyline-edge-router.js");
function isMultipleEdgesRouter(router) {
    return router.routeAll !== undefined;
}
let EdgeRouterRegistry = class EdgeRouterRegistry extends registry_1.InstanceRegistry {
    constructor(edgeRouters) {
        super();
        edgeRouters.forEach(router => this.register(router.kind, router));
    }
    get defaultKind() {
        return polyline_edge_router_1.PolylineEdgeRouter.KIND;
    }
    get(kind) {
        return super.get(kind || this.defaultKind);
    }
    /**
     * Computes the routes of all edges contained by the specified `parent`.
     * After all routes are available, it'll apply the registered `EdgeRoutePostProcessors`.
     * @param parent the parent to traverse for edges
     * @returns the routes of all edges that are children of `parent`
     */
    routeAllChildren(parent) {
        const routing = this.doRouteAllChildren(parent);
        for (const postProcessor of this.postProcessors) {
            postProcessor.apply(routing);
        }
        return routing;
    }
    /**
     * Recursively traverses the children of `parent`, collects children grouped by router kind,
     * and then routes them either.
     * @param parent the parent to traverse for edges
     * @returns the routes of all edges that are children of `parent`
     */
    doRouteAllChildren(parent) {
        const routing = new EdgeRouting();
        const routersEdges = new Map();
        const elementsToProcess = [parent];
        while (elementsToProcess.length > 0) {
            const element = elementsToProcess.shift();
            for (const child of element.children) {
                if (child instanceof model_1.SRoutableElementImpl) {
                    const routerKind = child.routerKind || this.defaultKind;
                    if (routersEdges.has(routerKind)) {
                        routersEdges.get(routerKind).push(child);
                    }
                    else {
                        routersEdges.set(routerKind, [child]);
                    }
                }
                if (child instanceof smodel_1.SParentElementImpl) {
                    elementsToProcess.push(child);
                }
            }
        }
        routersEdges.forEach((edges, routerKind) => {
            const childRouter = this.get(routerKind);
            if (isMultipleEdgesRouter(childRouter)) {
                routing.setAll(childRouter.routeAll(edges, parent));
            }
            else {
                for (const edge of edges) {
                    routing.set(edge.id, this.route(edge));
                }
            }
        });
        return routing;
    }
    /**
     * Computes or obtains the route of a single edge.
     * @param edge the edge to be routed
     * @param args arguments that may contain an `EdgeRouting` already
     * @returns the route of the specified `edge`
     */
    route(edge, args) {
        const edgeRouting = (0, view_1.findArgValue)(args, 'edgeRouting');
        if (edgeRouting) {
            const route = edgeRouting.get(edge.id);
            if (route) {
                return route;
            }
        }
        const router = this.get(edge.routerKind);
        return router.route(edge);
    }
};
__decorate([
    (0, inversify_1.multiInject)(types_1.TYPES.IEdgeRoutePostprocessor),
    (0, inversify_1.optional)(),
    __metadata("design:type", Array)
], EdgeRouterRegistry.prototype, "postProcessors", void 0);
EdgeRouterRegistry = __decorate([
    (0, inversify_1.injectable)(),
    __param(0, (0, inversify_1.multiInject)(types_1.TYPES.IEdgeRouter)),
    __metadata("design:paramtypes", [Array])
], EdgeRouterRegistry);
exports.EdgeRouterRegistry = EdgeRouterRegistry;
/**
 * Map of edges and their computed routes.
 */
class EdgeRouting {
    constructor() {
        this.routesMap = new Map();
    }
    set(routableId, route) {
        this.routesMap.set(routableId, route);
    }
    setAll(otherRoutes) {
        otherRoutes.routes.forEach((route, routableId) => this.set(routableId, route));
    }
    get(routableId) {
        return this.routesMap.get(routableId);
    }
    get routes() {
        return this.routesMap;
    }
}
exports.EdgeRouting = EdgeRouting;


/***/ }),

/***/ "../../node_modules/sprotty/lib/features/routing/views.js":
/*!****************************************************************!*\
  !*** ../../node_modules/sprotty/lib/features/routing/views.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2020 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.RoutableView = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const model_1 = __webpack_require__(/*! ./model */ "../../node_modules/sprotty/lib/features/routing/model.js");
let RoutableView = class RoutableView {
    /**
     * Check whether the given model element is in the current viewport. Use this method
     * in your `render` implementation to skip rendering in case the element is not visible.
     * This can greatly enhance performance for large models.
     */
    isVisible(model, route, context) {
        if (context.targetKind === 'hidden') {
            // Don't hide any element for hidden rendering
            return true;
        }
        if (route.length === 0) {
            // We should hide only if we know the element's route
            return true;
        }
        const ab = (0, model_1.getAbsoluteRouteBounds)(model, route);
        const canvasBounds = model.root.canvasBounds;
        return ab.x <= canvasBounds.width
            && ab.x + ab.width >= 0
            && ab.y <= canvasBounds.height
            && ab.y + ab.height >= 0;
    }
};
RoutableView = __decorate([
    (0, inversify_1.injectable)()
], RoutableView);
exports.RoutableView = RoutableView;


/***/ }),

/***/ "../../node_modules/sprotty/lib/features/select/di.config.js":
/*!*******************************************************************!*\
  !*** ../../node_modules/sprotty/lib/features/select/di.config.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const types_1 = __webpack_require__(/*! ../../base/types */ "../../node_modules/sprotty/lib/base/types.js");
const select_1 = __webpack_require__(/*! ./select */ "../../node_modules/sprotty/lib/features/select/select.js");
const command_registration_1 = __webpack_require__(/*! ../../base/commands/command-registration */ "../../node_modules/sprotty/lib/base/commands/command-registration.js");
const selectModule = new inversify_1.ContainerModule((bind, _unbind, isBound) => {
    (0, command_registration_1.configureCommand)({ bind, isBound }, select_1.SelectCommand);
    (0, command_registration_1.configureCommand)({ bind, isBound }, select_1.SelectAllCommand);
    (0, command_registration_1.configureCommand)({ bind, isBound }, select_1.GetSelectionCommand);
    bind(select_1.SelectKeyboardListener).toSelf().inSingletonScope();
    bind(types_1.TYPES.KeyListener).toService(select_1.SelectKeyboardListener);
    bind(select_1.SelectMouseListener).toSelf().inSingletonScope();
    bind(types_1.TYPES.MouseListener).toService(select_1.SelectMouseListener);
});
exports["default"] = selectModule;


/***/ }),

/***/ "../../node_modules/sprotty/lib/features/select/model.js":
/*!***************************************************************!*\
  !*** ../../node_modules/sprotty/lib/features/select/model.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isSelected = exports.isSelectable = exports.selectFeature = void 0;
exports.selectFeature = Symbol('selectFeature');
function isSelectable(element) {
    return element.hasFeature(exports.selectFeature);
}
exports.isSelectable = isSelectable;
function isSelected(element) {
    return element !== undefined && isSelectable(element) && element.selected;
}
exports.isSelected = isSelected;


/***/ }),

/***/ "../../node_modules/sprotty/lib/features/select/select.js":
/*!****************************************************************!*\
  !*** ../../node_modules/sprotty/lib/features/select/select.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2021 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SelectionResult = exports.GetSelectionAction = exports.SelectAllAction = exports.SelectAction = exports.SelectKeyboardListener = exports.GetSelectionCommand = exports.SelectMouseListener = exports.SelectAllCommand = exports.SelectCommand = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const actions_1 = __webpack_require__(/*! sprotty-protocol/lib/actions */ "../../node_modules/sprotty-protocol/lib/actions.js");
const protocol = __importStar(__webpack_require__(/*! sprotty-protocol/lib/actions */ "../../node_modules/sprotty-protocol/lib/actions.js"));
const command_1 = __webpack_require__(/*! ../../base/commands/command */ "../../node_modules/sprotty/lib/base/commands/command.js");
const request_command_1 = __webpack_require__(/*! ../../base/commands/request-command */ "../../node_modules/sprotty/lib/base/commands/request-command.js");
const smodel_1 = __webpack_require__(/*! ../../base/model/smodel */ "../../node_modules/sprotty/lib/base/model/smodel.js");
const smodel_utils_1 = __webpack_require__(/*! ../../base/model/smodel-utils */ "../../node_modules/sprotty/lib/base/model/smodel-utils.js");
const types_1 = __webpack_require__(/*! ../../base/types */ "../../node_modules/sprotty/lib/base/types.js");
const key_tool_1 = __webpack_require__(/*! ../../base/views/key-tool */ "../../node_modules/sprotty/lib/base/views/key-tool.js");
const mouse_tool_1 = __webpack_require__(/*! ../../base/views/mouse-tool */ "../../node_modules/sprotty/lib/base/views/mouse-tool.js");
const vnode_utils_1 = __webpack_require__(/*! ../../base/views/vnode-utils */ "../../node_modules/sprotty/lib/base/views/vnode-utils.js");
const browser_1 = __webpack_require__(/*! ../../utils/browser */ "../../node_modules/sprotty/lib/utils/browser.js");
const iterable_1 = __webpack_require__(/*! ../../utils/iterable */ "../../node_modules/sprotty/lib/utils/iterable.js");
const keyboard_1 = __webpack_require__(/*! ../../utils/keyboard */ "../../node_modules/sprotty/lib/utils/keyboard.js");
const button_handler_1 = __webpack_require__(/*! ../button/button-handler */ "../../node_modules/sprotty/lib/features/button/button-handler.js");
const model_1 = __webpack_require__(/*! ../button/model */ "../../node_modules/sprotty/lib/features/button/model.js");
const edit_routing_1 = __webpack_require__(/*! ../edit/edit-routing */ "../../node_modules/sprotty/lib/features/edit/edit-routing.js");
const model_2 = __webpack_require__(/*! ../routing/model */ "../../node_modules/sprotty/lib/features/routing/model.js");
const model_3 = __webpack_require__(/*! ../routing/model */ "../../node_modules/sprotty/lib/features/routing/model.js");
const scroll_1 = __webpack_require__(/*! ../viewport/scroll */ "../../node_modules/sprotty/lib/features/viewport/scroll.js");
const model_4 = __webpack_require__(/*! ./model */ "../../node_modules/sprotty/lib/features/select/model.js");
let SelectCommand = class SelectCommand extends command_1.Command {
    constructor(action) {
        super();
        this.action = action;
        this.selected = [];
        this.deselected = [];
    }
    execute(context) {
        const model = context.root;
        this.action.selectedElementsIDs.forEach(id => {
            const element = model.index.getById(id);
            if (element instanceof smodel_1.SChildElementImpl && (0, model_4.isSelectable)(element)) {
                this.selected.push(element);
            }
        });
        this.action.deselectedElementsIDs.forEach(id => {
            const element = model.index.getById(id);
            if (element instanceof smodel_1.SChildElementImpl && (0, model_4.isSelectable)(element)) {
                this.deselected.push(element);
            }
        });
        return this.redo(context);
    }
    undo(context) {
        for (const element of this.selected) {
            element.selected = false;
        }
        for (const element of this.deselected) {
            element.selected = true;
        }
        return context.root;
    }
    redo(context) {
        for (const element of this.deselected) {
            element.selected = false;
        }
        for (const element of this.selected) {
            element.selected = true;
        }
        return context.root;
    }
};
SelectCommand.KIND = protocol.SelectAction.KIND;
SelectCommand = __decorate([
    (0, inversify_1.injectable)(),
    __param(0, (0, inversify_1.inject)(types_1.TYPES.Action)),
    __metadata("design:paramtypes", [Object])
], SelectCommand);
exports.SelectCommand = SelectCommand;
let SelectAllCommand = class SelectAllCommand extends command_1.Command {
    constructor(action) {
        super();
        this.action = action;
        this.previousSelection = {};
    }
    execute(context) {
        this.selectAll(context.root, this.action.select);
        return context.root;
    }
    selectAll(element, newState) {
        if ((0, model_4.isSelectable)(element)) {
            this.previousSelection[element.id] = element.selected;
            element.selected = newState;
        }
        for (const child of element.children) {
            this.selectAll(child, newState);
        }
    }
    undo(context) {
        const index = context.root.index;
        Object.keys(this.previousSelection).forEach(id => {
            const element = index.getById(id);
            if (element !== undefined && (0, model_4.isSelectable)(element))
                element.selected = this.previousSelection[id];
        });
        return context.root;
    }
    redo(context) {
        this.selectAll(context.root, this.action.select);
        return context.root;
    }
};
SelectAllCommand.KIND = protocol.SelectAllAction.KIND;
SelectAllCommand = __decorate([
    (0, inversify_1.injectable)(),
    __param(0, (0, inversify_1.inject)(types_1.TYPES.Action)),
    __metadata("design:paramtypes", [Object])
], SelectAllCommand);
exports.SelectAllCommand = SelectAllCommand;
class SelectMouseListener extends mouse_tool_1.MouseListener {
    constructor() {
        super(...arguments);
        this.wasSelected = false;
        this.hasDragged = false;
    }
    mouseDown(target, event) {
        if (event.button !== 0) {
            return [];
        }
        const buttonHandled = this.handleButton(target, event);
        if (buttonHandled) {
            return buttonHandled;
        }
        const selectableTarget = (0, smodel_utils_1.findParentByFeature)(target, model_4.isSelectable);
        if (selectableTarget !== undefined || target instanceof smodel_1.SModelRootImpl) {
            this.hasDragged = false;
        }
        if (selectableTarget !== undefined) {
            let deselectedElements = [];
            // multi-selection?
            if (!(0, browser_1.isCtrlOrCmd)(event)) {
                deselectedElements = this.collectElementsToDeselect(target, selectableTarget);
            }
            if (selectableTarget !== undefined) {
                if (!selectableTarget.selected) {
                    this.wasSelected = false;
                    return this.handleSelectTarget(selectableTarget, deselectedElements, event);
                }
                else if ((0, browser_1.isCtrlOrCmd)(event)) {
                    this.wasSelected = false;
                    return this.handleDeselectTarget(selectableTarget, event);
                }
                else {
                    this.wasSelected = true;
                }
            }
            else {
                return this.handleDeselectAll(deselectedElements, event);
            }
        }
        return [];
    }
    collectElementsToDeselect(target, selectableTarget) {
        return (0, iterable_1.toArray)(target.root.index.all()
            .filter(element => (0, model_4.isSelectable)(element) && element.selected
            && !(selectableTarget instanceof model_2.SRoutingHandleImpl && element === selectableTarget.parent)));
    }
    handleButton(target, event) {
        if (this.buttonHandlerRegistry !== undefined && target instanceof model_1.SButtonImpl && target.enabled) {
            const buttonHandler = this.buttonHandlerRegistry.get(target.type);
            if (buttonHandler !== undefined) {
                return buttonHandler.buttonPressed(target);
            }
        }
        return undefined;
    }
    handleSelectTarget(selectableTarget, deselectedElements, event) {
        const result = [];
        result.push(protocol.SelectAction.create({ selectedElementsIDs: [selectableTarget.id], deselectedElementsIDs: deselectedElements.map(e => e.id) }));
        result.push(actions_1.BringToFrontAction.create([selectableTarget.id]));
        const routableDeselect = deselectedElements.filter(e => e instanceof model_3.SRoutableElementImpl).map(e => e.id);
        if (selectableTarget instanceof model_3.SRoutableElementImpl) {
            result.push(edit_routing_1.SwitchEditModeAction.create({ elementsToActivate: [selectableTarget.id], elementsToDeactivate: routableDeselect }));
        }
        else if (routableDeselect.length > 0) {
            result.push(edit_routing_1.SwitchEditModeAction.create({ elementsToDeactivate: routableDeselect }));
        }
        return result;
    }
    handleDeselectTarget(selectableTarget, event) {
        const result = [];
        result.push(protocol.SelectAction.create({ selectedElementsIDs: [], deselectedElementsIDs: [selectableTarget.id] }));
        if (selectableTarget instanceof model_3.SRoutableElementImpl) {
            result.push(edit_routing_1.SwitchEditModeAction.create({ elementsToDeactivate: [selectableTarget.id] }));
        }
        return result;
    }
    handleDeselectAll(deselectedElements, event) {
        const result = [];
        result.push(protocol.SelectAction.create({ selectedElementsIDs: [], deselectedElementsIDs: deselectedElements.map(e => e.id) }));
        const routableDeselect = deselectedElements.filter(e => e instanceof model_3.SRoutableElementImpl).map(e => e.id);
        if (routableDeselect.length > 0) {
            result.push(edit_routing_1.SwitchEditModeAction.create({ elementsToDeactivate: routableDeselect }));
        }
        return result;
    }
    mouseMove(target, event) {
        this.hasDragged = true;
        return [];
    }
    mouseUp(target, event) {
        if (event.button === 0) {
            if (!this.hasDragged) {
                const selectableTarget = (0, smodel_utils_1.findParentByFeature)(target, model_4.isSelectable);
                if (selectableTarget !== undefined) {
                    if (this.wasSelected) {
                        return [protocol.SelectAction.create({ selectedElementsIDs: [selectableTarget.id], deselectedElementsIDs: [] })];
                    }
                }
                else if (target instanceof smodel_1.SModelRootImpl && !(0, scroll_1.findViewportScrollbar)(event)) {
                    // Mouse up on root but not over ViewPort's scroll bars > deselect all
                    return this.handleDeselectAll(this.collectElementsToDeselect(target, undefined), event);
                }
            }
        }
        this.hasDragged = false;
        return [];
    }
    decorate(vnode, element) {
        const selectableTarget = (0, smodel_utils_1.findParentByFeature)(element, model_4.isSelectable);
        if (selectableTarget !== undefined) {
            (0, vnode_utils_1.setClass)(vnode, 'selected', selectableTarget.selected);
        }
        return vnode;
    }
}
__decorate([
    (0, inversify_1.inject)(button_handler_1.ButtonHandlerRegistry),
    (0, inversify_1.optional)(),
    __metadata("design:type", button_handler_1.ButtonHandlerRegistry)
], SelectMouseListener.prototype, "buttonHandlerRegistry", void 0);
exports.SelectMouseListener = SelectMouseListener;
let GetSelectionCommand = class GetSelectionCommand extends request_command_1.ModelRequestCommand {
    constructor(action) {
        super();
        this.action = action;
        this.previousSelection = {};
    }
    retrieveResult(context) {
        const selection = context.root.index.all()
            .filter(e => (0, model_4.isSelectable)(e) && e.selected)
            .map(e => e.id);
        return SelectionResult.create((0, iterable_1.toArray)(selection), this.action.requestId);
    }
};
GetSelectionCommand.KIND = protocol.GetSelectionAction.KIND;
GetSelectionCommand = __decorate([
    (0, inversify_1.injectable)(),
    __param(0, (0, inversify_1.inject)(types_1.TYPES.Action)),
    __metadata("design:paramtypes", [Object])
], GetSelectionCommand);
exports.GetSelectionCommand = GetSelectionCommand;
class SelectKeyboardListener extends key_tool_1.KeyListener {
    keyDown(element, event) {
        if ((0, keyboard_1.matchesKeystroke)(event, 'KeyA', 'ctrlCmd')) {
            return [protocol.SelectAllAction.create()];
        }
        return [];
    }
}
exports.SelectKeyboardListener = SelectKeyboardListener;
// Compatibility deprecation layer (will be removed with the graduation 1.0.0 release)
/**
 * Triggered when the user changes the selection, e.g. by clicking on a selectable element. The resulting
 * SelectCommand changes the `selected` state accordingly, so the elements can be rendered differently.
 * This action is also forwarded to the diagram server, if present, so it may react on the selection change.
 * Furthermore, the server can send such an action to the client in order to change the selection programmatically.
 *
 * @deprecated Use the declaration from `sprotty-protocol` instead.
 */
class SelectAction {
    constructor(selectedElementsIDs = [], deselectedElementsIDs = []) {
        this.selectedElementsIDs = selectedElementsIDs;
        this.deselectedElementsIDs = deselectedElementsIDs;
        this.kind = SelectAction.KIND;
    }
}
SelectAction.KIND = 'elementSelected';
exports.SelectAction = SelectAction;
/**
 * Programmatic action for selecting or deselecting all elements.
 *
 * @deprecated Use the declaration from `sprotty-protocol` instead.
 */
class SelectAllAction {
    /**
     * If `select` is true, all elements are selected, otherwise they are deselected.
     */
    constructor(select = true) {
        this.select = select;
        this.kind = SelectAllAction.KIND;
    }
}
SelectAllAction.KIND = 'allSelected';
exports.SelectAllAction = SelectAllAction;
var GetSelectionAction;
(function (GetSelectionAction) {
    GetSelectionAction.KIND = 'getSelection';
    function create() {
        return {
            kind: GetSelectionAction.KIND,
            requestId: (0, actions_1.generateRequestId)()
        };
    }
    GetSelectionAction.create = create;
})(GetSelectionAction = exports.GetSelectionAction || (exports.GetSelectionAction = {}));
var SelectionResult;
(function (SelectionResult) {
    SelectionResult.KIND = 'selectionResult';
    function create(selectedElementsIDs, requestId) {
        return {
            kind: SelectionResult.KIND,
            selectedElementsIDs,
            responseId: requestId
        };
    }
    SelectionResult.create = create;
})(SelectionResult = exports.SelectionResult || (exports.SelectionResult = {}));


/***/ }),

/***/ "../../node_modules/sprotty/lib/features/undo-redo/di.config.js":
/*!**********************************************************************!*\
  !*** ../../node_modules/sprotty/lib/features/undo-redo/di.config.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const types_1 = __webpack_require__(/*! ../../base/types */ "../../node_modules/sprotty/lib/base/types.js");
const undo_redo_1 = __webpack_require__(/*! ./undo-redo */ "../../node_modules/sprotty/lib/features/undo-redo/undo-redo.js");
const undoRedoModule = new inversify_1.ContainerModule(bind => {
    bind(undo_redo_1.UndoRedoKeyListener).toSelf().inSingletonScope();
    bind(types_1.TYPES.KeyListener).toService(undo_redo_1.UndoRedoKeyListener);
});
exports["default"] = undoRedoModule;


/***/ }),

/***/ "../../node_modules/sprotty/lib/features/undo-redo/undo-redo.js":
/*!**********************************************************************!*\
  !*** ../../node_modules/sprotty/lib/features/undo-redo/undo-redo.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.RedoAction = exports.UndoAction = exports.UndoRedoKeyListener = void 0;
const actions_1 = __webpack_require__(/*! sprotty-protocol/lib/actions */ "../../node_modules/sprotty-protocol/lib/actions.js");
const keyboard_1 = __webpack_require__(/*! ../../utils/keyboard */ "../../node_modules/sprotty/lib/utils/keyboard.js");
const key_tool_1 = __webpack_require__(/*! ../../base/views/key-tool */ "../../node_modules/sprotty/lib/base/views/key-tool.js");
const browser_1 = __webpack_require__(/*! ../../utils/browser */ "../../node_modules/sprotty/lib/utils/browser.js");
class UndoRedoKeyListener extends key_tool_1.KeyListener {
    keyDown(element, event) {
        if ((0, keyboard_1.matchesKeystroke)(event, 'KeyZ', 'ctrlCmd'))
            return [actions_1.UndoAction.create()];
        if ((0, keyboard_1.matchesKeystroke)(event, 'KeyZ', 'ctrlCmd', 'shift') || (!(0, browser_1.isMac)() && (0, keyboard_1.matchesKeystroke)(event, 'KeyY', 'ctrlCmd')))
            return [actions_1.RedoAction.create()];
        return [];
    }
}
exports.UndoRedoKeyListener = UndoRedoKeyListener;
var UndoAction;
(function (UndoAction) {
    UndoAction.KIND = 'undo';
    function create() {
        return {
            kind: UndoAction.KIND
        };
    }
    UndoAction.create = create;
})(UndoAction = exports.UndoAction || (exports.UndoAction = {}));
var RedoAction;
(function (RedoAction) {
    RedoAction.KIND = 'redo';
    function create() {
        return {
            kind: RedoAction.KIND
        };
    }
    RedoAction.create = create;
})(RedoAction = exports.RedoAction || (exports.RedoAction = {}));


/***/ }),

/***/ "../../node_modules/sprotty/lib/features/update/di.config.js":
/*!*******************************************************************!*\
  !*** ../../node_modules/sprotty/lib/features/update/di.config.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2019 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const command_registration_1 = __webpack_require__(/*! ../../base/commands/command-registration */ "../../node_modules/sprotty/lib/base/commands/command-registration.js");
const update_model_1 = __webpack_require__(/*! ./update-model */ "../../node_modules/sprotty/lib/features/update/update-model.js");
const updateModule = new inversify_1.ContainerModule((bind, _unbind, isBound) => {
    (0, command_registration_1.configureCommand)({ bind, isBound }, update_model_1.UpdateModelCommand);
});
exports["default"] = updateModule;


/***/ }),

/***/ "../../node_modules/sprotty/lib/features/update/model-matching.js":
/*!************************************************************************!*\
  !*** ../../node_modules/sprotty/lib/features/update/model-matching.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2021 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.applyMatches = exports.ModelMatcher = exports.forEachMatch = void 0;
const smodel_1 = __webpack_require__(/*! ../../base/model/smodel */ "../../node_modules/sprotty/lib/base/model/smodel.js");
const sprotty_protocol_1 = __webpack_require__(/*! sprotty-protocol */ "../../node_modules/sprotty-protocol/lib/index.js");
function forEachMatch(matchResult, callback) {
    Object.keys(matchResult).forEach(id => callback(id, matchResult[id]));
}
exports.forEachMatch = forEachMatch;
class ModelMatcher {
    match(left, right) {
        const result = {};
        this.matchLeft(left, result);
        this.matchRight(right, result);
        return result;
    }
    matchLeft(element, result, parentId) {
        let match = result[element.id];
        if (match !== undefined) {
            match.left = element;
            match.leftParentId = parentId;
        }
        else {
            match = {
                left: element,
                leftParentId: parentId
            };
            result[element.id] = match;
        }
        if ((0, smodel_1.isParent)(element)) {
            for (const child of element.children) {
                this.matchLeft(child, result, element.id);
            }
        }
    }
    matchRight(element, result, parentId) {
        let match = result[element.id];
        if (match !== undefined) {
            match.right = element;
            match.rightParentId = parentId;
        }
        else {
            match = {
                right: element,
                rightParentId: parentId
            };
            result[element.id] = match;
        }
        if ((0, smodel_1.isParent)(element)) {
            for (const child of element.children) {
                this.matchRight(child, result, element.id);
            }
        }
    }
}
exports.ModelMatcher = ModelMatcher;
function applyMatches(root, matches, index) {
    if (root instanceof smodel_1.SModelRootImpl) {
        index = root.index;
    }
    else if (index === undefined) {
        index = new sprotty_protocol_1.SModelIndex();
        index.add(root);
    }
    for (const match of matches) {
        let newElementInserted = false;
        if (match.left !== undefined && match.leftParentId !== undefined) {
            const parent = index.getById(match.leftParentId);
            if (parent !== undefined && parent.children !== undefined) {
                const i = parent.children.indexOf(match.left);
                if (i >= 0) {
                    if (match.right !== undefined && match.leftParentId === match.rightParentId) {
                        parent.children.splice(i, 1, match.right);
                        newElementInserted = true;
                    }
                    else {
                        parent.children.splice(i, 1);
                    }
                }
                index.remove(match.left);
            }
        }
        if (!newElementInserted && match.right !== undefined && match.rightParentId !== undefined) {
            const parent = index.getById(match.rightParentId);
            if (parent !== undefined) {
                if (parent.children === undefined)
                    parent.children = [];
                parent.children.push(match.right);
            }
        }
    }
}
exports.applyMatches = applyMatches;


/***/ }),

/***/ "../../node_modules/sprotty/lib/features/update/update-model.js":
/*!**********************************************************************!*\
  !*** ../../node_modules/sprotty/lib/features/update/update-model.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2022 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.UpdateModelAction = exports.UpdateModelCommand = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const actions_1 = __webpack_require__(/*! sprotty-protocol/lib/actions */ "../../node_modules/sprotty-protocol/lib/actions.js");
const geometry_1 = __webpack_require__(/*! sprotty-protocol/lib/utils/geometry */ "../../node_modules/sprotty-protocol/lib/utils/geometry.js");
const animation_1 = __webpack_require__(/*! ../../base/animations/animation */ "../../node_modules/sprotty/lib/base/animations/animation.js");
const command_1 = __webpack_require__(/*! ../../base/commands/command */ "../../node_modules/sprotty/lib/base/commands/command.js");
const fade_1 = __webpack_require__(/*! ../fade/fade */ "../../node_modules/sprotty/lib/features/fade/fade.js");
const smodel_1 = __webpack_require__(/*! ../../base/model/smodel */ "../../node_modules/sprotty/lib/base/model/smodel.js");
const move_1 = __webpack_require__(/*! ../move/move */ "../../node_modules/sprotty/lib/features/move/move.js");
const model_1 = __webpack_require__(/*! ../fade/model */ "../../node_modules/sprotty/lib/features/fade/model.js");
const model_2 = __webpack_require__(/*! ../move/model */ "../../node_modules/sprotty/lib/features/move/model.js");
const model_3 = __webpack_require__(/*! ../bounds/model */ "../../node_modules/sprotty/lib/features/bounds/model.js");
const viewport_root_1 = __webpack_require__(/*! ../viewport/viewport-root */ "../../node_modules/sprotty/lib/features/viewport/viewport-root.js");
const model_4 = __webpack_require__(/*! ../select/model */ "../../node_modules/sprotty/lib/features/select/model.js");
const model_matching_1 = __webpack_require__(/*! ./model-matching */ "../../node_modules/sprotty/lib/features/update/model-matching.js");
const resize_1 = __webpack_require__(/*! ../bounds/resize */ "../../node_modules/sprotty/lib/features/bounds/resize.js");
const types_1 = __webpack_require__(/*! ../../base/types */ "../../node_modules/sprotty/lib/base/types.js");
const model_5 = __webpack_require__(/*! ../viewport/model */ "../../node_modules/sprotty/lib/features/viewport/model.js");
const routing_1 = __webpack_require__(/*! ../routing/routing */ "../../node_modules/sprotty/lib/features/routing/routing.js");
const model_6 = __webpack_require__(/*! ../routing/model */ "../../node_modules/sprotty/lib/features/routing/model.js");
const smodel_utils_1 = __webpack_require__(/*! ../../base/model/smodel-utils */ "../../node_modules/sprotty/lib/base/model/smodel-utils.js");
let UpdateModelCommand = class UpdateModelCommand extends command_1.Command {
    constructor(action) {
        super();
        this.action = action;
    }
    execute(context) {
        let newRoot;
        if (this.action.newRoot !== undefined) {
            newRoot = context.modelFactory.createRoot(this.action.newRoot);
        }
        else {
            newRoot = context.modelFactory.createRoot(context.root);
            if (this.action.matches !== undefined)
                this.applyMatches(newRoot, this.action.matches, context);
        }
        this.oldRoot = context.root;
        this.newRoot = newRoot;
        return this.performUpdate(this.oldRoot, this.newRoot, context);
    }
    performUpdate(oldRoot, newRoot, context) {
        if ((this.action.animate === undefined || this.action.animate) && oldRoot.id === newRoot.id) {
            let matchResult;
            if (this.action.matches === undefined) {
                const matcher = new model_matching_1.ModelMatcher();
                matchResult = matcher.match(oldRoot, newRoot);
            }
            else {
                matchResult = this.convertToMatchResult(this.action.matches, oldRoot, newRoot);
            }
            const animationOrRoot = this.computeAnimation(newRoot, matchResult, context);
            if (animationOrRoot instanceof animation_1.Animation)
                return animationOrRoot.start();
            else
                return animationOrRoot;
        }
        else {
            if (oldRoot.type === newRoot.type && geometry_1.Dimension.isValid(oldRoot.canvasBounds))
                newRoot.canvasBounds = oldRoot.canvasBounds;
            if ((0, model_5.isViewport)(oldRoot) && (0, model_5.isViewport)(newRoot)) {
                newRoot.zoom = oldRoot.zoom;
                newRoot.scroll = oldRoot.scroll;
            }
            return newRoot;
        }
    }
    applyMatches(root, matches, context) {
        const index = root.index;
        for (const match of matches) {
            if (match.left !== undefined) {
                const element = index.getById(match.left.id);
                if (element instanceof smodel_1.SChildElementImpl)
                    element.parent.remove(element);
            }
        }
        for (const match of matches) {
            if (match.right !== undefined) {
                const element = context.modelFactory.createElement(match.right);
                let parent;
                if (match.rightParentId !== undefined)
                    parent = index.getById(match.rightParentId);
                if (parent instanceof smodel_1.SParentElementImpl)
                    parent.add(element);
                else
                    root.add(element);
            }
        }
    }
    convertToMatchResult(matches, leftRoot, rightRoot) {
        const result = {};
        for (const match of matches) {
            const converted = {};
            let id = undefined;
            if (match.left !== undefined) {
                id = match.left.id;
                converted.left = leftRoot.index.getById(id);
                converted.leftParentId = match.leftParentId;
            }
            if (match.right !== undefined) {
                id = match.right.id;
                converted.right = rightRoot.index.getById(id);
                converted.rightParentId = match.rightParentId;
            }
            if (id !== undefined)
                result[id] = converted;
        }
        return result;
    }
    computeAnimation(newRoot, matchResult, context) {
        const animationData = {
            fades: []
        };
        (0, model_matching_1.forEachMatch)(matchResult, (id, match) => {
            if (match.left !== undefined && match.right !== undefined) {
                // The element is still there, but may have been moved
                this.updateElement(match.left, match.right, animationData);
            }
            else if (match.right !== undefined) {
                // An element has been added
                const right = match.right;
                if ((0, model_1.isFadeable)(right)) {
                    right.opacity = 0;
                    animationData.fades.push({
                        element: right,
                        type: 'in'
                    });
                }
            }
            else if (match.left instanceof smodel_1.SChildElementImpl) {
                // An element has been removed
                const left = match.left;
                if ((0, model_1.isFadeable)(left) && match.leftParentId !== undefined) {
                    if (!(0, smodel_utils_1.containsSome)(newRoot, left)) {
                        const parent = newRoot.index.getById(match.leftParentId);
                        if (parent instanceof smodel_1.SParentElementImpl) {
                            const leftCopy = context.modelFactory.createElement(left);
                            parent.add(leftCopy);
                            animationData.fades.push({
                                element: leftCopy,
                                type: 'out'
                            });
                        }
                    }
                }
            }
        });
        const animations = this.createAnimations(animationData, newRoot, context);
        if (animations.length >= 2) {
            return new animation_1.CompoundAnimation(newRoot, context, animations);
        }
        else if (animations.length === 1) {
            return animations[0];
        }
        else {
            return newRoot;
        }
    }
    updateElement(left, right, animationData) {
        if ((0, model_2.isLocateable)(left) && (0, model_2.isLocateable)(right)) {
            const leftPos = left.position;
            const rightPos = right.position;
            if (!(0, geometry_1.almostEquals)(leftPos.x, rightPos.x) || !(0, geometry_1.almostEquals)(leftPos.y, rightPos.y)) {
                if (animationData.moves === undefined)
                    animationData.moves = [];
                animationData.moves.push({
                    element: right,
                    fromPosition: leftPos,
                    toPosition: rightPos
                });
                right.position = leftPos;
            }
        }
        if ((0, model_3.isSizeable)(left) && (0, model_3.isSizeable)(right)) {
            if (!geometry_1.Dimension.isValid(right.bounds)) {
                right.bounds = {
                    x: right.bounds.x,
                    y: right.bounds.y,
                    width: left.bounds.width,
                    height: left.bounds.height
                };
            }
            else if (!(0, geometry_1.almostEquals)(left.bounds.width, right.bounds.width)
                || !(0, geometry_1.almostEquals)(left.bounds.height, right.bounds.height)) {
                if (animationData.resizes === undefined)
                    animationData.resizes = [];
                animationData.resizes.push({
                    element: right,
                    fromDimension: {
                        width: left.bounds.width,
                        height: left.bounds.height,
                    },
                    toDimension: {
                        width: right.bounds.width,
                        height: right.bounds.height,
                    }
                });
            }
        }
        if (left instanceof model_6.SRoutableElementImpl && right instanceof model_6.SRoutableElementImpl && this.edgeRouterRegistry) {
            if (animationData.edgeMementi === undefined)
                animationData.edgeMementi = [];
            animationData.edgeMementi.push({
                edge: right,
                before: this.takeSnapshot(left),
                after: this.takeSnapshot(right),
            });
        }
        if ((0, model_4.isSelectable)(left) && (0, model_4.isSelectable)(right)) {
            right.selected = left.selected;
        }
        if (left instanceof smodel_1.SModelRootImpl && right instanceof smodel_1.SModelRootImpl) {
            right.canvasBounds = left.canvasBounds;
        }
        if (left instanceof viewport_root_1.ViewportRootElement && right instanceof viewport_root_1.ViewportRootElement) {
            right.scroll = left.scroll;
            right.zoom = left.zoom;
        }
    }
    takeSnapshot(edge) {
        const router = this.edgeRouterRegistry.get(edge.routerKind);
        return router.takeSnapshot(edge);
    }
    createAnimations(data, root, context) {
        const animations = [];
        if (data.fades.length > 0) {
            animations.push(new fade_1.FadeAnimation(root, data.fades, context, true));
        }
        if (data.moves !== undefined && data.moves.length > 0) {
            const movesMap = new Map;
            for (const move of data.moves) {
                movesMap.set(move.element.id, move);
            }
            animations.push(new move_1.MoveAnimation(root, movesMap, context, false));
        }
        if (data.resizes !== undefined && data.resizes.length > 0) {
            const resizesMap = new Map;
            for (const resize of data.resizes) {
                resizesMap.set(resize.element.id, resize);
            }
            animations.push(new resize_1.ResizeAnimation(root, resizesMap, context, false));
        }
        if (data.edgeMementi !== undefined && data.edgeMementi.length > 0) {
            animations.push(new move_1.MorphEdgesAnimation(root, data.edgeMementi, context, false));
        }
        return animations;
    }
    undo(context) {
        return this.performUpdate(this.newRoot, this.oldRoot, context);
    }
    redo(context) {
        return this.performUpdate(this.oldRoot, this.newRoot, context);
    }
};
UpdateModelCommand.KIND = actions_1.UpdateModelAction.KIND;
__decorate([
    (0, inversify_1.inject)(routing_1.EdgeRouterRegistry),
    (0, inversify_1.optional)(),
    __metadata("design:type", routing_1.EdgeRouterRegistry)
], UpdateModelCommand.prototype, "edgeRouterRegistry", void 0);
UpdateModelCommand = __decorate([
    (0, inversify_1.injectable)(),
    __param(0, (0, inversify_1.inject)(types_1.TYPES.Action)),
    __metadata("design:paramtypes", [Object])
], UpdateModelCommand);
exports.UpdateModelCommand = UpdateModelCommand;
// Compatibility deprecation layer (will be removed with the graduation 1.0.0 release)
/**
 * Sent from the model source to the client in order to update the model. If no model is present yet,
 * this behaves the same as a SetModelAction. The transition from the old model to the new one can be animated.
 *
 * @deprecated Use the declaration from `sprotty-protocol` instead.
 */
class UpdateModelAction {
    constructor(input, animate = true, cause) {
        this.animate = animate;
        this.cause = cause;
        this.kind = UpdateModelAction.KIND;
        if (input.id !== undefined)
            this.newRoot = input;
        else
            this.matches = input;
    }
}
UpdateModelAction.KIND = 'updateModel';
exports.UpdateModelAction = UpdateModelAction;


/***/ }),

/***/ "../../node_modules/sprotty/lib/features/viewport/center-fit.js":
/*!**********************************************************************!*\
  !*** ../../node_modules/sprotty/lib/features/viewport/center-fit.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2023 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.FitToScreenAction = exports.CenterAction = exports.CenterKeyboardListener = exports.FitToScreenCommand = exports.CenterCommand = exports.BoundsAwareViewportCommand = void 0;
const actions_1 = __webpack_require__(/*! sprotty-protocol/lib/actions */ "../../node_modules/sprotty-protocol/lib/actions.js");
const geometry_1 = __webpack_require__(/*! sprotty-protocol/lib/utils/geometry */ "../../node_modules/sprotty-protocol/lib/utils/geometry.js");
const keyboard_1 = __webpack_require__(/*! ../../utils/keyboard */ "../../node_modules/sprotty/lib/utils/keyboard.js");
const smodel_1 = __webpack_require__(/*! ../../base/model/smodel */ "../../node_modules/sprotty/lib/base/model/smodel.js");
const command_1 = __webpack_require__(/*! ../../base/commands/command */ "../../node_modules/sprotty/lib/base/commands/command.js");
const key_tool_1 = __webpack_require__(/*! ../../base/views/key-tool */ "../../node_modules/sprotty/lib/base/views/key-tool.js");
const model_1 = __webpack_require__(/*! ../bounds/model */ "../../node_modules/sprotty/lib/features/bounds/model.js");
const model_2 = __webpack_require__(/*! ../select/model */ "../../node_modules/sprotty/lib/features/select/model.js");
const viewport_1 = __webpack_require__(/*! ./viewport */ "../../node_modules/sprotty/lib/features/viewport/viewport.js");
const model_3 = __webpack_require__(/*! ./model */ "../../node_modules/sprotty/lib/features/viewport/model.js");
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const types_1 = __webpack_require__(/*! ../../base/types */ "../../node_modules/sprotty/lib/base/types.js");
let BoundsAwareViewportCommand = class BoundsAwareViewportCommand extends command_1.Command {
    constructor(animate) {
        super();
        this.animate = animate;
    }
    initialize(model) {
        if (!(0, model_3.isViewport)(model)) {
            return;
        }
        this.oldViewport = {
            scroll: model.scroll,
            zoom: model.zoom
        };
        const allBounds = [];
        this.getElementIds().forEach(id => {
            const element = model.index.getById(id);
            if (element && (0, model_1.isBoundsAware)(element)) {
                allBounds.push(this.boundsInViewport(element, element.bounds, model));
            }
        });
        if (allBounds.length === 0) {
            model.index.all().forEach(element => {
                if ((0, model_2.isSelectable)(element) && element.selected && (0, model_1.isBoundsAware)(element)) {
                    allBounds.push(this.boundsInViewport(element, element.bounds, model));
                }
            });
        }
        if (allBounds.length === 0) {
            model.index.all().forEach(element => {
                if ((0, model_1.isBoundsAware)(element)) {
                    allBounds.push(this.boundsInViewport(element, element.bounds, model));
                }
            });
        }
        if (allBounds.length !== 0) {
            const bounds = allBounds.reduce((b0, b1) => geometry_1.Bounds.combine(b0, b1));
            if (geometry_1.Dimension.isValid(bounds)) {
                const newViewport = this.getNewViewport(bounds, model);
                if (newViewport) {
                    const { zoomLimits, horizontalScrollLimits, verticalScrollLimits } = this.viewerOptions;
                    this.newViewport = (0, model_3.limitViewport)(newViewport, model.canvasBounds, horizontalScrollLimits, verticalScrollLimits, zoomLimits);
                }
            }
        }
    }
    boundsInViewport(element, bounds, viewport) {
        if (element instanceof smodel_1.SChildElementImpl && element.parent !== viewport)
            return this.boundsInViewport(element.parent, element.parent.localToParent(bounds), viewport);
        else
            return bounds;
    }
    execute(context) {
        this.initialize(context.root);
        return this.redo(context);
    }
    undo(context) {
        const model = context.root;
        if ((0, model_3.isViewport)(model) && this.newViewport !== undefined && !this.equal(this.newViewport, this.oldViewport)) {
            if (this.animate)
                return new viewport_1.ViewportAnimation(model, this.newViewport, this.oldViewport, context).start();
            else {
                model.scroll = this.oldViewport.scroll;
                model.zoom = this.oldViewport.zoom;
            }
        }
        return model;
    }
    redo(context) {
        const model = context.root;
        if ((0, model_3.isViewport)(model) && this.newViewport !== undefined && !this.equal(this.newViewport, this.oldViewport)) {
            if (this.animate) {
                return new viewport_1.ViewportAnimation(model, this.oldViewport, this.newViewport, context).start();
            }
            else {
                model.scroll = this.newViewport.scroll;
                model.zoom = this.newViewport.zoom;
            }
        }
        return model;
    }
    equal(vp1, vp2) {
        return (0, geometry_1.almostEquals)(vp1.zoom, vp2.zoom) && (0, geometry_1.almostEquals)(vp1.scroll.x, vp2.scroll.x) && (0, geometry_1.almostEquals)(vp1.scroll.y, vp2.scroll.y);
    }
};
__decorate([
    (0, inversify_1.inject)(types_1.TYPES.ViewerOptions),
    __metadata("design:type", Object)
], BoundsAwareViewportCommand.prototype, "viewerOptions", void 0);
BoundsAwareViewportCommand = __decorate([
    (0, inversify_1.injectable)(),
    __metadata("design:paramtypes", [Boolean])
], BoundsAwareViewportCommand);
exports.BoundsAwareViewportCommand = BoundsAwareViewportCommand;
let CenterCommand = class CenterCommand extends BoundsAwareViewportCommand {
    constructor(action) {
        super(action.animate);
        this.action = action;
    }
    getElementIds() {
        return this.action.elementIds;
    }
    getNewViewport(bounds, model) {
        if (!geometry_1.Dimension.isValid(model.canvasBounds)) {
            return undefined;
        }
        let zoom = 1;
        if (this.action.retainZoom && (0, model_3.isViewport)(model)) {
            zoom = model.zoom;
        }
        else if (this.action.zoomScale) {
            zoom = this.action.zoomScale;
        }
        const c = geometry_1.Bounds.center(bounds);
        return {
            scroll: {
                x: c.x - 0.5 * model.canvasBounds.width / zoom,
                y: c.y - 0.5 * model.canvasBounds.height / zoom
            },
            zoom: zoom
        };
    }
};
CenterCommand.KIND = actions_1.CenterAction.KIND;
CenterCommand = __decorate([
    __param(0, (0, inversify_1.inject)(types_1.TYPES.Action)),
    __metadata("design:paramtypes", [Object])
], CenterCommand);
exports.CenterCommand = CenterCommand;
let FitToScreenCommand = class FitToScreenCommand extends BoundsAwareViewportCommand {
    constructor(action) {
        super(action.animate);
        this.action = action;
    }
    getElementIds() {
        return this.action.elementIds;
    }
    getNewViewport(bounds, model) {
        if (!geometry_1.Dimension.isValid(model.canvasBounds)) {
            return undefined;
        }
        const c = geometry_1.Bounds.center(bounds);
        const delta = this.action.padding === undefined
            ? 0
            : 2 * this.action.padding;
        let zoom = Math.min(model.canvasBounds.width / (bounds.width + delta), model.canvasBounds.height / (bounds.height + delta));
        if (this.action.maxZoom !== undefined)
            zoom = Math.min(zoom, this.action.maxZoom);
        if (zoom === Infinity) {
            zoom = 1;
        }
        return {
            scroll: {
                x: c.x - 0.5 * model.canvasBounds.width / zoom,
                y: c.y - 0.5 * model.canvasBounds.height / zoom
            },
            zoom: zoom
        };
    }
};
FitToScreenCommand.KIND = actions_1.FitToScreenAction.KIND;
FitToScreenCommand = __decorate([
    __param(0, (0, inversify_1.inject)(types_1.TYPES.Action)),
    __metadata("design:paramtypes", [Object])
], FitToScreenCommand);
exports.FitToScreenCommand = FitToScreenCommand;
class CenterKeyboardListener extends key_tool_1.KeyListener {
    keyDown(element, event) {
        if ((0, keyboard_1.matchesKeystroke)(event, 'KeyC', 'ctrlCmd', 'shift'))
            return [actions_1.CenterAction.create([])];
        if ((0, keyboard_1.matchesKeystroke)(event, 'KeyF', 'ctrlCmd', 'shift'))
            return [actions_1.FitToScreenAction.create([])];
        return [];
    }
}
exports.CenterKeyboardListener = CenterKeyboardListener;
// Compatibility deprecation layer (will be removed with the graduation 1.0.0 release)
/**
 * Triggered when the user requests the viewer to center on the current model. The resulting
 * CenterCommand changes the scroll setting of the viewport accordingly.
 * It also resets the zoom to its default if retainZoom is false.
 * This action can also be sent from the model source to the client in order to perform such a
 * viewport change programmatically.
 *
 * @deprecated Use the declaration in `sprotty-protocol` instead.
 */
class CenterAction {
    constructor(elementIds, animate = true, retainZoom = false, zoomScale) {
        this.elementIds = elementIds;
        this.animate = animate;
        this.retainZoom = retainZoom;
        this.zoomScale = zoomScale;
        this.kind = CenterAction.KIND;
    }
}
CenterAction.KIND = 'center';
exports.CenterAction = CenterAction;
/**
 * Triggered when the user requests the viewer to fit its content to the available drawing area.
 * The resulting FitToScreenCommand changes the zoom and scroll settings of the viewport so the model
 * can be shown completely. This action can also be sent from the model source to the client in order
 * to perform such a viewport change programmatically.
 *
 * @deprecated Use the declaration in `sprotty-protocol` instead.
 */
class FitToScreenAction {
    constructor(elementIds, padding, maxZoom, animate = true) {
        this.elementIds = elementIds;
        this.padding = padding;
        this.maxZoom = maxZoom;
        this.animate = animate;
        this.kind = FitToScreenAction.KIND;
    }
}
FitToScreenAction.KIND = 'fit';
exports.FitToScreenAction = FitToScreenAction;


/***/ }),

/***/ "../../node_modules/sprotty/lib/features/viewport/di.config.js":
/*!*********************************************************************!*\
  !*** ../../node_modules/sprotty/lib/features/viewport/di.config.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const types_1 = __webpack_require__(/*! ../../base/types */ "../../node_modules/sprotty/lib/base/types.js");
const center_fit_1 = __webpack_require__(/*! ./center-fit */ "../../node_modules/sprotty/lib/features/viewport/center-fit.js");
const viewport_1 = __webpack_require__(/*! ./viewport */ "../../node_modules/sprotty/lib/features/viewport/viewport.js");
const scroll_1 = __webpack_require__(/*! ./scroll */ "../../node_modules/sprotty/lib/features/viewport/scroll.js");
const zoom_1 = __webpack_require__(/*! ./zoom */ "../../node_modules/sprotty/lib/features/viewport/zoom.js");
const command_registration_1 = __webpack_require__(/*! ../../base/commands/command-registration */ "../../node_modules/sprotty/lib/base/commands/command-registration.js");
const viewportModule = new inversify_1.ContainerModule((bind, _unbind, isBound) => {
    (0, command_registration_1.configureCommand)({ bind, isBound }, center_fit_1.CenterCommand);
    (0, command_registration_1.configureCommand)({ bind, isBound }, center_fit_1.FitToScreenCommand);
    (0, command_registration_1.configureCommand)({ bind, isBound }, viewport_1.SetViewportCommand);
    (0, command_registration_1.configureCommand)({ bind, isBound }, viewport_1.GetViewportCommand);
    bind(center_fit_1.CenterKeyboardListener).toSelf().inSingletonScope();
    bind(types_1.TYPES.KeyListener).toService(center_fit_1.CenterKeyboardListener);
    bind(scroll_1.ScrollMouseListener).toSelf().inSingletonScope();
    bind(zoom_1.ZoomMouseListener).toSelf().inSingletonScope();
    bind(types_1.TYPES.MouseListener).toService(scroll_1.ScrollMouseListener);
    bind(types_1.TYPES.MouseListener).toService(zoom_1.ZoomMouseListener);
});
exports["default"] = viewportModule;


/***/ }),

/***/ "../../node_modules/sprotty/lib/features/viewport/model.js":
/*!*****************************************************************!*\
  !*** ../../node_modules/sprotty/lib/features/viewport/model.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2023 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.limitViewport = exports.isViewport = exports.viewportFeature = void 0;
const sprotty_protocol_1 = __webpack_require__(/*! sprotty-protocol */ "../../node_modules/sprotty-protocol/lib/index.js");
const smodel_1 = __webpack_require__(/*! ../../base/model/smodel */ "../../node_modules/sprotty/lib/base/model/smodel.js");
const geometry_1 = __webpack_require__(/*! ../../utils/geometry */ "../../node_modules/sprotty/lib/utils/geometry.js");
exports.viewportFeature = Symbol('viewportFeature');
/**
 * Determine whether the given model element has a viewport.
 */
function isViewport(element) {
    return element instanceof smodel_1.SModelRootImpl
        && element.hasFeature(exports.viewportFeature)
        && 'zoom' in element
        && 'scroll' in element;
}
exports.isViewport = isViewport;
/**
 * Apply limits to the given viewport.
 */
function limitViewport(viewport, canvasBounds, horizontalScrollLimits, verticalScrollLimits, zoomLimits) {
    if (canvasBounds && !sprotty_protocol_1.Dimension.isValid(canvasBounds)) {
        canvasBounds = undefined;
    }
    // Limit the zoom factor
    let zoom = zoomLimits ? (0, geometry_1.limit)(viewport.zoom, zoomLimits) : viewport.zoom;
    if (canvasBounds && horizontalScrollLimits) {
        const minZoom = canvasBounds.width / (horizontalScrollLimits.max - horizontalScrollLimits.min);
        if (zoom < minZoom) {
            zoom = minZoom;
        }
    }
    if (canvasBounds && verticalScrollLimits) {
        const minZoom = canvasBounds.height / (verticalScrollLimits.max - verticalScrollLimits.min);
        if (zoom < minZoom) {
            zoom = minZoom;
        }
    }
    // Limit the horizontal scroll position
    let scrollX;
    if (horizontalScrollLimits) {
        const min = horizontalScrollLimits.min;
        const max = canvasBounds ? horizontalScrollLimits.max - canvasBounds.width / zoom : horizontalScrollLimits.max;
        scrollX = (0, geometry_1.limit)(viewport.scroll.x, { min, max });
    }
    else {
        scrollX = viewport.scroll.x;
    }
    // Limit the vertical scroll position
    let scrollY;
    if (verticalScrollLimits) {
        const min = verticalScrollLimits.min;
        const max = canvasBounds ? verticalScrollLimits.max - canvasBounds.height / zoom : verticalScrollLimits.max;
        scrollY = (0, geometry_1.limit)(viewport.scroll.y, { min, max });
    }
    else {
        scrollY = viewport.scroll.y;
    }
    return { scroll: { x: scrollX, y: scrollY }, zoom };
}
exports.limitViewport = limitViewport;


/***/ }),

/***/ "../../node_modules/sprotty/lib/features/viewport/scroll.js":
/*!******************************************************************!*\
  !*** ../../node_modules/sprotty/lib/features/viewport/scroll.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isScrollable = exports.findViewportScrollbar = exports.ScrollMouseListener = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const actions_1 = __webpack_require__(/*! sprotty-protocol/lib/actions */ "../../node_modules/sprotty-protocol/lib/actions.js");
const geometry_1 = __webpack_require__(/*! sprotty-protocol/lib/utils/geometry */ "../../node_modules/sprotty-protocol/lib/utils/geometry.js");
const smodel_1 = __webpack_require__(/*! ../../base/model/smodel */ "../../node_modules/sprotty/lib/base/model/smodel.js");
const mouse_tool_1 = __webpack_require__(/*! ../../base/views/mouse-tool */ "../../node_modules/sprotty/lib/base/views/mouse-tool.js");
const smodel_utils_1 = __webpack_require__(/*! ../../base/model/smodel-utils */ "../../node_modules/sprotty/lib/base/model/smodel-utils.js");
const model_1 = __webpack_require__(/*! ./model */ "../../node_modules/sprotty/lib/features/viewport/model.js");
const model_2 = __webpack_require__(/*! ../move/model */ "../../node_modules/sprotty/lib/features/move/model.js");
const model_3 = __webpack_require__(/*! ../routing/model */ "../../node_modules/sprotty/lib/features/routing/model.js");
const model_4 = __webpack_require__(/*! ../projection/model */ "../../node_modules/sprotty/lib/features/projection/model.js");
const browser_1 = __webpack_require__(/*! ../../utils/browser */ "../../node_modules/sprotty/lib/utils/browser.js");
const types_1 = __webpack_require__(/*! ../../base/types */ "../../node_modules/sprotty/lib/base/types.js");
class ScrollMouseListener extends mouse_tool_1.MouseListener {
    constructor() {
        super(...arguments);
        this.scrollbarMouseDownDelay = 200;
    }
    mouseDown(target, event) {
        const moveable = (0, smodel_utils_1.findParentByFeature)(target, model_2.isMoveable);
        if (moveable === undefined && !(target instanceof model_3.SRoutingHandleImpl)) {
            const viewport = (0, smodel_utils_1.findParentByFeature)(target, model_1.isViewport);
            if (viewport) {
                this.lastScrollPosition = { x: event.pageX, y: event.pageY };
                this.scrollbar = this.getScrollbar(event);
                if (this.scrollbar) {
                    window.clearTimeout(this.scrollbarMouseDownTimeout);
                    return this.moveScrollBar(viewport, event, this.scrollbar, true)
                        .map(action => new Promise(resolve => {
                        this.scrollbarMouseDownTimeout = window.setTimeout(() => resolve(action), this.scrollbarMouseDownDelay);
                    }));
                }
            }
            else {
                this.lastScrollPosition = undefined;
                this.scrollbar = undefined;
            }
        }
        return [];
    }
    mouseMove(target, event) {
        if (event.buttons === 0) {
            return this.mouseUp(target, event);
        }
        if (this.scrollbar) {
            window.clearTimeout(this.scrollbarMouseDownTimeout);
            const viewport = (0, smodel_utils_1.findParentByFeature)(target, model_1.isViewport);
            if (viewport) {
                return this.moveScrollBar(viewport, event, this.scrollbar);
            }
        }
        if (this.lastScrollPosition) {
            const viewport = (0, smodel_utils_1.findParentByFeature)(target, model_1.isViewport);
            if (viewport) {
                return this.dragCanvas(viewport, event, this.lastScrollPosition);
            }
        }
        return [];
    }
    mouseEnter(target, event) {
        if (target instanceof smodel_1.SModelRootImpl && event.buttons === 0) {
            this.mouseUp(target, event);
        }
        return [];
    }
    mouseUp(target, event) {
        this.lastScrollPosition = undefined;
        this.scrollbar = undefined;
        return [];
    }
    doubleClick(target, event) {
        const viewport = (0, smodel_utils_1.findParentByFeature)(target, model_1.isViewport);
        if (viewport) {
            const scrollbar = this.getScrollbar(event);
            if (scrollbar) {
                window.clearTimeout(this.scrollbarMouseDownTimeout);
                const targetElement = this.findClickTarget(scrollbar, event);
                let elementId;
                if (targetElement && targetElement.id.startsWith('horizontal-projection:')) {
                    elementId = targetElement.id.substring('horizontal-projection:'.length);
                }
                else if (targetElement && targetElement.id.startsWith('vertical-projection:')) {
                    elementId = targetElement.id.substring('vertical-projection:'.length);
                }
                if (elementId) {
                    return [actions_1.CenterAction.create([elementId], { animate: true, retainZoom: true })];
                }
            }
        }
        return [];
    }
    dragCanvas(model, event, lastScrollPosition) {
        let dx = (event.pageX - lastScrollPosition.x) / model.zoom;
        if (dx > 0 && (0, geometry_1.almostEquals)(model.scroll.x, this.viewerOptions.horizontalScrollLimits.min)
            || dx < 0 && (0, geometry_1.almostEquals)(model.scroll.x, this.viewerOptions.horizontalScrollLimits.max - model.canvasBounds.width / model.zoom)) {
            dx = 0;
        }
        let dy = (event.pageY - lastScrollPosition.y) / model.zoom;
        if (dy > 0 && (0, geometry_1.almostEquals)(model.scroll.y, this.viewerOptions.verticalScrollLimits.min)
            || dy < 0 && (0, geometry_1.almostEquals)(model.scroll.y, this.viewerOptions.verticalScrollLimits.max - model.canvasBounds.height / model.zoom)) {
            dy = 0;
        }
        if (dx === 0 && dy === 0) {
            return [];
        }
        const newViewport = {
            scroll: {
                x: model.scroll.x - dx,
                y: model.scroll.y - dy,
            },
            zoom: model.zoom
        };
        this.lastScrollPosition = { x: event.pageX, y: event.pageY };
        return [actions_1.SetViewportAction.create(model.id, newViewport, { animate: false })];
    }
    moveScrollBar(model, event, scrollbar, animate = false) {
        const modelBounds = (0, model_4.getModelBounds)(model);
        if (!modelBounds || model.zoom <= 0) {
            return [];
        }
        const scrollbarRect = scrollbar.getBoundingClientRect();
        let newScroll;
        if (this.getScrollbarOrientation(scrollbar) === 'horizontal') {
            if (scrollbarRect.width <= 0) {
                return [];
            }
            const viewportSize = (model.canvasBounds.width / (model.zoom * modelBounds.width)) * scrollbarRect.width;
            let position = event.clientX - scrollbarRect.x - viewportSize / 2;
            if (position < 0) {
                position = 0;
            }
            else if (position > scrollbarRect.width - viewportSize) {
                position = scrollbarRect.width - viewportSize;
            }
            newScroll = {
                x: modelBounds.x + (position / scrollbarRect.width) * modelBounds.width,
                y: model.scroll.y
            };
            if (newScroll.x < this.viewerOptions.horizontalScrollLimits.min) {
                newScroll.x = this.viewerOptions.horizontalScrollLimits.min;
            }
            else if (newScroll.x > this.viewerOptions.horizontalScrollLimits.max - model.canvasBounds.width / model.zoom) {
                newScroll.x = this.viewerOptions.horizontalScrollLimits.max - model.canvasBounds.width / model.zoom;
            }
            if ((0, geometry_1.almostEquals)(newScroll.x, model.scroll.x)) {
                return [];
            }
        }
        else {
            if (scrollbarRect.height <= 0) {
                return [];
            }
            const viewportSize = (model.canvasBounds.height / (model.zoom * modelBounds.height)) * scrollbarRect.height;
            let position = event.clientY - scrollbarRect.y - viewportSize / 2;
            if (position < 0) {
                position = 0;
            }
            else if (position > scrollbarRect.height - viewportSize) {
                position = scrollbarRect.height - viewportSize;
            }
            newScroll = {
                x: model.scroll.x,
                y: modelBounds.y + (position / scrollbarRect.height) * modelBounds.height
            };
            if (newScroll.y < this.viewerOptions.verticalScrollLimits.min) {
                newScroll.y = this.viewerOptions.verticalScrollLimits.min;
            }
            else if (newScroll.y > this.viewerOptions.verticalScrollLimits.max - model.canvasBounds.height / model.zoom) {
                newScroll.y = this.viewerOptions.verticalScrollLimits.max - model.canvasBounds.height / model.zoom;
            }
            if ((0, geometry_1.almostEquals)(newScroll.y, model.scroll.y)) {
                return [];
            }
        }
        return [actions_1.SetViewportAction.create(model.id, { scroll: newScroll, zoom: model.zoom }, { animate })];
    }
    getScrollbar(event) {
        return findViewportScrollbar(event);
    }
    getScrollbarOrientation(scrollbar) {
        if (scrollbar.classList.contains('horizontal')) {
            return 'horizontal';
        }
        else {
            return 'vertical';
        }
    }
    findClickTarget(scrollbar, event) {
        const matching = Array.from(scrollbar.children).filter(child => child.id && child.classList.contains('sprotty-projection') && (0, browser_1.hitsMouseEvent)(child, event));
        if (matching.length > 0) {
            return matching[matching.length - 1];
        }
        return undefined;
    }
}
__decorate([
    (0, inversify_1.inject)(types_1.TYPES.ViewerOptions),
    __metadata("design:type", Object)
], ScrollMouseListener.prototype, "viewerOptions", void 0);
exports.ScrollMouseListener = ScrollMouseListener;
function findViewportScrollbar(event) {
    let element = event.target;
    while (element) {
        if (element.classList && element.classList.contains('sprotty-projection-bar')) {
            return element;
        }
        element = element.parentElement;
    }
    return undefined;
}
exports.findViewportScrollbar = findViewportScrollbar;
/**
 * @deprecated Use the declaration from `sprotty-protocol` instead.
 */
function isScrollable(element) {
    return 'scroll' in element;
}
exports.isScrollable = isScrollable;


/***/ }),

/***/ "../../node_modules/sprotty/lib/features/viewport/viewport-root.js":
/*!*************************************************************************!*\
  !*** ../../node_modules/sprotty/lib/features/viewport/viewport-root.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ViewportRootElement = void 0;
const geometry_1 = __webpack_require__(/*! sprotty-protocol/lib/utils/geometry */ "../../node_modules/sprotty-protocol/lib/utils/geometry.js");
const smodel_1 = __webpack_require__(/*! ../../base/model/smodel */ "../../node_modules/sprotty/lib/base/model/smodel.js");
const model_1 = __webpack_require__(/*! ./model */ "../../node_modules/sprotty/lib/features/viewport/model.js");
const model_2 = __webpack_require__(/*! ../export/model */ "../../node_modules/sprotty/lib/features/export/model.js");
/**
 * Model root element that defines a viewport, so it transforms the coordinate system with
 * a `scroll` translation and a `zoom` scaling.
 */
class ViewportRootElement extends smodel_1.SModelRootImpl {
    constructor(index) {
        super(index);
        this.scroll = { x: 0, y: 0 };
        this.zoom = 1;
        this.position = geometry_1.Point.ORIGIN;
        this.size = geometry_1.Dimension.EMPTY;
    }
    get bounds() {
        return {
            x: this.position.x,
            y: this.position.y,
            width: this.size.width,
            height: this.size.height
        };
    }
    set bounds(newBounds) {
        this.position = {
            x: newBounds.x,
            y: newBounds.y
        };
        this.size = {
            width: newBounds.width,
            height: newBounds.height
        };
    }
    localToParent(point) {
        const result = {
            x: (point.x - this.scroll.x) * this.zoom,
            y: (point.y - this.scroll.y) * this.zoom,
            width: -1,
            height: -1
        };
        if ((0, geometry_1.isBounds)(point)) {
            result.width = point.width * this.zoom;
            result.height = point.height * this.zoom;
        }
        return result;
    }
    parentToLocal(point) {
        const result = {
            x: (point.x / this.zoom) + this.scroll.x,
            y: (point.y / this.zoom) + this.scroll.y,
            width: -1,
            height: -1
        };
        if ((0, geometry_1.isBounds)(point) && geometry_1.Dimension.isValid(point)) {
            result.width = point.width / this.zoom;
            result.height = point.height / this.zoom;
        }
        return result;
    }
}
ViewportRootElement.DEFAULT_FEATURES = [model_1.viewportFeature, model_2.exportFeature];
exports.ViewportRootElement = ViewportRootElement;


/***/ }),

/***/ "../../node_modules/sprotty/lib/features/viewport/viewport.js":
/*!********************************************************************!*\
  !*** ../../node_modules/sprotty/lib/features/viewport/viewport.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2023 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var SetViewportCommand_1;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SetViewportAction = exports.ViewportAnimation = exports.GetViewportCommand = exports.SetViewportCommand = exports.ViewportResult = exports.GetViewportAction = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const actions_1 = __webpack_require__(/*! sprotty-protocol/lib/actions */ "../../node_modules/sprotty-protocol/lib/actions.js");
const geometry_1 = __webpack_require__(/*! sprotty-protocol/lib/utils/geometry */ "../../node_modules/sprotty-protocol/lib/utils/geometry.js");
const command_1 = __webpack_require__(/*! ../../base/commands/command */ "../../node_modules/sprotty/lib/base/commands/command.js");
const animation_1 = __webpack_require__(/*! ../../base/animations/animation */ "../../node_modules/sprotty/lib/base/animations/animation.js");
const model_1 = __webpack_require__(/*! ./model */ "../../node_modules/sprotty/lib/features/viewport/model.js");
const types_1 = __webpack_require__(/*! ../../base/types */ "../../node_modules/sprotty/lib/base/types.js");
const request_command_1 = __webpack_require__(/*! ../../base/commands/request-command */ "../../node_modules/sprotty/lib/base/commands/request-command.js");
var GetViewportAction;
(function (GetViewportAction) {
    GetViewportAction.KIND = 'getViewport';
    function create() {
        return {
            kind: GetViewportAction.KIND,
            requestId: (0, actions_1.generateRequestId)()
        };
    }
    GetViewportAction.create = create;
})(GetViewportAction = exports.GetViewportAction || (exports.GetViewportAction = {}));
var ViewportResult;
(function (ViewportResult) {
    ViewportResult.KIND = 'viewportResult';
    function create(viewport, canvasBounds, requestId) {
        return {
            kind: ViewportResult.KIND,
            viewport,
            canvasBounds,
            responseId: requestId
        };
    }
    ViewportResult.create = create;
})(ViewportResult = exports.ViewportResult || (exports.ViewportResult = {}));
let SetViewportCommand = SetViewportCommand_1 = class SetViewportCommand extends command_1.MergeableCommand {
    constructor(action) {
        super();
        this.action = action;
        this.newViewport = action.newViewport;
    }
    execute(context) {
        const model = context.root;
        const element = model.index.getById(this.action.elementId);
        if (element && (0, model_1.isViewport)(element)) {
            this.element = element;
            this.oldViewport = {
                scroll: this.element.scroll,
                zoom: this.element.zoom,
            };
            const { zoomLimits, horizontalScrollLimits, verticalScrollLimits } = this.viewerOptions;
            this.newViewport = (0, model_1.limitViewport)(this.newViewport, model.canvasBounds, horizontalScrollLimits, verticalScrollLimits, zoomLimits);
            return this.setViewport(element, this.oldViewport, this.newViewport, context);
        }
        return context.root;
    }
    setViewport(element, oldViewport, newViewport, context) {
        if (element && (0, model_1.isViewport)(element)) {
            if (this.action.animate) {
                return new ViewportAnimation(element, oldViewport, newViewport, context).start();
            }
            else {
                element.scroll = newViewport.scroll;
                element.zoom = newViewport.zoom;
            }
        }
        return context.root;
    }
    undo(context) {
        return this.setViewport(this.element, this.newViewport, this.oldViewport, context);
    }
    redo(context) {
        return this.setViewport(this.element, this.oldViewport, this.newViewport, context);
    }
    merge(command, context) {
        if (!this.action.animate && command instanceof SetViewportCommand_1 && this.element === command.element) {
            this.newViewport = command.newViewport;
            return true;
        }
        return false;
    }
};
SetViewportCommand.KIND = actions_1.SetViewportAction.KIND;
__decorate([
    (0, inversify_1.inject)(types_1.TYPES.ViewerOptions),
    __metadata("design:type", Object)
], SetViewportCommand.prototype, "viewerOptions", void 0);
SetViewportCommand = SetViewportCommand_1 = __decorate([
    (0, inversify_1.injectable)(),
    __param(0, (0, inversify_1.inject)(types_1.TYPES.Action)),
    __metadata("design:paramtypes", [Object])
], SetViewportCommand);
exports.SetViewportCommand = SetViewportCommand;
let GetViewportCommand = class GetViewportCommand extends request_command_1.ModelRequestCommand {
    constructor(action) {
        super();
        this.action = action;
    }
    retrieveResult(context) {
        const elem = context.root;
        let viewport;
        if ((0, model_1.isViewport)(elem)) {
            viewport = { scroll: elem.scroll, zoom: elem.zoom };
        }
        else {
            viewport = { scroll: geometry_1.Point.ORIGIN, zoom: 1 };
        }
        return ViewportResult.create(viewport, elem.canvasBounds, this.action.requestId);
    }
};
GetViewportCommand.KIND = GetViewportAction.KIND;
GetViewportCommand = __decorate([
    __param(0, (0, inversify_1.inject)(types_1.TYPES.Action)),
    __metadata("design:paramtypes", [Object])
], GetViewportCommand);
exports.GetViewportCommand = GetViewportCommand;
class ViewportAnimation extends animation_1.Animation {
    constructor(element, oldViewport, newViewport, context) {
        super(context);
        this.element = element;
        this.oldViewport = oldViewport;
        this.newViewport = newViewport;
        this.context = context;
        this.zoomFactor = Math.log(newViewport.zoom / oldViewport.zoom);
    }
    tween(t, context) {
        this.element.scroll = {
            x: (1 - t) * this.oldViewport.scroll.x + t * this.newViewport.scroll.x,
            y: (1 - t) * this.oldViewport.scroll.y + t * this.newViewport.scroll.y
        };
        this.element.zoom = this.oldViewport.zoom * Math.exp(t * this.zoomFactor);
        return context.root;
    }
}
exports.ViewportAnimation = ViewportAnimation;
// Compatibility deprecation layer (will be removed with the graduation 1.0.0 release)
/**
 * @deprecated Use the declaration from `sprotty-protocol` instead.
 */
class SetViewportAction {
    constructor(elementId, newViewport, animate) {
        this.elementId = elementId;
        this.newViewport = newViewport;
        this.animate = animate;
        this.kind = SetViewportAction.KIND;
    }
}
SetViewportAction.KIND = 'viewport';
exports.SetViewportAction = SetViewportAction;


/***/ }),

/***/ "../../node_modules/sprotty/lib/features/viewport/zoom.js":
/*!****************************************************************!*\
  !*** ../../node_modules/sprotty/lib/features/viewport/zoom.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2023 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isZoomable = exports.ZoomMouseListener = exports.getZoom = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const actions_1 = __webpack_require__(/*! sprotty-protocol/lib/actions */ "../../node_modules/sprotty-protocol/lib/actions.js");
const geometry_1 = __webpack_require__(/*! sprotty-protocol/lib/utils/geometry */ "../../node_modules/sprotty-protocol/lib/utils/geometry.js");
const smodel_utils_1 = __webpack_require__(/*! ../../base/model/smodel-utils */ "../../node_modules/sprotty/lib/base/model/smodel-utils.js");
const types_1 = __webpack_require__(/*! ../../base/types */ "../../node_modules/sprotty/lib/base/types.js");
const mouse_tool_1 = __webpack_require__(/*! ../../base/views/mouse-tool */ "../../node_modules/sprotty/lib/base/views/mouse-tool.js");
const browser_1 = __webpack_require__(/*! ../../utils/browser */ "../../node_modules/sprotty/lib/utils/browser.js");
const model_1 = __webpack_require__(/*! ./model */ "../../node_modules/sprotty/lib/features/viewport/model.js");
function getZoom(label) {
    let zoom = 1;
    const viewport = (0, smodel_utils_1.findParentByFeature)(label, model_1.isViewport);
    if (viewport) {
        zoom = viewport.zoom;
    }
    return zoom;
}
exports.getZoom = getZoom;
class ZoomMouseListener extends mouse_tool_1.MouseListener {
    wheel(target, event) {
        const viewport = (0, smodel_utils_1.findParentByFeature)(target, model_1.isViewport);
        if (!viewport) {
            return [];
        }
        const newViewport = this.isScrollMode(event) ? this.processScroll(viewport, event) : this.processZoom(viewport, target, event);
        if (newViewport) {
            return [actions_1.SetViewportAction.create(viewport.id, newViewport, { animate: false })];
        }
        return [];
    }
    isScrollMode(event) {
        return event.altKey;
    }
    processScroll(viewport, event) {
        return {
            scroll: {
                x: viewport.scroll.x + event.deltaX,
                y: viewport.scroll.y + event.deltaY
            },
            zoom: viewport.zoom
        };
    }
    processZoom(viewport, target, event) {
        const zoomFactor = this.getZoomFactor(event);
        if (zoomFactor > 1 && (0, geometry_1.almostEquals)(viewport.zoom, this.viewerOptions.zoomLimits.max)
            || zoomFactor < 1 && (0, geometry_1.almostEquals)(viewport.zoom, this.viewerOptions.zoomLimits.min)) {
            return;
        }
        const zoom = viewport.zoom * zoomFactor;
        const viewportOffset = this.getViewportOffset(target.root, event);
        const offsetFactor = 1.0 / zoom - 1.0 / viewport.zoom;
        return {
            scroll: {
                x: viewport.scroll.x - offsetFactor * viewportOffset.x,
                y: viewport.scroll.y - offsetFactor * viewportOffset.y
            },
            zoom
        };
    }
    getViewportOffset(root, event) {
        const canvasBounds = root.canvasBounds;
        const windowScroll = (0, browser_1.getWindowScroll)();
        return {
            x: event.clientX + windowScroll.x - canvasBounds.x,
            y: event.clientY + windowScroll.y - canvasBounds.y
        };
    }
    getZoomFactor(event) {
        if (event.deltaMode === event.DOM_DELTA_PAGE)
            return Math.exp(-event.deltaY * 0.5);
        else if (event.deltaMode === event.DOM_DELTA_LINE)
            return Math.exp(-event.deltaY * 0.05);
        else // deltaMode === DOM_DELTA_PIXEL
            return Math.exp(-event.deltaY * 0.005);
    }
}
__decorate([
    (0, inversify_1.inject)(types_1.TYPES.ViewerOptions),
    __metadata("design:type", Object)
], ZoomMouseListener.prototype, "viewerOptions", void 0);
exports.ZoomMouseListener = ZoomMouseListener;
/**
 * @deprecated Use the declaration from `sprotty-protocol` instead.
 */
function isZoomable(element) {
    return 'zoom' in element;
}
exports.isZoomable = isZoomable;


/***/ }),

/***/ "../../node_modules/sprotty/lib/features/zorder/di.config.js":
/*!*******************************************************************!*\
  !*** ../../node_modules/sprotty/lib/features/zorder/di.config.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2019 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const command_registration_1 = __webpack_require__(/*! ../../base/commands/command-registration */ "../../node_modules/sprotty/lib/base/commands/command-registration.js");
const zorder_1 = __webpack_require__(/*! ./zorder */ "../../node_modules/sprotty/lib/features/zorder/zorder.js");
const zorderModule = new inversify_1.ContainerModule((bind, _unbind, isBound) => {
    (0, command_registration_1.configureCommand)({ bind, isBound }, zorder_1.BringToFrontCommand);
});
exports["default"] = zorderModule;


/***/ }),

/***/ "../../node_modules/sprotty/lib/features/zorder/zorder.js":
/*!****************************************************************!*\
  !*** ../../node_modules/sprotty/lib/features/zorder/zorder.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2019 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.BringToFrontAction = exports.BringToFrontCommand = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const actions_1 = __webpack_require__(/*! sprotty-protocol/lib/actions */ "../../node_modules/sprotty-protocol/lib/actions.js");
const types_1 = __webpack_require__(/*! ../../base/types */ "../../node_modules/sprotty/lib/base/types.js");
const smodel_1 = __webpack_require__(/*! ../../base/model/smodel */ "../../node_modules/sprotty/lib/base/model/smodel.js");
const command_1 = __webpack_require__(/*! ../../base/commands/command */ "../../node_modules/sprotty/lib/base/commands/command.js");
const model_1 = __webpack_require__(/*! ../routing/model */ "../../node_modules/sprotty/lib/features/routing/model.js");
let BringToFrontCommand = class BringToFrontCommand extends command_1.Command {
    constructor(action) {
        super();
        this.action = action;
        this.selected = [];
    }
    execute(context) {
        const model = context.root;
        this.action.elementIDs.forEach(id => {
            const element = model.index.getById(id);
            if (element instanceof model_1.SRoutableElementImpl) {
                if (element.source)
                    this.addToSelection(element.source);
                if (element.target)
                    this.addToSelection(element.target);
            }
            if (element instanceof smodel_1.SChildElementImpl) {
                this.addToSelection(element);
            }
            this.includeConnectedEdges(element);
        });
        return this.redo(context);
    }
    includeConnectedEdges(element) {
        if (element instanceof model_1.SConnectableElementImpl) {
            element.incomingEdges.forEach(edge => this.addToSelection(edge));
            element.outgoingEdges.forEach(edge => this.addToSelection(edge));
        }
        if (element instanceof smodel_1.SParentElementImpl) {
            for (const child of element.children) {
                this.includeConnectedEdges(child);
            }
        }
    }
    addToSelection(element) {
        this.selected.push({
            element: element,
            index: element.parent.children.indexOf(element)
        });
    }
    undo(context) {
        for (let i = this.selected.length - 1; i >= 0; i--) {
            const selection = this.selected[i];
            const element = selection.element;
            element.parent.move(element, selection.index);
        }
        return context.root;
    }
    redo(context) {
        for (let i = 0; i < this.selected.length; i++) {
            this.bringToFront(this.selected[i]);
        }
        return context.root;
    }
    bringToFront(selection) {
        const element = selection.element;
        const childrenLength = element.parent.children.length;
        element.parent.move(element, childrenLength - 1);
    }
};
BringToFrontCommand.KIND = actions_1.BringToFrontAction.KIND;
BringToFrontCommand = __decorate([
    (0, inversify_1.injectable)(),
    __param(0, (0, inversify_1.inject)(types_1.TYPES.Action)),
    __metadata("design:paramtypes", [Object])
], BringToFrontCommand);
exports.BringToFrontCommand = BringToFrontCommand;
var BringToFrontAction;
(function (BringToFrontAction) {
    BringToFrontAction.KIND = 'bringToFront';
    function create(elementIDs) {
        return {
            kind: BringToFrontAction.KIND,
            elementIDs
        };
    }
    BringToFrontAction.create = create;
})(BringToFrontAction = exports.BringToFrontAction || (exports.BringToFrontAction = {}));


/***/ }),

/***/ "../../node_modules/sprotty/lib/graph/di.config.js":
/*!*********************************************************!*\
  !*** ../../node_modules/sprotty/lib/graph/di.config.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const types_1 = __webpack_require__(/*! ../base/types */ "../../node_modules/sprotty/lib/base/types.js");
const sgraph_factory_1 = __webpack_require__(/*! ./sgraph-factory */ "../../node_modules/sprotty/lib/graph/sgraph-factory.js");
const graphModule = new inversify_1.ContainerModule((bind, unbind, isBound, rebind) => {
    rebind(types_1.TYPES.IModelFactory).to(sgraph_factory_1.SGraphFactory).inSingletonScope();
});
exports["default"] = graphModule;


/***/ }),

/***/ "../../node_modules/sprotty/lib/graph/sgraph-factory.js":
/*!**************************************************************!*\
  !*** ../../node_modules/sprotty/lib/graph/sgraph-factory.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SGraphFactory = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const model_utils_1 = __webpack_require__(/*! sprotty-protocol/lib/utils/model-utils */ "../../node_modules/sprotty-protocol/lib/utils/model-utils.js");
const smodel_factory_1 = __webpack_require__(/*! ../base/model/smodel-factory */ "../../node_modules/sprotty/lib/base/model/smodel-factory.js");
const smodel_1 = __webpack_require__(/*! ../base/model/smodel */ "../../node_modules/sprotty/lib/base/model/smodel.js");
const sgraph_1 = __webpack_require__(/*! ./sgraph */ "../../node_modules/sprotty/lib/graph/sgraph.js");
const model_1 = __webpack_require__(/*! ../features/button/model */ "../../node_modules/sprotty/lib/features/button/model.js");
/**
 * @deprecated
 * Subclassing SModelFactory is discouraged. Use `registerModelElement`
 * or `configureModelElement` instead.
 */
let SGraphFactory = class SGraphFactory extends smodel_factory_1.SModelFactory {
    constructor() {
        super(...arguments);
        this.defaultGraphFeatures = (0, smodel_factory_1.createFeatureSet)(sgraph_1.SGraphImpl.DEFAULT_FEATURES);
        this.defaultNodeFeatures = (0, smodel_factory_1.createFeatureSet)(sgraph_1.SNodeImpl.DEFAULT_FEATURES);
        this.defaultPortFeatures = (0, smodel_factory_1.createFeatureSet)(sgraph_1.SPortImpl.DEFAULT_FEATURES);
        this.defaultEdgeFeatures = (0, smodel_factory_1.createFeatureSet)(sgraph_1.SEdgeImpl.DEFAULT_FEATURES);
        this.defaultLabelFeatures = (0, smodel_factory_1.createFeatureSet)(sgraph_1.SLabelImpl.DEFAULT_FEATURES);
        this.defaultCompartmentFeatures = (0, smodel_factory_1.createFeatureSet)(sgraph_1.SCompartmentImpl.DEFAULT_FEATURES);
        this.defaultButtonFeatures = (0, smodel_factory_1.createFeatureSet)(model_1.SButtonImpl.DEFAULT_FEATURES);
    }
    createElement(schema, parent) {
        let child;
        if (this.registry.hasKey(schema.type)) {
            const regElement = this.registry.get(schema.type, undefined);
            if (!(regElement instanceof smodel_1.SChildElementImpl))
                throw new Error(`Element with type ${schema.type} was expected to be an SChildElement.`);
            child = regElement;
        }
        else if (this.isNodeSchema(schema)) {
            child = new sgraph_1.SNodeImpl();
            child.features = this.defaultNodeFeatures;
        }
        else if (this.isPortSchema(schema)) {
            child = new sgraph_1.SPortImpl();
            child.features = this.defaultPortFeatures;
        }
        else if (this.isEdgeSchema(schema)) {
            child = new sgraph_1.SEdgeImpl();
            child.features = this.defaultEdgeFeatures;
        }
        else if (this.isLabelSchema(schema)) {
            child = new sgraph_1.SLabelImpl();
            child.features = this.defaultLabelFeatures;
        }
        else if (this.isCompartmentSchema(schema)) {
            child = new sgraph_1.SCompartmentImpl();
            child.features = this.defaultCompartmentFeatures;
        }
        else if (this.isButtonSchema(schema)) {
            child = new model_1.SButtonImpl();
            child.features = this.defaultButtonFeatures;
        }
        else {
            child = new smodel_1.SChildElementImpl();
        }
        return this.initializeChild(child, schema, parent);
    }
    createRoot(schema) {
        let root;
        if (this.registry.hasKey(schema.type)) {
            const regElement = this.registry.get(schema.type, undefined);
            if (!(regElement instanceof smodel_1.SModelRootImpl))
                throw new Error(`Element with type ${schema.type} was expected to be an SModelRoot.`);
            root = regElement;
        }
        else if (this.isGraphSchema(schema)) {
            root = new sgraph_1.SGraphImpl();
            root.features = this.defaultGraphFeatures;
        }
        else {
            root = new smodel_1.SModelRootImpl();
        }
        return this.initializeRoot(root, schema);
    }
    isGraphSchema(schema) {
        return (0, model_utils_1.getBasicType)(schema) === 'graph';
    }
    isNodeSchema(schema) {
        return (0, model_utils_1.getBasicType)(schema) === 'node';
    }
    isPortSchema(schema) {
        return (0, model_utils_1.getBasicType)(schema) === 'port';
    }
    isEdgeSchema(schema) {
        return (0, model_utils_1.getBasicType)(schema) === 'edge';
    }
    isLabelSchema(schema) {
        return (0, model_utils_1.getBasicType)(schema) === 'label';
    }
    isCompartmentSchema(schema) {
        return (0, model_utils_1.getBasicType)(schema) === 'comp';
    }
    isButtonSchema(schema) {
        return (0, model_utils_1.getBasicType)(schema) === 'button';
    }
};
SGraphFactory = __decorate([
    (0, inversify_1.injectable)()
], SGraphFactory);
exports.SGraphFactory = SGraphFactory;


/***/ }),

/***/ "../../node_modules/sprotty/lib/graph/sgraph.js":
/*!******************************************************!*\
  !*** ../../node_modules/sprotty/lib/graph/sgraph.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SLabel = exports.SEdge = exports.SPort = exports.SNode = exports.SGraph = exports.SCompartment = exports.SGraphIndex = exports.SCompartmentImpl = exports.SLabelImpl = exports.SEdgeImpl = exports.SPortImpl = exports.SNodeImpl = exports.SGraphImpl = void 0;
const geometry_1 = __webpack_require__(/*! sprotty-protocol/lib/utils/geometry */ "../../node_modules/sprotty-protocol/lib/utils/geometry.js");
const smodel_1 = __webpack_require__(/*! ../base/model/smodel */ "../../node_modules/sprotty/lib/base/model/smodel.js");
const model_1 = __webpack_require__(/*! ../features/bounds/model */ "../../node_modules/sprotty/lib/features/bounds/model.js");
const model_2 = __webpack_require__(/*! ../features/edge-layout/model */ "../../node_modules/sprotty/lib/features/edge-layout/model.js");
const delete_1 = __webpack_require__(/*! ../features/edit/delete */ "../../node_modules/sprotty/lib/features/edit/delete.js");
const model_3 = __webpack_require__(/*! ../features/edit/model */ "../../node_modules/sprotty/lib/features/edit/model.js");
const model_4 = __webpack_require__(/*! ../features/fade/model */ "../../node_modules/sprotty/lib/features/fade/model.js");
const model_5 = __webpack_require__(/*! ../features/hover/model */ "../../node_modules/sprotty/lib/features/hover/model.js");
const model_6 = __webpack_require__(/*! ../features/move/model */ "../../node_modules/sprotty/lib/features/move/model.js");
const model_7 = __webpack_require__(/*! ../features/routing/model */ "../../node_modules/sprotty/lib/features/routing/model.js");
const model_8 = __webpack_require__(/*! ../features/select/model */ "../../node_modules/sprotty/lib/features/select/model.js");
const viewport_root_1 = __webpack_require__(/*! ../features/viewport/viewport-root */ "../../node_modules/sprotty/lib/features/viewport/viewport-root.js");
const iterable_1 = __webpack_require__(/*! ../utils/iterable */ "../../node_modules/sprotty/lib/utils/iterable.js");
/**
 * Root element for graph-like models.
 */
class SGraphImpl extends viewport_root_1.ViewportRootElement {
    constructor(index = new SGraphIndex()) {
        super(index);
    }
}
exports.SGraphImpl = SGraphImpl;
/**
 * Model element class for nodes, which are the main entities in a graph. A node can be connected to
 * another node via an SEdge. Such a connection can be direct, i.e. the node is the source or target of
 * the edge, or indirect through a port, i.e. it contains an SPort which is the source or target of the edge.
 */
class SNodeImpl extends model_7.SConnectableElementImpl {
    constructor() {
        super(...arguments);
        this.selected = false;
        this.hoverFeedback = false;
        this.opacity = 1;
    }
    canConnect(routable, role) {
        return this.children.find(c => c instanceof SPortImpl) === undefined;
    }
    get incomingEdges() {
        const index = this.index;
        if (index instanceof SGraphIndex) {
            return index.getIncomingEdges(this);
        }
        const allEdges = this.index.all().filter(e => e instanceof SEdgeImpl);
        return allEdges.filter(e => e.targetId === this.id);
    }
    get outgoingEdges() {
        const index = this.index;
        if (index instanceof SGraphIndex) {
            return index.getOutgoingEdges(this);
        }
        const allEdges = this.index.all().filter(e => e instanceof SEdgeImpl);
        return allEdges.filter(e => e.sourceId === this.id);
    }
}
SNodeImpl.DEFAULT_FEATURES = [model_7.connectableFeature, delete_1.deletableFeature, model_8.selectFeature, model_1.boundsFeature,
    model_6.moveFeature, model_1.layoutContainerFeature, model_4.fadeFeature, model_5.hoverFeedbackFeature, model_5.popupFeature];
exports.SNodeImpl = SNodeImpl;
/**
 * A port is a connection point for edges. It should always be contained in an SNode.
 */
class SPortImpl extends model_7.SConnectableElementImpl {
    constructor() {
        super(...arguments);
        this.selected = false;
        this.hoverFeedback = false;
        this.opacity = 1;
    }
    get incomingEdges() {
        const index = this.index;
        if (index instanceof SGraphIndex) {
            return index.getIncomingEdges(this);
        }
        return super.incomingEdges.filter(e => e instanceof SEdgeImpl);
    }
    get outgoingEdges() {
        const index = this.index;
        if (index instanceof SGraphIndex) {
            return index.getOutgoingEdges(this);
        }
        return super.outgoingEdges.filter(e => e instanceof SEdgeImpl);
    }
}
SPortImpl.DEFAULT_FEATURES = [model_7.connectableFeature, model_8.selectFeature, model_1.boundsFeature, model_4.fadeFeature,
    model_5.hoverFeedbackFeature];
exports.SPortImpl = SPortImpl;
/**
 * Model element class for edges, which are the connectors in a graph. An edge has a source and a target,
 * each of which can be either a node or a port. The source and target elements are referenced via their
 * ids and can be resolved with the index stored in the root element.
 */
class SEdgeImpl extends model_7.SRoutableElementImpl {
    constructor() {
        super(...arguments);
        this.selected = false;
        this.hoverFeedback = false;
        this.opacity = 1;
    }
}
SEdgeImpl.DEFAULT_FEATURES = [model_3.editFeature, delete_1.deletableFeature, model_8.selectFeature, model_4.fadeFeature,
    model_5.hoverFeedbackFeature];
exports.SEdgeImpl = SEdgeImpl;
/**
 * A label can be attached to a node, edge, or port, and contains some text to be rendered in its view.
 */
class SLabelImpl extends model_1.SShapeElementImpl {
    constructor() {
        super(...arguments);
        this.selected = false;
        this.alignment = geometry_1.Point.ORIGIN;
        this.opacity = 1;
    }
}
SLabelImpl.DEFAULT_FEATURES = [model_1.boundsFeature, model_1.alignFeature, model_1.layoutableChildFeature,
    model_2.edgeLayoutFeature, model_4.fadeFeature];
exports.SLabelImpl = SLabelImpl;
/**
 * A compartment is used to group multiple child elements such as labels of a node. Usually a `vbox`
 * or `hbox` layout is used to arrange these children.
 */
class SCompartmentImpl extends model_1.SShapeElementImpl {
    constructor() {
        super(...arguments);
        this.opacity = 1;
    }
}
SCompartmentImpl.DEFAULT_FEATURES = [model_1.boundsFeature, model_1.layoutContainerFeature, model_1.layoutableChildFeature,
    model_4.fadeFeature];
exports.SCompartmentImpl = SCompartmentImpl;
/**
 * A specialized model index that tracks outgoing and incoming edges.
 */
class SGraphIndex extends smodel_1.ModelIndexImpl {
    constructor() {
        super(...arguments);
        this.outgoing = new Map;
        this.incoming = new Map;
    }
    add(element) {
        super.add(element);
        if (element instanceof SEdgeImpl) {
            // Register the edge in the outgoing map
            if (element.sourceId) {
                const sourceArr = this.outgoing.get(element.sourceId);
                if (sourceArr === undefined)
                    this.outgoing.set(element.sourceId, [element]);
                else
                    sourceArr.push(element);
            }
            // Register the edge in the incoming map
            if (element.targetId) {
                const targetArr = this.incoming.get(element.targetId);
                if (targetArr === undefined)
                    this.incoming.set(element.targetId, [element]);
                else
                    targetArr.push(element);
            }
        }
    }
    remove(element) {
        super.remove(element);
        if (element instanceof SEdgeImpl) {
            // Remove the edge from the outgoing map
            const sourceArr = this.outgoing.get(element.sourceId);
            if (sourceArr !== undefined) {
                const index = sourceArr.indexOf(element);
                if (index >= 0) {
                    if (sourceArr.length === 1)
                        this.outgoing.delete(element.sourceId);
                    else
                        sourceArr.splice(index, 1);
                }
            }
            // Remove the edge from the incoming map
            const targetArr = this.incoming.get(element.targetId);
            if (targetArr !== undefined) {
                const index = targetArr.indexOf(element);
                if (index >= 0) {
                    if (targetArr.length === 1)
                        this.incoming.delete(element.targetId);
                    else
                        targetArr.splice(index, 1);
                }
            }
        }
    }
    getAttachedElements(element) {
        return new iterable_1.FluentIterableImpl(() => ({
            outgoing: this.outgoing.get(element.id),
            incoming: this.incoming.get(element.id),
            nextOutgoingIndex: 0,
            nextIncomingIndex: 0
        }), (state) => {
            let index = state.nextOutgoingIndex;
            if (state.outgoing !== undefined && index < state.outgoing.length) {
                state.nextOutgoingIndex = index + 1;
                return { done: false, value: state.outgoing[index] };
            }
            index = state.nextIncomingIndex;
            if (state.incoming !== undefined) {
                // Filter out self-loops: edges that are both outgoing and incoming
                while (index < state.incoming.length) {
                    const edge = state.incoming[index];
                    if (edge.sourceId !== edge.targetId) {
                        state.nextIncomingIndex = index + 1;
                        return { done: false, value: edge };
                    }
                    index++;
                }
            }
            return { done: true, value: undefined };
        });
    }
    getIncomingEdges(element) {
        return this.incoming.get(element.id) || [];
    }
    getOutgoingEdges(element) {
        return this.outgoing.get(element.id) || [];
    }
}
exports.SGraphIndex = SGraphIndex;
/** @deprecated Use `SCompartmentImpl` instead. */
exports.SCompartment = SCompartmentImpl;
/** @deprecated Use `SGraphImpl` instead. */
exports.SGraph = SGraphImpl;
/** @deprecated Use `SNodeImpl` instead. */
exports.SNode = SNodeImpl;
/** @deprecated Use `SPortImpl` instead. */
exports.SPort = SPortImpl;
/** @deprecated Use `SEdgeImpl` instead. */
exports.SEdge = SEdgeImpl;
/** @deprecated Use `SLabelImpl` instead. */
exports.SLabel = SLabelImpl;


/***/ }),

/***/ "../../node_modules/sprotty/lib/graph/views.js":
/*!*****************************************************!*\
  !*** ../../node_modules/sprotty/lib/graph/views.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2022 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SBezierControlHandleView = exports.SBezierCreateHandleView = exports.SCompartmentView = exports.SLabelView = exports.SRoutingHandleView = exports.BezierCurveEdgeView = exports.PolylineEdgeViewWithGapsOnIntersections = exports.JumpingPolylineEdgeView = exports.PolylineEdgeView = exports.SGraphView = void 0;
/** @jsx svg */
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const geometry_1 = __webpack_require__(/*! sprotty-protocol/lib/utils/geometry */ "../../node_modules/sprotty-protocol/lib/utils/geometry.js");
const model_utils_1 = __webpack_require__(/*! sprotty-protocol/lib/utils/model-utils */ "../../node_modules/sprotty-protocol/lib/utils/model-utils.js");
const vnode_utils_1 = __webpack_require__(/*! ../base/views/vnode-utils */ "../../node_modules/sprotty/lib/base/views/vnode-utils.js");
const views_1 = __webpack_require__(/*! ../features/bounds/views */ "../../node_modules/sprotty/lib/features/bounds/views.js");
const intersection_finder_1 = __webpack_require__(/*! ../features/edge-intersection/intersection-finder */ "../../node_modules/sprotty/lib/features/edge-intersection/intersection-finder.js");
const model_1 = __webpack_require__(/*! ../features/edge-layout/model */ "../../node_modules/sprotty/lib/features/edge-layout/model.js");
const model_2 = __webpack_require__(/*! ../features/routing/model */ "../../node_modules/sprotty/lib/features/routing/model.js");
const routing_1 = __webpack_require__(/*! ../features/routing/routing */ "../../node_modules/sprotty/lib/features/routing/routing.js");
const views_2 = __webpack_require__(/*! ../features/routing/views */ "../../node_modules/sprotty/lib/features/routing/views.js");
const jsx_1 = __webpack_require__(/*! ../lib/jsx */ "../../node_modules/sprotty/lib/lib/jsx.js");
const geometry_2 = __webpack_require__(/*! ../utils/geometry */ "../../node_modules/sprotty/lib/utils/geometry.js");
/**
 * IView component that turns an SGraph element and its children into a tree of virtual DOM elements.
 */
let SGraphView = class SGraphView {
    render(model, context) {
        const edgeRouting = this.edgeRouterRegistry.routeAllChildren(model);
        const transform = `scale(${model.zoom}) translate(${-model.scroll.x},${-model.scroll.y})`;
        return (0, jsx_1.svg)("svg", { "class-sprotty-graph": true },
            (0, jsx_1.svg)("g", { transform: transform }, context.renderChildren(model, { edgeRouting })));
    }
};
__decorate([
    (0, inversify_1.inject)(routing_1.EdgeRouterRegistry),
    __metadata("design:type", routing_1.EdgeRouterRegistry)
], SGraphView.prototype, "edgeRouterRegistry", void 0);
SGraphView = __decorate([
    (0, inversify_1.injectable)()
], SGraphView);
exports.SGraphView = SGraphView;
let PolylineEdgeView = class PolylineEdgeView extends views_2.RoutableView {
    render(edge, context, args) {
        const route = this.edgeRouterRegistry.route(edge, args);
        if (route.length === 0) {
            return this.renderDanglingEdge("Cannot compute route", edge, context);
        }
        if (!this.isVisible(edge, route, context)) {
            if (edge.children.length === 0) {
                return undefined;
            }
            // The children of an edge are not necessarily inside the bounding box of the route,
            // so we need to render a group to ensure the children have a chance to be rendered.
            return (0, jsx_1.svg)("g", null, context.renderChildren(edge, { route }));
        }
        return (0, jsx_1.svg)("g", { "class-sprotty-edge": true, "class-mouseover": edge.hoverFeedback },
            this.renderLine(edge, route, context, args),
            this.renderAdditionals(edge, route, context),
            context.renderChildren(edge, { route }));
    }
    renderLine(edge, segments, context, args) {
        const firstPoint = segments[0];
        let path = `M ${firstPoint.x},${firstPoint.y}`;
        for (let i = 1; i < segments.length; i++) {
            const p = segments[i];
            path += ` L ${p.x},${p.y}`;
        }
        return (0, jsx_1.svg)("path", { d: path });
    }
    renderAdditionals(edge, segments, context) {
        // here we need to render the control points?
        return [];
    }
    renderDanglingEdge(message, edge, context) {
        return (0, jsx_1.svg)("text", { "class-sprotty-edge-dangling": true, title: message }, "?");
    }
};
__decorate([
    (0, inversify_1.inject)(routing_1.EdgeRouterRegistry),
    __metadata("design:type", routing_1.EdgeRouterRegistry)
], PolylineEdgeView.prototype, "edgeRouterRegistry", void 0);
PolylineEdgeView = __decorate([
    (0, inversify_1.injectable)()
], PolylineEdgeView);
exports.PolylineEdgeView = PolylineEdgeView;
/**
 * A `PolylineEdgeView` that renders jumps over intersections.
 *
 * In order to find intersections, `IntersectionFinder` needs to be configured as a `TYPES.IEdgeRoutePostprocessor`
 * so that that intersections are declared as `IntersectingRoutedPoint` in the computed routes.
 *
 * This view only draws correct line jumps for intersections among straight line segments and doesn't work with bezier curves.
 *
 * @see IntersectionFinder
 * @see IntersectingRoutedPoint
 * @see EdgeRouterRegistry
 */
let JumpingPolylineEdgeView = class JumpingPolylineEdgeView extends PolylineEdgeView {
    constructor() {
        super(...arguments);
        this.jumpOffsetBefore = 5;
        this.jumpOffsetAfter = 5;
        this.skipOffsetBefore = 3;
        this.skipOffsetAfter = 2;
    }
    renderLine(edge, segments, context, args) {
        let path = '';
        for (let i = 0; i < segments.length; i++) {
            const p = segments[i];
            if (i === 0) {
                path = `M ${p.x},${p.y}`;
            }
            if ((0, intersection_finder_1.isIntersectingRoutedPoint)(p)) {
                path += this.intersectionPath(edge, segments, p, args);
            }
            if (i !== 0) {
                path += ` L ${p.x},${p.y}`;
            }
        }
        return (0, jsx_1.svg)("path", { d: path });
    }
    /**
     * Returns a path that takes the intersections into account by drawing a line jump or a gap for intersections on that path.
     */
    intersectionPath(edge, segments, intersectingPoint, args) {
        if (intersectingPoint.intersections.length < 1) {
            return '';
        }
        const segment = this.getLineSegment(edge, intersectingPoint.intersections[0], args, segments);
        const intersections = this.getIntersectionsSortedBySegmentDirection(segment, intersectingPoint);
        let path = '';
        for (const intersection of intersections) {
            const otherLineSegment = this.getOtherLineSegment(edge, intersection, args);
            if (otherLineSegment === undefined) {
                continue;
            }
            const currentLineSegment = this.getLineSegment(edge, intersection, args, segments);
            const intersectionPoint = intersection.intersectionPoint;
            if (this.shouldDrawLineJumpOnIntersection(currentLineSegment, otherLineSegment)) {
                path += this.createJumpPath(intersectionPoint, currentLineSegment);
            }
            else if (this.shouldDrawLineGapOnIntersection(currentLineSegment, otherLineSegment)) {
                path += this.createGapPath(intersectionPoint, currentLineSegment);
            }
        }
        return path;
    }
    /**
     * Returns the intersections sorted by the direction of the `lineSegment`.
     *
     * The coordinate system goes from left to right and top to bottom.
     * Thus, x increases to the right and y increases downwards.
     *
     * We need to draw the intersections in the order of the direction of the line segment.
     * To draw a line pointing north, we need to order intersections by Y in a descending order.
     * To draw a line pointing south, we need to order intersections by Y in an ascending order.
     */
    getIntersectionsSortedBySegmentDirection(lineSegment, intersectingPoint) {
        switch (lineSegment.direction) {
            case 'north':
            case 'north-east':
                return intersectingPoint.intersections.sort(intersection_finder_1.BY_X_THEN_DESCENDING_Y);
            case 'south':
            case 'south-east':
            case 'east':
                return intersectingPoint.intersections.sort(intersection_finder_1.BY_X_THEN_Y);
            case 'south-west':
            case 'west':
                return intersectingPoint.intersections.sort(intersection_finder_1.BY_DESCENDING_X_THEN_Y);
            case 'north-west':
                return intersectingPoint.intersections.sort(intersection_finder_1.BY_DESCENDING_X_THEN_DESCENDING_Y);
        }
    }
    /**
     * Whether or not to draw a line jump on an intersection for the `currentLineSegment`.
     * This should usually be inverse of `shouldDrawLineGapOnIntersection()`.
     */
    shouldDrawLineJumpOnIntersection(currentLineSegment, otherLineSegment) {
        return Math.abs(currentLineSegment.slopeOrMax) < Math.abs(otherLineSegment.slopeOrMax);
    }
    /**
     * Whether or not to draw a line gap on an intersection for the `currentLineSegment`.
     * This should usually be inverse of `shouldDrawLineJumpOnIntersection()`.
     */
    shouldDrawLineGapOnIntersection(currentLineSegment, otherLineSegment) {
        return !this.shouldDrawLineJumpOnIntersection(currentLineSegment, otherLineSegment);
    }
    getLineSegment(edge, intersection, args, segments) {
        const route = segments ? segments : this.edgeRouterRegistry.route(edge, args);
        const index = intersection.routable1 === edge.id ? intersection.segmentIndex1 : intersection.segmentIndex2;
        return new geometry_2.PointToPointLine(route[index], route[index + 1]);
    }
    getOtherLineSegment(currentEdge, intersection, args) {
        const otherEdgeId = intersection.routable1 === currentEdge.id ? intersection.routable2 : intersection.routable1;
        const otherEdge = currentEdge.index.getById(otherEdgeId);
        if (!(otherEdge instanceof model_2.SRoutableElementImpl)) {
            return undefined;
        }
        return this.getLineSegment(otherEdge, intersection, args);
    }
    createJumpPath(intersectionPoint, lineSegment) {
        const anchorBefore = geometry_1.Point.shiftTowards(intersectionPoint, lineSegment.p1, this.jumpOffsetBefore);
        const anchorAfter = geometry_1.Point.shiftTowards(intersectionPoint, lineSegment.p2, this.jumpOffsetAfter);
        const rotation = lineSegment.p1.x < lineSegment.p2.x ? 1 : 0;
        return ` L ${anchorBefore.x},${anchorBefore.y} A 1,1 0,0 ${rotation} ${anchorAfter.x},${anchorAfter.y}`;
    }
    createGapPath(intersectionPoint, lineSegment) {
        let offsetBefore;
        let offsetAfter;
        if (intersectionPoint.y < lineSegment.p1.y) {
            offsetBefore = -this.skipOffsetBefore;
            offsetAfter = this.jumpOffsetAfter + this.skipOffsetAfter;
        }
        else {
            offsetBefore = this.jumpOffsetBefore + this.skipOffsetAfter;
            offsetAfter = -this.skipOffsetBefore;
        }
        const anchorBefore = geometry_1.Point.shiftTowards(intersectionPoint, lineSegment.p1, offsetBefore);
        const anchorAfter = geometry_1.Point.shiftTowards(intersectionPoint, lineSegment.p2, offsetAfter);
        return ` L ${anchorBefore.x},${anchorBefore.y} M ${anchorAfter.x},${anchorAfter.y}`;
    }
};
JumpingPolylineEdgeView = __decorate([
    (0, inversify_1.injectable)()
], JumpingPolylineEdgeView);
exports.JumpingPolylineEdgeView = JumpingPolylineEdgeView;
/**
 * A `PolylineEdgeView` that renders gaps on intersections.
 *
 * In order to find intersections, `IntersectionFinder` needs to be configured as a `TYPES.IEdgeRoutePostprocessor`
 * so that that intersections are declared as `IntersectingRoutedPoint` in the computed routes.
 *
 * This view only draws correct gaps for intersections among straight line segments and doesn't work with bezier curves.
 *
 * @see IntersectionFinder
 * @see IntersectingRoutedPoint
 * @see EdgeRouterRegistry
 */
let PolylineEdgeViewWithGapsOnIntersections = class PolylineEdgeViewWithGapsOnIntersections extends JumpingPolylineEdgeView {
    constructor() {
        super(...arguments);
        this.skipOffsetBefore = 3;
        this.skipOffsetAfter = 3;
    }
    shouldDrawLineJumpOnIntersection(currentLineSegment, otherLineSegment) {
        return false;
    }
    shouldDrawLineGapOnIntersection(currentLineSegment, otherLineSegment) {
        return Math.abs(currentLineSegment.slopeOrMax) >= Math.abs(otherLineSegment.slopeOrMax);
    }
    createGapPath(intersectionPoint, lineSegment) {
        const anchorBefore = geometry_1.Point.shiftTowards(intersectionPoint, lineSegment.p1, this.skipOffsetBefore);
        const anchorAfter = geometry_1.Point.shiftTowards(intersectionPoint, lineSegment.p2, this.skipOffsetAfter);
        return ` L ${anchorBefore.x},${anchorBefore.y} M ${anchorAfter.x},${anchorAfter.y}`;
    }
};
PolylineEdgeViewWithGapsOnIntersections = __decorate([
    (0, inversify_1.injectable)()
], PolylineEdgeViewWithGapsOnIntersections);
exports.PolylineEdgeViewWithGapsOnIntersections = PolylineEdgeViewWithGapsOnIntersections;
let BezierCurveEdgeView = class BezierCurveEdgeView extends views_2.RoutableView {
    render(edge, context, args) {
        const route = this.edgeRouterRegistry.route(edge, args);
        if (route.length === 0) {
            return this.renderDanglingEdge("Cannot compute route", edge, context);
        }
        if (!this.isVisible(edge, route, context)) {
            if (edge.children.length === 0) {
                return undefined;
            }
            // The children of an edge are not necessarily inside the bounding box of the route,
            // so we need to render a group to ensure the children have a chance to be rendered.
            return (0, jsx_1.svg)("g", null, context.renderChildren(edge, { route }));
        }
        return (0, jsx_1.svg)("g", { "class-sprotty-edge": true, "class-mouseover": edge.hoverFeedback },
            this.renderLine(edge, route, context, args),
            this.renderAdditionals(edge, route, context),
            context.renderChildren(edge, { route }));
    }
    renderLine(edge, segments, context, args) {
        /**
         * Example for two splines:
         * SVG:
         * <path d="M0,300 C0,150 300,150 300,300 S600,450 600,300" />
         *
         * Segments input layout:
         * routingPoints[0] = source;
         * routingPoints[1] = controlForSource;
         * routingPoints[2] = controlForSegment1;
         * routingPoints[3] = segment;
         * routingPoints[4] = controlForSegment2;
         * routingPoints[5] = controlForTarget;
         * routingPoints[6] = target;
         */
        let path = '';
        if (segments.length >= 4) {
            path += this.buildMainSegment(segments);
            const pointsLeft = segments.length - 4;
            if (pointsLeft > 0 && pointsLeft % 3 === 0) {
                for (let i = 4; i < segments.length; i += 3) {
                    path += this.addSpline(segments, i);
                }
            }
        }
        return (0, jsx_1.svg)("path", { d: path });
    }
    buildMainSegment(segments) {
        const s = segments[0];
        const h1 = segments[1];
        const h2 = segments[2];
        const t = segments[3];
        return `M${s.x},${s.y} C${h1.x},${h1.y} ${h2.x},${h2.y} ${t.x},${t.y}`;
    }
    addSpline(segments, index) {
        // We have two controls for each junction, but SVG does not therefore index is jumped over
        const c = segments[index + 1];
        const p = segments[index + 2];
        return ` S${c.x},${c.y} ${p.x},${p.y}`;
    }
    renderAdditionals(edge, segments, context) {
        return [];
    }
    renderDanglingEdge(message, edge, context) {
        return (0, jsx_1.svg)("text", { "class-sprotty-edge-dangling": true, title: message }, "?");
    }
};
__decorate([
    (0, inversify_1.inject)(routing_1.EdgeRouterRegistry),
    __metadata("design:type", routing_1.EdgeRouterRegistry)
], BezierCurveEdgeView.prototype, "edgeRouterRegistry", void 0);
BezierCurveEdgeView = __decorate([
    (0, inversify_1.injectable)()
], BezierCurveEdgeView);
exports.BezierCurveEdgeView = BezierCurveEdgeView;
let SRoutingHandleView = class SRoutingHandleView {
    constructor() {
        this.minimalPointDistance = 10;
    }
    render(handle, context, args) {
        if (args && args.route) {
            if (handle.parent instanceof model_2.SRoutableElementImpl) {
                const router = this.edgeRouterRegistry.get(handle.parent.routerKind);
                const theRoute = args.route === undefined ? this.edgeRouterRegistry.route(handle.parent, args) : args.route;
                const position = router.getHandlePosition(handle.parent, theRoute, handle);
                if (position !== undefined) {
                    const node = (0, jsx_1.svg)("circle", { "class-sprotty-routing-handle": true, "class-selected": handle.selected, "class-mouseover": handle.hoverFeedback, cx: position.x, cy: position.y, r: this.getRadius() });
                    (0, vnode_utils_1.setAttr)(node, 'data-kind', handle.kind);
                    return node;
                }
            }
        }
        // Fallback: Create an empty group
        return (0, jsx_1.svg)("g", null);
    }
    getRadius() {
        return 7;
    }
};
__decorate([
    (0, inversify_1.inject)(routing_1.EdgeRouterRegistry),
    __metadata("design:type", routing_1.EdgeRouterRegistry)
], SRoutingHandleView.prototype, "edgeRouterRegistry", void 0);
SRoutingHandleView = __decorate([
    (0, inversify_1.injectable)()
], SRoutingHandleView);
exports.SRoutingHandleView = SRoutingHandleView;
let SLabelView = class SLabelView extends views_1.ShapeView {
    render(label, context) {
        if (!(0, model_1.isEdgeLayoutable)(label) && !this.isVisible(label, context)) {
            return undefined;
        }
        const vnode = (0, jsx_1.svg)("text", { "class-sprotty-label": true }, label.text);
        const subType = (0, model_utils_1.getSubType)(label);
        if (subType) {
            (0, vnode_utils_1.setAttr)(vnode, 'class', subType);
        }
        return vnode;
    }
};
SLabelView = __decorate([
    (0, inversify_1.injectable)()
], SLabelView);
exports.SLabelView = SLabelView;
let SCompartmentView = class SCompartmentView {
    render(compartment, context, args) {
        const translate = `translate(${compartment.bounds.x}, ${compartment.bounds.y})`;
        const vnode = (0, jsx_1.svg)("g", { transform: translate, "class-sprotty-comp": "{true}" }, context.renderChildren(compartment));
        const subType = (0, model_utils_1.getSubType)(compartment);
        if (subType)
            (0, vnode_utils_1.setAttr)(vnode, 'class', subType);
        return vnode;
    }
};
SCompartmentView = __decorate([
    (0, inversify_1.injectable)()
], SCompartmentView);
exports.SCompartmentView = SCompartmentView;
let SBezierCreateHandleView = class SBezierCreateHandleView extends SRoutingHandleView {
    render(handle, context, args) {
        if (args) {
            const theRoute = args.route;
            if (theRoute && handle.parent instanceof model_2.SRoutableElementImpl) {
                const router = this.edgeRouterRegistry.get(handle.parent.routerKind);
                const position = router.getHandlePosition(handle.parent, theRoute, handle);
                if (position !== undefined) {
                    const translation = "translate(" + position.x + ", " + position.y + ")";
                    const textOffsetX = -5.5;
                    const textOffsetY = 5.5;
                    const text = (handle.kind === "bezier-add") ? "+" : "-";
                    const node = (0, jsx_1.svg)("g", { transform: translation, "class-sprotty-routing-handle": true, "class-selected": handle.selected, "class-mouseover": handle.hoverFeedback },
                        (0, jsx_1.svg)("circle", { r: this.getRadius() }),
                        (0, jsx_1.svg)("text", { x: textOffsetX, y: textOffsetY, "attrs-text-align": "middle", "style-font-family": "monospace", "style-pointer-events": "none", "style-fill": "white" }, text));
                    (0, vnode_utils_1.setAttr)(node, 'data-kind', handle.kind);
                    return node;
                }
            }
        }
        // Fallback: Create an empty group
        return (0, jsx_1.svg)("g", null);
    }
};
SBezierCreateHandleView = __decorate([
    (0, inversify_1.injectable)()
], SBezierCreateHandleView);
exports.SBezierCreateHandleView = SBezierCreateHandleView;
let SBezierControlHandleView = class SBezierControlHandleView extends SRoutingHandleView {
    render(handle, context, args) {
        if (args) {
            const theRoute = args.route;
            if (theRoute && handle.parent instanceof model_2.SRoutableElementImpl) {
                const router = this.edgeRouterRegistry.get(handle.parent.routerKind);
                const position = router.getHandlePosition(handle.parent, theRoute, handle);
                if (position !== undefined) {
                    let pathEndPos;
                    for (let i = 0; i < theRoute.length; i++) {
                        const elem = theRoute[i];
                        if (elem.kind === position.kind && elem.pointIndex === position.pointIndex) {
                            if (handle.kind === 'bezier-control-before') {
                                pathEndPos = theRoute[i + 1];
                            }
                            else {
                                pathEndPos = theRoute[i - 1];
                            }
                            break;
                        }
                    }
                    let node;
                    if (pathEndPos) {
                        const coords = `M ${position.x}, ${position.y} L ${pathEndPos.x}, ${pathEndPos.y}`;
                        node =
                            (0, jsx_1.svg)("g", { "class-sprotty-routing-handle": true, "class-selected": handle.selected, "class-mouseover": handle.hoverFeedback },
                                (0, jsx_1.svg)("path", { d: coords, stroke: "grey", "style-stroke-width": "2px" }),
                                (0, jsx_1.svg)("circle", { cx: position.x, cy: position.y, r: this.getRadius() }));
                    }
                    else {
                        node = (0, jsx_1.svg)("circle", { "class-sprotty-routing-handle": true, "class-selected": handle.selected, "class-mouseover": handle.hoverFeedback, cx: position.x, cy: position.y, r: this.getRadius() });
                    }
                    (0, vnode_utils_1.setAttr)(node, 'data-kind', handle.kind);
                    return node;
                }
            }
        }
        // Fallback: Create an empty group
        return (0, jsx_1.svg)("g", null);
    }
};
SBezierControlHandleView = __decorate([
    (0, inversify_1.injectable)()
], SBezierControlHandleView);
exports.SBezierControlHandleView = SBezierControlHandleView;


/***/ }),

/***/ "../../node_modules/sprotty/lib/index.js":
/*!***********************************************!*\
  !*** ../../node_modules/sprotty/lib/index.js ***!
  \***********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.modelSourceModule = exports.zorderModule = exports.viewportModule = exports.updateModule = exports.undoRedoModule = exports.selectModule = exports.routingModule = exports.openModule = exports.moveModule = exports.hoverModule = exports.fadeModule = exports.exportModule = exports.expandModule = exports.edgeLayoutModule = exports.edgeIntersectionModule = exports.decorationModule = exports.contextMenuModule = exports.commandPaletteModule = exports.buttonModule = exports.boundsModule = exports.graphModule = exports.defaultModule = void 0;
// ------------------ Base ------------------
__exportStar(__webpack_require__(/*! ./base/actions/action */ "../../node_modules/sprotty/lib/base/actions/action.js"), exports);
__exportStar(__webpack_require__(/*! ./base/actions/action-dispatcher */ "../../node_modules/sprotty/lib/base/actions/action-dispatcher.js"), exports);
__exportStar(__webpack_require__(/*! ./base/actions/action-handler */ "../../node_modules/sprotty/lib/base/actions/action-handler.js"), exports);
__exportStar(__webpack_require__(/*! ./base/actions/diagram-locker */ "../../node_modules/sprotty/lib/base/actions/diagram-locker.js"), exports);
__exportStar(__webpack_require__(/*! ./base/animations/animation-frame-syncer */ "../../node_modules/sprotty/lib/base/animations/animation-frame-syncer.js"), exports);
__exportStar(__webpack_require__(/*! ./base/animations/animation */ "../../node_modules/sprotty/lib/base/animations/animation.js"), exports);
__exportStar(__webpack_require__(/*! ./base/animations/easing */ "../../node_modules/sprotty/lib/base/animations/easing.js"), exports);
__exportStar(__webpack_require__(/*! ./base/commands/command */ "../../node_modules/sprotty/lib/base/commands/command.js"), exports);
__exportStar(__webpack_require__(/*! ./base/commands/command-registration */ "../../node_modules/sprotty/lib/base/commands/command-registration.js"), exports);
__exportStar(__webpack_require__(/*! ./base/commands/command-stack-options */ "../../node_modules/sprotty/lib/base/commands/command-stack-options.js"), exports);
__exportStar(__webpack_require__(/*! ./base/commands/command-stack */ "../../node_modules/sprotty/lib/base/commands/command-stack.js"), exports);
__exportStar(__webpack_require__(/*! ./base/features/initialize-canvas */ "../../node_modules/sprotty/lib/base/features/initialize-canvas.js"), exports);
__exportStar(__webpack_require__(/*! ./base/features/set-model */ "../../node_modules/sprotty/lib/base/features/set-model.js"), exports);
__exportStar(__webpack_require__(/*! ./base/model/smodel-extension */ "../../node_modules/sprotty/lib/base/model/smodel-extension.js"), exports);
__exportStar(__webpack_require__(/*! ./base/model/smodel-factory */ "../../node_modules/sprotty/lib/base/model/smodel-factory.js"), exports);
__exportStar(__webpack_require__(/*! ./base/model/smodel-utils */ "../../node_modules/sprotty/lib/base/model/smodel-utils.js"), exports);
__exportStar(__webpack_require__(/*! ./base/model/smodel */ "../../node_modules/sprotty/lib/base/model/smodel.js"), exports);
__exportStar(__webpack_require__(/*! ./base/tool-manager/tool-manager */ "../../node_modules/sprotty/lib/base/tool-manager/tool-manager.js"), exports);
__exportStar(__webpack_require__(/*! ./base/tool-manager/tool */ "../../node_modules/sprotty/lib/base/tool-manager/tool.js"), exports);
__exportStar(__webpack_require__(/*! ./base/ui-extensions/ui-extension-registry */ "../../node_modules/sprotty/lib/base/ui-extensions/ui-extension-registry.js"), exports);
__exportStar(__webpack_require__(/*! ./base/ui-extensions/ui-extension */ "../../node_modules/sprotty/lib/base/ui-extensions/ui-extension.js"), exports);
__exportStar(__webpack_require__(/*! ./base/views/key-tool */ "../../node_modules/sprotty/lib/base/views/key-tool.js"), exports);
__exportStar(__webpack_require__(/*! ./base/views/mouse-tool */ "../../node_modules/sprotty/lib/base/views/mouse-tool.js"), exports);
__exportStar(__webpack_require__(/*! ./base/views/thunk-view */ "../../node_modules/sprotty/lib/base/views/thunk-view.js"), exports);
__exportStar(__webpack_require__(/*! ./base/views/view */ "../../node_modules/sprotty/lib/base/views/view.js"), exports);
__exportStar(__webpack_require__(/*! ./base/views/viewer-cache */ "../../node_modules/sprotty/lib/base/views/viewer-cache.js"), exports);
__exportStar(__webpack_require__(/*! ./base/views/viewer-options */ "../../node_modules/sprotty/lib/base/views/viewer-options.js"), exports);
__exportStar(__webpack_require__(/*! ./base/views/viewer */ "../../node_modules/sprotty/lib/base/views/viewer.js"), exports);
__exportStar(__webpack_require__(/*! ./base/views/vnode-postprocessor */ "../../node_modules/sprotty/lib/base/views/vnode-postprocessor.js"), exports);
__exportStar(__webpack_require__(/*! ./base/views/vnode-utils */ "../../node_modules/sprotty/lib/base/views/vnode-utils.js"), exports);
__exportStar(__webpack_require__(/*! ./base/types */ "../../node_modules/sprotty/lib/base/types.js"), exports);
const di_config_1 = __importDefault(__webpack_require__(/*! ./base/di.config */ "../../node_modules/sprotty/lib/base/di.config.js"));
exports.defaultModule = di_config_1.default;
// ------------------ Features ------------------
__exportStar(__webpack_require__(/*! ./features/bounds/bounds-manipulation */ "../../node_modules/sprotty/lib/features/bounds/bounds-manipulation.js"), exports);
__exportStar(__webpack_require__(/*! ./features/bounds/hidden-bounds-updater */ "../../node_modules/sprotty/lib/features/bounds/hidden-bounds-updater.js"), exports);
__exportStar(__webpack_require__(/*! ./features/bounds/layout */ "../../node_modules/sprotty/lib/features/bounds/layout.js"), exports);
__exportStar(__webpack_require__(/*! ./features/bounds/model */ "../../node_modules/sprotty/lib/features/bounds/model.js"), exports);
__exportStar(__webpack_require__(/*! ./features/bounds/vbox-layout */ "../../node_modules/sprotty/lib/features/bounds/vbox-layout.js"), exports);
__exportStar(__webpack_require__(/*! ./features/bounds/hbox-layout */ "../../node_modules/sprotty/lib/features/bounds/hbox-layout.js"), exports);
__exportStar(__webpack_require__(/*! ./features/bounds/stack-layout */ "../../node_modules/sprotty/lib/features/bounds/stack-layout.js"), exports);
__exportStar(__webpack_require__(/*! ./features/bounds/views */ "../../node_modules/sprotty/lib/features/bounds/views.js"), exports);
__exportStar(__webpack_require__(/*! ./features/button/button-handler */ "../../node_modules/sprotty/lib/features/button/button-handler.js"), exports);
__exportStar(__webpack_require__(/*! ./features/button/model */ "../../node_modules/sprotty/lib/features/button/model.js"), exports);
__exportStar(__webpack_require__(/*! ./features/command-palette/action-providers */ "../../node_modules/sprotty/lib/features/command-palette/action-providers.js"), exports);
__exportStar(__webpack_require__(/*! ./features/command-palette/command-palette */ "../../node_modules/sprotty/lib/features/command-palette/command-palette.js"), exports);
__exportStar(__webpack_require__(/*! ./features/context-menu/context-menu-service */ "../../node_modules/sprotty/lib/features/context-menu/context-menu-service.js"), exports);
__exportStar(__webpack_require__(/*! ./features/context-menu/menu-providers */ "../../node_modules/sprotty/lib/features/context-menu/menu-providers.js"), exports);
__exportStar(__webpack_require__(/*! ./features/context-menu/mouse-listener */ "../../node_modules/sprotty/lib/features/context-menu/mouse-listener.js"), exports);
__exportStar(__webpack_require__(/*! ./features/edge-layout/di.config */ "../../node_modules/sprotty/lib/features/edge-layout/di.config.js"), exports);
__exportStar(__webpack_require__(/*! ./features/edge-layout/edge-layout */ "../../node_modules/sprotty/lib/features/edge-layout/edge-layout.js"), exports);
__exportStar(__webpack_require__(/*! ./features/edge-layout/model */ "../../node_modules/sprotty/lib/features/edge-layout/model.js"), exports);
__exportStar(__webpack_require__(/*! ./features/edit/create */ "../../node_modules/sprotty/lib/features/edit/create.js"), exports);
__exportStar(__webpack_require__(/*! ./features/edit/create-on-drag */ "../../node_modules/sprotty/lib/features/edit/create-on-drag.js"), exports);
__exportStar(__webpack_require__(/*! ./features/edit/di.config */ "../../node_modules/sprotty/lib/features/edit/di.config.js"), exports);
__exportStar(__webpack_require__(/*! ./features/edit/delete */ "../../node_modules/sprotty/lib/features/edit/delete.js"), exports);
__exportStar(__webpack_require__(/*! ./features/edit/edit-label */ "../../node_modules/sprotty/lib/features/edit/edit-label.js"), exports);
__exportStar(__webpack_require__(/*! ./features/edit/edit-label-ui */ "../../node_modules/sprotty/lib/features/edit/edit-label-ui.js"), exports);
__exportStar(__webpack_require__(/*! ./features/edit/edit-routing */ "../../node_modules/sprotty/lib/features/edit/edit-routing.js"), exports);
__exportStar(__webpack_require__(/*! ./features/edit/model */ "../../node_modules/sprotty/lib/features/edit/model.js"), exports);
__exportStar(__webpack_require__(/*! ./features/edit/reconnect */ "../../node_modules/sprotty/lib/features/edit/reconnect.js"), exports);
__exportStar(__webpack_require__(/*! ./features/expand/expand */ "../../node_modules/sprotty/lib/features/expand/expand.js"), exports);
__exportStar(__webpack_require__(/*! ./features/expand/model */ "../../node_modules/sprotty/lib/features/expand/model.js"), exports);
__exportStar(__webpack_require__(/*! ./features/expand/views */ "../../node_modules/sprotty/lib/features/expand/views.js"), exports);
__exportStar(__webpack_require__(/*! ./features/export/export */ "../../node_modules/sprotty/lib/features/export/export.js"), exports);
__exportStar(__webpack_require__(/*! ./features/export/model */ "../../node_modules/sprotty/lib/features/export/model.js"), exports);
__exportStar(__webpack_require__(/*! ./features/export/svg-exporter */ "../../node_modules/sprotty/lib/features/export/svg-exporter.js"), exports);
__exportStar(__webpack_require__(/*! ./features/fade/fade */ "../../node_modules/sprotty/lib/features/fade/fade.js"), exports);
__exportStar(__webpack_require__(/*! ./features/fade/model */ "../../node_modules/sprotty/lib/features/fade/model.js"), exports);
__exportStar(__webpack_require__(/*! ./features/hover/hover */ "../../node_modules/sprotty/lib/features/hover/hover.js"), exports);
__exportStar(__webpack_require__(/*! ./features/hover/model */ "../../node_modules/sprotty/lib/features/hover/model.js"), exports);
__exportStar(__webpack_require__(/*! ./features/decoration/model */ "../../node_modules/sprotty/lib/features/decoration/model.js"), exports);
__exportStar(__webpack_require__(/*! ./features/decoration/views */ "../../node_modules/sprotty/lib/features/decoration/views.js"), exports);
__exportStar(__webpack_require__(/*! ./features/decoration/decoration-placer */ "../../node_modules/sprotty/lib/features/decoration/decoration-placer.js"), exports);
__exportStar(__webpack_require__(/*! ./features/edge-intersection/intersection-finder */ "../../node_modules/sprotty/lib/features/edge-intersection/intersection-finder.js"), exports);
__exportStar(__webpack_require__(/*! ./features/edge-intersection/sweepline */ "../../node_modules/sprotty/lib/features/edge-intersection/sweepline.js"), exports);
__exportStar(__webpack_require__(/*! ./features/move/model */ "../../node_modules/sprotty/lib/features/move/model.js"), exports);
__exportStar(__webpack_require__(/*! ./features/move/move */ "../../node_modules/sprotty/lib/features/move/move.js"), exports);
__exportStar(__webpack_require__(/*! ./features/move/snap */ "../../node_modules/sprotty/lib/features/move/snap.js"), exports);
__exportStar(__webpack_require__(/*! ./features/nameable/model */ "../../node_modules/sprotty/lib/features/nameable/model.js"), exports);
__exportStar(__webpack_require__(/*! ./features/open/open */ "../../node_modules/sprotty/lib/features/open/open.js"), exports);
__exportStar(__webpack_require__(/*! ./features/open/model */ "../../node_modules/sprotty/lib/features/open/model.js"), exports);
__exportStar(__webpack_require__(/*! ./features/projection/model */ "../../node_modules/sprotty/lib/features/projection/model.js"), exports);
__exportStar(__webpack_require__(/*! ./features/projection/views */ "../../node_modules/sprotty/lib/features/projection/views.js"), exports);
__exportStar(__webpack_require__(/*! ./features/routing/anchor */ "../../node_modules/sprotty/lib/features/routing/anchor.js"), exports);
__exportStar(__webpack_require__(/*! ./features/routing/abstract-edge-router */ "../../node_modules/sprotty/lib/features/routing/abstract-edge-router.js"), exports);
__exportStar(__webpack_require__(/*! ./features/routing/bezier-anchors */ "../../node_modules/sprotty/lib/features/routing/bezier-anchors.js"), exports);
__exportStar(__webpack_require__(/*! ./features/routing/bezier-edge-router */ "../../node_modules/sprotty/lib/features/routing/bezier-edge-router.js"), exports);
__exportStar(__webpack_require__(/*! ./features/routing/manhattan-anchors */ "../../node_modules/sprotty/lib/features/routing/manhattan-anchors.js"), exports);
__exportStar(__webpack_require__(/*! ./features/routing/manhattan-edge-router */ "../../node_modules/sprotty/lib/features/routing/manhattan-edge-router.js"), exports);
__exportStar(__webpack_require__(/*! ./features/routing/model */ "../../node_modules/sprotty/lib/features/routing/model.js"), exports);
__exportStar(__webpack_require__(/*! ./features/routing/polyline-anchors */ "../../node_modules/sprotty/lib/features/routing/polyline-anchors.js"), exports);
__exportStar(__webpack_require__(/*! ./features/routing/polyline-edge-router */ "../../node_modules/sprotty/lib/features/routing/polyline-edge-router.js"), exports);
__exportStar(__webpack_require__(/*! ./features/routing/routing */ "../../node_modules/sprotty/lib/features/routing/routing.js"), exports);
__exportStar(__webpack_require__(/*! ./features/routing/views */ "../../node_modules/sprotty/lib/features/routing/views.js"), exports);
__exportStar(__webpack_require__(/*! ./features/select/model */ "../../node_modules/sprotty/lib/features/select/model.js"), exports);
__exportStar(__webpack_require__(/*! ./features/select/select */ "../../node_modules/sprotty/lib/features/select/select.js"), exports);
__exportStar(__webpack_require__(/*! ./features/undo-redo/undo-redo */ "../../node_modules/sprotty/lib/features/undo-redo/undo-redo.js"), exports);
__exportStar(__webpack_require__(/*! ./features/update/model-matching */ "../../node_modules/sprotty/lib/features/update/model-matching.js"), exports);
__exportStar(__webpack_require__(/*! ./features/update/update-model */ "../../node_modules/sprotty/lib/features/update/update-model.js"), exports);
__exportStar(__webpack_require__(/*! ./features/viewport/center-fit */ "../../node_modules/sprotty/lib/features/viewport/center-fit.js"), exports);
__exportStar(__webpack_require__(/*! ./features/viewport/model */ "../../node_modules/sprotty/lib/features/viewport/model.js"), exports);
__exportStar(__webpack_require__(/*! ./features/viewport/scroll */ "../../node_modules/sprotty/lib/features/viewport/scroll.js"), exports);
__exportStar(__webpack_require__(/*! ./features/viewport/viewport-root */ "../../node_modules/sprotty/lib/features/viewport/viewport-root.js"), exports);
__exportStar(__webpack_require__(/*! ./features/viewport/viewport */ "../../node_modules/sprotty/lib/features/viewport/viewport.js"), exports);
__exportStar(__webpack_require__(/*! ./features/viewport/zoom */ "../../node_modules/sprotty/lib/features/viewport/zoom.js"), exports);
__exportStar(__webpack_require__(/*! ./features/zorder/zorder */ "../../node_modules/sprotty/lib/features/zorder/zorder.js"), exports);
const di_config_2 = __importDefault(__webpack_require__(/*! ./graph/di.config */ "../../node_modules/sprotty/lib/graph/di.config.js"));
exports.graphModule = di_config_2.default;
const di_config_3 = __importDefault(__webpack_require__(/*! ./features/bounds/di.config */ "../../node_modules/sprotty/lib/features/bounds/di.config.js"));
exports.boundsModule = di_config_3.default;
const di_config_4 = __importDefault(__webpack_require__(/*! ./features/button/di.config */ "../../node_modules/sprotty/lib/features/button/di.config.js"));
exports.buttonModule = di_config_4.default;
const di_config_5 = __importDefault(__webpack_require__(/*! ./features/command-palette/di.config */ "../../node_modules/sprotty/lib/features/command-palette/di.config.js"));
exports.commandPaletteModule = di_config_5.default;
const di_config_6 = __importDefault(__webpack_require__(/*! ./features/context-menu/di.config */ "../../node_modules/sprotty/lib/features/context-menu/di.config.js"));
exports.contextMenuModule = di_config_6.default;
const di_config_7 = __importDefault(__webpack_require__(/*! ./features/decoration/di.config */ "../../node_modules/sprotty/lib/features/decoration/di.config.js"));
exports.decorationModule = di_config_7.default;
const di_config_8 = __importDefault(__webpack_require__(/*! ./features/edge-intersection/di.config */ "../../node_modules/sprotty/lib/features/edge-intersection/di.config.js"));
exports.edgeIntersectionModule = di_config_8.default;
const di_config_9 = __importDefault(__webpack_require__(/*! ./features/edge-layout/di.config */ "../../node_modules/sprotty/lib/features/edge-layout/di.config.js"));
exports.edgeLayoutModule = di_config_9.default;
const di_config_10 = __importDefault(__webpack_require__(/*! ./features/expand/di.config */ "../../node_modules/sprotty/lib/features/expand/di.config.js"));
exports.expandModule = di_config_10.default;
const di_config_11 = __importDefault(__webpack_require__(/*! ./features/export/di.config */ "../../node_modules/sprotty/lib/features/export/di.config.js"));
exports.exportModule = di_config_11.default;
const di_config_12 = __importDefault(__webpack_require__(/*! ./features/fade/di.config */ "../../node_modules/sprotty/lib/features/fade/di.config.js"));
exports.fadeModule = di_config_12.default;
const di_config_13 = __importDefault(__webpack_require__(/*! ./features/hover/di.config */ "../../node_modules/sprotty/lib/features/hover/di.config.js"));
exports.hoverModule = di_config_13.default;
const di_config_14 = __importDefault(__webpack_require__(/*! ./features/move/di.config */ "../../node_modules/sprotty/lib/features/move/di.config.js"));
exports.moveModule = di_config_14.default;
const di_config_15 = __importDefault(__webpack_require__(/*! ./features/open/di.config */ "../../node_modules/sprotty/lib/features/open/di.config.js"));
exports.openModule = di_config_15.default;
const di_config_16 = __importDefault(__webpack_require__(/*! ./features/routing/di.config */ "../../node_modules/sprotty/lib/features/routing/di.config.js"));
exports.routingModule = di_config_16.default;
const di_config_17 = __importDefault(__webpack_require__(/*! ./features/select/di.config */ "../../node_modules/sprotty/lib/features/select/di.config.js"));
exports.selectModule = di_config_17.default;
const di_config_18 = __importDefault(__webpack_require__(/*! ./features/undo-redo/di.config */ "../../node_modules/sprotty/lib/features/undo-redo/di.config.js"));
exports.undoRedoModule = di_config_18.default;
const di_config_19 = __importDefault(__webpack_require__(/*! ./features/update/di.config */ "../../node_modules/sprotty/lib/features/update/di.config.js"));
exports.updateModule = di_config_19.default;
const di_config_20 = __importDefault(__webpack_require__(/*! ./features/viewport/di.config */ "../../node_modules/sprotty/lib/features/viewport/di.config.js"));
exports.viewportModule = di_config_20.default;
const di_config_21 = __importDefault(__webpack_require__(/*! ./features/zorder/di.config */ "../../node_modules/sprotty/lib/features/zorder/di.config.js"));
exports.zorderModule = di_config_21.default;
// ------------------ Graph ------------------
__exportStar(__webpack_require__(/*! ./graph/sgraph-factory */ "../../node_modules/sprotty/lib/graph/sgraph-factory.js"), exports);
__exportStar(__webpack_require__(/*! ./graph/sgraph */ "../../node_modules/sprotty/lib/graph/sgraph.js"), exports);
__exportStar(__webpack_require__(/*! ./graph/views */ "../../node_modules/sprotty/lib/graph/views.js"), exports);
// ------------------ Library ------------------
__exportStar(__webpack_require__(/*! ./lib/modules */ "../../node_modules/sprotty/lib/lib/modules.js"), exports);
__exportStar(__webpack_require__(/*! ./lib/generic-views */ "../../node_modules/sprotty/lib/lib/generic-views.js"), exports);
__exportStar(__webpack_require__(/*! ./lib/html-views */ "../../node_modules/sprotty/lib/lib/html-views.js"), exports);
__exportStar(__webpack_require__(/*! ./lib/jsx */ "../../node_modules/sprotty/lib/lib/jsx.js"), exports);
__exportStar(__webpack_require__(/*! ./lib/model */ "../../node_modules/sprotty/lib/lib/model.js"), exports);
__exportStar(__webpack_require__(/*! ./lib/svg-views */ "../../node_modules/sprotty/lib/lib/svg-views.js"), exports);
// ------------------ Model Source ------------------
__exportStar(__webpack_require__(/*! ./model-source/commit-model */ "../../node_modules/sprotty/lib/model-source/commit-model.js"), exports);
__exportStar(__webpack_require__(/*! ./model-source/diagram-server */ "../../node_modules/sprotty/lib/model-source/diagram-server.js"), exports);
__exportStar(__webpack_require__(/*! ./model-source/local-model-source */ "../../node_modules/sprotty/lib/model-source/local-model-source.js"), exports);
__exportStar(__webpack_require__(/*! ./model-source/logging */ "../../node_modules/sprotty/lib/model-source/logging.js"), exports);
__exportStar(__webpack_require__(/*! ./model-source/model-source */ "../../node_modules/sprotty/lib/model-source/model-source.js"), exports);
__exportStar(__webpack_require__(/*! ./model-source/websocket */ "../../node_modules/sprotty/lib/model-source/websocket.js"), exports);
const di_config_22 = __importDefault(__webpack_require__(/*! ./model-source/di.config */ "../../node_modules/sprotty/lib/model-source/di.config.js"));
exports.modelSourceModule = di_config_22.default;
// ------------------ Utilities ------------------
__exportStar(__webpack_require__(/*! ./utils/browser */ "../../node_modules/sprotty/lib/utils/browser.js"), exports);
__exportStar(__webpack_require__(/*! ./utils/codicon */ "../../node_modules/sprotty/lib/utils/codicon.js"), exports);
__exportStar(__webpack_require__(/*! ./utils/color */ "../../node_modules/sprotty/lib/utils/color.js"), exports);
__exportStar(__webpack_require__(/*! ./utils/geometry */ "../../node_modules/sprotty/lib/utils/geometry.js"), exports);
__exportStar(__webpack_require__(/*! ./utils/inversify */ "../../node_modules/sprotty/lib/utils/inversify.js"), exports);
__exportStar(__webpack_require__(/*! ./utils/json */ "../../node_modules/sprotty/lib/utils/json.js"), exports);
__exportStar(__webpack_require__(/*! ./utils/logging */ "../../node_modules/sprotty/lib/utils/logging.js"), exports);
__exportStar(__webpack_require__(/*! ./utils/registry */ "../../node_modules/sprotty/lib/utils/registry.js"), exports);


/***/ }),

/***/ "../../node_modules/sprotty/lib/lib/generic-views.js":
/*!***********************************************************!*\
  !*** ../../node_modules/sprotty/lib/lib/generic-views.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2020 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ForeignObjectView = exports.PreRenderedView = void 0;
/** @jsx svg */
const jsx_1 = __webpack_require__(/*! ./jsx */ "../../node_modules/sprotty/lib/lib/jsx.js");
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const virtualize_1 = __importDefault(__webpack_require__(/*! ./virtualize */ "../../node_modules/sprotty/lib/lib/virtualize.js"));
const vnode_utils_1 = __webpack_require__(/*! ../base/views/vnode-utils */ "../../node_modules/sprotty/lib/base/views/vnode-utils.js");
const views_1 = __webpack_require__(/*! ../features/bounds/views */ "../../node_modules/sprotty/lib/features/bounds/views.js");
const model_1 = __webpack_require__(/*! ./model */ "../../node_modules/sprotty/lib/lib/model.js");
let PreRenderedView = class PreRenderedView extends views_1.ShapeView {
    render(model, context) {
        if (model instanceof model_1.ShapedPreRenderedElementImpl && !this.isVisible(model, context)) {
            return undefined;
        }
        const node = (0, virtualize_1.default)(model.code);
        if (node === null)
            return undefined;
        this.correctNamespace(node);
        return node;
    }
    correctNamespace(node) {
        if (node.sel === 'svg' || node.sel === 'g')
            (0, vnode_utils_1.setNamespace)(node, 'http://www.w3.org/2000/svg');
    }
};
PreRenderedView = __decorate([
    (0, inversify_1.injectable)()
], PreRenderedView);
exports.PreRenderedView = PreRenderedView;
/**
 * An SVG `foreignObject` view with a namespace specified by the provided `ForeignObjectElement`.
 * Note that `foreignObject` may not be supported by all browsers or SVG viewers.
 */
let ForeignObjectView = class ForeignObjectView {
    render(model, context) {
        const foreignObjectContents = (0, virtualize_1.default)(model.code);
        if (foreignObjectContents === null)
            return undefined;
        const node = (0, jsx_1.svg)("g", null,
            (0, jsx_1.svg)("foreignObject", { requiredFeatures: 'http://www.w3.org/TR/SVG11/feature#Extensibility', height: model.bounds.height, width: model.bounds.width, x: 0, y: 0 }, foreignObjectContents),
            context.renderChildren(model));
        (0, vnode_utils_1.setAttr)(node, 'class', model.type);
        (0, vnode_utils_1.setNamespace)(foreignObjectContents, model.namespace);
        return node;
    }
};
ForeignObjectView = __decorate([
    (0, inversify_1.injectable)()
], ForeignObjectView);
exports.ForeignObjectView = ForeignObjectView;


/***/ }),

/***/ "../../node_modules/sprotty/lib/lib/html-views.js":
/*!********************************************************!*\
  !*** ../../node_modules/sprotty/lib/lib/html-views.js ***!
  \********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.HtmlRootView = void 0;
/** @jsx html */
const jsx_1 = __webpack_require__(/*! ./jsx */ "../../node_modules/sprotty/lib/lib/jsx.js");
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const vnode_utils_1 = __webpack_require__(/*! ../base/views/vnode-utils */ "../../node_modules/sprotty/lib/base/views/vnode-utils.js");
/**
 * View for `HtmlRoot` elements. Typically this is used in hover popup boxes.
 */
let HtmlRootView = class HtmlRootView {
    render(model, context) {
        const root = (0, jsx_1.html)("div", null, context.renderChildren(model));
        for (const c of model.classes) {
            (0, vnode_utils_1.setClass)(root, c, true);
        }
        return root;
    }
};
HtmlRootView = __decorate([
    (0, inversify_1.injectable)()
], HtmlRootView);
exports.HtmlRootView = HtmlRootView;


/***/ }),

/***/ "../../node_modules/sprotty/lib/lib/jsx.js":
/*!*************************************************!*\
  !*** ../../node_modules/sprotty/lib/lib/jsx.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2021 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.JSX = exports.svg = exports.html = void 0;
const snabbdom_1 = __webpack_require__(/*! snabbdom */ "../../node_modules/snabbdom/build/index.js");
const modulesNS = ['hook', 'on', 'style', 'class', 'props', 'attrs', 'dataset'];
const SVGNS = 'http://www.w3.org/2000/svg';
function normalizeAttrs(source, defNS, namespace) {
    const data = {};
    if (namespace) {
        data.ns = namespace;
    }
    if (source === null) {
        return data;
    }
    modulesNS.forEach(mod => {
        if (source[mod]) {
            data[mod] = source[mod];
        }
    });
    Object.keys(source).forEach(key => {
        if (key === 'key' || key === 'classNames' || key === 'selector')
            return;
        const idx = key.indexOf('-');
        if (idx > 0)
            addAttr(key.slice(0, idx), key.slice(idx + 1), source[key]);
        else if (!data[key])
            addAttr(defNS, key, source[key]);
    });
    return data;
    function addAttr(modname, key, val) {
        const mod = data[modname] || (data[modname] = {});
        mod[key] = val;
    }
}
// eslint-disable-next-line @typescript-eslint/naming-convention
function JSX(namespace, defNS = 'props') {
    return (tag, attrs, ...children) => (0, snabbdom_1.jsx)(tag, normalizeAttrs(attrs, defNS, namespace), children);
}
exports.JSX = JSX;
const html = JSX();
exports.html = html;
const svg = JSX(SVGNS, 'attrs');
exports.svg = svg;


/***/ }),

/***/ "../../node_modules/sprotty/lib/lib/model.js":
/*!***************************************************!*\
  !*** ../../node_modules/sprotty/lib/lib/model.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2020 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ForeignObjectElement = exports.ForeignObjectElementImpl = exports.ShapedPreRenderedElement = exports.ShapedPreRenderedElementImpl = exports.PreRenderedElement = exports.PreRenderedElementImpl = exports.HtmlRoot = exports.HtmlRootImpl = exports.RectangularPort = exports.CircularPort = exports.DiamondNode = exports.RectangularNode = exports.CircularNode = void 0;
const geometry_1 = __webpack_require__(/*! sprotty-protocol/lib/utils/geometry */ "../../node_modules/sprotty-protocol/lib/utils/geometry.js");
const smodel_1 = __webpack_require__(/*! ../base/model/smodel */ "../../node_modules/sprotty/lib/base/model/smodel.js");
const model_1 = __webpack_require__(/*! ../features/bounds/model */ "../../node_modules/sprotty/lib/features/bounds/model.js");
const model_2 = __webpack_require__(/*! ../features/move/model */ "../../node_modules/sprotty/lib/features/move/model.js");
const model_3 = __webpack_require__(/*! ../features/select/model */ "../../node_modules/sprotty/lib/features/select/model.js");
const sgraph_1 = __webpack_require__(/*! ../graph/sgraph */ "../../node_modules/sprotty/lib/graph/sgraph.js");
const anchor_1 = __webpack_require__(/*! ../features/routing/anchor */ "../../node_modules/sprotty/lib/features/routing/anchor.js");
/**
 * A node that is represented by a circle.
 */
class CircularNode extends sgraph_1.SNodeImpl {
    get anchorKind() {
        return anchor_1.ELLIPTIC_ANCHOR_KIND;
    }
}
exports.CircularNode = CircularNode;
/**
 * A node that is represented by a rectangle.
 */
class RectangularNode extends sgraph_1.SNodeImpl {
    get anchorKind() {
        return anchor_1.RECTANGULAR_ANCHOR_KIND;
    }
}
exports.RectangularNode = RectangularNode;
/**
 * A node that is represented by a diamond.
 */
class DiamondNode extends sgraph_1.SNodeImpl {
    get anchorKind() {
        return anchor_1.DIAMOND_ANCHOR_KIND;
    }
}
exports.DiamondNode = DiamondNode;
/**
 * A port that is represented by a circle.
 */
class CircularPort extends sgraph_1.SPortImpl {
    get anchorKind() {
        return anchor_1.ELLIPTIC_ANCHOR_KIND;
    }
}
exports.CircularPort = CircularPort;
/**
 * A port that is represented by a rectangle.
 */
class RectangularPort extends sgraph_1.SPortImpl {
    get anchorKind() {
        return anchor_1.RECTANGULAR_ANCHOR_KIND;
    }
}
exports.RectangularPort = RectangularPort;
/**
 * Root model element class for HTML content. Usually this is rendered with a `div` DOM element.
 */
class HtmlRootImpl extends smodel_1.SModelRootImpl {
    constructor() {
        super(...arguments);
        this.classes = [];
    }
}
exports.HtmlRootImpl = HtmlRootImpl;
/** @deprecated Use `HtmlRootImpl` instead. */
exports.HtmlRoot = HtmlRootImpl;
/**
 * Pre-rendered elements contain HTML or SVG code to be transferred to the DOM. This can be useful to
 * render complex figures or to compute the view on the server instead of the client code.
 */
class PreRenderedElementImpl extends smodel_1.SChildElementImpl {
}
exports.PreRenderedElementImpl = PreRenderedElementImpl;
/** @deprecated Use `PreRenderedElementImpl` instead. */
exports.PreRenderedElement = PreRenderedElementImpl;
/**
 * Same as PreRenderedElement, but with a position and a size.
 */
class ShapedPreRenderedElementImpl extends PreRenderedElementImpl {
    constructor() {
        super(...arguments);
        this.position = geometry_1.Point.ORIGIN;
        this.size = geometry_1.Dimension.EMPTY;
        this.selected = false;
        this.alignment = geometry_1.Point.ORIGIN;
    }
    get bounds() {
        return {
            x: this.position.x,
            y: this.position.y,
            width: this.size.width,
            height: this.size.height
        };
    }
    set bounds(newBounds) {
        this.position = {
            x: newBounds.x,
            y: newBounds.y
        };
        this.size = {
            width: newBounds.width,
            height: newBounds.height
        };
    }
}
ShapedPreRenderedElementImpl.DEFAULT_FEATURES = [model_2.moveFeature, model_1.boundsFeature, model_3.selectFeature, model_1.alignFeature];
exports.ShapedPreRenderedElementImpl = ShapedPreRenderedElementImpl;
/** @deprecated Use `ShapedPreRenderedElementImpl` instead. */
exports.ShapedPreRenderedElement = ShapedPreRenderedElementImpl;
/**
 * A `foreignObject` element to be transferred to the DOM within the SVG.
 *
 * This can be useful to to benefit from e.g. HTML rendering features, such as line wrapping, inside of
 * the SVG diagram.  Note that `foreignObject` is not supported by all browsers and SVG viewers may not
 * support rendering the `foreignObject` content.
 *
 * If no dimensions are specified in the schema element, this element will obtain the dimension of
 * its parent to fill the entire available room. Thus, this element requires specified bounds itself
 * or bounds to be available for its parent.
 */
class ForeignObjectElementImpl extends ShapedPreRenderedElementImpl {
    get bounds() {
        if (geometry_1.Dimension.isValid(this.size)) {
            return {
                x: this.position.x,
                y: this.position.y,
                width: this.size.width,
                height: this.size.height
            };
        }
        else if ((0, model_1.isBoundsAware)(this.parent)) {
            return {
                x: this.position.x,
                y: this.position.y,
                width: this.parent.bounds.width,
                height: this.parent.bounds.height
            };
        }
        return geometry_1.Bounds.EMPTY;
    }
}
exports.ForeignObjectElementImpl = ForeignObjectElementImpl;
/** @deprecated Use `ForeignObjectElementImpl` instead. */
exports.ForeignObjectElement = ForeignObjectElementImpl;


/***/ }),

/***/ "../../node_modules/sprotty/lib/lib/modules.js":
/*!*****************************************************!*\
  !*** ../../node_modules/sprotty/lib/lib/modules.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2019 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.loadDefaultModules = void 0;
const di_config_1 = __importDefault(__webpack_require__(/*! ../base/di.config */ "../../node_modules/sprotty/lib/base/di.config.js"));
const di_config_2 = __importDefault(__webpack_require__(/*! ../model-source/di.config */ "../../node_modules/sprotty/lib/model-source/di.config.js"));
const di_config_3 = __importDefault(__webpack_require__(/*! ../features/bounds/di.config */ "../../node_modules/sprotty/lib/features/bounds/di.config.js"));
const di_config_4 = __importDefault(__webpack_require__(/*! ../features/button/di.config */ "../../node_modules/sprotty/lib/features/button/di.config.js"));
const di_config_5 = __importDefault(__webpack_require__(/*! ../features/command-palette/di.config */ "../../node_modules/sprotty/lib/features/command-palette/di.config.js"));
const di_config_6 = __importDefault(__webpack_require__(/*! ../features/context-menu/di.config */ "../../node_modules/sprotty/lib/features/context-menu/di.config.js"));
const di_config_7 = __importDefault(__webpack_require__(/*! ../features/decoration/di.config */ "../../node_modules/sprotty/lib/features/decoration/di.config.js"));
const di_config_8 = __importDefault(__webpack_require__(/*! ../features/edge-layout/di.config */ "../../node_modules/sprotty/lib/features/edge-layout/di.config.js"));
const di_config_9 = __webpack_require__(/*! ../features/edit/di.config */ "../../node_modules/sprotty/lib/features/edit/di.config.js");
const di_config_10 = __importDefault(__webpack_require__(/*! ../features/expand/di.config */ "../../node_modules/sprotty/lib/features/expand/di.config.js"));
const di_config_11 = __importDefault(__webpack_require__(/*! ../features/export/di.config */ "../../node_modules/sprotty/lib/features/export/di.config.js"));
const di_config_12 = __importDefault(__webpack_require__(/*! ../features/fade/di.config */ "../../node_modules/sprotty/lib/features/fade/di.config.js"));
const di_config_13 = __importDefault(__webpack_require__(/*! ../features/hover/di.config */ "../../node_modules/sprotty/lib/features/hover/di.config.js"));
const di_config_14 = __importDefault(__webpack_require__(/*! ../features/move/di.config */ "../../node_modules/sprotty/lib/features/move/di.config.js"));
const di_config_15 = __importDefault(__webpack_require__(/*! ../features/open/di.config */ "../../node_modules/sprotty/lib/features/open/di.config.js"));
const di_config_16 = __importDefault(__webpack_require__(/*! ../features/routing/di.config */ "../../node_modules/sprotty/lib/features/routing/di.config.js"));
const di_config_17 = __importDefault(__webpack_require__(/*! ../features/select/di.config */ "../../node_modules/sprotty/lib/features/select/di.config.js"));
const di_config_18 = __importDefault(__webpack_require__(/*! ../features/undo-redo/di.config */ "../../node_modules/sprotty/lib/features/undo-redo/di.config.js"));
const di_config_19 = __importDefault(__webpack_require__(/*! ../features/update/di.config */ "../../node_modules/sprotty/lib/features/update/di.config.js"));
const di_config_20 = __importDefault(__webpack_require__(/*! ../features/viewport/di.config */ "../../node_modules/sprotty/lib/features/viewport/di.config.js"));
const di_config_21 = __importDefault(__webpack_require__(/*! ../features/zorder/di.config */ "../../node_modules/sprotty/lib/features/zorder/di.config.js"));
/**
 * Load the default set of container modules provided by Sprotty.
 */
function loadDefaultModules(container, options) {
    const modules = [
        di_config_1.default, di_config_2.default, di_config_3.default, di_config_4.default,
        di_config_5.default, di_config_6.default, di_config_7.default, di_config_9.edgeEditModule,
        di_config_8.default, di_config_10.default, di_config_11.default, di_config_12.default,
        di_config_13.default, di_config_9.labelEditModule, di_config_9.labelEditUiModule, di_config_14.default,
        di_config_15.default, di_config_16.default, di_config_17.default, di_config_18.default,
        di_config_19.default, di_config_20.default, di_config_21.default
    ];
    if (options && options.exclude) {
        for (const mod of options.exclude) {
            const index = modules.indexOf(mod);
            if (index >= 0)
                modules.splice(index, 1);
        }
    }
    container.load(...modules);
}
exports.loadDefaultModules = loadDefaultModules;


/***/ }),

/***/ "../../node_modules/sprotty/lib/lib/svg-views.js":
/*!*******************************************************!*\
  !*** ../../node_modules/sprotty/lib/lib/svg-views.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.EmptyGroupView = exports.DiamondNodeView = exports.RectangularNodeView = exports.CircularNodeView = exports.SvgViewportView = void 0;
/** @jsx svg */
const jsx_1 = __webpack_require__(/*! ./jsx */ "../../node_modules/sprotty/lib/lib/jsx.js");
const sgraph_1 = __webpack_require__(/*! ../graph/sgraph */ "../../node_modules/sprotty/lib/graph/sgraph.js");
const views_1 = __webpack_require__(/*! ../features/bounds/views */ "../../node_modules/sprotty/lib/features/bounds/views.js");
const geometry_1 = __webpack_require__(/*! ../utils/geometry */ "../../node_modules/sprotty/lib/utils/geometry.js");
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
let SvgViewportView = class SvgViewportView {
    render(model, context, args) {
        const transform = `scale(${model.zoom}) translate(${-model.scroll.x},${-model.scroll.y})`;
        return (0, jsx_1.svg)("svg", null,
            (0, jsx_1.svg)("g", { transform: transform }, context.renderChildren(model)));
    }
};
SvgViewportView = __decorate([
    (0, inversify_1.injectable)()
], SvgViewportView);
exports.SvgViewportView = SvgViewportView;
let CircularNodeView = class CircularNodeView extends views_1.ShapeView {
    render(node, context, args) {
        if (!this.isVisible(node, context)) {
            return undefined;
        }
        const radius = this.getRadius(node);
        return (0, jsx_1.svg)("g", null,
            (0, jsx_1.svg)("circle", { "class-sprotty-node": node instanceof sgraph_1.SNodeImpl, "class-sprotty-port": node instanceof sgraph_1.SPortImpl, "class-mouseover": node.hoverFeedback, "class-selected": node.selected, r: radius, cx: radius, cy: radius }),
            context.renderChildren(node));
    }
    getRadius(node) {
        const d = Math.min(node.size.width, node.size.height);
        return d > 0 ? d / 2 : 0;
    }
};
CircularNodeView = __decorate([
    (0, inversify_1.injectable)()
], CircularNodeView);
exports.CircularNodeView = CircularNodeView;
let RectangularNodeView = class RectangularNodeView extends views_1.ShapeView {
    render(node, context, args) {
        if (!this.isVisible(node, context)) {
            return undefined;
        }
        return (0, jsx_1.svg)("g", null,
            (0, jsx_1.svg)("rect", { "class-sprotty-node": node instanceof sgraph_1.SNodeImpl, "class-sprotty-port": node instanceof sgraph_1.SPortImpl, "class-mouseover": node.hoverFeedback, "class-selected": node.selected, x: "0", y: "0", width: Math.max(node.size.width, 0), height: Math.max(node.size.height, 0) }),
            context.renderChildren(node));
    }
};
RectangularNodeView = __decorate([
    (0, inversify_1.injectable)()
], RectangularNodeView);
exports.RectangularNodeView = RectangularNodeView;
let DiamondNodeView = class DiamondNodeView extends views_1.ShapeView {
    render(node, context, args) {
        if (!this.isVisible(node, context)) {
            return undefined;
        }
        const diamond = new geometry_1.Diamond({ height: Math.max(node.size.height, 0), width: Math.max(node.size.width, 0), x: 0, y: 0 });
        const points = `${svgStr(diamond.topPoint)} ${svgStr(diamond.rightPoint)} ${svgStr(diamond.bottomPoint)} ${svgStr(diamond.leftPoint)}`;
        return (0, jsx_1.svg)("g", null,
            (0, jsx_1.svg)("polygon", { "class-sprotty-node": node instanceof sgraph_1.SNodeImpl, "class-sprotty-port": node instanceof sgraph_1.SPortImpl, "class-mouseover": node.hoverFeedback, "class-selected": node.selected, points: points }),
            context.renderChildren(node));
    }
};
DiamondNodeView = __decorate([
    (0, inversify_1.injectable)()
], DiamondNodeView);
exports.DiamondNodeView = DiamondNodeView;
function svgStr(point) {
    return `${point.x},${point.y}`;
}
let EmptyGroupView = class EmptyGroupView {
    render(model, context) {
        return (0, jsx_1.svg)("g", null);
    }
};
EmptyGroupView = __decorate([
    (0, inversify_1.injectable)()
], EmptyGroupView);
exports.EmptyGroupView = EmptyGroupView;


/***/ }),

/***/ "../../node_modules/sprotty/lib/lib/virtualize.js":
/*!********************************************************!*\
  !*** ../../node_modules/sprotty/lib/lib/virtualize.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2021 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
const snabbdom_1 = __webpack_require__(/*! snabbdom */ "../../node_modules/snabbdom/build/index.js");
function buildVNodeData(attrs) {
    const data = {};
    const addData = (memo, name) => {
        if (name !== 'style' && name !== 'class') {
            const val = unescapeEntities(attrs[name]);
            memo ? memo[name] = val : memo = { [name]: val };
        }
        return memo;
    };
    const _attrs = Object.keys(attrs).reduce(addData, null);
    if (_attrs) {
        data.attrs = _attrs;
    }
    const style = parseStyle(attrs);
    if (style) {
        data.style = style;
    }
    const classes = parseClass(attrs);
    if (classes) {
        data.class = classes;
    }
    return data;
}
function parseStyle(attrs) {
    const addStyle = (memo, styleProp) => {
        const res = styleProp.split(':');
        const name = transformName(res[0].trim());
        if (name) {
            const val = res[1].replace('!important', '').trim();
            memo ? memo[name] = val : memo = { [name]: val };
        }
        return memo;
    };
    try {
        return attrs.style.split(';').reduce(addStyle, null);
    }
    catch (e) {
        return null;
    }
}
function parseClass(attrs) {
    const addClass = (memo, className) => {
        className = className.trim();
        if (className) {
            memo ? memo[className] = true : memo = { [className]: true };
        }
        return memo;
    };
    try {
        return attrs.class.split(' ').reduce(addClass, null);
    }
    catch (e) {
        return null;
    }
}
function transformName(name) {
    // Replace -a with A to help camel case style property names.
    name = name.replace(/-(\w)/g, function _replace($1, $2) {
        return $2.toUpperCase();
    });
    // Handle properties that start with a -.
    const firstChar = name.charAt(0).toLowerCase();
    return `${firstChar}${name.substring(1)}`;
}
// Regex for matching HTML entities.
const entityRegex = new RegExp('&[a-z0-9#]+;', 'gi');
// Element for setting innerHTML for transforming entities.
let el = null;
function unescapeEntities(text) {
    // Create the element using the context if it doesn't exist.
    if (!el) {
        el = document.createElement('div');
    }
    return text.replace(entityRegex, (entity) => {
        if (el === null)
            return '';
        el.innerHTML = entity;
        return el.textContent === null ? '' : el.textContent;
    });
}
function recurse(doc, func) {
    let node = doc;
    let parent = null;
    const stack = [];
    const setChild = (n) => {
        const child = n.firstChild;
        if (child !== null) {
            parent = n;
        }
        node = child;
    };
    func(node, parent);
    setChild(node);
    while (true) {
        while (node) {
            stack.push(node);
            func(node, parent);
            setChild(node);
        }
        const _node = stack.pop();
        node = _node ? _node : null;
        if (!stack.length)
            break;
        parent = stack[stack.length - 1];
        if (node) {
            const sibling = node.nextSibling;
            if (sibling == null) {
                parent = stack[stack.length - 1];
            }
            node = sibling;
        }
    }
}
let vdom = null;
const vnodeMap = new Map();
let delimited = false;
function toVNode(node, parent) {
    let current;
    if (parent !== null) {
        current = vnodeMap.get(parent);
    }
    switch (node === null || node === void 0 ? void 0 : node.nodeType) {
        // element
        case 1: {
            if (current === undefined)
                return;
            current.children = current.children ? current.children : [];
            const children = current.children;
            const attributes = node.attributes;
            const attrs = {};
            for (let i = 0; i < attributes.length; i++) {
                const attr = attributes.item(i);
                if (attr) {
                    attrs[attr.name] = attr.value;
                }
            }
            const vn = (0, snabbdom_1.h)(node.nodeName, buildVNodeData(attrs));
            children.push(vn);
            vnodeMap.set(node, vn);
            break;
        }
        // text
        case 3: {
            const text = node.textContent;
            if (text !== null && current !== undefined) {
                current.children = current.children ? current.children : [];
                const children = current.children;
                const lastData = children.length > 0 ? children[children.length - 1] : null;
                if (!delimited && typeof lastData !== 'string' && lastData !== null && lastData.sel === undefined) {
                    lastData.text = lastData.text + text;
                }
                else {
                    children.push((0, snabbdom_1.vnode)(undefined, undefined, undefined, text, undefined));
                }
                delimited = false;
            }
            break;
        }
        case 8: {
            delimited = true;
            break;
        }
        // document
        case 9: {
            vdom = (0, snabbdom_1.vnode)(undefined, undefined, [], undefined, undefined);
            vnodeMap.set(node, vdom);
            break;
        }
        default:
            break;
    }
}
function stripVNode(vnodes) {
    const children = vnodes === null || vnodes === void 0 ? void 0 : vnodes.children;
    if (typeof children === 'undefined')
        return null;
    if (children.length === 1 && typeof children[0] !== 'string')
        return children[0];
    return null;
}
function virtualizeString(html) {
    var _a, _b;
    const parser = new window.DOMParser();
    if (parser === undefined || html === undefined || html === '')
        return null;
    const doc = parser.parseFromString(html, "application/xml");
    if (((_a = doc === null || doc === void 0 ? void 0 : doc.firstChild) === null || _a === void 0 ? void 0 : _a.nodeName) === 'parsererror') {
        const error = `${(_b = doc === null || doc === void 0 ? void 0 : doc.firstChild) === null || _b === void 0 ? void 0 : _b.textContent}`;
        return (0, snabbdom_1.h)('parsererror', [error]);
    }
    delimited = false;
    vdom = null;
    recurse(doc, toVNode);
    if (vdom === null)
        return null;
    return stripVNode(vdom);
}
exports["default"] = virtualizeString;


/***/ }),

/***/ "../../node_modules/sprotty/lib/model-source/commit-model.js":
/*!*******************************************************************!*\
  !*** ../../node_modules/sprotty/lib/model-source/commit-model.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2019 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CommitModelCommand = exports.CommitModelAction = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const command_1 = __webpack_require__(/*! ../base/commands/command */ "../../node_modules/sprotty/lib/base/commands/command.js");
const types_1 = __webpack_require__(/*! ../base/types */ "../../node_modules/sprotty/lib/base/types.js");
const model_source_1 = __webpack_require__(/*! ./model-source */ "../../node_modules/sprotty/lib/model-source/model-source.js");
var CommitModelAction;
(function (CommitModelAction) {
    CommitModelAction.KIND = 'commitModel';
    function create() {
        return {
            kind: CommitModelAction.KIND
        };
    }
    CommitModelAction.create = create;
})(CommitModelAction = exports.CommitModelAction || (exports.CommitModelAction = {}));
let CommitModelCommand = class CommitModelCommand extends command_1.SystemCommand {
    constructor(action) {
        super();
        this.action = action;
    }
    execute(context) {
        this.newModel = context.modelFactory.createSchema(context.root);
        return this.doCommit(this.newModel, context.root, true);
    }
    doCommit(model, result, doSetOriginal) {
        const commitResult = this.modelSource.commitModel(model);
        if (commitResult instanceof Promise) {
            return commitResult.then(originalModel => {
                if (doSetOriginal)
                    this.originalModel = originalModel;
                return result;
            });
        }
        else {
            if (doSetOriginal)
                this.originalModel = commitResult;
            return result;
        }
    }
    undo(context) {
        return this.doCommit(this.originalModel, context.root, false);
    }
    redo(context) {
        return this.doCommit(this.newModel, context.root, false);
    }
};
CommitModelCommand.KIND = CommitModelAction.KIND;
__decorate([
    (0, inversify_1.inject)(types_1.TYPES.ModelSource),
    __metadata("design:type", model_source_1.ModelSource)
], CommitModelCommand.prototype, "modelSource", void 0);
CommitModelCommand = __decorate([
    (0, inversify_1.injectable)(),
    __param(0, (0, inversify_1.inject)(types_1.TYPES.Action)),
    __metadata("design:paramtypes", [Object])
], CommitModelCommand);
exports.CommitModelCommand = CommitModelCommand;


/***/ }),

/***/ "../../node_modules/sprotty/lib/model-source/di.config.js":
/*!****************************************************************!*\
  !*** ../../node_modules/sprotty/lib/model-source/di.config.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const command_registration_1 = __webpack_require__(/*! ../base/commands/command-registration */ "../../node_modules/sprotty/lib/base/commands/command-registration.js");
const types_1 = __webpack_require__(/*! ../base/types */ "../../node_modules/sprotty/lib/base/types.js");
const commit_model_1 = __webpack_require__(/*! ./commit-model */ "../../node_modules/sprotty/lib/model-source/commit-model.js");
const model_source_1 = __webpack_require__(/*! ./model-source */ "../../node_modules/sprotty/lib/model-source/model-source.js");
/**
 * This container module does NOT provide any binding for TYPES.ModelSource because that needs to be
 * done according to the needs of the application. You can choose between a local (LocalModelSource)
 * and a remote (e.g. WebSocketDiagramServer) implementation.
 */
const modelSourceModule = new inversify_1.ContainerModule((bind, _unbind, isBound) => {
    bind(types_1.TYPES.ModelSourceProvider).toProvider((context) => {
        return () => {
            return new Promise((resolve) => {
                resolve(context.container.get(types_1.TYPES.ModelSource));
            });
        };
    });
    (0, command_registration_1.configureCommand)({ bind, isBound }, commit_model_1.CommitModelCommand);
    bind(types_1.TYPES.IActionHandlerInitializer).toService(types_1.TYPES.ModelSource);
    bind(model_source_1.ComputedBoundsApplicator).toSelf().inSingletonScope();
});
exports["default"] = modelSourceModule;


/***/ }),

/***/ "../../node_modules/sprotty/lib/model-source/diagram-server.js":
/*!*********************************************************************!*\
  !*** ../../node_modules/sprotty/lib/model-source/diagram-server.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2021 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isActionMessage = exports.DiagramServer = exports.DiagramServerProxy = exports.ServerStatusAction = void 0;
const file_saver_1 = __webpack_require__(/*! file-saver */ "../../node_modules/file-saver/dist/FileSaver.min.js");
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const sprotty_protocol_1 = __webpack_require__(/*! sprotty-protocol */ "../../node_modules/sprotty-protocol/lib/index.js");
const actions_1 = __webpack_require__(/*! sprotty-protocol/lib/actions */ "../../node_modules/sprotty-protocol/lib/actions.js");
const object_1 = __webpack_require__(/*! sprotty-protocol/lib/utils/object */ "../../node_modules/sprotty-protocol/lib/utils/object.js");
const set_model_1 = __webpack_require__(/*! ../base/features/set-model */ "../../node_modules/sprotty/lib/base/features/set-model.js");
const types_1 = __webpack_require__(/*! ../base/types */ "../../node_modules/sprotty/lib/base/types.js");
const bounds_manipulation_1 = __webpack_require__(/*! ../features/bounds/bounds-manipulation */ "../../node_modules/sprotty/lib/features/bounds/bounds-manipulation.js");
const svg_exporter_1 = __webpack_require__(/*! ../features/export/svg-exporter */ "../../node_modules/sprotty/lib/features/export/svg-exporter.js");
const update_model_1 = __webpack_require__(/*! ../features/update/update-model */ "../../node_modules/sprotty/lib/features/update/update-model.js");
const model_source_1 = __webpack_require__(/*! ./model-source */ "../../node_modules/sprotty/lib/model-source/model-source.js");
/**
 * Sent by the external server when to signal a state change.
 */
class ServerStatusAction {
    constructor() {
        this.kind = ServerStatusAction.KIND;
    }
}
ServerStatusAction.KIND = 'serverStatus';
exports.ServerStatusAction = ServerStatusAction;
const receivedFromServerProperty = '__receivedFromServer';
/**
 * A ModelSource that communicates with an external model provider, e.g.
 * a model editor.
 *
 * This class defines which actions are sent to and received from the
 * external model source.
 */
let DiagramServerProxy = class DiagramServerProxy extends model_source_1.ModelSource {
    constructor() {
        super(...arguments);
        this.currentRoot = {
            type: 'NONE',
            id: 'ROOT'
        };
    }
    initialize(registry) {
        super.initialize(registry);
        // Register this model source
        registry.register(actions_1.ComputedBoundsAction.KIND, this);
        registry.register(bounds_manipulation_1.RequestBoundsCommand.KIND, this);
        registry.register(actions_1.RequestPopupModelAction.KIND, this);
        registry.register(actions_1.CollapseExpandAction.KIND, this);
        registry.register(actions_1.CollapseExpandAllAction.KIND, this);
        registry.register(sprotty_protocol_1.OpenAction.KIND, this);
        registry.register(ServerStatusAction.KIND, this);
        if (!this.clientId)
            this.clientId = this.viewerOptions.baseDiv;
    }
    handle(action) {
        const forwardToServer = this.handleLocally(action);
        if (forwardToServer)
            this.forwardToServer(action);
    }
    forwardToServer(action) {
        const message = {
            clientId: this.clientId,
            action: action
        };
        this.logger.log(this, 'sending', message);
        this.sendMessage(message);
    }
    messageReceived(data) {
        const object = typeof (data) === 'string' ? JSON.parse(data) : data;
        if ((0, sprotty_protocol_1.isActionMessage)(object) && object.action) {
            if (!object.clientId || object.clientId === this.clientId) {
                object.action[receivedFromServerProperty] = true;
                this.logger.log(this, 'receiving', object);
                this.actionDispatcher.dispatch(object.action).then(() => {
                    this.storeNewModel(object.action);
                });
            }
        }
        else {
            this.logger.error(this, 'received data is not an action message', object);
        }
    }
    /**
     * Check whether the given action should be handled locally. Returns true if the action should
     * still be sent to the server, and false if it's only handled locally.
     */
    handleLocally(action) {
        this.storeNewModel(action);
        switch (action.kind) {
            case actions_1.ComputedBoundsAction.KIND:
                return this.handleComputedBounds(action);
            case actions_1.RequestModelAction.KIND:
                return this.handleRequestModel(action);
            case bounds_manipulation_1.RequestBoundsCommand.KIND:
                return false;
            case svg_exporter_1.ExportSvgAction.KIND:
                return this.handleExportSvgAction(action);
            case ServerStatusAction.KIND:
                return this.handleServerStateAction(action);
        }
        return !action[receivedFromServerProperty];
    }
    /**
     * Put the new model contained in the given action into the model storage, if there is any.
     */
    storeNewModel(action) {
        if (action.kind === set_model_1.SetModelCommand.KIND
            || action.kind === update_model_1.UpdateModelCommand.KIND
            || action.kind === bounds_manipulation_1.RequestBoundsCommand.KIND) {
            const newRoot = action.newRoot;
            if (newRoot) {
                this.currentRoot = newRoot;
                if (action.kind === set_model_1.SetModelCommand.KIND || action.kind === update_model_1.UpdateModelCommand.KIND) {
                    this.lastSubmittedModelType = newRoot.type;
                }
            }
        }
    }
    handleRequestModel(action) {
        const newOptions = Object.assign({ needsClientLayout: this.viewerOptions.needsClientLayout, needsServerLayout: this.viewerOptions.needsServerLayout }, action.options);
        const newAction = Object.assign(Object.assign({}, action), { options: newOptions });
        this.forwardToServer(newAction);
        return false;
    }
    /**
     * If the server requires to compute a layout, the computed bounds are forwarded. Otherwise they
     * are applied to the current model locally and a model update is triggered.
     */
    handleComputedBounds(action) {
        if (this.viewerOptions.needsServerLayout) {
            return true;
        }
        else {
            const root = this.currentRoot;
            this.computedBoundsApplicator.apply(root, action);
            if (root.type === this.lastSubmittedModelType) {
                this.actionDispatcher.dispatch(actions_1.UpdateModelAction.create(root));
            }
            else {
                this.actionDispatcher.dispatch(actions_1.SetModelAction.create(root));
            }
            this.lastSubmittedModelType = root.type;
            return false;
        }
    }
    handleExportSvgAction(action) {
        const blob = new Blob([action.svg], { type: "text/plain;charset=utf-8" });
        (0, file_saver_1.saveAs)(blob, "diagram.svg");
        return false;
    }
    handleServerStateAction(action) {
        return false;
    }
    commitModel(newRoot) {
        const previousRoot = this.currentRoot;
        this.currentRoot = newRoot;
        return previousRoot;
    }
};
__decorate([
    (0, inversify_1.inject)(types_1.TYPES.ILogger),
    __metadata("design:type", Object)
], DiagramServerProxy.prototype, "logger", void 0);
__decorate([
    (0, inversify_1.inject)(model_source_1.ComputedBoundsApplicator),
    __metadata("design:type", model_source_1.ComputedBoundsApplicator)
], DiagramServerProxy.prototype, "computedBoundsApplicator", void 0);
DiagramServerProxy = __decorate([
    (0, inversify_1.injectable)()
], DiagramServerProxy);
exports.DiagramServerProxy = DiagramServerProxy;
// Compatibility deprecation layer (will be removed with the graduation 1.0.0 release)
/**
 * @deprecated Use `DiagramServerProxy` instead.
 */
exports.DiagramServer = DiagramServerProxy;
/**
 * @deprecated Use the declaration from `sprotty-protocol` instead.
 */
function isActionMessage(object) {
    return (0, object_1.hasOwnProperty)(object, 'action');
}
exports.isActionMessage = isActionMessage;


/***/ }),

/***/ "../../node_modules/sprotty/lib/model-source/local-model-source.js":
/*!*************************************************************************!*\
  !*** ../../node_modules/sprotty/lib/model-source/local-model-source.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.LocalModelSource = void 0;
const file_saver_1 = __webpack_require__(/*! file-saver */ "../../node_modules/file-saver/dist/FileSaver.min.js");
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const actions_1 = __webpack_require__(/*! sprotty-protocol/lib/actions */ "../../node_modules/sprotty-protocol/lib/actions.js");
const sprotty_protocol_1 = __webpack_require__(/*! sprotty-protocol */ "../../node_modules/sprotty-protocol/lib/index.js");
const model_utils_1 = __webpack_require__(/*! sprotty-protocol/lib/utils/model-utils */ "../../node_modules/sprotty-protocol/lib/utils/model-utils.js");
const types_1 = __webpack_require__(/*! ../base/types */ "../../node_modules/sprotty/lib/base/types.js");
const smodel_factory_1 = __webpack_require__(/*! ../base/model/smodel-factory */ "../../node_modules/sprotty/lib/base/model/smodel-factory.js");
const svg_exporter_1 = __webpack_require__(/*! ../features/export/svg-exporter */ "../../node_modules/sprotty/lib/features/export/svg-exporter.js");
const model_matching_1 = __webpack_require__(/*! ../features/update/model-matching */ "../../node_modules/sprotty/lib/features/update/model-matching.js");
const model_source_1 = __webpack_require__(/*! ./model-source */ "../../node_modules/sprotty/lib/model-source/model-source.js");
/**
 * A model source that allows to set and modify the model through function calls.
 * This class can be used as a facade over the action-based API of sprotty. It handles
 * actions for bounds calculation and model updates.
 */
let LocalModelSource = class LocalModelSource extends model_source_1.ModelSource {
    constructor() {
        super(...arguments);
        this.currentRoot = smodel_factory_1.EMPTY_ROOT;
    }
    get model() {
        return this.currentRoot;
    }
    set model(root) {
        this.setModel(root);
    }
    initialize(registry) {
        super.initialize(registry);
        // Register this model source
        registry.register(actions_1.ComputedBoundsAction.KIND, this);
        registry.register(actions_1.RequestPopupModelAction.KIND, this);
    }
    /**
     * Set the model without incremental update.
     */
    setModel(newRoot) {
        this.currentRoot = newRoot;
        return this.submitModel(newRoot, false);
    }
    commitModel(newRoot) {
        const previousRoot = this.currentRoot;
        this.currentRoot = newRoot;
        return previousRoot;
    }
    /**
     * Apply an incremental update to the model with an animation showing the transition to
     * the new state. If `newRoot` is undefined, the current root is submitted; in that case
     * it is assumed that it has been modified before.
     */
    updateModel(newRoot) {
        if (newRoot === undefined) {
            return this.submitModel(this.currentRoot, true);
        }
        else {
            this.currentRoot = newRoot;
            return this.submitModel(newRoot, true);
        }
    }
    /**
     * Get the current selection from the model.
     */
    async getSelection() {
        const res = await this.actionDispatcher.request(sprotty_protocol_1.GetSelectionAction.create());
        const result = [];
        this.gatherSelectedElements(this.currentRoot, new Set(res.selectedElementsIDs), result);
        return result;
    }
    gatherSelectedElements(element, selected, result) {
        if (selected.has(element.id)) {
            result.push(element);
        }
        if (element.children) {
            for (const child of element.children) {
                this.gatherSelectedElements(child, selected, result);
            }
        }
    }
    /**
     * Get the current viewport from the model.
     */
    async getViewport() {
        const res = await this.actionDispatcher.request(sprotty_protocol_1.GetViewportAction.create());
        return {
            scroll: res.viewport.scroll,
            zoom: res.viewport.zoom,
            canvasBounds: res.canvasBounds
        };
    }
    /**
     * If client layout is active, run a `RequestBoundsAction` and wait for the resulting
     * `ComputedBoundsAction`, otherwise call `doSubmitModel(…)` directly.
     */
    async submitModel(newRoot, update, cause) {
        if (this.viewerOptions.needsClientLayout) {
            const computedBounds = await this.actionDispatcher.request(actions_1.RequestBoundsAction.create(newRoot));
            const index = this.computedBoundsApplicator.apply(this.currentRoot, computedBounds);
            await this.doSubmitModel(newRoot, true, cause, index);
        }
        else {
            await this.doSubmitModel(newRoot, update, cause);
        }
    }
    /**
     * Submit the given model with an `UpdateModelAction` or a `SetModelAction` depending on the
     * `update` argument. If available, the model layout engine is invoked first.
     */
    async doSubmitModel(newRoot, update, cause, index) {
        if (this.layoutEngine !== undefined) {
            try {
                const layoutResult = this.layoutEngine.layout(newRoot, index);
                if (layoutResult instanceof Promise)
                    newRoot = await layoutResult;
                else if (layoutResult !== undefined)
                    newRoot = layoutResult;
            }
            catch (error) {
                this.logger.error(this, error.toString(), error.stack);
            }
        }
        const lastSubmittedModelType = this.lastSubmittedModelType;
        this.lastSubmittedModelType = newRoot.type;
        if (cause && cause.kind === actions_1.RequestModelAction.KIND && cause.requestId) {
            const request = cause;
            await this.actionDispatcher.dispatch(actions_1.SetModelAction.create(newRoot, request.requestId));
        }
        else if (update && newRoot.type === lastSubmittedModelType) {
            const input = Array.isArray(update) ? update : newRoot;
            await this.actionDispatcher.dispatch(actions_1.UpdateModelAction.create(input, { animate: true, cause }));
        }
        else {
            await this.actionDispatcher.dispatch(actions_1.SetModelAction.create(newRoot));
        }
    }
    /**
     * Modify the current model with an array of matches.
     */
    applyMatches(matches) {
        const root = this.currentRoot;
        (0, model_matching_1.applyMatches)(root, matches);
        return this.submitModel(root, matches);
    }
    /**
     * Modify the current model by adding new elements.
     */
    addElements(elements) {
        const matches = [];
        for (const e of elements) {
            const anye = e;
            if (anye.element !== undefined && anye.parentId !== undefined) {
                matches.push({
                    right: anye.element,
                    rightParentId: anye.parentId
                });
            }
            else if (anye.id !== undefined) {
                matches.push({
                    right: anye,
                    rightParentId: this.currentRoot.id
                });
            }
        }
        return this.applyMatches(matches);
    }
    /**
     * Modify the current model by removing elements.
     */
    removeElements(elements) {
        const matches = [];
        const index = new model_utils_1.SModelIndex();
        index.add(this.currentRoot);
        for (const e of elements) {
            const anye = e;
            if (anye.elementId !== undefined && anye.parentId !== undefined) {
                const element = index.getById(anye.elementId);
                if (element !== undefined) {
                    matches.push({
                        left: element,
                        leftParentId: anye.parentId
                    });
                }
            }
            else {
                const element = index.getById(anye);
                if (element !== undefined) {
                    matches.push({
                        left: element,
                        leftParentId: this.currentRoot.id
                    });
                }
            }
        }
        return this.applyMatches(matches);
    }
    // ----- Methods for handling incoming actions ----------------------------
    handle(action) {
        switch (action.kind) {
            case actions_1.RequestModelAction.KIND:
                this.handleRequestModel(action);
                break;
            case actions_1.ComputedBoundsAction.KIND:
                this.computedBoundsApplicator.apply(this.currentRoot, action);
                break;
            case actions_1.RequestPopupModelAction.KIND:
                this.handleRequestPopupModel(action);
                break;
            case svg_exporter_1.ExportSvgAction.KIND:
                this.handleExportSvgAction(action);
                break;
        }
    }
    handleRequestModel(action) {
        this.submitModel(this.currentRoot, false, action);
    }
    handleRequestPopupModel(action) {
        if (this.popupModelProvider !== undefined) {
            const element = (0, model_utils_1.findElement)(this.currentRoot, action.elementId);
            const popupRoot = this.popupModelProvider.getPopupModel(action, element);
            if (popupRoot !== undefined) {
                popupRoot.canvasBounds = action.bounds;
                this.actionDispatcher.dispatch(actions_1.SetPopupModelAction.create(popupRoot, action.requestId));
            }
        }
    }
    handleExportSvgAction(action) {
        const blob = new Blob([action.svg], { type: 'text/plain;charset=utf-8' });
        (0, file_saver_1.saveAs)(blob, 'diagram.svg');
    }
};
__decorate([
    (0, inversify_1.inject)(types_1.TYPES.ILogger),
    __metadata("design:type", Object)
], LocalModelSource.prototype, "logger", void 0);
__decorate([
    (0, inversify_1.inject)(model_source_1.ComputedBoundsApplicator),
    __metadata("design:type", model_source_1.ComputedBoundsApplicator)
], LocalModelSource.prototype, "computedBoundsApplicator", void 0);
__decorate([
    (0, inversify_1.inject)(types_1.TYPES.IPopupModelProvider),
    (0, inversify_1.optional)(),
    __metadata("design:type", Object)
], LocalModelSource.prototype, "popupModelProvider", void 0);
__decorate([
    (0, inversify_1.inject)(types_1.TYPES.IModelLayoutEngine),
    (0, inversify_1.optional)(),
    __metadata("design:type", Object)
], LocalModelSource.prototype, "layoutEngine", void 0);
LocalModelSource = __decorate([
    (0, inversify_1.injectable)()
], LocalModelSource);
exports.LocalModelSource = LocalModelSource;


/***/ }),

/***/ "../../node_modules/sprotty/lib/model-source/logging.js":
/*!**************************************************************!*\
  !*** ../../node_modules/sprotty/lib/model-source/logging.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.LoggingAction = exports.ForwardingLogger = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const actions_1 = __webpack_require__(/*! sprotty-protocol/lib/actions */ "../../node_modules/sprotty-protocol/lib/actions.js");
const logging_1 = __webpack_require__(/*! ../utils/logging */ "../../node_modules/sprotty/lib/utils/logging.js");
const types_1 = __webpack_require__(/*! ../base/types */ "../../node_modules/sprotty/lib/base/types.js");
/**
 * A logger that forwards messages of type 'error', 'warn', and 'info' to the model source.
 */
let ForwardingLogger = class ForwardingLogger {
    error(thisArg, message, ...params) {
        if (this.logLevel >= logging_1.LogLevel.error)
            this.forward(thisArg, message, logging_1.LogLevel.error, params);
    }
    warn(thisArg, message, ...params) {
        if (this.logLevel >= logging_1.LogLevel.warn)
            this.forward(thisArg, message, logging_1.LogLevel.warn, params);
    }
    info(thisArg, message, ...params) {
        if (this.logLevel >= logging_1.LogLevel.info)
            this.forward(thisArg, message, logging_1.LogLevel.info, params);
    }
    log(thisArg, message, ...params) {
        if (this.logLevel >= logging_1.LogLevel.log) {
            // We cannot forward 'log' level messages since that would lead to endless loops
            try {
                const caller = typeof thisArg === 'object' ? thisArg.constructor.name : String(thisArg);
                console.log.apply(thisArg, [caller + ': ' + message, ...params]);
            }
            catch (error) { }
        }
    }
    forward(thisArg, message, logLevel, params) {
        const date = new Date();
        const action = actions_1.LoggingAction.create({
            message,
            severity: logging_1.LogLevel[logLevel],
            time: date.toLocaleTimeString(),
            caller: typeof thisArg === 'object' ? thisArg.constructor.name : String(thisArg),
            params: params.map(p => JSON.stringify(p))
        });
        this.modelSourceProvider().then(modelSource => {
            try {
                modelSource.handle(action);
            }
            catch (error) {
                try {
                    console.log.apply(thisArg, [message, action, error]);
                }
                catch (e) { }
            }
        });
    }
};
__decorate([
    (0, inversify_1.inject)(types_1.TYPES.ModelSourceProvider),
    __metadata("design:type", Function)
], ForwardingLogger.prototype, "modelSourceProvider", void 0);
__decorate([
    (0, inversify_1.inject)(types_1.TYPES.LogLevel),
    __metadata("design:type", Number)
], ForwardingLogger.prototype, "logLevel", void 0);
ForwardingLogger = __decorate([
    (0, inversify_1.injectable)()
], ForwardingLogger);
exports.ForwardingLogger = ForwardingLogger;
var LoggingAction;
(function (LoggingAction) {
    LoggingAction.KIND = 'logging';
    function create(options) {
        return Object.assign({ kind: LoggingAction.KIND }, options);
    }
    LoggingAction.create = create;
})(LoggingAction = exports.LoggingAction || (exports.LoggingAction = {}));


/***/ }),

/***/ "../../node_modules/sprotty/lib/model-source/model-source.js":
/*!*******************************************************************!*\
  !*** ../../node_modules/sprotty/lib/model-source/model-source.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ComputedBoundsApplicator = exports.ModelSource = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const actions_1 = __webpack_require__(/*! sprotty-protocol/lib/actions */ "../../node_modules/sprotty-protocol/lib/actions.js");
const model_utils_1 = __webpack_require__(/*! sprotty-protocol/lib/utils/model-utils */ "../../node_modules/sprotty-protocol/lib/utils/model-utils.js");
const types_1 = __webpack_require__(/*! ../base/types */ "../../node_modules/sprotty/lib/base/types.js");
const svg_exporter_1 = __webpack_require__(/*! ../features/export/svg-exporter */ "../../node_modules/sprotty/lib/features/export/svg-exporter.js");
/**
 * A model source is serving the model to the event cycle. It represents
 * the entry point to the client for external sources, such as model
 * editors.
 *
 * As an IActionHandler it listens to actions in and reacts to them with
 * commands or actions if necessary. This way, you can implement action
 * protocols between the client and the outside world.
 *
 * There are two default implementations for a ModelSource:
 * <ul>
 * <li>the LocalModelSource handles the actions to calculate bounds and
 * set/update the model</li>
 * <li>the DiagramServer connects via websocket to a remote source. It
 * can be used to connect to a model editor that provides the model,
 * layouts diagrams, transfers selection and answers model queries from
 * the client.</li>
 */
let ModelSource = class ModelSource {
    initialize(registry) {
        // Register this model source
        registry.register(actions_1.RequestModelAction.KIND, this);
        registry.register(svg_exporter_1.ExportSvgAction.KIND, this);
    }
};
__decorate([
    (0, inversify_1.inject)(types_1.TYPES.IActionDispatcher),
    __metadata("design:type", Object)
], ModelSource.prototype, "actionDispatcher", void 0);
__decorate([
    (0, inversify_1.inject)(types_1.TYPES.ViewerOptions),
    __metadata("design:type", Object)
], ModelSource.prototype, "viewerOptions", void 0);
ModelSource = __decorate([
    (0, inversify_1.injectable)()
], ModelSource);
exports.ModelSource = ModelSource;
let ComputedBoundsApplicator = class ComputedBoundsApplicator {
    apply(root, action) {
        const index = new model_utils_1.SModelIndex();
        index.add(root);
        for (const b of action.bounds) {
            const element = index.getById(b.elementId);
            if (element !== undefined)
                this.applyBounds(element, b.newPosition, b.newSize);
        }
        if (action.alignments !== undefined) {
            for (const a of action.alignments) {
                const element = index.getById(a.elementId);
                if (element !== undefined)
                    this.applyAlignment(element, a.newAlignment);
            }
        }
        return index;
    }
    applyAlignment(element, newAlignment) {
        const e = element;
        e.alignment = { x: newAlignment.x, y: newAlignment.y };
    }
    applyBounds(element, newPosition, newSize) {
        const e = element;
        if (newPosition)
            e.position = Object.assign({}, newPosition);
        e.size = Object.assign({}, newSize);
    }
};
ComputedBoundsApplicator = __decorate([
    (0, inversify_1.injectable)()
], ComputedBoundsApplicator);
exports.ComputedBoundsApplicator = ComputedBoundsApplicator;


/***/ }),

/***/ "../../node_modules/sprotty/lib/model-source/websocket.js":
/*!****************************************************************!*\
  !*** ../../node_modules/sprotty/lib/model-source/websocket.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.WebSocketDiagramServer = exports.WebSocketDiagramServerProxy = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const diagram_server_1 = __webpack_require__(/*! ./diagram-server */ "../../node_modules/sprotty/lib/model-source/diagram-server.js");
/**
 * An external ModelSource that connects to the model provider using a websocket.
 */
let WebSocketDiagramServerProxy = class WebSocketDiagramServerProxy extends diagram_server_1.DiagramServerProxy {
    listen(webSocket) {
        webSocket.addEventListener('message', event => {
            this.messageReceived(event.data);
        });
        webSocket.addEventListener('error', event => {
            this.logger.error(this, 'error event received', event);
        });
        this.webSocket = webSocket;
    }
    disconnect() {
        if (this.webSocket) {
            this.webSocket.close();
            this.webSocket = undefined;
        }
    }
    sendMessage(message) {
        if (this.webSocket) {
            this.webSocket.send(JSON.stringify(message));
        }
        else {
            throw new Error('WebSocket is not connected');
        }
    }
};
WebSocketDiagramServerProxy = __decorate([
    (0, inversify_1.injectable)()
], WebSocketDiagramServerProxy);
exports.WebSocketDiagramServerProxy = WebSocketDiagramServerProxy;
// Compatibility deprecation layer (will be removed with the graduation 1.0.0 release)
/**
 * @deprecated Use `WebSocketDiagramServerProxy` instead;
 */
exports.WebSocketDiagramServer = WebSocketDiagramServerProxy;


/***/ }),

/***/ "../../node_modules/sprotty/lib/utils/browser.js":
/*!*******************************************************!*\
  !*** ../../node_modules/sprotty/lib/utils/browser.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.hitsMouseEvent = exports.getWindowScroll = exports.isCrossSite = exports.isMac = exports.isCtrlOrCmd = void 0;
const sprotty_protocol_1 = __webpack_require__(/*! sprotty-protocol */ "../../node_modules/sprotty-protocol/lib/index.js");
/**
 * Returns whether the mouse or keyboard event includes the CMD key
 * on Mac or CTRL key on Linux / others.
 */
function isCtrlOrCmd(event) {
    if (isMac())
        return event.metaKey;
    else
        return event.ctrlKey;
}
exports.isCtrlOrCmd = isCtrlOrCmd;
function isMac() {
    return window.navigator.userAgent.indexOf("Mac") !== -1;
}
exports.isMac = isMac;
function isCrossSite(url) {
    if (url && typeof window !== 'undefined' && window.location) {
        let baseURL = '';
        if (window.location.protocol)
            baseURL += window.location.protocol + '//';
        if (window.location.host)
            baseURL += window.location.host;
        return baseURL.length > 0 && !url.startsWith(baseURL);
    }
    return false;
}
exports.isCrossSite = isCrossSite;
/**
 * Returns the amount of scroll of the browser window as a point.
 */
function getWindowScroll() {
    if (typeof window === 'undefined') {
        return sprotty_protocol_1.Point.ORIGIN;
    }
    return {
        x: window.pageXOffset,
        y: window.pageYOffset
    };
}
exports.getWindowScroll = getWindowScroll;
/**
 * Checks whether the given mouse event hits the given DOM element.
 */
function hitsMouseEvent(child, event) {
    const clientRect = child.getBoundingClientRect();
    return event.clientX >= clientRect.left && event.clientX <= clientRect.right
        && event.clientY >= clientRect.top && event.clientY <= clientRect.bottom;
}
exports.hitsMouseEvent = hitsMouseEvent;


/***/ }),

/***/ "../../node_modules/sprotty/lib/utils/codicon.js":
/*!*******************************************************!*\
  !*** ../../node_modules/sprotty/lib/utils/codicon.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2021 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.codiconCSSClasses = exports.codiconCSSString = exports.ANIMATION_SPIN = exports.ACTION_ITEM = void 0;
exports.ACTION_ITEM = 'action-item';
exports.ANIMATION_SPIN = 'animation-spin';
function codiconCSSString(codiconId, actionItem = false, animationSpin = false, additionalCSS = []) {
    return codiconCSSClasses(codiconId, actionItem, animationSpin, additionalCSS).join(' ');
}
exports.codiconCSSString = codiconCSSString;
function codiconCSSClasses(codiconId, actionItem = false, animationSpin = false, additionalCSS = []) {
    const cssClassArray = ['codicon', `codicon-${codiconId}`];
    if (actionItem) {
        cssClassArray.push(exports.ACTION_ITEM);
    }
    if (animationSpin) {
        cssClassArray.push(exports.ANIMATION_SPIN);
    }
    if (additionalCSS.length > 0) {
        cssClassArray.push(...additionalCSS);
    }
    return cssClassArray;
}
exports.codiconCSSClasses = codiconCSSClasses;


/***/ }),

/***/ "../../node_modules/sprotty/lib/utils/color.js":
/*!*****************************************************!*\
  !*** ../../node_modules/sprotty/lib/utils/color.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ColorMap = exports.toSVG = exports.rgb = void 0;
function rgb(red, green, blue) {
    return {
        red: red,
        green: green,
        blue: blue
    };
}
exports.rgb = rgb;
function toSVG(c) {
    return 'rgb(' + c.red + ',' + c.green + ',' + c.blue + ')';
}
exports.toSVG = toSVG;
class ColorMap {
    constructor(stops) {
        this.stops = stops;
    }
    getColor(t) {
        t = Math.max(0, Math.min(0.99999999, t));
        const i = Math.floor(t * this.stops.length);
        return this.stops[i];
    }
}
exports.ColorMap = ColorMap;


/***/ }),

/***/ "../../node_modules/sprotty/lib/utils/geometry.js":
/*!********************************************************!*\
  !*** ../../node_modules/sprotty/lib/utils/geometry.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2022 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.EMPTY_BOUNDS = exports.isValidDimension = exports.EMPTY_DIMENSION = exports.pointEquals = exports.subtract = exports.add = exports.ORIGIN_POINT = exports.linear = exports.almostEquals = exports.toRadians = exports.toDegrees = exports.magnitude = exports.normalize = exports.shiftTowards = exports.angleBetweenPoints = exports.angleOfPoint = exports.maxDistance = exports.manhattanDistance = exports.euclideanDistance = exports.includes = exports.centerOfLine = exports.center = exports.translate = exports.combine = exports.isBounds = exports.limit = exports.Direction = exports.intersection = exports.PointToPointLine = exports.Diamond = void 0;
const sprotty_protocol_1 = __webpack_require__(/*! sprotty-protocol */ "../../node_modules/sprotty-protocol/lib/index.js");
/**
 * A diamond or rhombus is a quadrilateral whose four sides all have the same length.
 * It consists of four points, a `topPoint`, `rightPoint`, `bottomPoint`, and a `leftPoint`,
 * which are connected by four lines -- the `topRightSideLight`, `topLeftSideLine`, `bottomRightSideLine`,
 * and the `bottomLeftSideLine`.
 */
class Diamond {
    constructor(bounds) {
        this.bounds = bounds;
    }
    get topPoint() {
        return {
            x: this.bounds.x + this.bounds.width / 2,
            y: this.bounds.y
        };
    }
    get rightPoint() {
        return {
            x: this.bounds.x + this.bounds.width,
            y: this.bounds.y + this.bounds.height / 2
        };
    }
    get bottomPoint() {
        return {
            x: this.bounds.x + this.bounds.width / 2,
            y: this.bounds.y + this.bounds.height
        };
    }
    get leftPoint() {
        return {
            x: this.bounds.x,
            y: this.bounds.y + this.bounds.height / 2
        };
    }
    get topRightSideLine() {
        return new PointToPointLine(this.topPoint, this.rightPoint);
    }
    get topLeftSideLine() {
        return new PointToPointLine(this.topPoint, this.leftPoint);
    }
    get bottomRightSideLine() {
        return new PointToPointLine(this.bottomPoint, this.rightPoint);
    }
    get bottomLeftSideLine() {
        return new PointToPointLine(this.bottomPoint, this.leftPoint);
    }
    /**
     * Return the closest side of this diamond to the specified `refPoint`.
     * @param {Point} refPoint a reference point
     * @returns {Line} a line representing the closest side
     */
    closestSideLine(refPoint) {
        const c = sprotty_protocol_1.Bounds.center(this.bounds);
        if (refPoint.x > c.x) {
            if (refPoint.y > c.y) {
                return this.bottomRightSideLine;
            }
            else {
                return this.topRightSideLine;
            }
        }
        else {
            if (refPoint.y > c.y) {
                return this.bottomLeftSideLine;
            }
            else {
                return this.topLeftSideLine;
            }
        }
    }
}
exports.Diamond = Diamond;
/**
 * A line made up from two points.
 */
class PointToPointLine {
    constructor(p1, p2) {
        this.p1 = p1;
        this.p2 = p2;
    }
    get a() {
        return this.p1.y - this.p2.y;
    }
    get b() {
        return this.p2.x - this.p1.x;
    }
    get c() {
        return this.p2.x * this.p1.y - this.p1.x * this.p2.y;
    }
    /**
     * The counter-clockwise angle of this line relative to the x-axis.
     */
    get angle() {
        return Math.atan2(-this.a, this.b);
    }
    /**
     * The slope of the line.
     * A vertical line returns `undefined`.
     */
    get slope() {
        if (this.b === 0)
            return undefined;
        return this.a / this.b;
    }
    /**
     * The slope of the line or `Number.MAX_SAFE_INTEGER` if vertical.
     */
    get slopeOrMax() {
        if (this.slope === undefined) {
            return Number.MAX_SAFE_INTEGER;
        }
        return this.slope;
    }
    /**
     * The direction of this line, such as 'north', 'south', or 'south-west'.
     */
    get direction() {
        const hDegrees = (0, sprotty_protocol_1.toDegrees)(this.angle);
        const degrees = hDegrees < 0 ? 360 + hDegrees : hDegrees;
        // degrees are relative to the x-axis
        if (degrees === 90) {
            return 'south';
        }
        else if (degrees === 0 || degrees === 360) {
            return 'east';
        }
        else if (degrees === 270) {
            return 'north';
        }
        else if (degrees === 180) {
            return 'west';
        }
        else if (degrees > 0 && degrees < 90) {
            return 'south-east';
        }
        else if (degrees > 90 && degrees < 180) {
            return 'south-west';
        }
        else if (degrees > 180 && degrees < 270) {
            return 'north-west';
        }
        else if (degrees > 270 && degrees < 360) {
            return 'north-east';
        }
        throw new Error(`Cannot determine direction of line (${this.p1.x},${this.p1.y}) to (${this.p2.x},${this.p2.y})`);
    }
    /**
     * @param otherLine the other line
     * @returns the intersection point between `this` line and the `otherLine` if exists, or `undefined`.
     */
    intersection(otherLine) {
        if (this.hasIndistinctPoints(otherLine)) {
            return undefined;
        }
        const x1 = this.p1.x;
        const y1 = this.p1.y;
        const x2 = this.p2.x;
        const y2 = this.p2.y;
        const x3 = otherLine.p1.x;
        const y3 = otherLine.p1.y;
        const x4 = otherLine.p2.x;
        const y4 = otherLine.p2.y;
        const denominator = ((y4 - y3) * (x2 - x1)) - ((x4 - x3) * (y2 - y1));
        if (denominator === 0) {
            return undefined;
        }
        const numeratorA = ((x4 - x3) * (y1 - y3)) - ((y4 - y3) * (x1 - x3));
        const numeratorB = ((x2 - x1) * (y1 - y3)) - ((y2 - y1) * (x1 - x3));
        if (numeratorA === 0 && numeratorB === 0) {
            return undefined;
        }
        const determinantA = numeratorA / denominator;
        const determinantB = numeratorB / denominator;
        if (determinantA < 0 || determinantA > 1 || determinantB < 0 || determinantB > 1) {
            return undefined;
        }
        const x = x1 + (determinantA * (x2 - x1));
        const y = y1 + (determinantA * (y2 - y1));
        return { x, y };
    }
    /**
     * @param otherLine the other line
     * @returns whether the start and end point of this line is does not have distinct start
     * or end points with the `otherLine`
     */
    hasIndistinctPoints(otherLine) {
        return sprotty_protocol_1.Point.equals(this.p1, otherLine.p1) ||
            sprotty_protocol_1.Point.equals(this.p1, otherLine.p2) ||
            sprotty_protocol_1.Point.equals(this.p2, otherLine.p1) ||
            sprotty_protocol_1.Point.equals(this.p2, otherLine.p2);
    }
}
exports.PointToPointLine = PointToPointLine;
/**
 * Returns the intersection of two lines `l1` and `l2`
 * @param {Line} l1 - A line
 * @param {Line} l2 - Another line
 * @returns {Point} The intersection point of `l1` and `l2`
 */
function intersection(l1, l2) {
    return {
        x: (l1.c * l2.b - l2.c * l1.b) / (l1.a * l2.b - l2.a * l1.b),
        y: (l1.a * l2.c - l2.a * l1.c) / (l1.a * l2.b - l2.a * l1.b)
    };
}
exports.intersection = intersection;
/**
 * Enumeration of possible directions (left, right, up, down)
 * @deprecated do we use this? We should rather use a string type
 */
var Direction;
(function (Direction) {
    Direction[Direction["left"] = 0] = "left";
    Direction[Direction["right"] = 1] = "right";
    Direction[Direction["up"] = 2] = "up";
    Direction[Direction["down"] = 3] = "down";
})(Direction = exports.Direction || (exports.Direction = {}));
/**
 * Limits a value to the specified `limits`.
 * @param {number} value - The value to limit
 * @param {Limits} limits - The minimum and maximum limits
 */
function limit(value, limits) {
    if (value < limits.min) {
        return limits.min;
    }
    if (value > limits.max) {
        return limits.max;
    }
    return value;
}
exports.limit = limit;
// Compatibility deprecation layer (will be removed with the graduation 1.0.0 release)
/**
 * @deprecated Use the declaration from `sprotty-protocol` instead.
 */
function isBounds(element) {
    return 'x' in element
        && 'y' in element
        && 'width' in element
        && 'height' in element;
}
exports.isBounds = isBounds;
/**
 * Combines the bounds of two objects into one, so that the new bounds
 * are the minimum bounds that covers both of the original bounds.
 * @param {Bounds} b0 - First bounds object
 * @param {Bounds} b1 - Second bounds object
 * @returns {Bounds} The combined bounds
 *
 * @deprecated Use `Bounds.combine` from `sprotty-protocol` instead.
 */
function combine(b0, b1) {
    if (!isValidDimension(b0))
        return isValidDimension(b1) ? b1 : exports.EMPTY_BOUNDS;
    if (!isValidDimension(b1))
        return b0;
    const minX = Math.min(b0.x, b1.x);
    const minY = Math.min(b0.y, b1.y);
    const maxX = Math.max(b0.x + (b0.width >= 0 ? b0.width : 0), b1.x + (b1.width >= 0 ? b1.width : 0));
    const maxY = Math.max(b0.y + (b0.height >= 0 ? b0.height : 0), b1.y + (b1.height >= 0 ? b1.height : 0));
    return {
        x: minX, y: minY, width: maxX - minX, height: maxY - minY
    };
}
exports.combine = combine;
/**
 * Translates the given bounds.
 * @param {Bounds} b - Bounds object
 * @param {Point} p - Vector by which to translate the bounds
 * @returns {Bounds} The translated bounds
 *
 * @deprecated Use `Bounds.translate` from `sprotty-protocol` instead.
 */
function translate(b, p) {
    return {
        x: b.x + p.x,
        y: b.y + p.y,
        width: b.width,
        height: b.height
    };
}
exports.translate = translate;
/**
 * Returns the center point of the bounds of an object
 * @param {Bounds} b - Bounds object
 * @returns {Point} the center point
 *
 * @deprecated Use `Bounds.center` from `sprotty-protocol` instead.
 */
function center(b) {
    return {
        x: b.x + (b.width >= 0 ? 0.5 * b.width : 0),
        y: b.y + (b.height >= 0 ? 0.5 * b.height : 0)
    };
}
exports.center = center;
/**
 * @deprecated Use the declaration from `sprotty-protocol` instead.
 */
function centerOfLine(s, e) {
    const b = {
        x: s.x > e.x ? e.x : s.x,
        y: s.y > e.y ? e.y : s.y,
        width: Math.abs(e.x - s.x),
        height: Math.abs(e.y - s.y)
    };
    return center(b);
}
exports.centerOfLine = centerOfLine;
/**
 * Checks whether the point p is included in the bounds b.
 *
 * @deprecated Use `Bounds.includes` from `sprotty-protocol` instead.
 */
function includes(b, p) {
    return p.x >= b.x && p.x <= b.x + b.width && p.y >= b.y && p.y <= b.y + b.height;
}
exports.includes = includes;
/**
 * Returns the "straight line" distance between two points.
 * @param {Point} a - First point
 * @param {Point} b - Second point
 * @returns {number} The Eucledian distance
 *
 * @deprecated Use `Point.euclideanDistance` from `sprotty-protocol` instead.
 */
function euclideanDistance(a, b) {
    const dx = b.x - a.x;
    const dy = b.y - a.y;
    return Math.sqrt(dx * dx + dy * dy);
}
exports.euclideanDistance = euclideanDistance;
/**
 * Returns the distance between two points in a grid, using a
 * strictly vertical and/or horizontal path (versus straight line).
 * @param {Point} a - First point
 * @param {Point} b - Second point
 * @returns {number} The Manhattan distance
 *
 * @deprecated Use `Point.manhattanDistance` from `sprotty-protocol` instead.
 */
function manhattanDistance(a, b) {
    return Math.abs(b.x - a.x) + Math.abs(b.y - a.y);
}
exports.manhattanDistance = manhattanDistance;
/**
 * Returns the maximum of the horizontal and the vertical distance.
 * @param {Point} a - First point
 * @param {Point} b - Second point
 * @returns {number} The maximum distance
 *
 * @deprecated Use `Point.maxDistance` from `sprotty-protocol` instead.
 */
function maxDistance(a, b) {
    return Math.max(Math.abs(b.x - a.x), Math.abs(b.y - a.y));
}
exports.maxDistance = maxDistance;
/**
 * Computes the angle in radians of the given point to the x-axis of the coordinate system.
 * The result is in the range [-pi, pi].
 * @param {Point} p - A point in the Eucledian plane
 *
 * @deprecated Use the declaration from `sprotty-protocol` instead.
 */
function angleOfPoint(p) {
    return Math.atan2(p.y, p.x);
}
exports.angleOfPoint = angleOfPoint;
/**
 * Computes the angle in radians between the two given points (relative to the origin of the coordinate system).
 * The result is in the range [0, pi]. Returns NaN if the points are equal.
 * @param {Point} a - First point
 * @param {Point} b - Second point
 *
 * @deprecated Use the declaration from `sprotty-protocol` instead.
 */
function angleBetweenPoints(a, b) {
    const lengthProduct = Math.sqrt((a.x * a.x + a.y * a.y) * (b.x * b.x + b.y * b.y));
    if (isNaN(lengthProduct) || lengthProduct === 0)
        return NaN;
    const dotProduct = a.x * b.x + a.y * b.y;
    return Math.acos(dotProduct / lengthProduct);
}
exports.angleBetweenPoints = angleBetweenPoints;
/**
 * Computes a point that is the original `point` shifted towards `refPoint` by the given `distance`.
 * @param {Point} point - Point to shift
 * @param {Point} refPoint - Point to shift towards
 * @param {Point} distance - Distance to shift
 *
 * @deprecated Use `Point.shiftTowards` from `sprotty-protocol` instead.
 */
function shiftTowards(point, refPoint, distance) {
    const diff = subtract(refPoint, point);
    const normalized = normalize(diff);
    const shift = { x: normalized.x * distance, y: normalized.y * distance };
    return add(point, shift);
}
exports.shiftTowards = shiftTowards;
/**
 * Computes the normalized vector from the vector given in `point`; that is, computing its unit vector.
 * @param {Point} point - Point representing the vector to be normalized
 * @returns {Point} The normalized point
 *
 * @deprecated Use `Point.normalize` from `sprotty-protocol` instead.
 */
function normalize(point) {
    const mag = magnitude(point);
    if (mag === 0 || mag === 1) {
        return exports.ORIGIN_POINT;
    }
    return {
        x: point.x / mag,
        y: point.y / mag
    };
}
exports.normalize = normalize;
/**
 * Computes the magnitude of the vector given in `point`.
 * @param {Point} point - Point representing the vector to compute the magnitude for
 * @returns {number} The magnitude or also known as length of the `point`
 *
 * @deprecated Use `Point.magnitude` from `sprotty-protocol` instead.
 */
function magnitude(point) {
    return Math.sqrt(Math.pow(point.x, 2) + Math.pow(point.y, 2));
}
exports.magnitude = magnitude;
/**
 * Converts from radians to degrees
 * @param {number} a - A value in radians
 * @returns {number} The converted value
 *
 * @deprecated Use the declaration from `sprotty-protocol` instead.
 */
function toDegrees(a) {
    return a * 180 / Math.PI;
}
exports.toDegrees = toDegrees;
/**
 * Converts from degrees to radians
 * @param {number} a - A value in degrees
 * @returns {number} The converted value
 *
 * @deprecated Use the declaration from `sprotty-protocol` instead.
 */
function toRadians(a) {
    return a * Math.PI / 180;
}
exports.toRadians = toRadians;
/**
 * Returns whether two numbers are almost equal, within a small margin (0.001)
 * @param {number} a - First number
 * @param {number} b - Second number
 * @returns {boolean} True if the two numbers are almost equal
 *
 * @deprecated Use the declaration from `sprotty-protocol` instead.
 */
function almostEquals(a, b) {
    return Math.abs(a - b) < 1e-3;
}
exports.almostEquals = almostEquals;
/**
 * Calculates a linear combination of p0 and p1 using lambda, i.e.
 *   (1-lambda) * p0 + lambda * p1
 *
 * @deprecated Use `Point.linear` from `sprotty-protocol` instead.
 */
function linear(p0, p1, lambda) {
    return {
        x: (1 - lambda) * p0.x + lambda * p1.x,
        y: (1 - lambda) * p0.y + lambda * p1.y
    };
}
exports.linear = linear;
/**
 * (x,y) coordinates of the origin.
 *
 * @deprecated Use `Point.ORIGIN` from `sprotty-protocol` instead.
 */
exports.ORIGIN_POINT = Object.freeze({
    x: 0,
    y: 0
});
/**
 * Adds two points.
 * @param {Point} p1 - First point
 * @param {Point} p2 - Second point
 * @returns {Point} The sum of the two points
 *
 * @deprecated Use `Point.add` from `sprotty-protocol` instead.
 */
function add(p1, p2) {
    return {
        x: p1.x + p2.x,
        y: p1.y + p2.y
    };
}
exports.add = add;
/**
 * Subtracts two points.
 * @param {Point} p1 - First point
 * @param {Point} p2 - Second point
 * @returns {Point} The difference of the two points
 *
 * @deprecated Use `Point.subtract` from `sprotty-protocol` instead.
 */
function subtract(p1, p2) {
    return {
        x: p1.x - p2.x,
        y: p1.y - p2.y
    };
}
exports.subtract = subtract;
/**
 * Specifies whether a point has exactly the same coordinates as another point.
 * @param {Point} point1 a point
 * @param {Point} point2 another point
 * @returns {boolean} `true` if `point1` has exactly the same `x` and `y` values as `point2`, `false` otherwise.
 *
 * @deprecated Use `Point.equals` from `sprotty-protocol` instead.
 */
function pointEquals(point1, point2) {
    return point1.x === point2.x && point1.y === point2.y;
}
exports.pointEquals = pointEquals;
/**
 * A dimension with both width and height set to a negative value, which is considered as undefined.
 *
 * @deprecated Use `Dimension.EMPTY` from `sprotty-protocol` instead.
 */
exports.EMPTY_DIMENSION = Object.freeze({
    width: -1,
    height: -1
});
/**
 * Checks whether the given dimention is valid, i.e. the width and height are non-zero.
 * @param {Dimension} b - Dimension object
 * @returns {boolean}
 *
 * @deprecated Use `Dimension.isValid` from `sprotty-protocol` instead.
 */
function isValidDimension(d) {
    return d.width >= 0 && d.height >= 0;
}
exports.isValidDimension = isValidDimension;
/**
 * @deprecated Use `Bounds.EMPTY` from `sprotty-protocol` instead.
 */
exports.EMPTY_BOUNDS = Object.freeze({
    x: 0,
    y: 0,
    width: -1,
    height: -1
});


/***/ }),

/***/ "../../node_modules/sprotty/lib/utils/inversify.js":
/*!*********************************************************!*\
  !*** ../../node_modules/sprotty/lib/utils/inversify.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2019-2021 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isInjectable = void 0;
function isInjectable(constr) {
    return Reflect.getMetadata('inversify:paramtypes', constr) !== undefined;
}
exports.isInjectable = isInjectable;


/***/ }),

/***/ "../../node_modules/sprotty/lib/utils/iterable.js":
/*!********************************************************!*\
  !*** ../../node_modules/sprotty/lib/utils/iterable.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.mapIterable = exports.filterIterable = exports.DONE_RESULT = exports.toArray = exports.FluentIterableImpl = void 0;
/**
 * A helper class that allows to easily create fluent iterables.
 */
class FluentIterableImpl {
    constructor(startFn, nextFn) {
        this.startFn = startFn;
        this.nextFn = nextFn;
    }
    [Symbol.iterator]() {
        const iterator = {
            state: this.startFn(),
            next: () => this.nextFn(iterator.state),
            [Symbol.iterator]: () => iterator
        };
        return iterator;
    }
    filter(callback) {
        return filterIterable(this, callback);
    }
    map(callback) {
        return mapIterable(this, callback);
    }
    forEach(callback) {
        const iterator = this[Symbol.iterator]();
        let index = 0;
        let result;
        do {
            result = iterator.next();
            if (result.value !== undefined)
                callback(result.value, index);
            index++;
        } while (!result.done);
    }
    indexOf(element) {
        const iterator = this[Symbol.iterator]();
        let index = 0;
        let result;
        do {
            result = iterator.next();
            if (result.value === element)
                return index;
            index++;
        } while (!result.done);
        return -1;
    }
}
exports.FluentIterableImpl = FluentIterableImpl;
/**
 * Converts a FluentIterable into an array. If the input is an array, it is returned unchanged.
 */
function toArray(input) {
    if (input.constructor === Array) {
        return input;
    }
    const result = [];
    input.forEach(element => result.push(element));
    return result;
}
exports.toArray = toArray;
exports.DONE_RESULT = Object.freeze({ done: true, value: undefined });
/**
 * Create a fluent iterable that filters the content of the given iterable or array.
 */
function filterIterable(input, callback) {
    return new FluentIterableImpl(() => createIterator(input), (iterator) => {
        let result;
        do {
            result = iterator.next();
        } while (!result.done && !callback(result.value));
        return result;
    });
}
exports.filterIterable = filterIterable;
/**
 * Create a fluent iterable that maps the content of the given iterable or array.
 */
function mapIterable(input, callback) {
    return new FluentIterableImpl(() => createIterator(input), (iterator) => {
        const { done, value } = iterator.next();
        if (done)
            return exports.DONE_RESULT;
        else
            return { done: false, value: callback(value) };
    });
}
exports.mapIterable = mapIterable;
/**
 * Create an iterator for the given iterable or array.
 */
function createIterator(collection) {
    const method = collection[Symbol.iterator];
    if (typeof method === 'function') {
        return method.call(collection);
    }
    const length = collection.length;
    if (typeof length === 'number' && length >= 0) {
        return new ArrayIterator(collection);
    }
    return { next: () => exports.DONE_RESULT };
}
/**
 * Iterator implementation for arrays.
 */
class ArrayIterator {
    constructor(array) {
        this.array = array;
        this.index = 0;
    }
    next() {
        if (this.index < this.array.length)
            return { done: false, value: this.array[this.index++] };
        else
            return exports.DONE_RESULT;
    }
    [Symbol.iterator]() {
        return this;
    }
}


/***/ }),

/***/ "../../node_modules/sprotty/lib/utils/json.js":
/*!****************************************************!*\
  !*** ../../node_modules/sprotty/lib/utils/json.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2020 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ "../../node_modules/sprotty/lib/utils/keyboard.js":
/*!********************************************************!*\
  !*** ../../node_modules/sprotty/lib/utils/keyboard.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.getActualCode = exports.matchesKeystroke = void 0;
const browser_1 = __webpack_require__(/*! ./browser */ "../../node_modules/sprotty/lib/utils/browser.js");
/**
 * Returns whether the keyboard event matches the keystroke described by the given
 * code and modifiers. The code must comply to the format of the `code` property
 * of KeyboardEvent, but in contrast to that property, the actual keyboard layout is
 * considered by this function if possible.
 */
function matchesKeystroke(event, code, ...modifiers) {
    if (getActualCode(event) !== code)
        return false;
    if ((0, browser_1.isMac)()) {
        if (event.ctrlKey !== (modifiers.findIndex(m => m === 'ctrl') >= 0))
            return false;
        if (event.metaKey !== (modifiers.findIndex(m => m === 'meta' || m === 'ctrlCmd') >= 0))
            return false;
    }
    else {
        if (event.ctrlKey !== (modifiers.findIndex(m => m === 'ctrl' || m === 'ctrlCmd') >= 0))
            return false;
        if (event.metaKey !== (modifiers.findIndex(m => m === 'meta') >= 0))
            return false;
    }
    if (event.altKey !== (modifiers.findIndex(m => m === 'alt') >= 0))
        return false;
    if (event.shiftKey !== (modifiers.findIndex(m => m === 'shift') >= 0))
        return false;
    return true;
}
exports.matchesKeystroke = matchesKeystroke;
/**
 * Determines a key code from the given event. This is necessary because the `code` property of
 * a KeyboardEvent does not consider keyboard layouts.
 */
function getActualCode(event) {
    if (event.keyCode) {
        const result = STRING_CODE[event.keyCode];
        if (result !== undefined)
            return result;
    }
    return event.code;
}
exports.getActualCode = getActualCode;
const STRING_CODE = new Array(256);
(() => {
    function addKeyCode(stringCode, numericCode) {
        if (STRING_CODE[numericCode] === undefined)
            STRING_CODE[numericCode] = stringCode;
    }
    addKeyCode('Pause', 3);
    addKeyCode('Backspace', 8);
    addKeyCode('Tab', 9);
    addKeyCode('Enter', 13);
    addKeyCode('ShiftLeft', 16);
    addKeyCode('ShiftRight', 16);
    addKeyCode('ControlLeft', 17);
    addKeyCode('ControlRight', 17);
    addKeyCode('AltLeft', 18);
    addKeyCode('AltRight', 18);
    addKeyCode('CapsLock', 20);
    addKeyCode('Escape', 27);
    addKeyCode('Space', 32);
    addKeyCode('PageUp', 33);
    addKeyCode('PageDown', 34);
    addKeyCode('End', 35);
    addKeyCode('Home', 36);
    addKeyCode('ArrowLeft', 37);
    addKeyCode('ArrowUp', 38);
    addKeyCode('ArrowRight', 39);
    addKeyCode('ArrowDown', 40);
    addKeyCode('Insert', 45);
    addKeyCode('Delete', 46);
    addKeyCode('Digit1', 49);
    addKeyCode('Digit2', 50);
    addKeyCode('Digit3', 51);
    addKeyCode('Digit4', 52);
    addKeyCode('Digit5', 53);
    addKeyCode('Digit6', 54);
    addKeyCode('Digit7', 55);
    addKeyCode('Digit8', 56);
    addKeyCode('Digit9', 57);
    addKeyCode('Digit0', 48);
    addKeyCode('KeyA', 65);
    addKeyCode('KeyB', 66);
    addKeyCode('KeyC', 67);
    addKeyCode('KeyD', 68);
    addKeyCode('KeyE', 69);
    addKeyCode('KeyF', 70);
    addKeyCode('KeyG', 71);
    addKeyCode('KeyH', 72);
    addKeyCode('KeyI', 73);
    addKeyCode('KeyJ', 74);
    addKeyCode('KeyK', 75);
    addKeyCode('KeyL', 76);
    addKeyCode('KeyM', 77);
    addKeyCode('KeyN', 78);
    addKeyCode('KeyO', 79);
    addKeyCode('KeyP', 80);
    addKeyCode('KeyQ', 81);
    addKeyCode('KeyR', 82);
    addKeyCode('KeyS', 83);
    addKeyCode('KeyT', 84);
    addKeyCode('KeyU', 85);
    addKeyCode('KeyV', 86);
    addKeyCode('KeyW', 87);
    addKeyCode('KeyX', 88);
    addKeyCode('KeyY', 89);
    addKeyCode('KeyZ', 90);
    addKeyCode('OSLeft', 91);
    addKeyCode('MetaLeft', 91);
    addKeyCode('OSRight', 92);
    addKeyCode('MetaRight', 92);
    addKeyCode('ContextMenu', 93);
    addKeyCode('Numpad0', 96);
    addKeyCode('Numpad1', 97);
    addKeyCode('Numpad2', 98);
    addKeyCode('Numpad3', 99);
    addKeyCode('Numpad4', 100);
    addKeyCode('Numpad5', 101);
    addKeyCode('Numpad6', 102);
    addKeyCode('Numpad7', 103);
    addKeyCode('Numpad8', 104);
    addKeyCode('Numpad9', 105);
    addKeyCode('NumpadMultiply', 106);
    addKeyCode('NumpadAdd', 107);
    addKeyCode('NumpadSeparator', 108);
    addKeyCode('NumpadSubtract', 109);
    addKeyCode('NumpadDecimal', 110);
    addKeyCode('NumpadDivide', 111);
    addKeyCode('F1', 112);
    addKeyCode('F2', 113);
    addKeyCode('F3', 114);
    addKeyCode('F4', 115);
    addKeyCode('F5', 116);
    addKeyCode('F6', 117);
    addKeyCode('F7', 118);
    addKeyCode('F8', 119);
    addKeyCode('F9', 120);
    addKeyCode('F10', 121);
    addKeyCode('F11', 122);
    addKeyCode('F12', 123);
    addKeyCode('F13', 124);
    addKeyCode('F14', 125);
    addKeyCode('F15', 126);
    addKeyCode('F16', 127);
    addKeyCode('F17', 128);
    addKeyCode('F18', 129);
    addKeyCode('F19', 130);
    addKeyCode('F20', 131);
    addKeyCode('F21', 132);
    addKeyCode('F22', 133);
    addKeyCode('F23', 134);
    addKeyCode('F24', 135);
    addKeyCode('NumLock', 144);
    addKeyCode('ScrollLock', 145);
    addKeyCode('Semicolon', 186);
    addKeyCode('Equal', 187);
    addKeyCode('Comma', 188);
    addKeyCode('Minus', 189);
    addKeyCode('Period', 190);
    addKeyCode('Slash', 191);
    addKeyCode('Backquote', 192);
    addKeyCode('IntlRo', 193);
    addKeyCode('BracketLeft', 219);
    addKeyCode('Backslash', 220);
    addKeyCode('BracketRight', 221);
    addKeyCode('Quote', 222);
    addKeyCode('IntlYen', 255);
})();


/***/ }),

/***/ "../../node_modules/sprotty/lib/utils/logging.js":
/*!*******************************************************!*\
  !*** ../../node_modules/sprotty/lib/utils/logging.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ConsoleLogger = exports.NullLogger = exports.LogLevel = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const types_1 = __webpack_require__(/*! ../base/types */ "../../node_modules/sprotty/lib/base/types.js");
var LogLevel;
(function (LogLevel) {
    LogLevel[LogLevel["none"] = 0] = "none";
    LogLevel[LogLevel["error"] = 1] = "error";
    LogLevel[LogLevel["warn"] = 2] = "warn";
    LogLevel[LogLevel["info"] = 3] = "info";
    LogLevel[LogLevel["log"] = 4] = "log";
})(LogLevel = exports.LogLevel || (exports.LogLevel = {}));
let NullLogger = class NullLogger {
    constructor() {
        this.logLevel = LogLevel.none;
    }
    error(thisArg, message, ...params) { }
    warn(thisArg, message, ...params) { }
    info(thisArg, message, ...params) { }
    log(thisArg, message, ...params) { }
};
NullLogger = __decorate([
    (0, inversify_1.injectable)()
], NullLogger);
exports.NullLogger = NullLogger;
let ConsoleLogger = class ConsoleLogger {
    constructor() {
        this.logLevel = LogLevel.log;
        this.viewOptions = { baseDiv: '' };
    }
    error(thisArg, message, ...params) {
        if (this.logLevel >= LogLevel.error)
            try {
                console.error.apply(thisArg, this.consoleArguments(thisArg, message, params));
            }
            catch (error) { }
    }
    warn(thisArg, message, ...params) {
        if (this.logLevel >= LogLevel.warn)
            try {
                console.warn.apply(thisArg, this.consoleArguments(thisArg, message, params));
            }
            catch (error) { }
    }
    info(thisArg, message, ...params) {
        if (this.logLevel >= LogLevel.info)
            try {
                console.info.apply(thisArg, this.consoleArguments(thisArg, message, params));
            }
            catch (error) { }
    }
    log(thisArg, message, ...params) {
        if (this.logLevel >= LogLevel.log)
            try {
                console.log.apply(thisArg, this.consoleArguments(thisArg, message, params));
            }
            catch (error) { }
    }
    consoleArguments(thisArg, message, params) {
        let caller;
        if (typeof thisArg === 'object')
            caller = thisArg.constructor.name;
        else
            caller = thisArg;
        const date = new Date();
        return [date.toLocaleTimeString() + ' ' + this.viewOptions.baseDiv + ' ' + caller + ': ' + message, ...params];
    }
};
__decorate([
    (0, inversify_1.inject)(types_1.TYPES.LogLevel),
    __metadata("design:type", Number)
], ConsoleLogger.prototype, "logLevel", void 0);
__decorate([
    (0, inversify_1.inject)(types_1.TYPES.ViewerOptions),
    __metadata("design:type", Object)
], ConsoleLogger.prototype, "viewOptions", void 0);
ConsoleLogger = __decorate([
    (0, inversify_1.injectable)()
], ConsoleLogger);
exports.ConsoleLogger = ConsoleLogger;


/***/ }),

/***/ "../../node_modules/sprotty/lib/utils/registry.js":
/*!********************************************************!*\
  !*** ../../node_modules/sprotty/lib/utils/registry.js ***!
  \********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.MultiInstanceRegistry = exports.InstanceRegistry = exports.FactoryRegistry = exports.ProviderRegistry = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
let ProviderRegistry = class ProviderRegistry {
    constructor() {
        this.elements = new Map;
    }
    register(key, cstr) {
        if (key === undefined)
            throw new Error('Key is undefined');
        if (this.hasKey(key))
            throw new Error('Key is already registered: ' + key);
        this.elements.set(key, cstr);
    }
    deregister(key) {
        if (key === undefined)
            throw new Error('Key is undefined');
        this.elements.delete(key);
    }
    hasKey(key) {
        return this.elements.has(key);
    }
    get(key, arg) {
        const existingCstr = this.elements.get(key);
        if (existingCstr)
            return new existingCstr(arg);
        else
            return this.missing(key, arg);
    }
    missing(key, arg) {
        throw new Error('Unknown registry key: ' + key);
    }
};
ProviderRegistry = __decorate([
    (0, inversify_1.injectable)()
], ProviderRegistry);
exports.ProviderRegistry = ProviderRegistry;
let FactoryRegistry = class FactoryRegistry {
    constructor() {
        this.elements = new Map;
    }
    register(key, factory) {
        if (key === undefined)
            throw new Error('Key is undefined');
        if (this.hasKey(key))
            throw new Error('Key is already registered: ' + key);
        this.elements.set(key, factory);
    }
    deregister(key) {
        if (key === undefined)
            throw new Error('Key is undefined');
        this.elements.delete(key);
    }
    hasKey(key) {
        return this.elements.has(key);
    }
    get(key, arg) {
        const existingFactory = this.elements.get(key);
        if (existingFactory)
            return existingFactory(arg);
        else
            return this.missing(key, arg);
    }
    missing(key, arg) {
        throw new Error('Unknown registry key: ' + key);
    }
};
FactoryRegistry = __decorate([
    (0, inversify_1.injectable)()
], FactoryRegistry);
exports.FactoryRegistry = FactoryRegistry;
let InstanceRegistry = class InstanceRegistry {
    constructor() {
        this.elements = new Map;
    }
    register(key, instance) {
        if (key === undefined)
            throw new Error('Key is undefined');
        if (this.hasKey(key))
            throw new Error('Key is already registered: ' + key);
        this.elements.set(key, instance);
    }
    deregister(key) {
        if (key === undefined)
            throw new Error('Key is undefined');
        this.elements.delete(key);
    }
    hasKey(key) {
        return this.elements.has(key);
    }
    get(key) {
        const existingInstance = this.elements.get(key);
        if (existingInstance)
            return existingInstance;
        else
            return this.missing(key);
    }
    missing(key) {
        throw new Error('Unknown registry key: ' + key);
    }
};
InstanceRegistry = __decorate([
    (0, inversify_1.injectable)()
], InstanceRegistry);
exports.InstanceRegistry = InstanceRegistry;
let MultiInstanceRegistry = class MultiInstanceRegistry {
    constructor() {
        this.elements = new Map;
    }
    register(key, instance) {
        if (key === undefined)
            throw new Error('Key is undefined');
        const instances = this.elements.get(key);
        if (instances !== undefined)
            instances.push(instance);
        else
            this.elements.set(key, [instance]);
    }
    deregisterAll(key) {
        if (key === undefined)
            throw new Error('Key is undefined');
        this.elements.delete(key);
    }
    get(key) {
        const existingInstances = this.elements.get(key);
        if (existingInstances !== undefined)
            return existingInstances;
        else
            return [];
    }
};
MultiInstanceRegistry = __decorate([
    (0, inversify_1.injectable)()
], MultiInstanceRegistry);
exports.MultiInstanceRegistry = MultiInstanceRegistry;


/***/ }),

/***/ "../../node_modules/sprotty/node_modules/autocompleter/autocomplete.js":
/*!*****************************************************************************!*\
  !*** ../../node_modules/sprotty/node_modules/autocompleter/autocomplete.js ***!
  \*****************************************************************************/
/***/ (function(module) {

(function (global, factory) {
     true ? module.exports = factory() :
    0;
}(this, (function () { 'use strict';

    /*
     * https://github.com/kraaden/autocomplete
     * Copyright (c) 2016 Denys Krasnoshchok
     * MIT License
     */
    function autocomplete(settings) {
        // just an alias to minimize JS file size
        var doc = document;
        var container = settings.container || doc.createElement("div");
        container.id = container.id || "autocomplete-" + uid();
        var containerStyle = container.style;
        var debounceWaitMs = settings.debounceWaitMs || 0;
        var preventSubmit = settings.preventSubmit || false;
        var disableAutoSelect = settings.disableAutoSelect || false;
        var items = [];
        var inputValue = "";
        var minLen = 2;
        var showOnFocus = settings.showOnFocus;
        var selected;
        var keypressCounter = 0;
        var debounceTimer;
        if (settings.minLength !== undefined) {
            minLen = settings.minLength;
        }
        if (!settings.input) {
            throw new Error("input undefined");
        }
        var input = settings.input;
        container.className = "autocomplete " + (settings.className || "");
        container.setAttribute("role", "listbox");
        input.setAttribute("role", "combobox");
        input.setAttribute("aria-expanded", "false");
        input.setAttribute("aria-autocomplete", "list");
        input.setAttribute("aria-controls", container.id);
        input.setAttribute("aria-owns", container.id);
        input.setAttribute("aria-activedescendant", "");
        input.setAttribute("aria-haspopup", "listbox");
        // IOS implementation for fixed positioning has many bugs, so we will use absolute positioning
        containerStyle.position = "absolute";
        /**
         * Generate a unique ID
         */
        function uid() {
            return Date.now().toString(36) + Math.random().toString(36).substring(2);
        }
        /**
         * Detach the container from DOM
         */
        function detach() {
            var parent = container.parentNode;
            if (parent) {
                parent.removeChild(container);
            }
        }
        /**
         * Clear debouncing timer if assigned
         */
        function clearDebounceTimer() {
            if (debounceTimer) {
                window.clearTimeout(debounceTimer);
            }
        }
        /**
         * Attach the container to DOM
         */
        function attach() {
            if (!container.parentNode) {
                doc.body.appendChild(container);
            }
        }
        /**
         * Check if container for autocomplete is displayed
         */
        function containerDisplayed() {
            return !!container.parentNode;
        }
        /**
         * Clear autocomplete state and hide container
         */
        function clear() {
            // prevent the update call if there are pending AJAX requests
            keypressCounter++;
            items = [];
            inputValue = "";
            selected = undefined;
            input.setAttribute("aria-activedescendant", "");
            input.setAttribute("aria-expanded", "false");
            detach();
        }
        /**
         * Update autocomplete position
         */
        function updatePosition() {
            if (!containerDisplayed()) {
                return;
            }
            input.setAttribute("aria-expanded", "true");
            containerStyle.height = "auto";
            containerStyle.width = input.offsetWidth + "px";
            var maxHeight = 0;
            var inputRect;
            function calc() {
                var docEl = doc.documentElement;
                var clientTop = docEl.clientTop || doc.body.clientTop || 0;
                var clientLeft = docEl.clientLeft || doc.body.clientLeft || 0;
                var scrollTop = window.pageYOffset || docEl.scrollTop;
                var scrollLeft = window.pageXOffset || docEl.scrollLeft;
                inputRect = input.getBoundingClientRect();
                var top = inputRect.top + input.offsetHeight + scrollTop - clientTop;
                var left = inputRect.left + scrollLeft - clientLeft;
                containerStyle.top = top + "px";
                containerStyle.left = left + "px";
                maxHeight = window.innerHeight - (inputRect.top + input.offsetHeight);
                if (maxHeight < 0) {
                    maxHeight = 0;
                }
                containerStyle.top = top + "px";
                containerStyle.bottom = "";
                containerStyle.left = left + "px";
                containerStyle.maxHeight = maxHeight + "px";
            }
            // the calc method must be called twice, otherwise the calculation may be wrong on resize event (chrome browser)
            calc();
            calc();
            if (settings.customize && inputRect) {
                settings.customize(input, inputRect, container, maxHeight);
            }
        }
        /**
         * Redraw the autocomplete div element with suggestions
         */
        function update() {
            // delete all children from autocomplete DOM container
            while (container.firstChild) {
                container.removeChild(container.firstChild);
            }
            input.setAttribute("aria-activedescendant", "");
            // function for rendering autocomplete suggestions
            var render = function (item, _, __) {
                var itemElement = doc.createElement("div");
                itemElement.textContent = item.label || "";
                return itemElement;
            };
            if (settings.render) {
                render = settings.render;
            }
            // function to render autocomplete groups
            var renderGroup = function (groupName, _) {
                var groupDiv = doc.createElement("div");
                groupDiv.textContent = groupName;
                return groupDiv;
            };
            if (settings.renderGroup) {
                renderGroup = settings.renderGroup;
            }
            var fragment = doc.createDocumentFragment();
            var prevGroup = "#9?$";
            items.forEach(function (item, index) {
                if (item.group && item.group !== prevGroup) {
                    prevGroup = item.group;
                    var groupDiv = renderGroup(item.group, inputValue);
                    if (groupDiv) {
                        groupDiv.className += " group";
                        fragment.appendChild(groupDiv);
                    }
                }
                var div = render(item, inputValue, index);
                if (div) {
                    div.id = container.id + "_" + index;
                    div.setAttribute("role", "option");
                    div.addEventListener("click", function (ev) {
                        settings.onSelect(item, input);
                        clear();
                        ev.preventDefault();
                        ev.stopPropagation();
                    });
                    if (item === selected) {
                        div.className += " selected";
                        div.setAttribute("aria-selected", "true");
                        input.setAttribute("aria-activedescendant", div.id);
                    }
                    fragment.appendChild(div);
                }
            });
            container.appendChild(fragment);
            if (items.length < 1) {
                if (settings.emptyMsg) {
                    var empty = doc.createElement("div");
                    empty.id = container.id + "_" + uid();
                    empty.className = "empty";
                    empty.textContent = settings.emptyMsg;
                    container.appendChild(empty);
                    input.setAttribute("aria-activedescendant", empty.id);
                }
                else {
                    clear();
                    return;
                }
            }
            attach();
            updatePosition();
            updateScroll();
        }
        function updateIfDisplayed() {
            if (containerDisplayed()) {
                update();
            }
        }
        function resizeEventHandler() {
            updateIfDisplayed();
        }
        function scrollEventHandler(e) {
            if (e.target !== container) {
                updateIfDisplayed();
            }
            else {
                e.preventDefault();
            }
        }
        function keyupEventHandler(ev) {
            var keyCode = ev.which || ev.keyCode || 0;
            var ignore = settings.keysToIgnore || [38 /* Up */, 13 /* Enter */, 27 /* Esc */, 39 /* Right */, 37 /* Left */, 16 /* Shift */, 17 /* Ctrl */, 18 /* Alt */, 20 /* CapsLock */, 91 /* WindowsKey */, 9 /* Tab */];
            for (var _i = 0, ignore_1 = ignore; _i < ignore_1.length; _i++) {
                var key = ignore_1[_i];
                if (keyCode === key) {
                    return;
                }
            }
            if (keyCode >= 112 /* F1 */ && keyCode <= 123 /* F12 */ && !settings.keysToIgnore) {
                return;
            }
            // the down key is used to open autocomplete
            if (keyCode === 40 /* Down */ && containerDisplayed()) {
                return;
            }
            startFetch(0 /* Keyboard */);
        }
        /**
         * Automatically move scroll bar if selected item is not visible
         */
        function updateScroll() {
            var elements = container.getElementsByClassName("selected");
            if (elements.length > 0) {
                var element = elements[0];
                // make group visible
                var previous = element.previousElementSibling;
                if (previous && previous.className.indexOf("group") !== -1 && !previous.previousElementSibling) {
                    element = previous;
                }
                if (element.offsetTop < container.scrollTop) {
                    container.scrollTop = element.offsetTop;
                }
                else {
                    var selectBottom = element.offsetTop + element.offsetHeight;
                    var containerBottom = container.scrollTop + container.offsetHeight;
                    if (selectBottom > containerBottom) {
                        container.scrollTop += selectBottom - containerBottom;
                    }
                }
            }
        }
        /**
         * Select the previous item in suggestions
         */
        function selectPrev() {
            if (items.length < 1) {
                selected = undefined;
            }
            else {
                if (selected === items[0]) {
                    selected = items[items.length - 1];
                }
                else {
                    for (var i = items.length - 1; i > 0; i--) {
                        if (selected === items[i] || i === 1) {
                            selected = items[i - 1];
                            break;
                        }
                    }
                }
            }
        }
        /**
         * Select the next item in suggestions
         */
        function selectNext() {
            if (items.length < 1) {
                selected = undefined;
            }
            if (!selected || selected === items[items.length - 1]) {
                selected = items[0];
                return;
            }
            for (var i = 0; i < (items.length - 1); i++) {
                if (selected === items[i]) {
                    selected = items[i + 1];
                    break;
                }
            }
        }
        function keydownEventHandler(ev) {
            var keyCode = ev.which || ev.keyCode || 0;
            if (keyCode === 38 /* Up */ || keyCode === 40 /* Down */ || keyCode === 27 /* Esc */) {
                var containerIsDisplayed = containerDisplayed();
                if (keyCode === 27 /* Esc */) {
                    clear();
                }
                else {
                    if (!containerIsDisplayed || items.length < 1) {
                        return;
                    }
                    keyCode === 38 /* Up */
                        ? selectPrev()
                        : selectNext();
                    update();
                }
                ev.preventDefault();
                if (containerIsDisplayed) {
                    ev.stopPropagation();
                }
                return;
            }
            if (keyCode === 13 /* Enter */) {
                if (selected) {
                    settings.onSelect(selected, input);
                    clear();
                }
                if (preventSubmit) {
                    ev.preventDefault();
                }
            }
        }
        function focusEventHandler() {
            if (showOnFocus) {
                startFetch(1 /* Focus */);
            }
        }
        function startFetch(trigger) {
            // If multiple keys were pressed, before we get an update from server,
            // this may cause redrawing autocomplete multiple times after the last key was pressed.
            // To avoid this, the number of times keyboard was pressed will be saved and checked before redraw.
            var savedKeypressCounter = ++keypressCounter;
            var inputText = input.value;
            var cursorPos = input.selectionStart || 0;
            if (inputText.length >= minLen || trigger === 1 /* Focus */) {
                clearDebounceTimer();
                debounceTimer = window.setTimeout(function () {
                    settings.fetch(inputText, function (elements) {
                        if (keypressCounter === savedKeypressCounter && elements) {
                            items = elements;
                            inputValue = inputText;
                            selected = (items.length < 1 || disableAutoSelect) ? undefined : items[0];
                            update();
                        }
                    }, trigger, cursorPos);
                }, trigger === 0 /* Keyboard */ ? debounceWaitMs : 0);
            }
            else {
                clear();
            }
        }
        function blurEventHandler() {
            // we need to delay clear, because when we click on an item, blur will be called before click and remove items from DOM
            setTimeout(function () {
                if (doc.activeElement !== input) {
                    clear();
                }
            }, 200);
        }
        /**
         * Fixes #26: on long clicks focus will be lost and onSelect method will not be called
         */
        container.addEventListener("mousedown", function (evt) {
            evt.stopPropagation();
            evt.preventDefault();
        });
        /**
         * Fixes #30: autocomplete closes when scrollbar is clicked in IE
         * See: https://stackoverflow.com/a/9210267/13172349
         */
        container.addEventListener("focus", function () { return input.focus(); });
        /**
         * This function will remove DOM elements and clear event handlers
         */
        function destroy() {
            input.removeEventListener("focus", focusEventHandler);
            input.removeEventListener("keydown", keydownEventHandler);
            input.removeEventListener("keyup", keyupEventHandler);
            input.removeEventListener("blur", blurEventHandler);
            window.removeEventListener("resize", resizeEventHandler);
            doc.removeEventListener("scroll", scrollEventHandler, true);
            input.removeAttribute("role");
            input.removeAttribute("aria-expanded");
            input.removeAttribute("aria-autocomplete");
            input.removeAttribute("aria-controls");
            input.removeAttribute("aria-activedescendant");
            input.removeAttribute("aria-owns");
            input.removeAttribute("aria-haspopup");
            clearDebounceTimer();
            clear();
        }
        // setup event handlers
        input.addEventListener("keydown", keydownEventHandler);
        input.addEventListener("keyup", keyupEventHandler);
        input.addEventListener("blur", blurEventHandler);
        input.addEventListener("focus", focusEventHandler);
        window.addEventListener("resize", resizeEventHandler);
        doc.addEventListener("scroll", scrollEventHandler, true);
        return {
            destroy: destroy
        };
    }

    return autocomplete;

})));


/***/ }),

/***/ "../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js":
/*!********************************************************************************!*\
  !*** ../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js ***!
  \********************************************************************************/
/***/ ((module) => {

"use strict";


var stylesInDOM = [];
function getIndexByIdentifier(identifier) {
  var result = -1;
  for (var i = 0; i < stylesInDOM.length; i++) {
    if (stylesInDOM[i].identifier === identifier) {
      result = i;
      break;
    }
  }
  return result;
}
function modulesToDom(list, options) {
  var idCountMap = {};
  var identifiers = [];
  for (var i = 0; i < list.length; i++) {
    var item = list[i];
    var id = options.base ? item[0] + options.base : item[0];
    var count = idCountMap[id] || 0;
    var identifier = "".concat(id, " ").concat(count);
    idCountMap[id] = count + 1;
    var indexByIdentifier = getIndexByIdentifier(identifier);
    var obj = {
      css: item[1],
      media: item[2],
      sourceMap: item[3],
      supports: item[4],
      layer: item[5]
    };
    if (indexByIdentifier !== -1) {
      stylesInDOM[indexByIdentifier].references++;
      stylesInDOM[indexByIdentifier].updater(obj);
    } else {
      var updater = addElementStyle(obj, options);
      options.byIndex = i;
      stylesInDOM.splice(i, 0, {
        identifier: identifier,
        updater: updater,
        references: 1
      });
    }
    identifiers.push(identifier);
  }
  return identifiers;
}
function addElementStyle(obj, options) {
  var api = options.domAPI(options);
  api.update(obj);
  var updater = function updater(newObj) {
    if (newObj) {
      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {
        return;
      }
      api.update(obj = newObj);
    } else {
      api.remove();
    }
  };
  return updater;
}
module.exports = function (list, options) {
  options = options || {};
  list = list || [];
  var lastIdentifiers = modulesToDom(list, options);
  return function update(newList) {
    newList = newList || [];
    for (var i = 0; i < lastIdentifiers.length; i++) {
      var identifier = lastIdentifiers[i];
      var index = getIndexByIdentifier(identifier);
      stylesInDOM[index].references--;
    }
    var newLastIdentifiers = modulesToDom(newList, options);
    for (var _i = 0; _i < lastIdentifiers.length; _i++) {
      var _identifier = lastIdentifiers[_i];
      var _index = getIndexByIdentifier(_identifier);
      if (stylesInDOM[_index].references === 0) {
        stylesInDOM[_index].updater();
        stylesInDOM.splice(_index, 1);
      }
    }
    lastIdentifiers = newLastIdentifiers;
  };
};

/***/ }),

/***/ "../../node_modules/style-loader/dist/runtime/insertBySelector.js":
/*!************************************************************************!*\
  !*** ../../node_modules/style-loader/dist/runtime/insertBySelector.js ***!
  \************************************************************************/
/***/ ((module) => {

"use strict";


var memo = {};

/* istanbul ignore next  */
function getTarget(target) {
  if (typeof memo[target] === "undefined") {
    var styleTarget = document.querySelector(target);

    // Special case to return head of iframe instead of iframe itself
    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {
      try {
        // This will throw an exception if access to iframe is blocked
        // due to cross-origin restrictions
        styleTarget = styleTarget.contentDocument.head;
      } catch (e) {
        // istanbul ignore next
        styleTarget = null;
      }
    }
    memo[target] = styleTarget;
  }
  return memo[target];
}

/* istanbul ignore next  */
function insertBySelector(insert, style) {
  var target = getTarget(insert);
  if (!target) {
    throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");
  }
  target.appendChild(style);
}
module.exports = insertBySelector;

/***/ }),

/***/ "../../node_modules/style-loader/dist/runtime/insertStyleElement.js":
/*!**************************************************************************!*\
  !*** ../../node_modules/style-loader/dist/runtime/insertStyleElement.js ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";


/* istanbul ignore next  */
function insertStyleElement(options) {
  var element = document.createElement("style");
  options.setAttributes(element, options.attributes);
  options.insert(element, options.options);
  return element;
}
module.exports = insertStyleElement;

/***/ }),

/***/ "../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js":
/*!**************************************************************************************!*\
  !*** ../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js ***!
  \**************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


/* istanbul ignore next  */
function setAttributesWithoutAttributes(styleElement) {
  var nonce =  true ? __webpack_require__.nc : 0;
  if (nonce) {
    styleElement.setAttribute("nonce", nonce);
  }
}
module.exports = setAttributesWithoutAttributes;

/***/ }),

/***/ "../../node_modules/style-loader/dist/runtime/styleDomAPI.js":
/*!*******************************************************************!*\
  !*** ../../node_modules/style-loader/dist/runtime/styleDomAPI.js ***!
  \*******************************************************************/
/***/ ((module) => {

"use strict";


/* istanbul ignore next  */
function apply(styleElement, options, obj) {
  var css = "";
  if (obj.supports) {
    css += "@supports (".concat(obj.supports, ") {");
  }
  if (obj.media) {
    css += "@media ".concat(obj.media, " {");
  }
  var needLayer = typeof obj.layer !== "undefined";
  if (needLayer) {
    css += "@layer".concat(obj.layer.length > 0 ? " ".concat(obj.layer) : "", " {");
  }
  css += obj.css;
  if (needLayer) {
    css += "}";
  }
  if (obj.media) {
    css += "}";
  }
  if (obj.supports) {
    css += "}";
  }
  var sourceMap = obj.sourceMap;
  if (sourceMap && typeof btoa !== "undefined") {
    css += "\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), " */");
  }

  // For old IE
  /* istanbul ignore if  */
  options.styleTagTransform(css, styleElement, options.options);
}
function removeStyleElement(styleElement) {
  // istanbul ignore if
  if (styleElement.parentNode === null) {
    return false;
  }
  styleElement.parentNode.removeChild(styleElement);
}

/* istanbul ignore next  */
function domAPI(options) {
  if (typeof document === "undefined") {
    return {
      update: function update() {},
      remove: function remove() {}
    };
  }
  var styleElement = options.insertStyleElement(options);
  return {
    update: function update(obj) {
      apply(styleElement, options, obj);
    },
    remove: function remove() {
      removeStyleElement(styleElement);
    }
  };
}
module.exports = domAPI;

/***/ }),

/***/ "../../node_modules/style-loader/dist/runtime/styleTagTransform.js":
/*!*************************************************************************!*\
  !*** ../../node_modules/style-loader/dist/runtime/styleTagTransform.js ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";


/* istanbul ignore next  */
function styleTagTransform(css, styleElement) {
  if (styleElement.styleSheet) {
    styleElement.styleSheet.cssText = css;
  } else {
    while (styleElement.firstChild) {
      styleElement.removeChild(styleElement.firstChild);
    }
    styleElement.appendChild(document.createTextNode(css));
  }
}
module.exports = styleTagTransform;

/***/ }),

/***/ "../../node_modules/tinyqueue/index.js":
/*!*********************************************!*\
  !*** ../../node_modules/tinyqueue/index.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ TinyQueue)
/* harmony export */ });

class TinyQueue {
    constructor(data = [], compare = defaultCompare) {
        this.data = data;
        this.length = this.data.length;
        this.compare = compare;

        if (this.length > 0) {
            for (let i = (this.length >> 1) - 1; i >= 0; i--) this._down(i);
        }
    }

    push(item) {
        this.data.push(item);
        this.length++;
        this._up(this.length - 1);
    }

    pop() {
        if (this.length === 0) return undefined;

        const top = this.data[0];
        const bottom = this.data.pop();
        this.length--;

        if (this.length > 0) {
            this.data[0] = bottom;
            this._down(0);
        }

        return top;
    }

    peek() {
        return this.data[0];
    }

    _up(pos) {
        const {data, compare} = this;
        const item = data[pos];

        while (pos > 0) {
            const parent = (pos - 1) >> 1;
            const current = data[parent];
            if (compare(item, current) >= 0) break;
            data[pos] = current;
            pos = parent;
        }

        data[pos] = item;
    }

    _down(pos) {
        const {data, compare} = this;
        const halfLength = this.length >> 1;
        const item = data[pos];

        while (pos < halfLength) {
            let left = (pos << 1) + 1;
            let best = data[left];
            const right = left + 1;

            if (right < this.length && compare(data[right], best) < 0) {
                left = right;
                best = data[right];
            }
            if (compare(best, item) >= 0) break;

            data[pos] = best;
            pos = left;
        }

        data[pos] = item;
    }
}

function defaultCompare(a, b) {
    return a < b ? -1 : a > b ? 1 : 0;
}


/***/ }),

/***/ "../../node_modules/uuid/dist/esm-browser/index.js":
/*!*********************************************************!*\
  !*** ../../node_modules/uuid/dist/esm-browser/index.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   NIL: () => (/* reexport safe */ _nil_js__WEBPACK_IMPORTED_MODULE_4__["default"]),
/* harmony export */   parse: () => (/* reexport safe */ _parse_js__WEBPACK_IMPORTED_MODULE_8__["default"]),
/* harmony export */   stringify: () => (/* reexport safe */ _stringify_js__WEBPACK_IMPORTED_MODULE_7__["default"]),
/* harmony export */   v1: () => (/* reexport safe */ _v1_js__WEBPACK_IMPORTED_MODULE_0__["default"]),
/* harmony export */   v3: () => (/* reexport safe */ _v3_js__WEBPACK_IMPORTED_MODULE_1__["default"]),
/* harmony export */   v4: () => (/* reexport safe */ _v4_js__WEBPACK_IMPORTED_MODULE_2__["default"]),
/* harmony export */   v5: () => (/* reexport safe */ _v5_js__WEBPACK_IMPORTED_MODULE_3__["default"]),
/* harmony export */   validate: () => (/* reexport safe */ _validate_js__WEBPACK_IMPORTED_MODULE_6__["default"]),
/* harmony export */   version: () => (/* reexport safe */ _version_js__WEBPACK_IMPORTED_MODULE_5__["default"])
/* harmony export */ });
/* harmony import */ var _v1_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./v1.js */ "../../node_modules/uuid/dist/esm-browser/v1.js");
/* harmony import */ var _v3_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./v3.js */ "../../node_modules/uuid/dist/esm-browser/v3.js");
/* harmony import */ var _v4_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./v4.js */ "../../node_modules/uuid/dist/esm-browser/v4.js");
/* harmony import */ var _v5_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./v5.js */ "../../node_modules/uuid/dist/esm-browser/v5.js");
/* harmony import */ var _nil_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./nil.js */ "../../node_modules/uuid/dist/esm-browser/nil.js");
/* harmony import */ var _version_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./version.js */ "../../node_modules/uuid/dist/esm-browser/version.js");
/* harmony import */ var _validate_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./validate.js */ "../../node_modules/uuid/dist/esm-browser/validate.js");
/* harmony import */ var _stringify_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./stringify.js */ "../../node_modules/uuid/dist/esm-browser/stringify.js");
/* harmony import */ var _parse_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./parse.js */ "../../node_modules/uuid/dist/esm-browser/parse.js");










/***/ }),

/***/ "../../node_modules/uuid/dist/esm-browser/md5.js":
/*!*******************************************************!*\
  !*** ../../node_modules/uuid/dist/esm-browser/md5.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/*
 * Browser-compatible JavaScript MD5
 *
 * Modification of JavaScript MD5
 * https://github.com/blueimp/JavaScript-MD5
 *
 * Copyright 2011, Sebastian Tschan
 * https://blueimp.net
 *
 * Licensed under the MIT license:
 * https://opensource.org/licenses/MIT
 *
 * Based on
 * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message
 * Digest Algorithm, as defined in RFC 1321.
 * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009
 * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
 * Distributed under the BSD License
 * See http://pajhome.org.uk/crypt/md5 for more info.
 */
function md5(bytes) {
  if (typeof bytes === 'string') {
    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape

    bytes = new Uint8Array(msg.length);

    for (var i = 0; i < msg.length; ++i) {
      bytes[i] = msg.charCodeAt(i);
    }
  }

  return md5ToHexEncodedArray(wordsToMd5(bytesToWords(bytes), bytes.length * 8));
}
/*
 * Convert an array of little-endian words to an array of bytes
 */


function md5ToHexEncodedArray(input) {
  var output = [];
  var length32 = input.length * 32;
  var hexTab = '0123456789abcdef';

  for (var i = 0; i < length32; i += 8) {
    var x = input[i >> 5] >>> i % 32 & 0xff;
    var hex = parseInt(hexTab.charAt(x >>> 4 & 0x0f) + hexTab.charAt(x & 0x0f), 16);
    output.push(hex);
  }

  return output;
}
/**
 * Calculate output length with padding and bit length
 */


function getOutputLength(inputLength8) {
  return (inputLength8 + 64 >>> 9 << 4) + 14 + 1;
}
/*
 * Calculate the MD5 of an array of little-endian words, and a bit length.
 */


function wordsToMd5(x, len) {
  /* append padding */
  x[len >> 5] |= 0x80 << len % 32;
  x[getOutputLength(len) - 1] = len;
  var a = 1732584193;
  var b = -271733879;
  var c = -1732584194;
  var d = 271733878;

  for (var i = 0; i < x.length; i += 16) {
    var olda = a;
    var oldb = b;
    var oldc = c;
    var oldd = d;
    a = md5ff(a, b, c, d, x[i], 7, -680876936);
    d = md5ff(d, a, b, c, x[i + 1], 12, -389564586);
    c = md5ff(c, d, a, b, x[i + 2], 17, 606105819);
    b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330);
    a = md5ff(a, b, c, d, x[i + 4], 7, -176418897);
    d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426);
    c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341);
    b = md5ff(b, c, d, a, x[i + 7], 22, -45705983);
    a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416);
    d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417);
    c = md5ff(c, d, a, b, x[i + 10], 17, -42063);
    b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162);
    a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682);
    d = md5ff(d, a, b, c, x[i + 13], 12, -40341101);
    c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290);
    b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329);
    a = md5gg(a, b, c, d, x[i + 1], 5, -165796510);
    d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632);
    c = md5gg(c, d, a, b, x[i + 11], 14, 643717713);
    b = md5gg(b, c, d, a, x[i], 20, -373897302);
    a = md5gg(a, b, c, d, x[i + 5], 5, -701558691);
    d = md5gg(d, a, b, c, x[i + 10], 9, 38016083);
    c = md5gg(c, d, a, b, x[i + 15], 14, -660478335);
    b = md5gg(b, c, d, a, x[i + 4], 20, -405537848);
    a = md5gg(a, b, c, d, x[i + 9], 5, 568446438);
    d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690);
    c = md5gg(c, d, a, b, x[i + 3], 14, -187363961);
    b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501);
    a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467);
    d = md5gg(d, a, b, c, x[i + 2], 9, -51403784);
    c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473);
    b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734);
    a = md5hh(a, b, c, d, x[i + 5], 4, -378558);
    d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463);
    c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562);
    b = md5hh(b, c, d, a, x[i + 14], 23, -35309556);
    a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060);
    d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353);
    c = md5hh(c, d, a, b, x[i + 7], 16, -155497632);
    b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640);
    a = md5hh(a, b, c, d, x[i + 13], 4, 681279174);
    d = md5hh(d, a, b, c, x[i], 11, -358537222);
    c = md5hh(c, d, a, b, x[i + 3], 16, -722521979);
    b = md5hh(b, c, d, a, x[i + 6], 23, 76029189);
    a = md5hh(a, b, c, d, x[i + 9], 4, -640364487);
    d = md5hh(d, a, b, c, x[i + 12], 11, -421815835);
    c = md5hh(c, d, a, b, x[i + 15], 16, 530742520);
    b = md5hh(b, c, d, a, x[i + 2], 23, -995338651);
    a = md5ii(a, b, c, d, x[i], 6, -198630844);
    d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415);
    c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905);
    b = md5ii(b, c, d, a, x[i + 5], 21, -57434055);
    a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571);
    d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606);
    c = md5ii(c, d, a, b, x[i + 10], 15, -1051523);
    b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799);
    a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359);
    d = md5ii(d, a, b, c, x[i + 15], 10, -30611744);
    c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380);
    b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649);
    a = md5ii(a, b, c, d, x[i + 4], 6, -145523070);
    d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379);
    c = md5ii(c, d, a, b, x[i + 2], 15, 718787259);
    b = md5ii(b, c, d, a, x[i + 9], 21, -343485551);
    a = safeAdd(a, olda);
    b = safeAdd(b, oldb);
    c = safeAdd(c, oldc);
    d = safeAdd(d, oldd);
  }

  return [a, b, c, d];
}
/*
 * Convert an array bytes to an array of little-endian words
 * Characters >255 have their high-byte silently ignored.
 */


function bytesToWords(input) {
  if (input.length === 0) {
    return [];
  }

  var length8 = input.length * 8;
  var output = new Uint32Array(getOutputLength(length8));

  for (var i = 0; i < length8; i += 8) {
    output[i >> 5] |= (input[i / 8] & 0xff) << i % 32;
  }

  return output;
}
/*
 * Add integers, wrapping at 2^32. This uses 16-bit operations internally
 * to work around bugs in some JS interpreters.
 */


function safeAdd(x, y) {
  var lsw = (x & 0xffff) + (y & 0xffff);
  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);
  return msw << 16 | lsw & 0xffff;
}
/*
 * Bitwise rotate a 32-bit number to the left.
 */


function bitRotateLeft(num, cnt) {
  return num << cnt | num >>> 32 - cnt;
}
/*
 * These functions implement the four basic operations the algorithm uses.
 */


function md5cmn(q, a, b, x, s, t) {
  return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b);
}

function md5ff(a, b, c, d, x, s, t) {
  return md5cmn(b & c | ~b & d, a, b, x, s, t);
}

function md5gg(a, b, c, d, x, s, t) {
  return md5cmn(b & d | c & ~d, a, b, x, s, t);
}

function md5hh(a, b, c, d, x, s, t) {
  return md5cmn(b ^ c ^ d, a, b, x, s, t);
}

function md5ii(a, b, c, d, x, s, t) {
  return md5cmn(c ^ (b | ~d), a, b, x, s, t);
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (md5);

/***/ }),

/***/ "../../node_modules/uuid/dist/esm-browser/nil.js":
/*!*******************************************************!*\
  !*** ../../node_modules/uuid/dist/esm-browser/nil.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ('00000000-0000-0000-0000-000000000000');

/***/ }),

/***/ "../../node_modules/uuid/dist/esm-browser/parse.js":
/*!*********************************************************!*\
  !*** ../../node_modules/uuid/dist/esm-browser/parse.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _validate_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./validate.js */ "../../node_modules/uuid/dist/esm-browser/validate.js");


function parse(uuid) {
  if (!(0,_validate_js__WEBPACK_IMPORTED_MODULE_0__["default"])(uuid)) {
    throw TypeError('Invalid UUID');
  }

  var v;
  var arr = new Uint8Array(16); // Parse ########-....-....-....-............

  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;
  arr[1] = v >>> 16 & 0xff;
  arr[2] = v >>> 8 & 0xff;
  arr[3] = v & 0xff; // Parse ........-####-....-....-............

  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;
  arr[5] = v & 0xff; // Parse ........-....-####-....-............

  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;
  arr[7] = v & 0xff; // Parse ........-....-....-####-............

  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;
  arr[9] = v & 0xff; // Parse ........-....-....-....-############
  // (Use "/" to avoid 32-bit truncation when bit-shifting high-order bytes)

  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;
  arr[11] = v / 0x100000000 & 0xff;
  arr[12] = v >>> 24 & 0xff;
  arr[13] = v >>> 16 & 0xff;
  arr[14] = v >>> 8 & 0xff;
  arr[15] = v & 0xff;
  return arr;
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (parse);

/***/ }),

/***/ "../../node_modules/uuid/dist/esm-browser/regex.js":
/*!*********************************************************!*\
  !*** ../../node_modules/uuid/dist/esm-browser/regex.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i);

/***/ }),

/***/ "../../node_modules/uuid/dist/esm-browser/rng.js":
/*!*******************************************************!*\
  !*** ../../node_modules/uuid/dist/esm-browser/rng.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ rng)
/* harmony export */ });
// Unique ID creation requires a high quality random # generator. In the browser we therefore
// require the crypto API and do not support built-in fallback to lower quality random number
// generators (like Math.random()).
var getRandomValues;
var rnds8 = new Uint8Array(16);
function rng() {
  // lazy load so that environments that need to polyfill have a chance to do so
  if (!getRandomValues) {
    // getRandomValues needs to be invoked in a context where "this" is a Crypto implementation. Also,
    // find the complete implementation of crypto (msCrypto) on IE11.
    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);

    if (!getRandomValues) {
      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');
    }
  }

  return getRandomValues(rnds8);
}

/***/ }),

/***/ "../../node_modules/uuid/dist/esm-browser/sha1.js":
/*!********************************************************!*\
  !*** ../../node_modules/uuid/dist/esm-browser/sha1.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
// Adapted from Chris Veness' SHA1 code at
// http://www.movable-type.co.uk/scripts/sha1.html
function f(s, x, y, z) {
  switch (s) {
    case 0:
      return x & y ^ ~x & z;

    case 1:
      return x ^ y ^ z;

    case 2:
      return x & y ^ x & z ^ y & z;

    case 3:
      return x ^ y ^ z;
  }
}

function ROTL(x, n) {
  return x << n | x >>> 32 - n;
}

function sha1(bytes) {
  var K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xca62c1d6];
  var H = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];

  if (typeof bytes === 'string') {
    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape

    bytes = [];

    for (var i = 0; i < msg.length; ++i) {
      bytes.push(msg.charCodeAt(i));
    }
  } else if (!Array.isArray(bytes)) {
    // Convert Array-like to Array
    bytes = Array.prototype.slice.call(bytes);
  }

  bytes.push(0x80);
  var l = bytes.length / 4 + 2;
  var N = Math.ceil(l / 16);
  var M = new Array(N);

  for (var _i = 0; _i < N; ++_i) {
    var arr = new Uint32Array(16);

    for (var j = 0; j < 16; ++j) {
      arr[j] = bytes[_i * 64 + j * 4] << 24 | bytes[_i * 64 + j * 4 + 1] << 16 | bytes[_i * 64 + j * 4 + 2] << 8 | bytes[_i * 64 + j * 4 + 3];
    }

    M[_i] = arr;
  }

  M[N - 1][14] = (bytes.length - 1) * 8 / Math.pow(2, 32);
  M[N - 1][14] = Math.floor(M[N - 1][14]);
  M[N - 1][15] = (bytes.length - 1) * 8 & 0xffffffff;

  for (var _i2 = 0; _i2 < N; ++_i2) {
    var W = new Uint32Array(80);

    for (var t = 0; t < 16; ++t) {
      W[t] = M[_i2][t];
    }

    for (var _t = 16; _t < 80; ++_t) {
      W[_t] = ROTL(W[_t - 3] ^ W[_t - 8] ^ W[_t - 14] ^ W[_t - 16], 1);
    }

    var a = H[0];
    var b = H[1];
    var c = H[2];
    var d = H[3];
    var e = H[4];

    for (var _t2 = 0; _t2 < 80; ++_t2) {
      var s = Math.floor(_t2 / 20);
      var T = ROTL(a, 5) + f(s, b, c, d) + e + K[s] + W[_t2] >>> 0;
      e = d;
      d = c;
      c = ROTL(b, 30) >>> 0;
      b = a;
      a = T;
    }

    H[0] = H[0] + a >>> 0;
    H[1] = H[1] + b >>> 0;
    H[2] = H[2] + c >>> 0;
    H[3] = H[3] + d >>> 0;
    H[4] = H[4] + e >>> 0;
  }

  return [H[0] >> 24 & 0xff, H[0] >> 16 & 0xff, H[0] >> 8 & 0xff, H[0] & 0xff, H[1] >> 24 & 0xff, H[1] >> 16 & 0xff, H[1] >> 8 & 0xff, H[1] & 0xff, H[2] >> 24 & 0xff, H[2] >> 16 & 0xff, H[2] >> 8 & 0xff, H[2] & 0xff, H[3] >> 24 & 0xff, H[3] >> 16 & 0xff, H[3] >> 8 & 0xff, H[3] & 0xff, H[4] >> 24 & 0xff, H[4] >> 16 & 0xff, H[4] >> 8 & 0xff, H[4] & 0xff];
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (sha1);

/***/ }),

/***/ "../../node_modules/uuid/dist/esm-browser/stringify.js":
/*!*************************************************************!*\
  !*** ../../node_modules/uuid/dist/esm-browser/stringify.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _validate_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./validate.js */ "../../node_modules/uuid/dist/esm-browser/validate.js");

/**
 * Convert array of 16 byte values to UUID string format of the form:
 * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX
 */

var byteToHex = [];

for (var i = 0; i < 256; ++i) {
  byteToHex.push((i + 0x100).toString(16).substr(1));
}

function stringify(arr) {
  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
  // Note: Be careful editing this code!  It's been tuned for performance
  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434
  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one
  // of the following:
  // - One or more input array values don't map to a hex octet (leading to
  // "undefined" in the uuid)
  // - Invalid input values for the RFC `version` or `variant` fields

  if (!(0,_validate_js__WEBPACK_IMPORTED_MODULE_0__["default"])(uuid)) {
    throw TypeError('Stringified UUID is invalid');
  }

  return uuid;
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (stringify);

/***/ }),

/***/ "../../node_modules/uuid/dist/esm-browser/v1.js":
/*!******************************************************!*\
  !*** ../../node_modules/uuid/dist/esm-browser/v1.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _rng_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./rng.js */ "../../node_modules/uuid/dist/esm-browser/rng.js");
/* harmony import */ var _stringify_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./stringify.js */ "../../node_modules/uuid/dist/esm-browser/stringify.js");

 // **`v1()` - Generate time-based UUID**
//
// Inspired by https://github.com/LiosK/UUID.js
// and http://docs.python.org/library/uuid.html

var _nodeId;

var _clockseq; // Previous uuid creation time


var _lastMSecs = 0;
var _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details

function v1(options, buf, offset) {
  var i = buf && offset || 0;
  var b = buf || new Array(16);
  options = options || {};
  var node = options.node || _nodeId;
  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not
  // specified.  We do this lazily to minimize issues related to insufficient
  // system entropy.  See #189

  if (node == null || clockseq == null) {
    var seedBytes = options.random || (options.rng || _rng_js__WEBPACK_IMPORTED_MODULE_0__["default"])();

    if (node == null) {
      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)
      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];
    }

    if (clockseq == null) {
      // Per 4.2.2, randomize (14 bit) clockseq
      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;
    }
  } // UUID timestamps are 100 nano-second units since the Gregorian epoch,
  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so
  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'
  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.


  var msecs = options.msecs !== undefined ? options.msecs : Date.now(); // Per 4.2.1.2, use count of uuid's generated during the current clock
  // cycle to simulate higher resolution clock

  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)

  var dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression

  if (dt < 0 && options.clockseq === undefined) {
    clockseq = clockseq + 1 & 0x3fff;
  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new
  // time interval


  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {
    nsecs = 0;
  } // Per 4.2.1.2 Throw error if too many uuids are requested


  if (nsecs >= 10000) {
    throw new Error("uuid.v1(): Can't create more than 10M uuids/sec");
  }

  _lastMSecs = msecs;
  _lastNSecs = nsecs;
  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch

  msecs += 12219292800000; // `time_low`

  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;
  b[i++] = tl >>> 24 & 0xff;
  b[i++] = tl >>> 16 & 0xff;
  b[i++] = tl >>> 8 & 0xff;
  b[i++] = tl & 0xff; // `time_mid`

  var tmh = msecs / 0x100000000 * 10000 & 0xfffffff;
  b[i++] = tmh >>> 8 & 0xff;
  b[i++] = tmh & 0xff; // `time_high_and_version`

  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version

  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)

  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`

  b[i++] = clockseq & 0xff; // `node`

  for (var n = 0; n < 6; ++n) {
    b[i + n] = node[n];
  }

  return buf || (0,_stringify_js__WEBPACK_IMPORTED_MODULE_1__["default"])(b);
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (v1);

/***/ }),

/***/ "../../node_modules/uuid/dist/esm-browser/v3.js":
/*!******************************************************!*\
  !*** ../../node_modules/uuid/dist/esm-browser/v3.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _v35_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./v35.js */ "../../node_modules/uuid/dist/esm-browser/v35.js");
/* harmony import */ var _md5_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./md5.js */ "../../node_modules/uuid/dist/esm-browser/md5.js");


var v3 = (0,_v35_js__WEBPACK_IMPORTED_MODULE_0__["default"])('v3', 0x30, _md5_js__WEBPACK_IMPORTED_MODULE_1__["default"]);
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (v3);

/***/ }),

/***/ "../../node_modules/uuid/dist/esm-browser/v35.js":
/*!*******************************************************!*\
  !*** ../../node_modules/uuid/dist/esm-browser/v35.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DNS: () => (/* binding */ DNS),
/* harmony export */   URL: () => (/* binding */ URL),
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _stringify_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./stringify.js */ "../../node_modules/uuid/dist/esm-browser/stringify.js");
/* harmony import */ var _parse_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./parse.js */ "../../node_modules/uuid/dist/esm-browser/parse.js");



function stringToBytes(str) {
  str = unescape(encodeURIComponent(str)); // UTF8 escape

  var bytes = [];

  for (var i = 0; i < str.length; ++i) {
    bytes.push(str.charCodeAt(i));
  }

  return bytes;
}

var DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';
var URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(name, version, hashfunc) {
  function generateUUID(value, namespace, buf, offset) {
    if (typeof value === 'string') {
      value = stringToBytes(value);
    }

    if (typeof namespace === 'string') {
      namespace = (0,_parse_js__WEBPACK_IMPORTED_MODULE_0__["default"])(namespace);
    }

    if (namespace.length !== 16) {
      throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');
    } // Compute hash of namespace and value, Per 4.3
    // Future: Use spread syntax when supported on all platforms, e.g. `bytes =
    // hashfunc([...namespace, ... value])`


    var bytes = new Uint8Array(16 + value.length);
    bytes.set(namespace);
    bytes.set(value, namespace.length);
    bytes = hashfunc(bytes);
    bytes[6] = bytes[6] & 0x0f | version;
    bytes[8] = bytes[8] & 0x3f | 0x80;

    if (buf) {
      offset = offset || 0;

      for (var i = 0; i < 16; ++i) {
        buf[offset + i] = bytes[i];
      }

      return buf;
    }

    return (0,_stringify_js__WEBPACK_IMPORTED_MODULE_1__["default"])(bytes);
  } // Function#name is not settable on some platforms (#270)


  try {
    generateUUID.name = name; // eslint-disable-next-line no-empty
  } catch (err) {} // For CommonJS default export support


  generateUUID.DNS = DNS;
  generateUUID.URL = URL;
  return generateUUID;
}

/***/ }),

/***/ "../../node_modules/uuid/dist/esm-browser/v4.js":
/*!******************************************************!*\
  !*** ../../node_modules/uuid/dist/esm-browser/v4.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _rng_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./rng.js */ "../../node_modules/uuid/dist/esm-browser/rng.js");
/* harmony import */ var _stringify_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./stringify.js */ "../../node_modules/uuid/dist/esm-browser/stringify.js");



function v4(options, buf, offset) {
  options = options || {};
  var rnds = options.random || (options.rng || _rng_js__WEBPACK_IMPORTED_MODULE_0__["default"])(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`

  rnds[6] = rnds[6] & 0x0f | 0x40;
  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided

  if (buf) {
    offset = offset || 0;

    for (var i = 0; i < 16; ++i) {
      buf[offset + i] = rnds[i];
    }

    return buf;
  }

  return (0,_stringify_js__WEBPACK_IMPORTED_MODULE_1__["default"])(rnds);
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (v4);

/***/ }),

/***/ "../../node_modules/uuid/dist/esm-browser/v5.js":
/*!******************************************************!*\
  !*** ../../node_modules/uuid/dist/esm-browser/v5.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _v35_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./v35.js */ "../../node_modules/uuid/dist/esm-browser/v35.js");
/* harmony import */ var _sha1_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./sha1.js */ "../../node_modules/uuid/dist/esm-browser/sha1.js");


var v5 = (0,_v35_js__WEBPACK_IMPORTED_MODULE_0__["default"])('v5', 0x50, _sha1_js__WEBPACK_IMPORTED_MODULE_1__["default"]);
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (v5);

/***/ }),

/***/ "../../node_modules/uuid/dist/esm-browser/validate.js":
/*!************************************************************!*\
  !*** ../../node_modules/uuid/dist/esm-browser/validate.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _regex_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./regex.js */ "../../node_modules/uuid/dist/esm-browser/regex.js");


function validate(uuid) {
  return typeof uuid === 'string' && _regex_js__WEBPACK_IMPORTED_MODULE_0__["default"].test(uuid);
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (validate);

/***/ }),

/***/ "../../node_modules/uuid/dist/esm-browser/version.js":
/*!***********************************************************!*\
  !*** ../../node_modules/uuid/dist/esm-browser/version.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _validate_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./validate.js */ "../../node_modules/uuid/dist/esm-browser/validate.js");


function version(uuid) {
  if (!(0,_validate_js__WEBPACK_IMPORTED_MODULE_0__["default"])(uuid)) {
    throw TypeError('Invalid UUID');
  }

  return parseInt(uuid.substr(14, 1), 16);
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (version);

/***/ }),

/***/ "../../node_modules/vscode-jsonrpc/lib/browser/main.js":
/*!*************************************************************!*\
  !*** ../../node_modules/vscode-jsonrpc/lib/browser/main.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/* --------------------------------------------------------------------------------------------
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 * ------------------------------------------------------------------------------------------ */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.createMessageConnection = exports.BrowserMessageWriter = exports.BrowserMessageReader = void 0;
const ril_1 = __webpack_require__(/*! ./ril */ "../../node_modules/vscode-jsonrpc/lib/browser/ril.js");
// Install the browser runtime abstract.
ril_1.default.install();
const api_1 = __webpack_require__(/*! ../common/api */ "../../node_modules/vscode-jsonrpc/lib/common/api.js");
__exportStar(__webpack_require__(/*! ../common/api */ "../../node_modules/vscode-jsonrpc/lib/common/api.js"), exports);
class BrowserMessageReader extends api_1.AbstractMessageReader {
    constructor(port) {
        super();
        this._onData = new api_1.Emitter();
        this._messageListener = (event) => {
            this._onData.fire(event.data);
        };
        port.addEventListener('error', (event) => this.fireError(event));
        port.onmessage = this._messageListener;
    }
    listen(callback) {
        return this._onData.event(callback);
    }
}
exports.BrowserMessageReader = BrowserMessageReader;
class BrowserMessageWriter extends api_1.AbstractMessageWriter {
    constructor(port) {
        super();
        this.port = port;
        this.errorCount = 0;
        port.addEventListener('error', (event) => this.fireError(event));
    }
    write(msg) {
        try {
            this.port.postMessage(msg);
            return Promise.resolve();
        }
        catch (error) {
            this.handleError(error, msg);
            return Promise.reject(error);
        }
    }
    handleError(error, msg) {
        this.errorCount++;
        this.fireError(error, msg, this.errorCount);
    }
    end() {
    }
}
exports.BrowserMessageWriter = BrowserMessageWriter;
function createMessageConnection(reader, writer, logger, options) {
    if (logger === undefined) {
        logger = api_1.NullLogger;
    }
    if (api_1.ConnectionStrategy.is(options)) {
        options = { connectionStrategy: options };
    }
    return (0, api_1.createMessageConnection)(reader, writer, logger, options);
}
exports.createMessageConnection = createMessageConnection;


/***/ }),

/***/ "../../node_modules/vscode-jsonrpc/lib/browser/ril.js":
/*!************************************************************!*\
  !*** ../../node_modules/vscode-jsonrpc/lib/browser/ril.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/* --------------------------------------------------------------------------------------------
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 * ------------------------------------------------------------------------------------------ */
Object.defineProperty(exports, "__esModule", ({ value: true }));
const api_1 = __webpack_require__(/*! ../common/api */ "../../node_modules/vscode-jsonrpc/lib/common/api.js");
class MessageBuffer extends api_1.AbstractMessageBuffer {
    constructor(encoding = 'utf-8') {
        super(encoding);
        this.asciiDecoder = new TextDecoder('ascii');
    }
    emptyBuffer() {
        return MessageBuffer.emptyBuffer;
    }
    fromString(value, _encoding) {
        return (new TextEncoder()).encode(value);
    }
    toString(value, encoding) {
        if (encoding === 'ascii') {
            return this.asciiDecoder.decode(value);
        }
        else {
            return (new TextDecoder(encoding)).decode(value);
        }
    }
    asNative(buffer, length) {
        if (length === undefined) {
            return buffer;
        }
        else {
            return buffer.slice(0, length);
        }
    }
    allocNative(length) {
        return new Uint8Array(length);
    }
}
MessageBuffer.emptyBuffer = new Uint8Array(0);
class ReadableStreamWrapper {
    constructor(socket) {
        this.socket = socket;
        this._onData = new api_1.Emitter();
        this._messageListener = (event) => {
            const blob = event.data;
            blob.arrayBuffer().then((buffer) => {
                this._onData.fire(new Uint8Array(buffer));
            }, () => {
                (0, api_1.RAL)().console.error(`Converting blob to array buffer failed.`);
            });
        };
        this.socket.addEventListener('message', this._messageListener);
    }
    onClose(listener) {
        this.socket.addEventListener('close', listener);
        return api_1.Disposable.create(() => this.socket.removeEventListener('close', listener));
    }
    onError(listener) {
        this.socket.addEventListener('error', listener);
        return api_1.Disposable.create(() => this.socket.removeEventListener('error', listener));
    }
    onEnd(listener) {
        this.socket.addEventListener('end', listener);
        return api_1.Disposable.create(() => this.socket.removeEventListener('end', listener));
    }
    onData(listener) {
        return this._onData.event(listener);
    }
}
class WritableStreamWrapper {
    constructor(socket) {
        this.socket = socket;
    }
    onClose(listener) {
        this.socket.addEventListener('close', listener);
        return api_1.Disposable.create(() => this.socket.removeEventListener('close', listener));
    }
    onError(listener) {
        this.socket.addEventListener('error', listener);
        return api_1.Disposable.create(() => this.socket.removeEventListener('error', listener));
    }
    onEnd(listener) {
        this.socket.addEventListener('end', listener);
        return api_1.Disposable.create(() => this.socket.removeEventListener('end', listener));
    }
    write(data, encoding) {
        if (typeof data === 'string') {
            if (encoding !== undefined && encoding !== 'utf-8') {
                throw new Error(`In a Browser environments only utf-8 text encoding is supported. But got encoding: ${encoding}`);
            }
            this.socket.send(data);
        }
        else {
            this.socket.send(data);
        }
        return Promise.resolve();
    }
    end() {
        this.socket.close();
    }
}
const _textEncoder = new TextEncoder();
const _ril = Object.freeze({
    messageBuffer: Object.freeze({
        create: (encoding) => new MessageBuffer(encoding)
    }),
    applicationJson: Object.freeze({
        encoder: Object.freeze({
            name: 'application/json',
            encode: (msg, options) => {
                if (options.charset !== 'utf-8') {
                    throw new Error(`In a Browser environments only utf-8 text encoding is supported. But got encoding: ${options.charset}`);
                }
                return Promise.resolve(_textEncoder.encode(JSON.stringify(msg, undefined, 0)));
            }
        }),
        decoder: Object.freeze({
            name: 'application/json',
            decode: (buffer, options) => {
                if (!(buffer instanceof Uint8Array)) {
                    throw new Error(`In a Browser environments only Uint8Arrays are supported.`);
                }
                return Promise.resolve(JSON.parse(new TextDecoder(options.charset).decode(buffer)));
            }
        })
    }),
    stream: Object.freeze({
        asReadableStream: (socket) => new ReadableStreamWrapper(socket),
        asWritableStream: (socket) => new WritableStreamWrapper(socket)
    }),
    console: console,
    timer: Object.freeze({
        setTimeout(callback, ms, ...args) {
            const handle = setTimeout(callback, ms, ...args);
            return { dispose: () => clearTimeout(handle) };
        },
        setImmediate(callback, ...args) {
            const handle = setTimeout(callback, 0, ...args);
            return { dispose: () => clearTimeout(handle) };
        },
        setInterval(callback, ms, ...args) {
            const handle = setInterval(callback, ms, ...args);
            return { dispose: () => clearInterval(handle) };
        },
    })
});
function RIL() {
    return _ril;
}
(function (RIL) {
    function install() {
        api_1.RAL.install(_ril);
    }
    RIL.install = install;
})(RIL || (RIL = {}));
exports["default"] = RIL;


/***/ }),

/***/ "../../node_modules/vscode-jsonrpc/lib/common/api.js":
/*!***********************************************************!*\
  !*** ../../node_modules/vscode-jsonrpc/lib/common/api.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/* --------------------------------------------------------------------------------------------
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 * ------------------------------------------------------------------------------------------ */
/// <reference path="../../typings/thenable.d.ts" />
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ProgressType = exports.ProgressToken = exports.createMessageConnection = exports.NullLogger = exports.ConnectionOptions = exports.ConnectionStrategy = exports.AbstractMessageBuffer = exports.WriteableStreamMessageWriter = exports.AbstractMessageWriter = exports.MessageWriter = exports.ReadableStreamMessageReader = exports.AbstractMessageReader = exports.MessageReader = exports.SharedArrayReceiverStrategy = exports.SharedArraySenderStrategy = exports.CancellationToken = exports.CancellationTokenSource = exports.Emitter = exports.Event = exports.Disposable = exports.LRUCache = exports.Touch = exports.LinkedMap = exports.ParameterStructures = exports.NotificationType9 = exports.NotificationType8 = exports.NotificationType7 = exports.NotificationType6 = exports.NotificationType5 = exports.NotificationType4 = exports.NotificationType3 = exports.NotificationType2 = exports.NotificationType1 = exports.NotificationType0 = exports.NotificationType = exports.ErrorCodes = exports.ResponseError = exports.RequestType9 = exports.RequestType8 = exports.RequestType7 = exports.RequestType6 = exports.RequestType5 = exports.RequestType4 = exports.RequestType3 = exports.RequestType2 = exports.RequestType1 = exports.RequestType0 = exports.RequestType = exports.Message = exports.RAL = void 0;
exports.MessageStrategy = exports.CancellationStrategy = exports.CancellationSenderStrategy = exports.CancellationReceiverStrategy = exports.ConnectionError = exports.ConnectionErrors = exports.LogTraceNotification = exports.SetTraceNotification = exports.TraceFormat = exports.TraceValues = exports.Trace = void 0;
const messages_1 = __webpack_require__(/*! ./messages */ "../../node_modules/vscode-jsonrpc/lib/common/messages.js");
Object.defineProperty(exports, "Message", ({ enumerable: true, get: function () { return messages_1.Message; } }));
Object.defineProperty(exports, "RequestType", ({ enumerable: true, get: function () { return messages_1.RequestType; } }));
Object.defineProperty(exports, "RequestType0", ({ enumerable: true, get: function () { return messages_1.RequestType0; } }));
Object.defineProperty(exports, "RequestType1", ({ enumerable: true, get: function () { return messages_1.RequestType1; } }));
Object.defineProperty(exports, "RequestType2", ({ enumerable: true, get: function () { return messages_1.RequestType2; } }));
Object.defineProperty(exports, "RequestType3", ({ enumerable: true, get: function () { return messages_1.RequestType3; } }));
Object.defineProperty(exports, "RequestType4", ({ enumerable: true, get: function () { return messages_1.RequestType4; } }));
Object.defineProperty(exports, "RequestType5", ({ enumerable: true, get: function () { return messages_1.RequestType5; } }));
Object.defineProperty(exports, "RequestType6", ({ enumerable: true, get: function () { return messages_1.RequestType6; } }));
Object.defineProperty(exports, "RequestType7", ({ enumerable: true, get: function () { return messages_1.RequestType7; } }));
Object.defineProperty(exports, "RequestType8", ({ enumerable: true, get: function () { return messages_1.RequestType8; } }));
Object.defineProperty(exports, "RequestType9", ({ enumerable: true, get: function () { return messages_1.RequestType9; } }));
Object.defineProperty(exports, "ResponseError", ({ enumerable: true, get: function () { return messages_1.ResponseError; } }));
Object.defineProperty(exports, "ErrorCodes", ({ enumerable: true, get: function () { return messages_1.ErrorCodes; } }));
Object.defineProperty(exports, "NotificationType", ({ enumerable: true, get: function () { return messages_1.NotificationType; } }));
Object.defineProperty(exports, "NotificationType0", ({ enumerable: true, get: function () { return messages_1.NotificationType0; } }));
Object.defineProperty(exports, "NotificationType1", ({ enumerable: true, get: function () { return messages_1.NotificationType1; } }));
Object.defineProperty(exports, "NotificationType2", ({ enumerable: true, get: function () { return messages_1.NotificationType2; } }));
Object.defineProperty(exports, "NotificationType3", ({ enumerable: true, get: function () { return messages_1.NotificationType3; } }));
Object.defineProperty(exports, "NotificationType4", ({ enumerable: true, get: function () { return messages_1.NotificationType4; } }));
Object.defineProperty(exports, "NotificationType5", ({ enumerable: true, get: function () { return messages_1.NotificationType5; } }));
Object.defineProperty(exports, "NotificationType6", ({ enumerable: true, get: function () { return messages_1.NotificationType6; } }));
Object.defineProperty(exports, "NotificationType7", ({ enumerable: true, get: function () { return messages_1.NotificationType7; } }));
Object.defineProperty(exports, "NotificationType8", ({ enumerable: true, get: function () { return messages_1.NotificationType8; } }));
Object.defineProperty(exports, "NotificationType9", ({ enumerable: true, get: function () { return messages_1.NotificationType9; } }));
Object.defineProperty(exports, "ParameterStructures", ({ enumerable: true, get: function () { return messages_1.ParameterStructures; } }));
const linkedMap_1 = __webpack_require__(/*! ./linkedMap */ "../../node_modules/vscode-jsonrpc/lib/common/linkedMap.js");
Object.defineProperty(exports, "LinkedMap", ({ enumerable: true, get: function () { return linkedMap_1.LinkedMap; } }));
Object.defineProperty(exports, "LRUCache", ({ enumerable: true, get: function () { return linkedMap_1.LRUCache; } }));
Object.defineProperty(exports, "Touch", ({ enumerable: true, get: function () { return linkedMap_1.Touch; } }));
const disposable_1 = __webpack_require__(/*! ./disposable */ "../../node_modules/vscode-jsonrpc/lib/common/disposable.js");
Object.defineProperty(exports, "Disposable", ({ enumerable: true, get: function () { return disposable_1.Disposable; } }));
const events_1 = __webpack_require__(/*! ./events */ "../../node_modules/vscode-jsonrpc/lib/common/events.js");
Object.defineProperty(exports, "Event", ({ enumerable: true, get: function () { return events_1.Event; } }));
Object.defineProperty(exports, "Emitter", ({ enumerable: true, get: function () { return events_1.Emitter; } }));
const cancellation_1 = __webpack_require__(/*! ./cancellation */ "../../node_modules/vscode-jsonrpc/lib/common/cancellation.js");
Object.defineProperty(exports, "CancellationTokenSource", ({ enumerable: true, get: function () { return cancellation_1.CancellationTokenSource; } }));
Object.defineProperty(exports, "CancellationToken", ({ enumerable: true, get: function () { return cancellation_1.CancellationToken; } }));
const sharedArrayCancellation_1 = __webpack_require__(/*! ./sharedArrayCancellation */ "../../node_modules/vscode-jsonrpc/lib/common/sharedArrayCancellation.js");
Object.defineProperty(exports, "SharedArraySenderStrategy", ({ enumerable: true, get: function () { return sharedArrayCancellation_1.SharedArraySenderStrategy; } }));
Object.defineProperty(exports, "SharedArrayReceiverStrategy", ({ enumerable: true, get: function () { return sharedArrayCancellation_1.SharedArrayReceiverStrategy; } }));
const messageReader_1 = __webpack_require__(/*! ./messageReader */ "../../node_modules/vscode-jsonrpc/lib/common/messageReader.js");
Object.defineProperty(exports, "MessageReader", ({ enumerable: true, get: function () { return messageReader_1.MessageReader; } }));
Object.defineProperty(exports, "AbstractMessageReader", ({ enumerable: true, get: function () { return messageReader_1.AbstractMessageReader; } }));
Object.defineProperty(exports, "ReadableStreamMessageReader", ({ enumerable: true, get: function () { return messageReader_1.ReadableStreamMessageReader; } }));
const messageWriter_1 = __webpack_require__(/*! ./messageWriter */ "../../node_modules/vscode-jsonrpc/lib/common/messageWriter.js");
Object.defineProperty(exports, "MessageWriter", ({ enumerable: true, get: function () { return messageWriter_1.MessageWriter; } }));
Object.defineProperty(exports, "AbstractMessageWriter", ({ enumerable: true, get: function () { return messageWriter_1.AbstractMessageWriter; } }));
Object.defineProperty(exports, "WriteableStreamMessageWriter", ({ enumerable: true, get: function () { return messageWriter_1.WriteableStreamMessageWriter; } }));
const messageBuffer_1 = __webpack_require__(/*! ./messageBuffer */ "../../node_modules/vscode-jsonrpc/lib/common/messageBuffer.js");
Object.defineProperty(exports, "AbstractMessageBuffer", ({ enumerable: true, get: function () { return messageBuffer_1.AbstractMessageBuffer; } }));
const connection_1 = __webpack_require__(/*! ./connection */ "../../node_modules/vscode-jsonrpc/lib/common/connection.js");
Object.defineProperty(exports, "ConnectionStrategy", ({ enumerable: true, get: function () { return connection_1.ConnectionStrategy; } }));
Object.defineProperty(exports, "ConnectionOptions", ({ enumerable: true, get: function () { return connection_1.ConnectionOptions; } }));
Object.defineProperty(exports, "NullLogger", ({ enumerable: true, get: function () { return connection_1.NullLogger; } }));
Object.defineProperty(exports, "createMessageConnection", ({ enumerable: true, get: function () { return connection_1.createMessageConnection; } }));
Object.defineProperty(exports, "ProgressToken", ({ enumerable: true, get: function () { return connection_1.ProgressToken; } }));
Object.defineProperty(exports, "ProgressType", ({ enumerable: true, get: function () { return connection_1.ProgressType; } }));
Object.defineProperty(exports, "Trace", ({ enumerable: true, get: function () { return connection_1.Trace; } }));
Object.defineProperty(exports, "TraceValues", ({ enumerable: true, get: function () { return connection_1.TraceValues; } }));
Object.defineProperty(exports, "TraceFormat", ({ enumerable: true, get: function () { return connection_1.TraceFormat; } }));
Object.defineProperty(exports, "SetTraceNotification", ({ enumerable: true, get: function () { return connection_1.SetTraceNotification; } }));
Object.defineProperty(exports, "LogTraceNotification", ({ enumerable: true, get: function () { return connection_1.LogTraceNotification; } }));
Object.defineProperty(exports, "ConnectionErrors", ({ enumerable: true, get: function () { return connection_1.ConnectionErrors; } }));
Object.defineProperty(exports, "ConnectionError", ({ enumerable: true, get: function () { return connection_1.ConnectionError; } }));
Object.defineProperty(exports, "CancellationReceiverStrategy", ({ enumerable: true, get: function () { return connection_1.CancellationReceiverStrategy; } }));
Object.defineProperty(exports, "CancellationSenderStrategy", ({ enumerable: true, get: function () { return connection_1.CancellationSenderStrategy; } }));
Object.defineProperty(exports, "CancellationStrategy", ({ enumerable: true, get: function () { return connection_1.CancellationStrategy; } }));
Object.defineProperty(exports, "MessageStrategy", ({ enumerable: true, get: function () { return connection_1.MessageStrategy; } }));
const ral_1 = __webpack_require__(/*! ./ral */ "../../node_modules/vscode-jsonrpc/lib/common/ral.js");
exports.RAL = ral_1.default;


/***/ }),

/***/ "../../node_modules/vscode-jsonrpc/lib/common/cancellation.js":
/*!********************************************************************!*\
  !*** ../../node_modules/vscode-jsonrpc/lib/common/cancellation.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CancellationTokenSource = exports.CancellationToken = void 0;
const ral_1 = __webpack_require__(/*! ./ral */ "../../node_modules/vscode-jsonrpc/lib/common/ral.js");
const Is = __webpack_require__(/*! ./is */ "../../node_modules/vscode-jsonrpc/lib/common/is.js");
const events_1 = __webpack_require__(/*! ./events */ "../../node_modules/vscode-jsonrpc/lib/common/events.js");
var CancellationToken;
(function (CancellationToken) {
    CancellationToken.None = Object.freeze({
        isCancellationRequested: false,
        onCancellationRequested: events_1.Event.None
    });
    CancellationToken.Cancelled = Object.freeze({
        isCancellationRequested: true,
        onCancellationRequested: events_1.Event.None
    });
    function is(value) {
        const candidate = value;
        return candidate && (candidate === CancellationToken.None
            || candidate === CancellationToken.Cancelled
            || (Is.boolean(candidate.isCancellationRequested) && !!candidate.onCancellationRequested));
    }
    CancellationToken.is = is;
})(CancellationToken = exports.CancellationToken || (exports.CancellationToken = {}));
const shortcutEvent = Object.freeze(function (callback, context) {
    const handle = (0, ral_1.default)().timer.setTimeout(callback.bind(context), 0);
    return { dispose() { handle.dispose(); } };
});
class MutableToken {
    constructor() {
        this._isCancelled = false;
    }
    cancel() {
        if (!this._isCancelled) {
            this._isCancelled = true;
            if (this._emitter) {
                this._emitter.fire(undefined);
                this.dispose();
            }
        }
    }
    get isCancellationRequested() {
        return this._isCancelled;
    }
    get onCancellationRequested() {
        if (this._isCancelled) {
            return shortcutEvent;
        }
        if (!this._emitter) {
            this._emitter = new events_1.Emitter();
        }
        return this._emitter.event;
    }
    dispose() {
        if (this._emitter) {
            this._emitter.dispose();
            this._emitter = undefined;
        }
    }
}
class CancellationTokenSource {
    get token() {
        if (!this._token) {
            // be lazy and create the token only when
            // actually needed
            this._token = new MutableToken();
        }
        return this._token;
    }
    cancel() {
        if (!this._token) {
            // save an object by returning the default
            // cancelled token when cancellation happens
            // before someone asks for the token
            this._token = CancellationToken.Cancelled;
        }
        else {
            this._token.cancel();
        }
    }
    dispose() {
        if (!this._token) {
            // ensure to initialize with an empty token if we had none
            this._token = CancellationToken.None;
        }
        else if (this._token instanceof MutableToken) {
            // actually dispose
            this._token.dispose();
        }
    }
}
exports.CancellationTokenSource = CancellationTokenSource;


/***/ }),

/***/ "../../node_modules/vscode-jsonrpc/lib/common/connection.js":
/*!******************************************************************!*\
  !*** ../../node_modules/vscode-jsonrpc/lib/common/connection.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/* --------------------------------------------------------------------------------------------
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 * ------------------------------------------------------------------------------------------ */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.createMessageConnection = exports.ConnectionOptions = exports.MessageStrategy = exports.CancellationStrategy = exports.CancellationSenderStrategy = exports.CancellationReceiverStrategy = exports.RequestCancellationReceiverStrategy = exports.IdCancellationReceiverStrategy = exports.ConnectionStrategy = exports.ConnectionError = exports.ConnectionErrors = exports.LogTraceNotification = exports.SetTraceNotification = exports.TraceFormat = exports.TraceValues = exports.Trace = exports.NullLogger = exports.ProgressType = exports.ProgressToken = void 0;
const ral_1 = __webpack_require__(/*! ./ral */ "../../node_modules/vscode-jsonrpc/lib/common/ral.js");
const Is = __webpack_require__(/*! ./is */ "../../node_modules/vscode-jsonrpc/lib/common/is.js");
const messages_1 = __webpack_require__(/*! ./messages */ "../../node_modules/vscode-jsonrpc/lib/common/messages.js");
const linkedMap_1 = __webpack_require__(/*! ./linkedMap */ "../../node_modules/vscode-jsonrpc/lib/common/linkedMap.js");
const events_1 = __webpack_require__(/*! ./events */ "../../node_modules/vscode-jsonrpc/lib/common/events.js");
const cancellation_1 = __webpack_require__(/*! ./cancellation */ "../../node_modules/vscode-jsonrpc/lib/common/cancellation.js");
var CancelNotification;
(function (CancelNotification) {
    CancelNotification.type = new messages_1.NotificationType('$/cancelRequest');
})(CancelNotification || (CancelNotification = {}));
var ProgressToken;
(function (ProgressToken) {
    function is(value) {
        return typeof value === 'string' || typeof value === 'number';
    }
    ProgressToken.is = is;
})(ProgressToken = exports.ProgressToken || (exports.ProgressToken = {}));
var ProgressNotification;
(function (ProgressNotification) {
    ProgressNotification.type = new messages_1.NotificationType('$/progress');
})(ProgressNotification || (ProgressNotification = {}));
class ProgressType {
    constructor() {
    }
}
exports.ProgressType = ProgressType;
var StarRequestHandler;
(function (StarRequestHandler) {
    function is(value) {
        return Is.func(value);
    }
    StarRequestHandler.is = is;
})(StarRequestHandler || (StarRequestHandler = {}));
exports.NullLogger = Object.freeze({
    error: () => { },
    warn: () => { },
    info: () => { },
    log: () => { }
});
var Trace;
(function (Trace) {
    Trace[Trace["Off"] = 0] = "Off";
    Trace[Trace["Messages"] = 1] = "Messages";
    Trace[Trace["Compact"] = 2] = "Compact";
    Trace[Trace["Verbose"] = 3] = "Verbose";
})(Trace = exports.Trace || (exports.Trace = {}));
var TraceValues;
(function (TraceValues) {
    /**
     * Turn tracing off.
     */
    TraceValues.Off = 'off';
    /**
     * Trace messages only.
     */
    TraceValues.Messages = 'messages';
    /**
     * Compact message tracing.
     */
    TraceValues.Compact = 'compact';
    /**
     * Verbose message tracing.
     */
    TraceValues.Verbose = 'verbose';
})(TraceValues = exports.TraceValues || (exports.TraceValues = {}));
(function (Trace) {
    function fromString(value) {
        if (!Is.string(value)) {
            return Trace.Off;
        }
        value = value.toLowerCase();
        switch (value) {
            case 'off':
                return Trace.Off;
            case 'messages':
                return Trace.Messages;
            case 'compact':
                return Trace.Compact;
            case 'verbose':
                return Trace.Verbose;
            default:
                return Trace.Off;
        }
    }
    Trace.fromString = fromString;
    function toString(value) {
        switch (value) {
            case Trace.Off:
                return 'off';
            case Trace.Messages:
                return 'messages';
            case Trace.Compact:
                return 'compact';
            case Trace.Verbose:
                return 'verbose';
            default:
                return 'off';
        }
    }
    Trace.toString = toString;
})(Trace = exports.Trace || (exports.Trace = {}));
var TraceFormat;
(function (TraceFormat) {
    TraceFormat["Text"] = "text";
    TraceFormat["JSON"] = "json";
})(TraceFormat = exports.TraceFormat || (exports.TraceFormat = {}));
(function (TraceFormat) {
    function fromString(value) {
        if (!Is.string(value)) {
            return TraceFormat.Text;
        }
        value = value.toLowerCase();
        if (value === 'json') {
            return TraceFormat.JSON;
        }
        else {
            return TraceFormat.Text;
        }
    }
    TraceFormat.fromString = fromString;
})(TraceFormat = exports.TraceFormat || (exports.TraceFormat = {}));
var SetTraceNotification;
(function (SetTraceNotification) {
    SetTraceNotification.type = new messages_1.NotificationType('$/setTrace');
})(SetTraceNotification = exports.SetTraceNotification || (exports.SetTraceNotification = {}));
var LogTraceNotification;
(function (LogTraceNotification) {
    LogTraceNotification.type = new messages_1.NotificationType('$/logTrace');
})(LogTraceNotification = exports.LogTraceNotification || (exports.LogTraceNotification = {}));
var ConnectionErrors;
(function (ConnectionErrors) {
    /**
     * The connection is closed.
     */
    ConnectionErrors[ConnectionErrors["Closed"] = 1] = "Closed";
    /**
     * The connection got disposed.
     */
    ConnectionErrors[ConnectionErrors["Disposed"] = 2] = "Disposed";
    /**
     * The connection is already in listening mode.
     */
    ConnectionErrors[ConnectionErrors["AlreadyListening"] = 3] = "AlreadyListening";
})(ConnectionErrors = exports.ConnectionErrors || (exports.ConnectionErrors = {}));
class ConnectionError extends Error {
    constructor(code, message) {
        super(message);
        this.code = code;
        Object.setPrototypeOf(this, ConnectionError.prototype);
    }
}
exports.ConnectionError = ConnectionError;
var ConnectionStrategy;
(function (ConnectionStrategy) {
    function is(value) {
        const candidate = value;
        return candidate && Is.func(candidate.cancelUndispatched);
    }
    ConnectionStrategy.is = is;
})(ConnectionStrategy = exports.ConnectionStrategy || (exports.ConnectionStrategy = {}));
var IdCancellationReceiverStrategy;
(function (IdCancellationReceiverStrategy) {
    function is(value) {
        const candidate = value;
        return candidate && (candidate.kind === undefined || candidate.kind === 'id') && Is.func(candidate.createCancellationTokenSource) && (candidate.dispose === undefined || Is.func(candidate.dispose));
    }
    IdCancellationReceiverStrategy.is = is;
})(IdCancellationReceiverStrategy = exports.IdCancellationReceiverStrategy || (exports.IdCancellationReceiverStrategy = {}));
var RequestCancellationReceiverStrategy;
(function (RequestCancellationReceiverStrategy) {
    function is(value) {
        const candidate = value;
        return candidate && candidate.kind === 'request' && Is.func(candidate.createCancellationTokenSource) && (candidate.dispose === undefined || Is.func(candidate.dispose));
    }
    RequestCancellationReceiverStrategy.is = is;
})(RequestCancellationReceiverStrategy = exports.RequestCancellationReceiverStrategy || (exports.RequestCancellationReceiverStrategy = {}));
var CancellationReceiverStrategy;
(function (CancellationReceiverStrategy) {
    CancellationReceiverStrategy.Message = Object.freeze({
        createCancellationTokenSource(_) {
            return new cancellation_1.CancellationTokenSource();
        }
    });
    function is(value) {
        return IdCancellationReceiverStrategy.is(value) || RequestCancellationReceiverStrategy.is(value);
    }
    CancellationReceiverStrategy.is = is;
})(CancellationReceiverStrategy = exports.CancellationReceiverStrategy || (exports.CancellationReceiverStrategy = {}));
var CancellationSenderStrategy;
(function (CancellationSenderStrategy) {
    CancellationSenderStrategy.Message = Object.freeze({
        sendCancellation(conn, id) {
            return conn.sendNotification(CancelNotification.type, { id });
        },
        cleanup(_) { }
    });
    function is(value) {
        const candidate = value;
        return candidate && Is.func(candidate.sendCancellation) && Is.func(candidate.cleanup);
    }
    CancellationSenderStrategy.is = is;
})(CancellationSenderStrategy = exports.CancellationSenderStrategy || (exports.CancellationSenderStrategy = {}));
var CancellationStrategy;
(function (CancellationStrategy) {
    CancellationStrategy.Message = Object.freeze({
        receiver: CancellationReceiverStrategy.Message,
        sender: CancellationSenderStrategy.Message
    });
    function is(value) {
        const candidate = value;
        return candidate && CancellationReceiverStrategy.is(candidate.receiver) && CancellationSenderStrategy.is(candidate.sender);
    }
    CancellationStrategy.is = is;
})(CancellationStrategy = exports.CancellationStrategy || (exports.CancellationStrategy = {}));
var MessageStrategy;
(function (MessageStrategy) {
    function is(value) {
        const candidate = value;
        return candidate && Is.func(candidate.handleMessage);
    }
    MessageStrategy.is = is;
})(MessageStrategy = exports.MessageStrategy || (exports.MessageStrategy = {}));
var ConnectionOptions;
(function (ConnectionOptions) {
    function is(value) {
        const candidate = value;
        return candidate && (CancellationStrategy.is(candidate.cancellationStrategy) || ConnectionStrategy.is(candidate.connectionStrategy) || MessageStrategy.is(candidate.messageStrategy));
    }
    ConnectionOptions.is = is;
})(ConnectionOptions = exports.ConnectionOptions || (exports.ConnectionOptions = {}));
var ConnectionState;
(function (ConnectionState) {
    ConnectionState[ConnectionState["New"] = 1] = "New";
    ConnectionState[ConnectionState["Listening"] = 2] = "Listening";
    ConnectionState[ConnectionState["Closed"] = 3] = "Closed";
    ConnectionState[ConnectionState["Disposed"] = 4] = "Disposed";
})(ConnectionState || (ConnectionState = {}));
function createMessageConnection(messageReader, messageWriter, _logger, options) {
    const logger = _logger !== undefined ? _logger : exports.NullLogger;
    let sequenceNumber = 0;
    let notificationSequenceNumber = 0;
    let unknownResponseSequenceNumber = 0;
    const version = '2.0';
    let starRequestHandler = undefined;
    const requestHandlers = new Map();
    let starNotificationHandler = undefined;
    const notificationHandlers = new Map();
    const progressHandlers = new Map();
    let timer;
    let messageQueue = new linkedMap_1.LinkedMap();
    let responsePromises = new Map();
    let knownCanceledRequests = new Set();
    let requestTokens = new Map();
    let trace = Trace.Off;
    let traceFormat = TraceFormat.Text;
    let tracer;
    let state = ConnectionState.New;
    const errorEmitter = new events_1.Emitter();
    const closeEmitter = new events_1.Emitter();
    const unhandledNotificationEmitter = new events_1.Emitter();
    const unhandledProgressEmitter = new events_1.Emitter();
    const disposeEmitter = new events_1.Emitter();
    const cancellationStrategy = (options && options.cancellationStrategy) ? options.cancellationStrategy : CancellationStrategy.Message;
    function createRequestQueueKey(id) {
        if (id === null) {
            throw new Error(`Can't send requests with id null since the response can't be correlated.`);
        }
        return 'req-' + id.toString();
    }
    function createResponseQueueKey(id) {
        if (id === null) {
            return 'res-unknown-' + (++unknownResponseSequenceNumber).toString();
        }
        else {
            return 'res-' + id.toString();
        }
    }
    function createNotificationQueueKey() {
        return 'not-' + (++notificationSequenceNumber).toString();
    }
    function addMessageToQueue(queue, message) {
        if (messages_1.Message.isRequest(message)) {
            queue.set(createRequestQueueKey(message.id), message);
        }
        else if (messages_1.Message.isResponse(message)) {
            queue.set(createResponseQueueKey(message.id), message);
        }
        else {
            queue.set(createNotificationQueueKey(), message);
        }
    }
    function cancelUndispatched(_message) {
        return undefined;
    }
    function isListening() {
        return state === ConnectionState.Listening;
    }
    function isClosed() {
        return state === ConnectionState.Closed;
    }
    function isDisposed() {
        return state === ConnectionState.Disposed;
    }
    function closeHandler() {
        if (state === ConnectionState.New || state === ConnectionState.Listening) {
            state = ConnectionState.Closed;
            closeEmitter.fire(undefined);
        }
        // If the connection is disposed don't sent close events.
    }
    function readErrorHandler(error) {
        errorEmitter.fire([error, undefined, undefined]);
    }
    function writeErrorHandler(data) {
        errorEmitter.fire(data);
    }
    messageReader.onClose(closeHandler);
    messageReader.onError(readErrorHandler);
    messageWriter.onClose(closeHandler);
    messageWriter.onError(writeErrorHandler);
    function triggerMessageQueue() {
        if (timer || messageQueue.size === 0) {
            return;
        }
        timer = (0, ral_1.default)().timer.setImmediate(() => {
            timer = undefined;
            processMessageQueue();
        });
    }
    function handleMessage(message) {
        if (messages_1.Message.isRequest(message)) {
            handleRequest(message);
        }
        else if (messages_1.Message.isNotification(message)) {
            handleNotification(message);
        }
        else if (messages_1.Message.isResponse(message)) {
            handleResponse(message);
        }
        else {
            handleInvalidMessage(message);
        }
    }
    function processMessageQueue() {
        if (messageQueue.size === 0) {
            return;
        }
        const message = messageQueue.shift();
        try {
            const messageStrategy = options?.messageStrategy;
            if (MessageStrategy.is(messageStrategy)) {
                messageStrategy.handleMessage(message, handleMessage);
            }
            else {
                handleMessage(message);
            }
        }
        finally {
            triggerMessageQueue();
        }
    }
    const callback = (message) => {
        try {
            // We have received a cancellation message. Check if the message is still in the queue
            // and cancel it if allowed to do so.
            if (messages_1.Message.isNotification(message) && message.method === CancelNotification.type.method) {
                const cancelId = message.params.id;
                const key = createRequestQueueKey(cancelId);
                const toCancel = messageQueue.get(key);
                if (messages_1.Message.isRequest(toCancel)) {
                    const strategy = options?.connectionStrategy;
                    const response = (strategy && strategy.cancelUndispatched) ? strategy.cancelUndispatched(toCancel, cancelUndispatched) : cancelUndispatched(toCancel);
                    if (response && (response.error !== undefined || response.result !== undefined)) {
                        messageQueue.delete(key);
                        requestTokens.delete(cancelId);
                        response.id = toCancel.id;
                        traceSendingResponse(response, message.method, Date.now());
                        messageWriter.write(response).catch(() => logger.error(`Sending response for canceled message failed.`));
                        return;
                    }
                }
                const cancellationToken = requestTokens.get(cancelId);
                // The request is already running. Cancel the token
                if (cancellationToken !== undefined) {
                    cancellationToken.cancel();
                    traceReceivedNotification(message);
                    return;
                }
                else {
                    // Remember the cancel but still queue the message to
                    // clean up state in process message.
                    knownCanceledRequests.add(cancelId);
                }
            }
            addMessageToQueue(messageQueue, message);
        }
        finally {
            triggerMessageQueue();
        }
    };
    function handleRequest(requestMessage) {
        if (isDisposed()) {
            // we return here silently since we fired an event when the
            // connection got disposed.
            return;
        }
        function reply(resultOrError, method, startTime) {
            const message = {
                jsonrpc: version,
                id: requestMessage.id
            };
            if (resultOrError instanceof messages_1.ResponseError) {
                message.error = resultOrError.toJson();
            }
            else {
                message.result = resultOrError === undefined ? null : resultOrError;
            }
            traceSendingResponse(message, method, startTime);
            messageWriter.write(message).catch(() => logger.error(`Sending response failed.`));
        }
        function replyError(error, method, startTime) {
            const message = {
                jsonrpc: version,
                id: requestMessage.id,
                error: error.toJson()
            };
            traceSendingResponse(message, method, startTime);
            messageWriter.write(message).catch(() => logger.error(`Sending response failed.`));
        }
        function replySuccess(result, method, startTime) {
            // The JSON RPC defines that a response must either have a result or an error
            // So we can't treat undefined as a valid response result.
            if (result === undefined) {
                result = null;
            }
            const message = {
                jsonrpc: version,
                id: requestMessage.id,
                result: result
            };
            traceSendingResponse(message, method, startTime);
            messageWriter.write(message).catch(() => logger.error(`Sending response failed.`));
        }
        traceReceivedRequest(requestMessage);
        const element = requestHandlers.get(requestMessage.method);
        let type;
        let requestHandler;
        if (element) {
            type = element.type;
            requestHandler = element.handler;
        }
        const startTime = Date.now();
        if (requestHandler || starRequestHandler) {
            const tokenKey = requestMessage.id ?? String(Date.now()); //
            const cancellationSource = IdCancellationReceiverStrategy.is(cancellationStrategy.receiver)
                ? cancellationStrategy.receiver.createCancellationTokenSource(tokenKey)
                : cancellationStrategy.receiver.createCancellationTokenSource(requestMessage);
            if (requestMessage.id !== null && knownCanceledRequests.has(requestMessage.id)) {
                cancellationSource.cancel();
            }
            if (requestMessage.id !== null) {
                requestTokens.set(tokenKey, cancellationSource);
            }
            try {
                let handlerResult;
                if (requestHandler) {
                    if (requestMessage.params === undefined) {
                        if (type !== undefined && type.numberOfParams !== 0) {
                            replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InvalidParams, `Request ${requestMessage.method} defines ${type.numberOfParams} params but received none.`), requestMessage.method, startTime);
                            return;
                        }
                        handlerResult = requestHandler(cancellationSource.token);
                    }
                    else if (Array.isArray(requestMessage.params)) {
                        if (type !== undefined && type.parameterStructures === messages_1.ParameterStructures.byName) {
                            replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InvalidParams, `Request ${requestMessage.method} defines parameters by name but received parameters by position`), requestMessage.method, startTime);
                            return;
                        }
                        handlerResult = requestHandler(...requestMessage.params, cancellationSource.token);
                    }
                    else {
                        if (type !== undefined && type.parameterStructures === messages_1.ParameterStructures.byPosition) {
                            replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InvalidParams, `Request ${requestMessage.method} defines parameters by position but received parameters by name`), requestMessage.method, startTime);
                            return;
                        }
                        handlerResult = requestHandler(requestMessage.params, cancellationSource.token);
                    }
                }
                else if (starRequestHandler) {
                    handlerResult = starRequestHandler(requestMessage.method, requestMessage.params, cancellationSource.token);
                }
                const promise = handlerResult;
                if (!handlerResult) {
                    requestTokens.delete(tokenKey);
                    replySuccess(handlerResult, requestMessage.method, startTime);
                }
                else if (promise.then) {
                    promise.then((resultOrError) => {
                        requestTokens.delete(tokenKey);
                        reply(resultOrError, requestMessage.method, startTime);
                    }, error => {
                        requestTokens.delete(tokenKey);
                        if (error instanceof messages_1.ResponseError) {
                            replyError(error, requestMessage.method, startTime);
                        }
                        else if (error && Is.string(error.message)) {
                            replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InternalError, `Request ${requestMessage.method} failed with message: ${error.message}`), requestMessage.method, startTime);
                        }
                        else {
                            replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InternalError, `Request ${requestMessage.method} failed unexpectedly without providing any details.`), requestMessage.method, startTime);
                        }
                    });
                }
                else {
                    requestTokens.delete(tokenKey);
                    reply(handlerResult, requestMessage.method, startTime);
                }
            }
            catch (error) {
                requestTokens.delete(tokenKey);
                if (error instanceof messages_1.ResponseError) {
                    reply(error, requestMessage.method, startTime);
                }
                else if (error && Is.string(error.message)) {
                    replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InternalError, `Request ${requestMessage.method} failed with message: ${error.message}`), requestMessage.method, startTime);
                }
                else {
                    replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InternalError, `Request ${requestMessage.method} failed unexpectedly without providing any details.`), requestMessage.method, startTime);
                }
            }
        }
        else {
            replyError(new messages_1.ResponseError(messages_1.ErrorCodes.MethodNotFound, `Unhandled method ${requestMessage.method}`), requestMessage.method, startTime);
        }
    }
    function handleResponse(responseMessage) {
        if (isDisposed()) {
            // See handle request.
            return;
        }
        if (responseMessage.id === null) {
            if (responseMessage.error) {
                logger.error(`Received response message without id: Error is: \n${JSON.stringify(responseMessage.error, undefined, 4)}`);
            }
            else {
                logger.error(`Received response message without id. No further error information provided.`);
            }
        }
        else {
            const key = responseMessage.id;
            const responsePromise = responsePromises.get(key);
            traceReceivedResponse(responseMessage, responsePromise);
            if (responsePromise !== undefined) {
                responsePromises.delete(key);
                try {
                    if (responseMessage.error) {
                        const error = responseMessage.error;
                        responsePromise.reject(new messages_1.ResponseError(error.code, error.message, error.data));
                    }
                    else if (responseMessage.result !== undefined) {
                        responsePromise.resolve(responseMessage.result);
                    }
                    else {
                        throw new Error('Should never happen.');
                    }
                }
                catch (error) {
                    if (error.message) {
                        logger.error(`Response handler '${responsePromise.method}' failed with message: ${error.message}`);
                    }
                    else {
                        logger.error(`Response handler '${responsePromise.method}' failed unexpectedly.`);
                    }
                }
            }
        }
    }
    function handleNotification(message) {
        if (isDisposed()) {
            // See handle request.
            return;
        }
        let type = undefined;
        let notificationHandler;
        if (message.method === CancelNotification.type.method) {
            const cancelId = message.params.id;
            knownCanceledRequests.delete(cancelId);
            traceReceivedNotification(message);
            return;
        }
        else {
            const element = notificationHandlers.get(message.method);
            if (element) {
                notificationHandler = element.handler;
                type = element.type;
            }
        }
        if (notificationHandler || starNotificationHandler) {
            try {
                traceReceivedNotification(message);
                if (notificationHandler) {
                    if (message.params === undefined) {
                        if (type !== undefined) {
                            if (type.numberOfParams !== 0 && type.parameterStructures !== messages_1.ParameterStructures.byName) {
                                logger.error(`Notification ${message.method} defines ${type.numberOfParams} params but received none.`);
                            }
                        }
                        notificationHandler();
                    }
                    else if (Array.isArray(message.params)) {
                        // There are JSON-RPC libraries that send progress message as positional params although
                        // specified as named. So convert them if this is the case.
                        const params = message.params;
                        if (message.method === ProgressNotification.type.method && params.length === 2 && ProgressToken.is(params[0])) {
                            notificationHandler({ token: params[0], value: params[1] });
                        }
                        else {
                            if (type !== undefined) {
                                if (type.parameterStructures === messages_1.ParameterStructures.byName) {
                                    logger.error(`Notification ${message.method} defines parameters by name but received parameters by position`);
                                }
                                if (type.numberOfParams !== message.params.length) {
                                    logger.error(`Notification ${message.method} defines ${type.numberOfParams} params but received ${params.length} arguments`);
                                }
                            }
                            notificationHandler(...params);
                        }
                    }
                    else {
                        if (type !== undefined && type.parameterStructures === messages_1.ParameterStructures.byPosition) {
                            logger.error(`Notification ${message.method} defines parameters by position but received parameters by name`);
                        }
                        notificationHandler(message.params);
                    }
                }
                else if (starNotificationHandler) {
                    starNotificationHandler(message.method, message.params);
                }
            }
            catch (error) {
                if (error.message) {
                    logger.error(`Notification handler '${message.method}' failed with message: ${error.message}`);
                }
                else {
                    logger.error(`Notification handler '${message.method}' failed unexpectedly.`);
                }
            }
        }
        else {
            unhandledNotificationEmitter.fire(message);
        }
    }
    function handleInvalidMessage(message) {
        if (!message) {
            logger.error('Received empty message.');
            return;
        }
        logger.error(`Received message which is neither a response nor a notification message:\n${JSON.stringify(message, null, 4)}`);
        // Test whether we find an id to reject the promise
        const responseMessage = message;
        if (Is.string(responseMessage.id) || Is.number(responseMessage.id)) {
            const key = responseMessage.id;
            const responseHandler = responsePromises.get(key);
            if (responseHandler) {
                responseHandler.reject(new Error('The received response has neither a result nor an error property.'));
            }
        }
    }
    function stringifyTrace(params) {
        if (params === undefined || params === null) {
            return undefined;
        }
        switch (trace) {
            case Trace.Verbose:
                return JSON.stringify(params, null, 4);
            case Trace.Compact:
                return JSON.stringify(params);
            default:
                return undefined;
        }
    }
    function traceSendingRequest(message) {
        if (trace === Trace.Off || !tracer) {
            return;
        }
        if (traceFormat === TraceFormat.Text) {
            let data = undefined;
            if ((trace === Trace.Verbose || trace === Trace.Compact) && message.params) {
                data = `Params: ${stringifyTrace(message.params)}\n\n`;
            }
            tracer.log(`Sending request '${message.method} - (${message.id})'.`, data);
        }
        else {
            logLSPMessage('send-request', message);
        }
    }
    function traceSendingNotification(message) {
        if (trace === Trace.Off || !tracer) {
            return;
        }
        if (traceFormat === TraceFormat.Text) {
            let data = undefined;
            if (trace === Trace.Verbose || trace === Trace.Compact) {
                if (message.params) {
                    data = `Params: ${stringifyTrace(message.params)}\n\n`;
                }
                else {
                    data = 'No parameters provided.\n\n';
                }
            }
            tracer.log(`Sending notification '${message.method}'.`, data);
        }
        else {
            logLSPMessage('send-notification', message);
        }
    }
    function traceSendingResponse(message, method, startTime) {
        if (trace === Trace.Off || !tracer) {
            return;
        }
        if (traceFormat === TraceFormat.Text) {
            let data = undefined;
            if (trace === Trace.Verbose || trace === Trace.Compact) {
                if (message.error && message.error.data) {
                    data = `Error data: ${stringifyTrace(message.error.data)}\n\n`;
                }
                else {
                    if (message.result) {
                        data = `Result: ${stringifyTrace(message.result)}\n\n`;
                    }
                    else if (message.error === undefined) {
                        data = 'No result returned.\n\n';
                    }
                }
            }
            tracer.log(`Sending response '${method} - (${message.id})'. Processing request took ${Date.now() - startTime}ms`, data);
        }
        else {
            logLSPMessage('send-response', message);
        }
    }
    function traceReceivedRequest(message) {
        if (trace === Trace.Off || !tracer) {
            return;
        }
        if (traceFormat === TraceFormat.Text) {
            let data = undefined;
            if ((trace === Trace.Verbose || trace === Trace.Compact) && message.params) {
                data = `Params: ${stringifyTrace(message.params)}\n\n`;
            }
            tracer.log(`Received request '${message.method} - (${message.id})'.`, data);
        }
        else {
            logLSPMessage('receive-request', message);
        }
    }
    function traceReceivedNotification(message) {
        if (trace === Trace.Off || !tracer || message.method === LogTraceNotification.type.method) {
            return;
        }
        if (traceFormat === TraceFormat.Text) {
            let data = undefined;
            if (trace === Trace.Verbose || trace === Trace.Compact) {
                if (message.params) {
                    data = `Params: ${stringifyTrace(message.params)}\n\n`;
                }
                else {
                    data = 'No parameters provided.\n\n';
                }
            }
            tracer.log(`Received notification '${message.method}'.`, data);
        }
        else {
            logLSPMessage('receive-notification', message);
        }
    }
    function traceReceivedResponse(message, responsePromise) {
        if (trace === Trace.Off || !tracer) {
            return;
        }
        if (traceFormat === TraceFormat.Text) {
            let data = undefined;
            if (trace === Trace.Verbose || trace === Trace.Compact) {
                if (message.error && message.error.data) {
                    data = `Error data: ${stringifyTrace(message.error.data)}\n\n`;
                }
                else {
                    if (message.result) {
                        data = `Result: ${stringifyTrace(message.result)}\n\n`;
                    }
                    else if (message.error === undefined) {
                        data = 'No result returned.\n\n';
                    }
                }
            }
            if (responsePromise) {
                const error = message.error ? ` Request failed: ${message.error.message} (${message.error.code}).` : '';
                tracer.log(`Received response '${responsePromise.method} - (${message.id})' in ${Date.now() - responsePromise.timerStart}ms.${error}`, data);
            }
            else {
                tracer.log(`Received response ${message.id} without active response promise.`, data);
            }
        }
        else {
            logLSPMessage('receive-response', message);
        }
    }
    function logLSPMessage(type, message) {
        if (!tracer || trace === Trace.Off) {
            return;
        }
        const lspMessage = {
            isLSPMessage: true,
            type,
            message,
            timestamp: Date.now()
        };
        tracer.log(lspMessage);
    }
    function throwIfClosedOrDisposed() {
        if (isClosed()) {
            throw new ConnectionError(ConnectionErrors.Closed, 'Connection is closed.');
        }
        if (isDisposed()) {
            throw new ConnectionError(ConnectionErrors.Disposed, 'Connection is disposed.');
        }
    }
    function throwIfListening() {
        if (isListening()) {
            throw new ConnectionError(ConnectionErrors.AlreadyListening, 'Connection is already listening');
        }
    }
    function throwIfNotListening() {
        if (!isListening()) {
            throw new Error('Call listen() first.');
        }
    }
    function undefinedToNull(param) {
        if (param === undefined) {
            return null;
        }
        else {
            return param;
        }
    }
    function nullToUndefined(param) {
        if (param === null) {
            return undefined;
        }
        else {
            return param;
        }
    }
    function isNamedParam(param) {
        return param !== undefined && param !== null && !Array.isArray(param) && typeof param === 'object';
    }
    function computeSingleParam(parameterStructures, param) {
        switch (parameterStructures) {
            case messages_1.ParameterStructures.auto:
                if (isNamedParam(param)) {
                    return nullToUndefined(param);
                }
                else {
                    return [undefinedToNull(param)];
                }
            case messages_1.ParameterStructures.byName:
                if (!isNamedParam(param)) {
                    throw new Error(`Received parameters by name but param is not an object literal.`);
                }
                return nullToUndefined(param);
            case messages_1.ParameterStructures.byPosition:
                return [undefinedToNull(param)];
            default:
                throw new Error(`Unknown parameter structure ${parameterStructures.toString()}`);
        }
    }
    function computeMessageParams(type, params) {
        let result;
        const numberOfParams = type.numberOfParams;
        switch (numberOfParams) {
            case 0:
                result = undefined;
                break;
            case 1:
                result = computeSingleParam(type.parameterStructures, params[0]);
                break;
            default:
                result = [];
                for (let i = 0; i < params.length && i < numberOfParams; i++) {
                    result.push(undefinedToNull(params[i]));
                }
                if (params.length < numberOfParams) {
                    for (let i = params.length; i < numberOfParams; i++) {
                        result.push(null);
                    }
                }
                break;
        }
        return result;
    }
    const connection = {
        sendNotification: (type, ...args) => {
            throwIfClosedOrDisposed();
            let method;
            let messageParams;
            if (Is.string(type)) {
                method = type;
                const first = args[0];
                let paramStart = 0;
                let parameterStructures = messages_1.ParameterStructures.auto;
                if (messages_1.ParameterStructures.is(first)) {
                    paramStart = 1;
                    parameterStructures = first;
                }
                let paramEnd = args.length;
                const numberOfParams = paramEnd - paramStart;
                switch (numberOfParams) {
                    case 0:
                        messageParams = undefined;
                        break;
                    case 1:
                        messageParams = computeSingleParam(parameterStructures, args[paramStart]);
                        break;
                    default:
                        if (parameterStructures === messages_1.ParameterStructures.byName) {
                            throw new Error(`Received ${numberOfParams} parameters for 'by Name' notification parameter structure.`);
                        }
                        messageParams = args.slice(paramStart, paramEnd).map(value => undefinedToNull(value));
                        break;
                }
            }
            else {
                const params = args;
                method = type.method;
                messageParams = computeMessageParams(type, params);
            }
            const notificationMessage = {
                jsonrpc: version,
                method: method,
                params: messageParams
            };
            traceSendingNotification(notificationMessage);
            return messageWriter.write(notificationMessage).catch((error) => {
                logger.error(`Sending notification failed.`);
                throw error;
            });
        },
        onNotification: (type, handler) => {
            throwIfClosedOrDisposed();
            let method;
            if (Is.func(type)) {
                starNotificationHandler = type;
            }
            else if (handler) {
                if (Is.string(type)) {
                    method = type;
                    notificationHandlers.set(type, { type: undefined, handler });
                }
                else {
                    method = type.method;
                    notificationHandlers.set(type.method, { type, handler });
                }
            }
            return {
                dispose: () => {
                    if (method !== undefined) {
                        notificationHandlers.delete(method);
                    }
                    else {
                        starNotificationHandler = undefined;
                    }
                }
            };
        },
        onProgress: (_type, token, handler) => {
            if (progressHandlers.has(token)) {
                throw new Error(`Progress handler for token ${token} already registered`);
            }
            progressHandlers.set(token, handler);
            return {
                dispose: () => {
                    progressHandlers.delete(token);
                }
            };
        },
        sendProgress: (_type, token, value) => {
            // This should not await but simple return to ensure that we don't have another
            // async scheduling. Otherwise one send could overtake another send.
            return connection.sendNotification(ProgressNotification.type, { token, value });
        },
        onUnhandledProgress: unhandledProgressEmitter.event,
        sendRequest: (type, ...args) => {
            throwIfClosedOrDisposed();
            throwIfNotListening();
            let method;
            let messageParams;
            let token = undefined;
            if (Is.string(type)) {
                method = type;
                const first = args[0];
                const last = args[args.length - 1];
                let paramStart = 0;
                let parameterStructures = messages_1.ParameterStructures.auto;
                if (messages_1.ParameterStructures.is(first)) {
                    paramStart = 1;
                    parameterStructures = first;
                }
                let paramEnd = args.length;
                if (cancellation_1.CancellationToken.is(last)) {
                    paramEnd = paramEnd - 1;
                    token = last;
                }
                const numberOfParams = paramEnd - paramStart;
                switch (numberOfParams) {
                    case 0:
                        messageParams = undefined;
                        break;
                    case 1:
                        messageParams = computeSingleParam(parameterStructures, args[paramStart]);
                        break;
                    default:
                        if (parameterStructures === messages_1.ParameterStructures.byName) {
                            throw new Error(`Received ${numberOfParams} parameters for 'by Name' request parameter structure.`);
                        }
                        messageParams = args.slice(paramStart, paramEnd).map(value => undefinedToNull(value));
                        break;
                }
            }
            else {
                const params = args;
                method = type.method;
                messageParams = computeMessageParams(type, params);
                const numberOfParams = type.numberOfParams;
                token = cancellation_1.CancellationToken.is(params[numberOfParams]) ? params[numberOfParams] : undefined;
            }
            const id = sequenceNumber++;
            let disposable;
            if (token) {
                disposable = token.onCancellationRequested(() => {
                    const p = cancellationStrategy.sender.sendCancellation(connection, id);
                    if (p === undefined) {
                        logger.log(`Received no promise from cancellation strategy when cancelling id ${id}`);
                        return Promise.resolve();
                    }
                    else {
                        return p.catch(() => {
                            logger.log(`Sending cancellation messages for id ${id} failed`);
                        });
                    }
                });
            }
            const requestMessage = {
                jsonrpc: version,
                id: id,
                method: method,
                params: messageParams
            };
            traceSendingRequest(requestMessage);
            if (typeof cancellationStrategy.sender.enableCancellation === 'function') {
                cancellationStrategy.sender.enableCancellation(requestMessage);
            }
            return new Promise(async (resolve, reject) => {
                const resolveWithCleanup = (r) => {
                    resolve(r);
                    cancellationStrategy.sender.cleanup(id);
                    disposable?.dispose();
                };
                const rejectWithCleanup = (r) => {
                    reject(r);
                    cancellationStrategy.sender.cleanup(id);
                    disposable?.dispose();
                };
                const responsePromise = { method: method, timerStart: Date.now(), resolve: resolveWithCleanup, reject: rejectWithCleanup };
                try {
                    await messageWriter.write(requestMessage);
                    responsePromises.set(id, responsePromise);
                }
                catch (error) {
                    logger.error(`Sending request failed.`);
                    // Writing the message failed. So we need to reject the promise.
                    responsePromise.reject(new messages_1.ResponseError(messages_1.ErrorCodes.MessageWriteError, error.message ? error.message : 'Unknown reason'));
                    throw error;
                }
            });
        },
        onRequest: (type, handler) => {
            throwIfClosedOrDisposed();
            let method = null;
            if (StarRequestHandler.is(type)) {
                method = undefined;
                starRequestHandler = type;
            }
            else if (Is.string(type)) {
                method = null;
                if (handler !== undefined) {
                    method = type;
                    requestHandlers.set(type, { handler: handler, type: undefined });
                }
            }
            else {
                if (handler !== undefined) {
                    method = type.method;
                    requestHandlers.set(type.method, { type, handler });
                }
            }
            return {
                dispose: () => {
                    if (method === null) {
                        return;
                    }
                    if (method !== undefined) {
                        requestHandlers.delete(method);
                    }
                    else {
                        starRequestHandler = undefined;
                    }
                }
            };
        },
        hasPendingResponse: () => {
            return responsePromises.size > 0;
        },
        trace: async (_value, _tracer, sendNotificationOrTraceOptions) => {
            let _sendNotification = false;
            let _traceFormat = TraceFormat.Text;
            if (sendNotificationOrTraceOptions !== undefined) {
                if (Is.boolean(sendNotificationOrTraceOptions)) {
                    _sendNotification = sendNotificationOrTraceOptions;
                }
                else {
                    _sendNotification = sendNotificationOrTraceOptions.sendNotification || false;
                    _traceFormat = sendNotificationOrTraceOptions.traceFormat || TraceFormat.Text;
                }
            }
            trace = _value;
            traceFormat = _traceFormat;
            if (trace === Trace.Off) {
                tracer = undefined;
            }
            else {
                tracer = _tracer;
            }
            if (_sendNotification && !isClosed() && !isDisposed()) {
                await connection.sendNotification(SetTraceNotification.type, { value: Trace.toString(_value) });
            }
        },
        onError: errorEmitter.event,
        onClose: closeEmitter.event,
        onUnhandledNotification: unhandledNotificationEmitter.event,
        onDispose: disposeEmitter.event,
        end: () => {
            messageWriter.end();
        },
        dispose: () => {
            if (isDisposed()) {
                return;
            }
            state = ConnectionState.Disposed;
            disposeEmitter.fire(undefined);
            const error = new messages_1.ResponseError(messages_1.ErrorCodes.PendingResponseRejected, 'Pending response rejected since connection got disposed');
            for (const promise of responsePromises.values()) {
                promise.reject(error);
            }
            responsePromises = new Map();
            requestTokens = new Map();
            knownCanceledRequests = new Set();
            messageQueue = new linkedMap_1.LinkedMap();
            // Test for backwards compatibility
            if (Is.func(messageWriter.dispose)) {
                messageWriter.dispose();
            }
            if (Is.func(messageReader.dispose)) {
                messageReader.dispose();
            }
        },
        listen: () => {
            throwIfClosedOrDisposed();
            throwIfListening();
            state = ConnectionState.Listening;
            messageReader.listen(callback);
        },
        inspect: () => {
            // eslint-disable-next-line no-console
            (0, ral_1.default)().console.log('inspect');
        }
    };
    connection.onNotification(LogTraceNotification.type, (params) => {
        if (trace === Trace.Off || !tracer) {
            return;
        }
        const verbose = trace === Trace.Verbose || trace === Trace.Compact;
        tracer.log(params.message, verbose ? params.verbose : undefined);
    });
    connection.onNotification(ProgressNotification.type, (params) => {
        const handler = progressHandlers.get(params.token);
        if (handler) {
            handler(params.value);
        }
        else {
            unhandledProgressEmitter.fire(params);
        }
    });
    return connection;
}
exports.createMessageConnection = createMessageConnection;


/***/ }),

/***/ "../../node_modules/vscode-jsonrpc/lib/common/disposable.js":
/*!******************************************************************!*\
  !*** ../../node_modules/vscode-jsonrpc/lib/common/disposable.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Disposable = void 0;
var Disposable;
(function (Disposable) {
    function create(func) {
        return {
            dispose: func
        };
    }
    Disposable.create = create;
})(Disposable = exports.Disposable || (exports.Disposable = {}));


/***/ }),

/***/ "../../node_modules/vscode-jsonrpc/lib/common/events.js":
/*!**************************************************************!*\
  !*** ../../node_modules/vscode-jsonrpc/lib/common/events.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/* --------------------------------------------------------------------------------------------
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 * ------------------------------------------------------------------------------------------ */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Emitter = exports.Event = void 0;
const ral_1 = __webpack_require__(/*! ./ral */ "../../node_modules/vscode-jsonrpc/lib/common/ral.js");
var Event;
(function (Event) {
    const _disposable = { dispose() { } };
    Event.None = function () { return _disposable; };
})(Event = exports.Event || (exports.Event = {}));
class CallbackList {
    add(callback, context = null, bucket) {
        if (!this._callbacks) {
            this._callbacks = [];
            this._contexts = [];
        }
        this._callbacks.push(callback);
        this._contexts.push(context);
        if (Array.isArray(bucket)) {
            bucket.push({ dispose: () => this.remove(callback, context) });
        }
    }
    remove(callback, context = null) {
        if (!this._callbacks) {
            return;
        }
        let foundCallbackWithDifferentContext = false;
        for (let i = 0, len = this._callbacks.length; i < len; i++) {
            if (this._callbacks[i] === callback) {
                if (this._contexts[i] === context) {
                    // callback & context match => remove it
                    this._callbacks.splice(i, 1);
                    this._contexts.splice(i, 1);
                    return;
                }
                else {
                    foundCallbackWithDifferentContext = true;
                }
            }
        }
        if (foundCallbackWithDifferentContext) {
            throw new Error('When adding a listener with a context, you should remove it with the same context');
        }
    }
    invoke(...args) {
        if (!this._callbacks) {
            return [];
        }
        const ret = [], callbacks = this._callbacks.slice(0), contexts = this._contexts.slice(0);
        for (let i = 0, len = callbacks.length; i < len; i++) {
            try {
                ret.push(callbacks[i].apply(contexts[i], args));
            }
            catch (e) {
                // eslint-disable-next-line no-console
                (0, ral_1.default)().console.error(e);
            }
        }
        return ret;
    }
    isEmpty() {
        return !this._callbacks || this._callbacks.length === 0;
    }
    dispose() {
        this._callbacks = undefined;
        this._contexts = undefined;
    }
}
class Emitter {
    constructor(_options) {
        this._options = _options;
    }
    /**
     * For the public to allow to subscribe
     * to events from this Emitter
     */
    get event() {
        if (!this._event) {
            this._event = (listener, thisArgs, disposables) => {
                if (!this._callbacks) {
                    this._callbacks = new CallbackList();
                }
                if (this._options && this._options.onFirstListenerAdd && this._callbacks.isEmpty()) {
                    this._options.onFirstListenerAdd(this);
                }
                this._callbacks.add(listener, thisArgs);
                const result = {
                    dispose: () => {
                        if (!this._callbacks) {
                            // disposable is disposed after emitter is disposed.
                            return;
                        }
                        this._callbacks.remove(listener, thisArgs);
                        result.dispose = Emitter._noop;
                        if (this._options && this._options.onLastListenerRemove && this._callbacks.isEmpty()) {
                            this._options.onLastListenerRemove(this);
                        }
                    }
                };
                if (Array.isArray(disposables)) {
                    disposables.push(result);
                }
                return result;
            };
        }
        return this._event;
    }
    /**
     * To be kept private to fire an event to
     * subscribers
     */
    fire(event) {
        if (this._callbacks) {
            this._callbacks.invoke.call(this._callbacks, event);
        }
    }
    dispose() {
        if (this._callbacks) {
            this._callbacks.dispose();
            this._callbacks = undefined;
        }
    }
}
exports.Emitter = Emitter;
Emitter._noop = function () { };


/***/ }),

/***/ "../../node_modules/vscode-jsonrpc/lib/common/is.js":
/*!**********************************************************!*\
  !*** ../../node_modules/vscode-jsonrpc/lib/common/is.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

/* --------------------------------------------------------------------------------------------
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 * ------------------------------------------------------------------------------------------ */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.stringArray = exports.array = exports.func = exports.error = exports.number = exports.string = exports.boolean = void 0;
function boolean(value) {
    return value === true || value === false;
}
exports.boolean = boolean;
function string(value) {
    return typeof value === 'string' || value instanceof String;
}
exports.string = string;
function number(value) {
    return typeof value === 'number' || value instanceof Number;
}
exports.number = number;
function error(value) {
    return value instanceof Error;
}
exports.error = error;
function func(value) {
    return typeof value === 'function';
}
exports.func = func;
function array(value) {
    return Array.isArray(value);
}
exports.array = array;
function stringArray(value) {
    return array(value) && value.every(elem => string(elem));
}
exports.stringArray = stringArray;


/***/ }),

/***/ "../../node_modules/vscode-jsonrpc/lib/common/linkedMap.js":
/*!*****************************************************************!*\
  !*** ../../node_modules/vscode-jsonrpc/lib/common/linkedMap.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
var _a;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.LRUCache = exports.LinkedMap = exports.Touch = void 0;
var Touch;
(function (Touch) {
    Touch.None = 0;
    Touch.First = 1;
    Touch.AsOld = Touch.First;
    Touch.Last = 2;
    Touch.AsNew = Touch.Last;
})(Touch = exports.Touch || (exports.Touch = {}));
class LinkedMap {
    constructor() {
        this[_a] = 'LinkedMap';
        this._map = new Map();
        this._head = undefined;
        this._tail = undefined;
        this._size = 0;
        this._state = 0;
    }
    clear() {
        this._map.clear();
        this._head = undefined;
        this._tail = undefined;
        this._size = 0;
        this._state++;
    }
    isEmpty() {
        return !this._head && !this._tail;
    }
    get size() {
        return this._size;
    }
    get first() {
        return this._head?.value;
    }
    get last() {
        return this._tail?.value;
    }
    has(key) {
        return this._map.has(key);
    }
    get(key, touch = Touch.None) {
        const item = this._map.get(key);
        if (!item) {
            return undefined;
        }
        if (touch !== Touch.None) {
            this.touch(item, touch);
        }
        return item.value;
    }
    set(key, value, touch = Touch.None) {
        let item = this._map.get(key);
        if (item) {
            item.value = value;
            if (touch !== Touch.None) {
                this.touch(item, touch);
            }
        }
        else {
            item = { key, value, next: undefined, previous: undefined };
            switch (touch) {
                case Touch.None:
                    this.addItemLast(item);
                    break;
                case Touch.First:
                    this.addItemFirst(item);
                    break;
                case Touch.Last:
                    this.addItemLast(item);
                    break;
                default:
                    this.addItemLast(item);
                    break;
            }
            this._map.set(key, item);
            this._size++;
        }
        return this;
    }
    delete(key) {
        return !!this.remove(key);
    }
    remove(key) {
        const item = this._map.get(key);
        if (!item) {
            return undefined;
        }
        this._map.delete(key);
        this.removeItem(item);
        this._size--;
        return item.value;
    }
    shift() {
        if (!this._head && !this._tail) {
            return undefined;
        }
        if (!this._head || !this._tail) {
            throw new Error('Invalid list');
        }
        const item = this._head;
        this._map.delete(item.key);
        this.removeItem(item);
        this._size--;
        return item.value;
    }
    forEach(callbackfn, thisArg) {
        const state = this._state;
        let current = this._head;
        while (current) {
            if (thisArg) {
                callbackfn.bind(thisArg)(current.value, current.key, this);
            }
            else {
                callbackfn(current.value, current.key, this);
            }
            if (this._state !== state) {
                throw new Error(`LinkedMap got modified during iteration.`);
            }
            current = current.next;
        }
    }
    keys() {
        const state = this._state;
        let current = this._head;
        const iterator = {
            [Symbol.iterator]: () => {
                return iterator;
            },
            next: () => {
                if (this._state !== state) {
                    throw new Error(`LinkedMap got modified during iteration.`);
                }
                if (current) {
                    const result = { value: current.key, done: false };
                    current = current.next;
                    return result;
                }
                else {
                    return { value: undefined, done: true };
                }
            }
        };
        return iterator;
    }
    values() {
        const state = this._state;
        let current = this._head;
        const iterator = {
            [Symbol.iterator]: () => {
                return iterator;
            },
            next: () => {
                if (this._state !== state) {
                    throw new Error(`LinkedMap got modified during iteration.`);
                }
                if (current) {
                    const result = { value: current.value, done: false };
                    current = current.next;
                    return result;
                }
                else {
                    return { value: undefined, done: true };
                }
            }
        };
        return iterator;
    }
    entries() {
        const state = this._state;
        let current = this._head;
        const iterator = {
            [Symbol.iterator]: () => {
                return iterator;
            },
            next: () => {
                if (this._state !== state) {
                    throw new Error(`LinkedMap got modified during iteration.`);
                }
                if (current) {
                    const result = { value: [current.key, current.value], done: false };
                    current = current.next;
                    return result;
                }
                else {
                    return { value: undefined, done: true };
                }
            }
        };
        return iterator;
    }
    [(_a = Symbol.toStringTag, Symbol.iterator)]() {
        return this.entries();
    }
    trimOld(newSize) {
        if (newSize >= this.size) {
            return;
        }
        if (newSize === 0) {
            this.clear();
            return;
        }
        let current = this._head;
        let currentSize = this.size;
        while (current && currentSize > newSize) {
            this._map.delete(current.key);
            current = current.next;
            currentSize--;
        }
        this._head = current;
        this._size = currentSize;
        if (current) {
            current.previous = undefined;
        }
        this._state++;
    }
    addItemFirst(item) {
        // First time Insert
        if (!this._head && !this._tail) {
            this._tail = item;
        }
        else if (!this._head) {
            throw new Error('Invalid list');
        }
        else {
            item.next = this._head;
            this._head.previous = item;
        }
        this._head = item;
        this._state++;
    }
    addItemLast(item) {
        // First time Insert
        if (!this._head && !this._tail) {
            this._head = item;
        }
        else if (!this._tail) {
            throw new Error('Invalid list');
        }
        else {
            item.previous = this._tail;
            this._tail.next = item;
        }
        this._tail = item;
        this._state++;
    }
    removeItem(item) {
        if (item === this._head && item === this._tail) {
            this._head = undefined;
            this._tail = undefined;
        }
        else if (item === this._head) {
            // This can only happened if size === 1 which is handle
            // by the case above.
            if (!item.next) {
                throw new Error('Invalid list');
            }
            item.next.previous = undefined;
            this._head = item.next;
        }
        else if (item === this._tail) {
            // This can only happened if size === 1 which is handle
            // by the case above.
            if (!item.previous) {
                throw new Error('Invalid list');
            }
            item.previous.next = undefined;
            this._tail = item.previous;
        }
        else {
            const next = item.next;
            const previous = item.previous;
            if (!next || !previous) {
                throw new Error('Invalid list');
            }
            next.previous = previous;
            previous.next = next;
        }
        item.next = undefined;
        item.previous = undefined;
        this._state++;
    }
    touch(item, touch) {
        if (!this._head || !this._tail) {
            throw new Error('Invalid list');
        }
        if ((touch !== Touch.First && touch !== Touch.Last)) {
            return;
        }
        if (touch === Touch.First) {
            if (item === this._head) {
                return;
            }
            const next = item.next;
            const previous = item.previous;
            // Unlink the item
            if (item === this._tail) {
                // previous must be defined since item was not head but is tail
                // So there are more than on item in the map
                previous.next = undefined;
                this._tail = previous;
            }
            else {
                // Both next and previous are not undefined since item was neither head nor tail.
                next.previous = previous;
                previous.next = next;
            }
            // Insert the node at head
            item.previous = undefined;
            item.next = this._head;
            this._head.previous = item;
            this._head = item;
            this._state++;
        }
        else if (touch === Touch.Last) {
            if (item === this._tail) {
                return;
            }
            const next = item.next;
            const previous = item.previous;
            // Unlink the item.
            if (item === this._head) {
                // next must be defined since item was not tail but is head
                // So there are more than on item in the map
                next.previous = undefined;
                this._head = next;
            }
            else {
                // Both next and previous are not undefined since item was neither head nor tail.
                next.previous = previous;
                previous.next = next;
            }
            item.next = undefined;
            item.previous = this._tail;
            this._tail.next = item;
            this._tail = item;
            this._state++;
        }
    }
    toJSON() {
        const data = [];
        this.forEach((value, key) => {
            data.push([key, value]);
        });
        return data;
    }
    fromJSON(data) {
        this.clear();
        for (const [key, value] of data) {
            this.set(key, value);
        }
    }
}
exports.LinkedMap = LinkedMap;
class LRUCache extends LinkedMap {
    constructor(limit, ratio = 1) {
        super();
        this._limit = limit;
        this._ratio = Math.min(Math.max(0, ratio), 1);
    }
    get limit() {
        return this._limit;
    }
    set limit(limit) {
        this._limit = limit;
        this.checkTrim();
    }
    get ratio() {
        return this._ratio;
    }
    set ratio(ratio) {
        this._ratio = Math.min(Math.max(0, ratio), 1);
        this.checkTrim();
    }
    get(key, touch = Touch.AsNew) {
        return super.get(key, touch);
    }
    peek(key) {
        return super.get(key, Touch.None);
    }
    set(key, value) {
        super.set(key, value, Touch.Last);
        this.checkTrim();
        return this;
    }
    checkTrim() {
        if (this.size > this._limit) {
            this.trimOld(Math.round(this._limit * this._ratio));
        }
    }
}
exports.LRUCache = LRUCache;


/***/ }),

/***/ "../../node_modules/vscode-jsonrpc/lib/common/messageBuffer.js":
/*!*********************************************************************!*\
  !*** ../../node_modules/vscode-jsonrpc/lib/common/messageBuffer.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AbstractMessageBuffer = void 0;
const CR = 13;
const LF = 10;
const CRLF = '\r\n';
class AbstractMessageBuffer {
    constructor(encoding = 'utf-8') {
        this._encoding = encoding;
        this._chunks = [];
        this._totalLength = 0;
    }
    get encoding() {
        return this._encoding;
    }
    append(chunk) {
        const toAppend = typeof chunk === 'string' ? this.fromString(chunk, this._encoding) : chunk;
        this._chunks.push(toAppend);
        this._totalLength += toAppend.byteLength;
    }
    tryReadHeaders(lowerCaseKeys = false) {
        if (this._chunks.length === 0) {
            return undefined;
        }
        let state = 0;
        let chunkIndex = 0;
        let offset = 0;
        let chunkBytesRead = 0;
        row: while (chunkIndex < this._chunks.length) {
            const chunk = this._chunks[chunkIndex];
            offset = 0;
            column: while (offset < chunk.length) {
                const value = chunk[offset];
                switch (value) {
                    case CR:
                        switch (state) {
                            case 0:
                                state = 1;
                                break;
                            case 2:
                                state = 3;
                                break;
                            default:
                                state = 0;
                        }
                        break;
                    case LF:
                        switch (state) {
                            case 1:
                                state = 2;
                                break;
                            case 3:
                                state = 4;
                                offset++;
                                break row;
                            default:
                                state = 0;
                        }
                        break;
                    default:
                        state = 0;
                }
                offset++;
            }
            chunkBytesRead += chunk.byteLength;
            chunkIndex++;
        }
        if (state !== 4) {
            return undefined;
        }
        // The buffer contains the two CRLF at the end. So we will
        // have two empty lines after the split at the end as well.
        const buffer = this._read(chunkBytesRead + offset);
        const result = new Map();
        const headers = this.toString(buffer, 'ascii').split(CRLF);
        if (headers.length < 2) {
            return result;
        }
        for (let i = 0; i < headers.length - 2; i++) {
            const header = headers[i];
            const index = header.indexOf(':');
            if (index === -1) {
                throw new Error('Message header must separate key and value using :');
            }
            const key = header.substr(0, index);
            const value = header.substr(index + 1).trim();
            result.set(lowerCaseKeys ? key.toLowerCase() : key, value);
        }
        return result;
    }
    tryReadBody(length) {
        if (this._totalLength < length) {
            return undefined;
        }
        return this._read(length);
    }
    get numberOfBytes() {
        return this._totalLength;
    }
    _read(byteCount) {
        if (byteCount === 0) {
            return this.emptyBuffer();
        }
        if (byteCount > this._totalLength) {
            throw new Error(`Cannot read so many bytes!`);
        }
        if (this._chunks[0].byteLength === byteCount) {
            // super fast path, precisely first chunk must be returned
            const chunk = this._chunks[0];
            this._chunks.shift();
            this._totalLength -= byteCount;
            return this.asNative(chunk);
        }
        if (this._chunks[0].byteLength > byteCount) {
            // fast path, the reading is entirely within the first chunk
            const chunk = this._chunks[0];
            const result = this.asNative(chunk, byteCount);
            this._chunks[0] = chunk.slice(byteCount);
            this._totalLength -= byteCount;
            return result;
        }
        const result = this.allocNative(byteCount);
        let resultOffset = 0;
        let chunkIndex = 0;
        while (byteCount > 0) {
            const chunk = this._chunks[chunkIndex];
            if (chunk.byteLength > byteCount) {
                // this chunk will survive
                const chunkPart = chunk.slice(0, byteCount);
                result.set(chunkPart, resultOffset);
                resultOffset += byteCount;
                this._chunks[chunkIndex] = chunk.slice(byteCount);
                this._totalLength -= byteCount;
                byteCount -= byteCount;
            }
            else {
                // this chunk will be entirely read
                result.set(chunk, resultOffset);
                resultOffset += chunk.byteLength;
                this._chunks.shift();
                this._totalLength -= chunk.byteLength;
                byteCount -= chunk.byteLength;
            }
        }
        return result;
    }
}
exports.AbstractMessageBuffer = AbstractMessageBuffer;


/***/ }),

/***/ "../../node_modules/vscode-jsonrpc/lib/common/messageReader.js":
/*!*********************************************************************!*\
  !*** ../../node_modules/vscode-jsonrpc/lib/common/messageReader.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/* --------------------------------------------------------------------------------------------
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 * ------------------------------------------------------------------------------------------ */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ReadableStreamMessageReader = exports.AbstractMessageReader = exports.MessageReader = void 0;
const ral_1 = __webpack_require__(/*! ./ral */ "../../node_modules/vscode-jsonrpc/lib/common/ral.js");
const Is = __webpack_require__(/*! ./is */ "../../node_modules/vscode-jsonrpc/lib/common/is.js");
const events_1 = __webpack_require__(/*! ./events */ "../../node_modules/vscode-jsonrpc/lib/common/events.js");
const semaphore_1 = __webpack_require__(/*! ./semaphore */ "../../node_modules/vscode-jsonrpc/lib/common/semaphore.js");
var MessageReader;
(function (MessageReader) {
    function is(value) {
        let candidate = value;
        return candidate && Is.func(candidate.listen) && Is.func(candidate.dispose) &&
            Is.func(candidate.onError) && Is.func(candidate.onClose) && Is.func(candidate.onPartialMessage);
    }
    MessageReader.is = is;
})(MessageReader = exports.MessageReader || (exports.MessageReader = {}));
class AbstractMessageReader {
    constructor() {
        this.errorEmitter = new events_1.Emitter();
        this.closeEmitter = new events_1.Emitter();
        this.partialMessageEmitter = new events_1.Emitter();
    }
    dispose() {
        this.errorEmitter.dispose();
        this.closeEmitter.dispose();
    }
    get onError() {
        return this.errorEmitter.event;
    }
    fireError(error) {
        this.errorEmitter.fire(this.asError(error));
    }
    get onClose() {
        return this.closeEmitter.event;
    }
    fireClose() {
        this.closeEmitter.fire(undefined);
    }
    get onPartialMessage() {
        return this.partialMessageEmitter.event;
    }
    firePartialMessage(info) {
        this.partialMessageEmitter.fire(info);
    }
    asError(error) {
        if (error instanceof Error) {
            return error;
        }
        else {
            return new Error(`Reader received error. Reason: ${Is.string(error.message) ? error.message : 'unknown'}`);
        }
    }
}
exports.AbstractMessageReader = AbstractMessageReader;
var ResolvedMessageReaderOptions;
(function (ResolvedMessageReaderOptions) {
    function fromOptions(options) {
        let charset;
        let result;
        let contentDecoder;
        const contentDecoders = new Map();
        let contentTypeDecoder;
        const contentTypeDecoders = new Map();
        if (options === undefined || typeof options === 'string') {
            charset = options ?? 'utf-8';
        }
        else {
            charset = options.charset ?? 'utf-8';
            if (options.contentDecoder !== undefined) {
                contentDecoder = options.contentDecoder;
                contentDecoders.set(contentDecoder.name, contentDecoder);
            }
            if (options.contentDecoders !== undefined) {
                for (const decoder of options.contentDecoders) {
                    contentDecoders.set(decoder.name, decoder);
                }
            }
            if (options.contentTypeDecoder !== undefined) {
                contentTypeDecoder = options.contentTypeDecoder;
                contentTypeDecoders.set(contentTypeDecoder.name, contentTypeDecoder);
            }
            if (options.contentTypeDecoders !== undefined) {
                for (const decoder of options.contentTypeDecoders) {
                    contentTypeDecoders.set(decoder.name, decoder);
                }
            }
        }
        if (contentTypeDecoder === undefined) {
            contentTypeDecoder = (0, ral_1.default)().applicationJson.decoder;
            contentTypeDecoders.set(contentTypeDecoder.name, contentTypeDecoder);
        }
        return { charset, contentDecoder, contentDecoders, contentTypeDecoder, contentTypeDecoders };
    }
    ResolvedMessageReaderOptions.fromOptions = fromOptions;
})(ResolvedMessageReaderOptions || (ResolvedMessageReaderOptions = {}));
class ReadableStreamMessageReader extends AbstractMessageReader {
    constructor(readable, options) {
        super();
        this.readable = readable;
        this.options = ResolvedMessageReaderOptions.fromOptions(options);
        this.buffer = (0, ral_1.default)().messageBuffer.create(this.options.charset);
        this._partialMessageTimeout = 10000;
        this.nextMessageLength = -1;
        this.messageToken = 0;
        this.readSemaphore = new semaphore_1.Semaphore(1);
    }
    set partialMessageTimeout(timeout) {
        this._partialMessageTimeout = timeout;
    }
    get partialMessageTimeout() {
        return this._partialMessageTimeout;
    }
    listen(callback) {
        this.nextMessageLength = -1;
        this.messageToken = 0;
        this.partialMessageTimer = undefined;
        this.callback = callback;
        const result = this.readable.onData((data) => {
            this.onData(data);
        });
        this.readable.onError((error) => this.fireError(error));
        this.readable.onClose(() => this.fireClose());
        return result;
    }
    onData(data) {
        this.buffer.append(data);
        while (true) {
            if (this.nextMessageLength === -1) {
                const headers = this.buffer.tryReadHeaders(true);
                if (!headers) {
                    return;
                }
                const contentLength = headers.get('content-length');
                if (!contentLength) {
                    this.fireError(new Error('Header must provide a Content-Length property.'));
                    return;
                }
                const length = parseInt(contentLength);
                if (isNaN(length)) {
                    this.fireError(new Error('Content-Length value must be a number.'));
                    return;
                }
                this.nextMessageLength = length;
            }
            const body = this.buffer.tryReadBody(this.nextMessageLength);
            if (body === undefined) {
                /** We haven't received the full message yet. */
                this.setPartialMessageTimer();
                return;
            }
            this.clearPartialMessageTimer();
            this.nextMessageLength = -1;
            // Make sure that we convert one received message after the
            // other. Otherwise it could happen that a decoding of a second
            // smaller message finished before the decoding of a first larger
            // message and then we would deliver the second message first.
            this.readSemaphore.lock(async () => {
                const bytes = this.options.contentDecoder !== undefined
                    ? await this.options.contentDecoder.decode(body)
                    : body;
                const message = await this.options.contentTypeDecoder.decode(bytes, this.options);
                this.callback(message);
            }).catch((error) => {
                this.fireError(error);
            });
        }
    }
    clearPartialMessageTimer() {
        if (this.partialMessageTimer) {
            this.partialMessageTimer.dispose();
            this.partialMessageTimer = undefined;
        }
    }
    setPartialMessageTimer() {
        this.clearPartialMessageTimer();
        if (this._partialMessageTimeout <= 0) {
            return;
        }
        this.partialMessageTimer = (0, ral_1.default)().timer.setTimeout((token, timeout) => {
            this.partialMessageTimer = undefined;
            if (token === this.messageToken) {
                this.firePartialMessage({ messageToken: token, waitingTime: timeout });
                this.setPartialMessageTimer();
            }
        }, this._partialMessageTimeout, this.messageToken, this._partialMessageTimeout);
    }
}
exports.ReadableStreamMessageReader = ReadableStreamMessageReader;


/***/ }),

/***/ "../../node_modules/vscode-jsonrpc/lib/common/messageWriter.js":
/*!*********************************************************************!*\
  !*** ../../node_modules/vscode-jsonrpc/lib/common/messageWriter.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/* --------------------------------------------------------------------------------------------
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 * ------------------------------------------------------------------------------------------ */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.WriteableStreamMessageWriter = exports.AbstractMessageWriter = exports.MessageWriter = void 0;
const ral_1 = __webpack_require__(/*! ./ral */ "../../node_modules/vscode-jsonrpc/lib/common/ral.js");
const Is = __webpack_require__(/*! ./is */ "../../node_modules/vscode-jsonrpc/lib/common/is.js");
const semaphore_1 = __webpack_require__(/*! ./semaphore */ "../../node_modules/vscode-jsonrpc/lib/common/semaphore.js");
const events_1 = __webpack_require__(/*! ./events */ "../../node_modules/vscode-jsonrpc/lib/common/events.js");
const ContentLength = 'Content-Length: ';
const CRLF = '\r\n';
var MessageWriter;
(function (MessageWriter) {
    function is(value) {
        let candidate = value;
        return candidate && Is.func(candidate.dispose) && Is.func(candidate.onClose) &&
            Is.func(candidate.onError) && Is.func(candidate.write);
    }
    MessageWriter.is = is;
})(MessageWriter = exports.MessageWriter || (exports.MessageWriter = {}));
class AbstractMessageWriter {
    constructor() {
        this.errorEmitter = new events_1.Emitter();
        this.closeEmitter = new events_1.Emitter();
    }
    dispose() {
        this.errorEmitter.dispose();
        this.closeEmitter.dispose();
    }
    get onError() {
        return this.errorEmitter.event;
    }
    fireError(error, message, count) {
        this.errorEmitter.fire([this.asError(error), message, count]);
    }
    get onClose() {
        return this.closeEmitter.event;
    }
    fireClose() {
        this.closeEmitter.fire(undefined);
    }
    asError(error) {
        if (error instanceof Error) {
            return error;
        }
        else {
            return new Error(`Writer received error. Reason: ${Is.string(error.message) ? error.message : 'unknown'}`);
        }
    }
}
exports.AbstractMessageWriter = AbstractMessageWriter;
var ResolvedMessageWriterOptions;
(function (ResolvedMessageWriterOptions) {
    function fromOptions(options) {
        if (options === undefined || typeof options === 'string') {
            return { charset: options ?? 'utf-8', contentTypeEncoder: (0, ral_1.default)().applicationJson.encoder };
        }
        else {
            return { charset: options.charset ?? 'utf-8', contentEncoder: options.contentEncoder, contentTypeEncoder: options.contentTypeEncoder ?? (0, ral_1.default)().applicationJson.encoder };
        }
    }
    ResolvedMessageWriterOptions.fromOptions = fromOptions;
})(ResolvedMessageWriterOptions || (ResolvedMessageWriterOptions = {}));
class WriteableStreamMessageWriter extends AbstractMessageWriter {
    constructor(writable, options) {
        super();
        this.writable = writable;
        this.options = ResolvedMessageWriterOptions.fromOptions(options);
        this.errorCount = 0;
        this.writeSemaphore = new semaphore_1.Semaphore(1);
        this.writable.onError((error) => this.fireError(error));
        this.writable.onClose(() => this.fireClose());
    }
    async write(msg) {
        return this.writeSemaphore.lock(async () => {
            const payload = this.options.contentTypeEncoder.encode(msg, this.options).then((buffer) => {
                if (this.options.contentEncoder !== undefined) {
                    return this.options.contentEncoder.encode(buffer);
                }
                else {
                    return buffer;
                }
            });
            return payload.then((buffer) => {
                const headers = [];
                headers.push(ContentLength, buffer.byteLength.toString(), CRLF);
                headers.push(CRLF);
                return this.doWrite(msg, headers, buffer);
            }, (error) => {
                this.fireError(error);
                throw error;
            });
        });
    }
    async doWrite(msg, headers, data) {
        try {
            await this.writable.write(headers.join(''), 'ascii');
            return this.writable.write(data);
        }
        catch (error) {
            this.handleError(error, msg);
            return Promise.reject(error);
        }
    }
    handleError(error, msg) {
        this.errorCount++;
        this.fireError(error, msg, this.errorCount);
    }
    end() {
        this.writable.end();
    }
}
exports.WriteableStreamMessageWriter = WriteableStreamMessageWriter;


/***/ }),

/***/ "../../node_modules/vscode-jsonrpc/lib/common/messages.js":
/*!****************************************************************!*\
  !*** ../../node_modules/vscode-jsonrpc/lib/common/messages.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/* --------------------------------------------------------------------------------------------
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 * ------------------------------------------------------------------------------------------ */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Message = exports.NotificationType9 = exports.NotificationType8 = exports.NotificationType7 = exports.NotificationType6 = exports.NotificationType5 = exports.NotificationType4 = exports.NotificationType3 = exports.NotificationType2 = exports.NotificationType1 = exports.NotificationType0 = exports.NotificationType = exports.RequestType9 = exports.RequestType8 = exports.RequestType7 = exports.RequestType6 = exports.RequestType5 = exports.RequestType4 = exports.RequestType3 = exports.RequestType2 = exports.RequestType1 = exports.RequestType = exports.RequestType0 = exports.AbstractMessageSignature = exports.ParameterStructures = exports.ResponseError = exports.ErrorCodes = void 0;
const is = __webpack_require__(/*! ./is */ "../../node_modules/vscode-jsonrpc/lib/common/is.js");
/**
 * Predefined error codes.
 */
var ErrorCodes;
(function (ErrorCodes) {
    // Defined by JSON RPC
    ErrorCodes.ParseError = -32700;
    ErrorCodes.InvalidRequest = -32600;
    ErrorCodes.MethodNotFound = -32601;
    ErrorCodes.InvalidParams = -32602;
    ErrorCodes.InternalError = -32603;
    /**
     * This is the start range of JSON RPC reserved error codes.
     * It doesn't denote a real error code. No application error codes should
     * be defined between the start and end range. For backwards
     * compatibility the `ServerNotInitialized` and the `UnknownErrorCode`
     * are left in the range.
     *
     * @since 3.16.0
    */
    ErrorCodes.jsonrpcReservedErrorRangeStart = -32099;
    /** @deprecated use  jsonrpcReservedErrorRangeStart */
    ErrorCodes.serverErrorStart = -32099;
    /**
     * An error occurred when write a message to the transport layer.
     */
    ErrorCodes.MessageWriteError = -32099;
    /**
     * An error occurred when reading a message from the transport layer.
     */
    ErrorCodes.MessageReadError = -32098;
    /**
     * The connection got disposed or lost and all pending responses got
     * rejected.
     */
    ErrorCodes.PendingResponseRejected = -32097;
    /**
     * The connection is inactive and a use of it failed.
     */
    ErrorCodes.ConnectionInactive = -32096;
    /**
     * Error code indicating that a server received a notification or
     * request before the server has received the `initialize` request.
     */
    ErrorCodes.ServerNotInitialized = -32002;
    ErrorCodes.UnknownErrorCode = -32001;
    /**
     * This is the end range of JSON RPC reserved error codes.
     * It doesn't denote a real error code.
     *
     * @since 3.16.0
    */
    ErrorCodes.jsonrpcReservedErrorRangeEnd = -32000;
    /** @deprecated use  jsonrpcReservedErrorRangeEnd */
    ErrorCodes.serverErrorEnd = -32000;
})(ErrorCodes = exports.ErrorCodes || (exports.ErrorCodes = {}));
/**
 * An error object return in a response in case a request
 * has failed.
 */
class ResponseError extends Error {
    constructor(code, message, data) {
        super(message);
        this.code = is.number(code) ? code : ErrorCodes.UnknownErrorCode;
        this.data = data;
        Object.setPrototypeOf(this, ResponseError.prototype);
    }
    toJson() {
        const result = {
            code: this.code,
            message: this.message
        };
        if (this.data !== undefined) {
            result.data = this.data;
        }
        return result;
    }
}
exports.ResponseError = ResponseError;
class ParameterStructures {
    constructor(kind) {
        this.kind = kind;
    }
    static is(value) {
        return value === ParameterStructures.auto || value === ParameterStructures.byName || value === ParameterStructures.byPosition;
    }
    toString() {
        return this.kind;
    }
}
exports.ParameterStructures = ParameterStructures;
/**
 * The parameter structure is automatically inferred on the number of parameters
 * and the parameter type in case of a single param.
 */
ParameterStructures.auto = new ParameterStructures('auto');
/**
 * Forces `byPosition` parameter structure. This is useful if you have a single
 * parameter which has a literal type.
 */
ParameterStructures.byPosition = new ParameterStructures('byPosition');
/**
 * Forces `byName` parameter structure. This is only useful when having a single
 * parameter. The library will report errors if used with a different number of
 * parameters.
 */
ParameterStructures.byName = new ParameterStructures('byName');
/**
 * An abstract implementation of a MessageType.
 */
class AbstractMessageSignature {
    constructor(method, numberOfParams) {
        this.method = method;
        this.numberOfParams = numberOfParams;
    }
    get parameterStructures() {
        return ParameterStructures.auto;
    }
}
exports.AbstractMessageSignature = AbstractMessageSignature;
/**
 * Classes to type request response pairs
 */
class RequestType0 extends AbstractMessageSignature {
    constructor(method) {
        super(method, 0);
    }
}
exports.RequestType0 = RequestType0;
class RequestType extends AbstractMessageSignature {
    constructor(method, _parameterStructures = ParameterStructures.auto) {
        super(method, 1);
        this._parameterStructures = _parameterStructures;
    }
    get parameterStructures() {
        return this._parameterStructures;
    }
}
exports.RequestType = RequestType;
class RequestType1 extends AbstractMessageSignature {
    constructor(method, _parameterStructures = ParameterStructures.auto) {
        super(method, 1);
        this._parameterStructures = _parameterStructures;
    }
    get parameterStructures() {
        return this._parameterStructures;
    }
}
exports.RequestType1 = RequestType1;
class RequestType2 extends AbstractMessageSignature {
    constructor(method) {
        super(method, 2);
    }
}
exports.RequestType2 = RequestType2;
class RequestType3 extends AbstractMessageSignature {
    constructor(method) {
        super(method, 3);
    }
}
exports.RequestType3 = RequestType3;
class RequestType4 extends AbstractMessageSignature {
    constructor(method) {
        super(method, 4);
    }
}
exports.RequestType4 = RequestType4;
class RequestType5 extends AbstractMessageSignature {
    constructor(method) {
        super(method, 5);
    }
}
exports.RequestType5 = RequestType5;
class RequestType6 extends AbstractMessageSignature {
    constructor(method) {
        super(method, 6);
    }
}
exports.RequestType6 = RequestType6;
class RequestType7 extends AbstractMessageSignature {
    constructor(method) {
        super(method, 7);
    }
}
exports.RequestType7 = RequestType7;
class RequestType8 extends AbstractMessageSignature {
    constructor(method) {
        super(method, 8);
    }
}
exports.RequestType8 = RequestType8;
class RequestType9 extends AbstractMessageSignature {
    constructor(method) {
        super(method, 9);
    }
}
exports.RequestType9 = RequestType9;
class NotificationType extends AbstractMessageSignature {
    constructor(method, _parameterStructures = ParameterStructures.auto) {
        super(method, 1);
        this._parameterStructures = _parameterStructures;
    }
    get parameterStructures() {
        return this._parameterStructures;
    }
}
exports.NotificationType = NotificationType;
class NotificationType0 extends AbstractMessageSignature {
    constructor(method) {
        super(method, 0);
    }
}
exports.NotificationType0 = NotificationType0;
class NotificationType1 extends AbstractMessageSignature {
    constructor(method, _parameterStructures = ParameterStructures.auto) {
        super(method, 1);
        this._parameterStructures = _parameterStructures;
    }
    get parameterStructures() {
        return this._parameterStructures;
    }
}
exports.NotificationType1 = NotificationType1;
class NotificationType2 extends AbstractMessageSignature {
    constructor(method) {
        super(method, 2);
    }
}
exports.NotificationType2 = NotificationType2;
class NotificationType3 extends AbstractMessageSignature {
    constructor(method) {
        super(method, 3);
    }
}
exports.NotificationType3 = NotificationType3;
class NotificationType4 extends AbstractMessageSignature {
    constructor(method) {
        super(method, 4);
    }
}
exports.NotificationType4 = NotificationType4;
class NotificationType5 extends AbstractMessageSignature {
    constructor(method) {
        super(method, 5);
    }
}
exports.NotificationType5 = NotificationType5;
class NotificationType6 extends AbstractMessageSignature {
    constructor(method) {
        super(method, 6);
    }
}
exports.NotificationType6 = NotificationType6;
class NotificationType7 extends AbstractMessageSignature {
    constructor(method) {
        super(method, 7);
    }
}
exports.NotificationType7 = NotificationType7;
class NotificationType8 extends AbstractMessageSignature {
    constructor(method) {
        super(method, 8);
    }
}
exports.NotificationType8 = NotificationType8;
class NotificationType9 extends AbstractMessageSignature {
    constructor(method) {
        super(method, 9);
    }
}
exports.NotificationType9 = NotificationType9;
var Message;
(function (Message) {
    /**
     * Tests if the given message is a request message
     */
    function isRequest(message) {
        const candidate = message;
        return candidate && is.string(candidate.method) && (is.string(candidate.id) || is.number(candidate.id));
    }
    Message.isRequest = isRequest;
    /**
     * Tests if the given message is a notification message
     */
    function isNotification(message) {
        const candidate = message;
        return candidate && is.string(candidate.method) && message.id === void 0;
    }
    Message.isNotification = isNotification;
    /**
     * Tests if the given message is a response message
     */
    function isResponse(message) {
        const candidate = message;
        return candidate && (candidate.result !== void 0 || !!candidate.error) && (is.string(candidate.id) || is.number(candidate.id) || candidate.id === null);
    }
    Message.isResponse = isResponse;
})(Message = exports.Message || (exports.Message = {}));


/***/ }),

/***/ "../../node_modules/vscode-jsonrpc/lib/common/ral.js":
/*!***********************************************************!*\
  !*** ../../node_modules/vscode-jsonrpc/lib/common/ral.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

/* --------------------------------------------------------------------------------------------
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 * ------------------------------------------------------------------------------------------ */
Object.defineProperty(exports, "__esModule", ({ value: true }));
let _ral;
function RAL() {
    if (_ral === undefined) {
        throw new Error(`No runtime abstraction layer installed`);
    }
    return _ral;
}
(function (RAL) {
    function install(ral) {
        if (ral === undefined) {
            throw new Error(`No runtime abstraction layer provided`);
        }
        _ral = ral;
    }
    RAL.install = install;
})(RAL || (RAL = {}));
exports["default"] = RAL;


/***/ }),

/***/ "../../node_modules/vscode-jsonrpc/lib/common/semaphore.js":
/*!*****************************************************************!*\
  !*** ../../node_modules/vscode-jsonrpc/lib/common/semaphore.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/* --------------------------------------------------------------------------------------------
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 * ------------------------------------------------------------------------------------------ */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Semaphore = void 0;
const ral_1 = __webpack_require__(/*! ./ral */ "../../node_modules/vscode-jsonrpc/lib/common/ral.js");
class Semaphore {
    constructor(capacity = 1) {
        if (capacity <= 0) {
            throw new Error('Capacity must be greater than 0');
        }
        this._capacity = capacity;
        this._active = 0;
        this._waiting = [];
    }
    lock(thunk) {
        return new Promise((resolve, reject) => {
            this._waiting.push({ thunk, resolve, reject });
            this.runNext();
        });
    }
    get active() {
        return this._active;
    }
    runNext() {
        if (this._waiting.length === 0 || this._active === this._capacity) {
            return;
        }
        (0, ral_1.default)().timer.setImmediate(() => this.doRunNext());
    }
    doRunNext() {
        if (this._waiting.length === 0 || this._active === this._capacity) {
            return;
        }
        const next = this._waiting.shift();
        this._active++;
        if (this._active > this._capacity) {
            throw new Error(`To many thunks active`);
        }
        try {
            const result = next.thunk();
            if (result instanceof Promise) {
                result.then((value) => {
                    this._active--;
                    next.resolve(value);
                    this.runNext();
                }, (err) => {
                    this._active--;
                    next.reject(err);
                    this.runNext();
                });
            }
            else {
                this._active--;
                next.resolve(result);
                this.runNext();
            }
        }
        catch (err) {
            this._active--;
            next.reject(err);
            this.runNext();
        }
    }
}
exports.Semaphore = Semaphore;


/***/ }),

/***/ "../../node_modules/vscode-jsonrpc/lib/common/sharedArrayCancellation.js":
/*!*******************************************************************************!*\
  !*** ../../node_modules/vscode-jsonrpc/lib/common/sharedArrayCancellation.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/* --------------------------------------------------------------------------------------------
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 * ------------------------------------------------------------------------------------------ */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SharedArrayReceiverStrategy = exports.SharedArraySenderStrategy = void 0;
const cancellation_1 = __webpack_require__(/*! ./cancellation */ "../../node_modules/vscode-jsonrpc/lib/common/cancellation.js");
var CancellationState;
(function (CancellationState) {
    CancellationState.Continue = 0;
    CancellationState.Cancelled = 1;
})(CancellationState || (CancellationState = {}));
class SharedArraySenderStrategy {
    constructor() {
        this.buffers = new Map();
    }
    enableCancellation(request) {
        if (request.id === null) {
            return;
        }
        const buffer = new SharedArrayBuffer(4);
        const data = new Int32Array(buffer, 0, 1);
        data[0] = CancellationState.Continue;
        this.buffers.set(request.id, buffer);
        request.$cancellationData = buffer;
    }
    async sendCancellation(_conn, id) {
        const buffer = this.buffers.get(id);
        if (buffer === undefined) {
            return;
        }
        const data = new Int32Array(buffer, 0, 1);
        Atomics.store(data, 0, CancellationState.Cancelled);
    }
    cleanup(id) {
        this.buffers.delete(id);
    }
    dispose() {
        this.buffers.clear();
    }
}
exports.SharedArraySenderStrategy = SharedArraySenderStrategy;
class SharedArrayBufferCancellationToken {
    constructor(buffer) {
        this.data = new Int32Array(buffer, 0, 1);
    }
    get isCancellationRequested() {
        return Atomics.load(this.data, 0) === CancellationState.Cancelled;
    }
    get onCancellationRequested() {
        throw new Error(`Cancellation over SharedArrayBuffer doesn't support cancellation events`);
    }
}
class SharedArrayBufferCancellationTokenSource {
    constructor(buffer) {
        this.token = new SharedArrayBufferCancellationToken(buffer);
    }
    cancel() {
    }
    dispose() {
    }
}
class SharedArrayReceiverStrategy {
    constructor() {
        this.kind = 'request';
    }
    createCancellationTokenSource(request) {
        const buffer = request.$cancellationData;
        if (buffer === undefined) {
            return new cancellation_1.CancellationTokenSource();
        }
        return new SharedArrayBufferCancellationTokenSource(buffer);
    }
}
exports.SharedArrayReceiverStrategy = SharedArrayReceiverStrategy;


/***/ }),

/***/ "../../packages/ide/lib/base/eclipse-glsp-diagram-server.js":
/*!******************************************************************!*\
  !*** ../../packages/ide/lib/base/eclipse-glsp-diagram-server.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.EclipseGLSPDiagramServer = void 0;
/********************************************************************************
 * Copyright (c) 2019-2022 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const client_1 = __webpack_require__(/*! @eclipse-glsp/client */ "../../node_modules/@eclipse-glsp/client/lib/index.js");
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
let EclipseGLSPDiagramServer = exports.EclipseGLSPDiagramServer = class EclipseGLSPDiagramServer extends client_1.GLSPDiagramServer {
    isServerStatusAction(action) {
        return client_1.ServerStatusAction.KIND === action.kind && 'severity' in action && 'message' in action;
    }
    handleLocally(action) {
        if (this.isServerStatusAction(action)) {
            return this.handleServerStatusAction(action);
        }
        return super.handleLocally(action);
    }
    handleServerStatusAction(_action) {
        /* send to server */
        return true;
    }
    handleServerMessageAction(_action) {
        /* send to server */
        return true;
    }
};
exports.EclipseGLSPDiagramServer = EclipseGLSPDiagramServer = __decorate([
    (0, inversify_1.injectable)()
], EclipseGLSPDiagramServer);


/***/ }),

/***/ "../../packages/ide/lib/features/copy-paste/copy-paste.js":
/*!****************************************************************!*\
  !*** ../../packages/ide/lib/features/copy-paste/copy-paste.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.EclipseCopyPasteActionHandler = void 0;
/********************************************************************************
 * Copyright (c) 2020-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const client_1 = __webpack_require__(/*! @eclipse-glsp/client */ "../../node_modules/@eclipse-glsp/client/lib/index.js");
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
// Eclipse-specific integration: in Eclipse, we trigger the Copy/Paste actions from
// the IDE Keybindings. We don't use the browser events. This is fine, because we
// don't need browser clipboard support (We use the Eclipse System Clipboard); so
// we don't need special permission from the Browser.
let EclipseCopyPasteActionHandler = exports.EclipseCopyPasteActionHandler = class EclipseCopyPasteActionHandler {
    handle(action) {
        switch (action.kind) {
            case 'invoke-copy':
                this.handleCopy();
                break;
            case 'invoke-paste':
                this.handlePaste();
                break;
            case 'invoke-cut':
                this.handleCut();
                break;
        }
    }
    handleCopy() {
        if (this.shouldCopy()) {
            this.actionDispatcher.request(client_1.RequestClipboardDataAction.create(this.editorContext.get()));
        }
        else {
            this.clipboardService.clear();
        }
    }
    handleCut() {
        if (this.shouldCopy()) {
            this.handleCopy();
            this.actionDispatcher.dispatch(client_1.CutOperation.create(this.editorContext.get()));
        }
    }
    handlePaste() {
        // In the Eclipse Integration case, the server manages its own clipboard.
        // Just pass an empty clipboard data to remain compliant with the API.
        const clipboardData = {};
        this.actionDispatcher.dispatch(client_1.PasteOperation.create({ clipboardData: clipboardData, editorContext: this.editorContext.get() }));
    }
    shouldCopy() {
        return this.editorContext.get().selectedElementIds.length > 0 && this.isDiagramActive();
    }
    isDiagramActive() {
        var _a, _b;
        return ((_b = (_a = document.activeElement) === null || _a === void 0 ? void 0 : _a.parentElement) === null || _b === void 0 ? void 0 : _b.id) === this.viewerOptions.baseDiv;
    }
};
__decorate([
    (0, inversify_1.inject)(client_1.TYPES.IActionDispatcher),
    __metadata("design:type", Object)
], EclipseCopyPasteActionHandler.prototype, "actionDispatcher", void 0);
__decorate([
    (0, inversify_1.inject)(client_1.TYPES.ViewerOptions),
    __metadata("design:type", Object)
], EclipseCopyPasteActionHandler.prototype, "viewerOptions", void 0);
__decorate([
    (0, inversify_1.inject)(client_1.TYPES.IAsyncClipboardService),
    __metadata("design:type", Object)
], EclipseCopyPasteActionHandler.prototype, "clipboardService", void 0);
__decorate([
    (0, inversify_1.inject)(client_1.EditorContextService),
    __metadata("design:type", client_1.EditorContextService)
], EclipseCopyPasteActionHandler.prototype, "editorContext", void 0);
exports.EclipseCopyPasteActionHandler = EclipseCopyPasteActionHandler = __decorate([
    (0, inversify_1.injectable)()
], EclipseCopyPasteActionHandler);


/***/ }),

/***/ "../../packages/ide/lib/features/copy-paste/di.config.js":
/*!***************************************************************!*\
  !*** ../../packages/ide/lib/features/copy-paste/di.config.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
/********************************************************************************
 * Copyright (c) 2020 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const client_1 = __webpack_require__(/*! @eclipse-glsp/client */ "../../node_modules/@eclipse-glsp/client/lib/index.js");
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const copy_paste_1 = __webpack_require__(/*! ./copy-paste */ "../../packages/ide/lib/features/copy-paste/copy-paste.js");
const eclipseCopyPasteModule = new inversify_1.ContainerModule((bind, _unbind, isBound) => {
    (0, client_1.configureActionHandler)({ bind, isBound }, 'invoke-copy', copy_paste_1.EclipseCopyPasteActionHandler);
    (0, client_1.configureActionHandler)({ bind, isBound }, 'invoke-cut', copy_paste_1.EclipseCopyPasteActionHandler);
    (0, client_1.configureActionHandler)({ bind, isBound }, 'invoke-paste', copy_paste_1.EclipseCopyPasteActionHandler);
});
exports["default"] = eclipseCopyPasteModule;


/***/ }),

/***/ "../../packages/ide/lib/features/invoke-delete/di.config.js":
/*!******************************************************************!*\
  !*** ../../packages/ide/lib/features/invoke-delete/di.config.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
/********************************************************************************
 * Copyright (c) 2020 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const client_1 = __webpack_require__(/*! @eclipse-glsp/client */ "../../node_modules/@eclipse-glsp/client/lib/index.js");
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
const invoke_delete_1 = __webpack_require__(/*! ./invoke-delete */ "../../packages/ide/lib/features/invoke-delete/invoke-delete.js");
const eclipseDeleteModule = new inversify_1.ContainerModule((bind, _unbind, isBound) => {
    (0, client_1.configureActionHandler)({ bind, isBound }, 'invoke-delete', invoke_delete_1.InvokeDeleteActionHandler);
});
exports["default"] = eclipseDeleteModule;


/***/ }),

/***/ "../../packages/ide/lib/features/invoke-delete/invoke-delete.js":
/*!**********************************************************************!*\
  !*** ../../packages/ide/lib/features/invoke-delete/invoke-delete.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.InvokeDeleteActionHandler = exports.isInvokeDeleteAction = exports.InvokeDeleteAction = void 0;
/********************************************************************************
 * Copyright (c) 2020-2021 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const client_1 = __webpack_require__(/*! @eclipse-glsp/client */ "../../node_modules/@eclipse-glsp/client/lib/index.js");
const inversify_1 = __webpack_require__(/*! inversify */ "../../node_modules/inversify/es/inversify.js");
class InvokeDeleteAction {
    constructor() {
        this.kind = InvokeDeleteAction.KIND;
    }
}
exports.InvokeDeleteAction = InvokeDeleteAction;
InvokeDeleteAction.KIND = 'invoke-delete';
function isInvokeDeleteAction(action) {
    return action.kind === InvokeDeleteAction.KIND;
}
exports.isInvokeDeleteAction = isInvokeDeleteAction;
let InvokeDeleteActionHandler = exports.InvokeDeleteActionHandler = class InvokeDeleteActionHandler {
    handle(action) {
        if (isInvokeDeleteAction(action)) {
            this.handleDelete();
        }
    }
    handleDelete() {
        this.actionDispatcher.dispatch(client_1.DeleteElementOperation.create(this.editorContext.get().selectedElementIds));
    }
};
__decorate([
    (0, inversify_1.inject)(client_1.TYPES.IActionDispatcher),
    __metadata("design:type", Object)
], InvokeDeleteActionHandler.prototype, "actionDispatcher", void 0);
__decorate([
    (0, inversify_1.inject)(client_1.EditorContextService),
    __metadata("design:type", client_1.EditorContextService)
], InvokeDeleteActionHandler.prototype, "editorContext", void 0);
exports.InvokeDeleteActionHandler = InvokeDeleteActionHandler = __decorate([
    (0, inversify_1.injectable)()
], InvokeDeleteActionHandler);


/***/ }),

/***/ "../../packages/ide/lib/index.js":
/*!***************************************!*\
  !*** ../../packages/ide/lib/index.js ***!
  \***************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.eclipseDeleteModule = exports.eclipseCopyPasteModule = void 0;
/********************************************************************************
 * Copyright (c) 2020-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const di_config_1 = __webpack_require__(/*! ./features/copy-paste/di.config */ "../../packages/ide/lib/features/copy-paste/di.config.js");
exports.eclipseCopyPasteModule = di_config_1.default;
const di_config_2 = __webpack_require__(/*! ./features/invoke-delete/di.config */ "../../packages/ide/lib/features/invoke-delete/di.config.js");
exports.eclipseDeleteModule = di_config_2.default;
__exportStar(__webpack_require__(/*! ./base/eclipse-glsp-diagram-server */ "../../packages/ide/lib/base/eclipse-glsp-diagram-server.js"), exports);
__exportStar(__webpack_require__(/*! ./utils/url-parameters */ "../../packages/ide/lib/utils/url-parameters.js"), exports);


/***/ }),

/***/ "../../packages/ide/lib/utils/url-parameters.js":
/*!******************************************************!*\
  !*** ../../packages/ide/lib/utils/url-parameters.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

/*
 * Copyright (C) 2017 TypeFox and others.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.getParameters = void 0;
function getParameters() {
    let search = window.location.search.substring(1);
    const result = {};
    while (search.length > 0) {
        const nextParamIndex = search.indexOf('&');
        let param;
        if (nextParamIndex < 0) {
            param = search;
            search = '';
        }
        else {
            param = search.substring(0, nextParamIndex);
            search = search.substring(nextParamIndex + 1);
        }
        const valueIndex = param.indexOf('=');
        if (valueIndex > 0 && valueIndex < param.length - 1) {
            result[param.substring(0, valueIndex)] = decodeURIComponent(param.substring(valueIndex + 1));
        }
    }
    return result;
}
exports.getParameters = getParameters;


/***/ }),

/***/ "./css/diagram.css":
/*!*************************!*\
  !*** ./css/diagram.css ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ "../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js");
/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/styleDomAPI.js */ "../../node_modules/style-loader/dist/runtime/styleDomAPI.js");
/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/insertBySelector.js */ "../../node_modules/style-loader/dist/runtime/insertBySelector.js");
/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js */ "../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js");
/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/insertStyleElement.js */ "../../node_modules/style-loader/dist/runtime/insertStyleElement.js");
/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/styleTagTransform.js */ "../../node_modules/style-loader/dist/runtime/styleTagTransform.js");
/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _node_modules_css_loader_dist_cjs_js_diagram_css__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! !!../../../node_modules/css-loader/dist/cjs.js!./diagram.css */ "../../node_modules/css-loader/dist/cjs.js!./css/diagram.css");

      
      
      
      
      
      
      
      
      

var options = {};

options.styleTagTransform = (_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default());
options.setAttributes = (_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default());

      options.insert = _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default().bind(null, "head");
    
options.domAPI = (_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default());
options.insertStyleElement = (_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default());

var update = _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_css_loader_dist_cjs_js_diagram_css__WEBPACK_IMPORTED_MODULE_6__["default"], options);




       /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_css_loader_dist_cjs_js_diagram_css__WEBPACK_IMPORTED_MODULE_6__["default"] && _node_modules_css_loader_dist_cjs_js_diagram_css__WEBPACK_IMPORTED_MODULE_6__["default"].locals ? _node_modules_css_loader_dist_cjs_js_diagram_css__WEBPACK_IMPORTED_MODULE_6__["default"].locals : undefined);


/***/ }),

/***/ "../../node_modules/@eclipse-glsp-examples/workflow-glsp/css/diagram.css":
/*!*******************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp-examples/workflow-glsp/css/diagram.css ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js */ "../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js");
/* harmony import */ var _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !../../../style-loader/dist/runtime/styleDomAPI.js */ "../../node_modules/style-loader/dist/runtime/styleDomAPI.js");
/* harmony import */ var _style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! !../../../style-loader/dist/runtime/insertBySelector.js */ "../../node_modules/style-loader/dist/runtime/insertBySelector.js");
/* harmony import */ var _style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! !../../../style-loader/dist/runtime/setAttributesWithoutAttributes.js */ "../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js");
/* harmony import */ var _style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! !../../../style-loader/dist/runtime/insertStyleElement.js */ "../../node_modules/style-loader/dist/runtime/insertStyleElement.js");
/* harmony import */ var _style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! !../../../style-loader/dist/runtime/styleTagTransform.js */ "../../node_modules/style-loader/dist/runtime/styleTagTransform.js");
/* harmony import */ var _style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _css_loader_dist_cjs_js_diagram_css__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! !!../../../css-loader/dist/cjs.js!./diagram.css */ "../../node_modules/css-loader/dist/cjs.js!../../node_modules/@eclipse-glsp-examples/workflow-glsp/css/diagram.css");

      
      
      
      
      
      
      
      
      

var options = {};

options.styleTagTransform = (_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default());
options.setAttributes = (_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default());

      options.insert = _style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default().bind(null, "head");
    
options.domAPI = (_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default());
options.insertStyleElement = (_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default());

var update = _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_css_loader_dist_cjs_js_diagram_css__WEBPACK_IMPORTED_MODULE_6__["default"], options);




       /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_css_loader_dist_cjs_js_diagram_css__WEBPACK_IMPORTED_MODULE_6__["default"] && _css_loader_dist_cjs_js_diagram_css__WEBPACK_IMPORTED_MODULE_6__["default"].locals ? _css_loader_dist_cjs_js_diagram_css__WEBPACK_IMPORTED_MODULE_6__["default"].locals : undefined);


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/css/autocomplete-palette.css":
/*!****************************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/css/autocomplete-palette.css ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js */ "../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js");
/* harmony import */ var _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !../../../style-loader/dist/runtime/styleDomAPI.js */ "../../node_modules/style-loader/dist/runtime/styleDomAPI.js");
/* harmony import */ var _style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! !../../../style-loader/dist/runtime/insertBySelector.js */ "../../node_modules/style-loader/dist/runtime/insertBySelector.js");
/* harmony import */ var _style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! !../../../style-loader/dist/runtime/setAttributesWithoutAttributes.js */ "../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js");
/* harmony import */ var _style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! !../../../style-loader/dist/runtime/insertStyleElement.js */ "../../node_modules/style-loader/dist/runtime/insertStyleElement.js");
/* harmony import */ var _style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! !../../../style-loader/dist/runtime/styleTagTransform.js */ "../../node_modules/style-loader/dist/runtime/styleTagTransform.js");
/* harmony import */ var _style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _css_loader_dist_cjs_js_autocomplete_palette_css__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! !!../../../css-loader/dist/cjs.js!./autocomplete-palette.css */ "../../node_modules/css-loader/dist/cjs.js!../../node_modules/@eclipse-glsp/client/css/autocomplete-palette.css");

      
      
      
      
      
      
      
      
      

var options = {};

options.styleTagTransform = (_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default());
options.setAttributes = (_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default());

      options.insert = _style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default().bind(null, "head");
    
options.domAPI = (_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default());
options.insertStyleElement = (_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default());

var update = _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_css_loader_dist_cjs_js_autocomplete_palette_css__WEBPACK_IMPORTED_MODULE_6__["default"], options);




       /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_css_loader_dist_cjs_js_autocomplete_palette_css__WEBPACK_IMPORTED_MODULE_6__["default"] && _css_loader_dist_cjs_js_autocomplete_palette_css__WEBPACK_IMPORTED_MODULE_6__["default"].locals ? _css_loader_dist_cjs_js_autocomplete_palette_css__WEBPACK_IMPORTED_MODULE_6__["default"].locals : undefined);


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/css/command-palette.css":
/*!***********************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/css/command-palette.css ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js */ "../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js");
/* harmony import */ var _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !../../../style-loader/dist/runtime/styleDomAPI.js */ "../../node_modules/style-loader/dist/runtime/styleDomAPI.js");
/* harmony import */ var _style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! !../../../style-loader/dist/runtime/insertBySelector.js */ "../../node_modules/style-loader/dist/runtime/insertBySelector.js");
/* harmony import */ var _style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! !../../../style-loader/dist/runtime/setAttributesWithoutAttributes.js */ "../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js");
/* harmony import */ var _style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! !../../../style-loader/dist/runtime/insertStyleElement.js */ "../../node_modules/style-loader/dist/runtime/insertStyleElement.js");
/* harmony import */ var _style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! !../../../style-loader/dist/runtime/styleTagTransform.js */ "../../node_modules/style-loader/dist/runtime/styleTagTransform.js");
/* harmony import */ var _style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _css_loader_dist_cjs_js_command_palette_css__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! !!../../../css-loader/dist/cjs.js!./command-palette.css */ "../../node_modules/css-loader/dist/cjs.js!../../node_modules/@eclipse-glsp/client/css/command-palette.css");

      
      
      
      
      
      
      
      
      

var options = {};

options.styleTagTransform = (_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default());
options.setAttributes = (_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default());

      options.insert = _style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default().bind(null, "head");
    
options.domAPI = (_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default());
options.insertStyleElement = (_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default());

var update = _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_css_loader_dist_cjs_js_command_palette_css__WEBPACK_IMPORTED_MODULE_6__["default"], options);




       /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_css_loader_dist_cjs_js_command_palette_css__WEBPACK_IMPORTED_MODULE_6__["default"] && _css_loader_dist_cjs_js_command_palette_css__WEBPACK_IMPORTED_MODULE_6__["default"].locals ? _css_loader_dist_cjs_js_command_palette_css__WEBPACK_IMPORTED_MODULE_6__["default"].locals : undefined);


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/css/decoration.css":
/*!******************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/css/decoration.css ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js */ "../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js");
/* harmony import */ var _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !../../../style-loader/dist/runtime/styleDomAPI.js */ "../../node_modules/style-loader/dist/runtime/styleDomAPI.js");
/* harmony import */ var _style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! !../../../style-loader/dist/runtime/insertBySelector.js */ "../../node_modules/style-loader/dist/runtime/insertBySelector.js");
/* harmony import */ var _style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! !../../../style-loader/dist/runtime/setAttributesWithoutAttributes.js */ "../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js");
/* harmony import */ var _style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! !../../../style-loader/dist/runtime/insertStyleElement.js */ "../../node_modules/style-loader/dist/runtime/insertStyleElement.js");
/* harmony import */ var _style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! !../../../style-loader/dist/runtime/styleTagTransform.js */ "../../node_modules/style-loader/dist/runtime/styleTagTransform.js");
/* harmony import */ var _style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _css_loader_dist_cjs_js_decoration_css__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! !!../../../css-loader/dist/cjs.js!./decoration.css */ "../../node_modules/css-loader/dist/cjs.js!../../node_modules/@eclipse-glsp/client/css/decoration.css");

      
      
      
      
      
      
      
      
      

var options = {};

options.styleTagTransform = (_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default());
options.setAttributes = (_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default());

      options.insert = _style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default().bind(null, "head");
    
options.domAPI = (_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default());
options.insertStyleElement = (_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default());

var update = _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_css_loader_dist_cjs_js_decoration_css__WEBPACK_IMPORTED_MODULE_6__["default"], options);




       /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_css_loader_dist_cjs_js_decoration_css__WEBPACK_IMPORTED_MODULE_6__["default"] && _css_loader_dist_cjs_js_decoration_css__WEBPACK_IMPORTED_MODULE_6__["default"].locals ? _css_loader_dist_cjs_js_decoration_css__WEBPACK_IMPORTED_MODULE_6__["default"].locals : undefined);


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/css/glsp-sprotty.css":
/*!********************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/css/glsp-sprotty.css ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js */ "../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js");
/* harmony import */ var _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !../../../style-loader/dist/runtime/styleDomAPI.js */ "../../node_modules/style-loader/dist/runtime/styleDomAPI.js");
/* harmony import */ var _style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! !../../../style-loader/dist/runtime/insertBySelector.js */ "../../node_modules/style-loader/dist/runtime/insertBySelector.js");
/* harmony import */ var _style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! !../../../style-loader/dist/runtime/setAttributesWithoutAttributes.js */ "../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js");
/* harmony import */ var _style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! !../../../style-loader/dist/runtime/insertStyleElement.js */ "../../node_modules/style-loader/dist/runtime/insertStyleElement.js");
/* harmony import */ var _style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! !../../../style-loader/dist/runtime/styleTagTransform.js */ "../../node_modules/style-loader/dist/runtime/styleTagTransform.js");
/* harmony import */ var _style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _css_loader_dist_cjs_js_glsp_sprotty_css__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! !!../../../css-loader/dist/cjs.js!./glsp-sprotty.css */ "../../node_modules/css-loader/dist/cjs.js!../../node_modules/@eclipse-glsp/client/css/glsp-sprotty.css");

      
      
      
      
      
      
      
      
      

var options = {};

options.styleTagTransform = (_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default());
options.setAttributes = (_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default());

      options.insert = _style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default().bind(null, "head");
    
options.domAPI = (_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default());
options.insertStyleElement = (_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default());

var update = _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_css_loader_dist_cjs_js_glsp_sprotty_css__WEBPACK_IMPORTED_MODULE_6__["default"], options);




       /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_css_loader_dist_cjs_js_glsp_sprotty_css__WEBPACK_IMPORTED_MODULE_6__["default"] && _css_loader_dist_cjs_js_glsp_sprotty_css__WEBPACK_IMPORTED_MODULE_6__["default"].locals ? _css_loader_dist_cjs_js_glsp_sprotty_css__WEBPACK_IMPORTED_MODULE_6__["default"].locals : undefined);


/***/ }),

/***/ "../../node_modules/@eclipse-glsp/client/css/tool-palette.css":
/*!********************************************************************!*\
  !*** ../../node_modules/@eclipse-glsp/client/css/tool-palette.css ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js */ "../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js");
/* harmony import */ var _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !../../../style-loader/dist/runtime/styleDomAPI.js */ "../../node_modules/style-loader/dist/runtime/styleDomAPI.js");
/* harmony import */ var _style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! !../../../style-loader/dist/runtime/insertBySelector.js */ "../../node_modules/style-loader/dist/runtime/insertBySelector.js");
/* harmony import */ var _style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! !../../../style-loader/dist/runtime/setAttributesWithoutAttributes.js */ "../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js");
/* harmony import */ var _style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! !../../../style-loader/dist/runtime/insertStyleElement.js */ "../../node_modules/style-loader/dist/runtime/insertStyleElement.js");
/* harmony import */ var _style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! !../../../style-loader/dist/runtime/styleTagTransform.js */ "../../node_modules/style-loader/dist/runtime/styleTagTransform.js");
/* harmony import */ var _style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _css_loader_dist_cjs_js_tool_palette_css__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! !!../../../css-loader/dist/cjs.js!./tool-palette.css */ "../../node_modules/css-loader/dist/cjs.js!../../node_modules/@eclipse-glsp/client/css/tool-palette.css");

      
      
      
      
      
      
      
      
      

var options = {};

options.styleTagTransform = (_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default());
options.setAttributes = (_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default());

      options.insert = _style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default().bind(null, "head");
    
options.domAPI = (_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default());
options.insertStyleElement = (_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default());

var update = _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_css_loader_dist_cjs_js_tool_palette_css__WEBPACK_IMPORTED_MODULE_6__["default"], options);




       /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_css_loader_dist_cjs_js_tool_palette_css__WEBPACK_IMPORTED_MODULE_6__["default"] && _css_loader_dist_cjs_js_tool_palette_css__WEBPACK_IMPORTED_MODULE_6__["default"].locals ? _css_loader_dist_cjs_js_tool_palette_css__WEBPACK_IMPORTED_MODULE_6__["default"].locals : undefined);


/***/ }),

/***/ "../../node_modules/@vscode/codicons/dist/codicon.css":
/*!************************************************************!*\
  !*** ../../node_modules/@vscode/codicons/dist/codicon.css ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js */ "../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js");
/* harmony import */ var _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !../../../style-loader/dist/runtime/styleDomAPI.js */ "../../node_modules/style-loader/dist/runtime/styleDomAPI.js");
/* harmony import */ var _style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! !../../../style-loader/dist/runtime/insertBySelector.js */ "../../node_modules/style-loader/dist/runtime/insertBySelector.js");
/* harmony import */ var _style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! !../../../style-loader/dist/runtime/setAttributesWithoutAttributes.js */ "../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js");
/* harmony import */ var _style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! !../../../style-loader/dist/runtime/insertStyleElement.js */ "../../node_modules/style-loader/dist/runtime/insertStyleElement.js");
/* harmony import */ var _style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! !../../../style-loader/dist/runtime/styleTagTransform.js */ "../../node_modules/style-loader/dist/runtime/styleTagTransform.js");
/* harmony import */ var _style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _css_loader_dist_cjs_js_codicon_css__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! !!../../../css-loader/dist/cjs.js!./codicon.css */ "../../node_modules/css-loader/dist/cjs.js!../../node_modules/@vscode/codicons/dist/codicon.css");

      
      
      
      
      
      
      
      
      

var options = {};

options.styleTagTransform = (_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default());
options.setAttributes = (_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default());

      options.insert = _style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default().bind(null, "head");
    
options.domAPI = (_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default());
options.insertStyleElement = (_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default());

var update = _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_css_loader_dist_cjs_js_codicon_css__WEBPACK_IMPORTED_MODULE_6__["default"], options);




       /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_css_loader_dist_cjs_js_codicon_css__WEBPACK_IMPORTED_MODULE_6__["default"] && _css_loader_dist_cjs_js_codicon_css__WEBPACK_IMPORTED_MODULE_6__["default"].locals ? _css_loader_dist_cjs_js_codicon_css__WEBPACK_IMPORTED_MODULE_6__["default"].locals : undefined);


/***/ }),

/***/ "../../node_modules/balloon-css/balloon.min.css":
/*!******************************************************!*\
  !*** ../../node_modules/balloon-css/balloon.min.css ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../style-loader/dist/runtime/injectStylesIntoStyleTag.js */ "../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js");
/* harmony import */ var _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !../style-loader/dist/runtime/styleDomAPI.js */ "../../node_modules/style-loader/dist/runtime/styleDomAPI.js");
/* harmony import */ var _style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! !../style-loader/dist/runtime/insertBySelector.js */ "../../node_modules/style-loader/dist/runtime/insertBySelector.js");
/* harmony import */ var _style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! !../style-loader/dist/runtime/setAttributesWithoutAttributes.js */ "../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js");
/* harmony import */ var _style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! !../style-loader/dist/runtime/insertStyleElement.js */ "../../node_modules/style-loader/dist/runtime/insertStyleElement.js");
/* harmony import */ var _style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! !../style-loader/dist/runtime/styleTagTransform.js */ "../../node_modules/style-loader/dist/runtime/styleTagTransform.js");
/* harmony import */ var _style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _css_loader_dist_cjs_js_balloon_min_css__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! !!../css-loader/dist/cjs.js!./balloon.min.css */ "../../node_modules/css-loader/dist/cjs.js!../../node_modules/balloon-css/balloon.min.css");

      
      
      
      
      
      
      
      
      

var options = {};

options.styleTagTransform = (_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default());
options.setAttributes = (_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default());

      options.insert = _style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default().bind(null, "head");
    
options.domAPI = (_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default());
options.insertStyleElement = (_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default());

var update = _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_css_loader_dist_cjs_js_balloon_min_css__WEBPACK_IMPORTED_MODULE_6__["default"], options);




       /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_css_loader_dist_cjs_js_balloon_min_css__WEBPACK_IMPORTED_MODULE_6__["default"] && _css_loader_dist_cjs_js_balloon_min_css__WEBPACK_IMPORTED_MODULE_6__["default"].locals ? _css_loader_dist_cjs_js_balloon_min_css__WEBPACK_IMPORTED_MODULE_6__["default"].locals : undefined);


/***/ }),

/***/ "../../node_modules/sprotty/css/edit-label.css":
/*!*****************************************************!*\
  !*** ../../node_modules/sprotty/css/edit-label.css ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../../style-loader/dist/runtime/injectStylesIntoStyleTag.js */ "../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js");
/* harmony import */ var _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !../../style-loader/dist/runtime/styleDomAPI.js */ "../../node_modules/style-loader/dist/runtime/styleDomAPI.js");
/* harmony import */ var _style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! !../../style-loader/dist/runtime/insertBySelector.js */ "../../node_modules/style-loader/dist/runtime/insertBySelector.js");
/* harmony import */ var _style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! !../../style-loader/dist/runtime/setAttributesWithoutAttributes.js */ "../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js");
/* harmony import */ var _style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! !../../style-loader/dist/runtime/insertStyleElement.js */ "../../node_modules/style-loader/dist/runtime/insertStyleElement.js");
/* harmony import */ var _style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! !../../style-loader/dist/runtime/styleTagTransform.js */ "../../node_modules/style-loader/dist/runtime/styleTagTransform.js");
/* harmony import */ var _style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _css_loader_dist_cjs_js_edit_label_css__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! !!../../css-loader/dist/cjs.js!./edit-label.css */ "../../node_modules/css-loader/dist/cjs.js!../../node_modules/sprotty/css/edit-label.css");

      
      
      
      
      
      
      
      
      

var options = {};

options.styleTagTransform = (_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default());
options.setAttributes = (_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default());

      options.insert = _style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default().bind(null, "head");
    
options.domAPI = (_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default());
options.insertStyleElement = (_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default());

var update = _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_css_loader_dist_cjs_js_edit_label_css__WEBPACK_IMPORTED_MODULE_6__["default"], options);




       /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_css_loader_dist_cjs_js_edit_label_css__WEBPACK_IMPORTED_MODULE_6__["default"] && _css_loader_dist_cjs_js_edit_label_css__WEBPACK_IMPORTED_MODULE_6__["default"].locals ? _css_loader_dist_cjs_js_edit_label_css__WEBPACK_IMPORTED_MODULE_6__["default"].locals : undefined);


/***/ }),

/***/ "data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D%22http://www.w3.org/2000/svg%22%20width%3D%2212px%22%20height%3D%2236px%22%3E%3Cpath%20fill%3D%22rgba%2817,17,17,0.9%29%22%20transform%3D%22rotate%28-90 18 18%29%22%20d%3D%22M2.658,0.000%20C-13.615,0.000%2050.938,0.000%2034.662,0.000%20C28.662,0.000%2023.035,12.002%2018.660,12.002%20C14.285,12.002%208.594,0.000%202.658,0.000%20Z%22/%3E%3C/svg%3E":
/*!**********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D%22http://www.w3.org/2000/svg%22%20width%3D%2212px%22%20height%3D%2236px%22%3E%3Cpath%20fill%3D%22rgba%2817,17,17,0.9%29%22%20transform%3D%22rotate%28-90 18 18%29%22%20d%3D%22M2.658,0.000%20C-13.615,0.000%2050.938,0.000%2034.662,0.000%20C28.662,0.000%2023.035,12.002%2018.660,12.002%20C14.285,12.002%208.594,0.000%202.658,0.000%20Z%22/%3E%3C/svg%3E ***!
  \**********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D%22http://www.w3.org/2000/svg%22%20width%3D%2212px%22%20height%3D%2236px%22%3E%3Cpath%20fill%3D%22rgba%2817,17,17,0.9%29%22%20transform%3D%22rotate%28-90 18 18%29%22%20d%3D%22M2.658,0.000%20C-13.615,0.000%2050.938,0.000%2034.662,0.000%20C28.662,0.000%2023.035,12.002%2018.660,12.002%20C14.285,12.002%208.594,0.000%202.658,0.000%20Z%22/%3E%3C/svg%3E";

/***/ }),

/***/ "data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D%22http://www.w3.org/2000/svg%22%20width%3D%2212px%22%20height%3D%2236px%22%3E%3Cpath%20fill%3D%22rgba%2817,17,17,0.9%29%22%20transform%3D%22rotate%2890 6 6%29%22%20d%3D%22M2.658,0.000%20C-13.615,0.000%2050.938,0.000%2034.662,0.000%20C28.662,0.000%2023.035,12.002%2018.660,12.002%20C14.285,12.002%208.594,0.000%202.658,0.000%20Z%22/%3E%3C/svg%3E":
/*!*******************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D%22http://www.w3.org/2000/svg%22%20width%3D%2212px%22%20height%3D%2236px%22%3E%3Cpath%20fill%3D%22rgba%2817,17,17,0.9%29%22%20transform%3D%22rotate%2890 6 6%29%22%20d%3D%22M2.658,0.000%20C-13.615,0.000%2050.938,0.000%2034.662,0.000%20C28.662,0.000%2023.035,12.002%2018.660,12.002%20C14.285,12.002%208.594,0.000%202.658,0.000%20Z%22/%3E%3C/svg%3E ***!
  \*******************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D%22http://www.w3.org/2000/svg%22%20width%3D%2212px%22%20height%3D%2236px%22%3E%3Cpath%20fill%3D%22rgba%2817,17,17,0.9%29%22%20transform%3D%22rotate%2890 6 6%29%22%20d%3D%22M2.658,0.000%20C-13.615,0.000%2050.938,0.000%2034.662,0.000%20C28.662,0.000%2023.035,12.002%2018.660,12.002%20C14.285,12.002%208.594,0.000%202.658,0.000%20Z%22/%3E%3C/svg%3E";

/***/ }),

/***/ "data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D%22http://www.w3.org/2000/svg%22%20width%3D%2236px%22%20height%3D%2212px%22%3E%3Cpath%20fill%3D%22rgba%2817,17,17,0.9%29%22%20transform%3D%22rotate%280%29%22%20d%3D%22M2.658,0.000%20C-13.615,0.000%2050.938,0.000%2034.662,0.000%20C28.662,0.000%2023.035,12.002%2018.660,12.002%20C14.285,12.002%208.594,0.000%202.658,0.000%20Z%22/%3E%3C/svg%3E":
/*!**************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D%22http://www.w3.org/2000/svg%22%20width%3D%2236px%22%20height%3D%2212px%22%3E%3Cpath%20fill%3D%22rgba%2817,17,17,0.9%29%22%20transform%3D%22rotate%280%29%22%20d%3D%22M2.658,0.000%20C-13.615,0.000%2050.938,0.000%2034.662,0.000%20C28.662,0.000%2023.035,12.002%2018.660,12.002%20C14.285,12.002%208.594,0.000%202.658,0.000%20Z%22/%3E%3C/svg%3E ***!
  \**************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D%22http://www.w3.org/2000/svg%22%20width%3D%2236px%22%20height%3D%2212px%22%3E%3Cpath%20fill%3D%22rgba%2817,17,17,0.9%29%22%20transform%3D%22rotate%280%29%22%20d%3D%22M2.658,0.000%20C-13.615,0.000%2050.938,0.000%2034.662,0.000%20C28.662,0.000%2023.035,12.002%2018.660,12.002%20C14.285,12.002%208.594,0.000%202.658,0.000%20Z%22/%3E%3C/svg%3E";

/***/ }),

/***/ "data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D%22http://www.w3.org/2000/svg%22%20width%3D%2236px%22%20height%3D%2212px%22%3E%3Cpath%20fill%3D%22rgba%2817,17,17,0.9%29%22%20transform%3D%22rotate%28180 18 6%29%22%20d%3D%22M2.658,0.000%20C-13.615,0.000%2050.938,0.000%2034.662,0.000%20C28.662,0.000%2023.035,12.002%2018.660,12.002%20C14.285,12.002%208.594,0.000%202.658,0.000%20Z%22/%3E%3C/svg%3E":
/*!*********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D%22http://www.w3.org/2000/svg%22%20width%3D%2236px%22%20height%3D%2212px%22%3E%3Cpath%20fill%3D%22rgba%2817,17,17,0.9%29%22%20transform%3D%22rotate%28180 18 6%29%22%20d%3D%22M2.658,0.000%20C-13.615,0.000%2050.938,0.000%2034.662,0.000%20C28.662,0.000%2023.035,12.002%2018.660,12.002%20C14.285,12.002%208.594,0.000%202.658,0.000%20Z%22/%3E%3C/svg%3E ***!
  \*********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D%22http://www.w3.org/2000/svg%22%20width%3D%2236px%22%20height%3D%2212px%22%3E%3Cpath%20fill%3D%22rgba%2817,17,17,0.9%29%22%20transform%3D%22rotate%28180 18 6%29%22%20d%3D%22M2.658,0.000%20C-13.615,0.000%2050.938,0.000%2034.662,0.000%20C28.662,0.000%2023.035,12.002%2018.660,12.002%20C14.285,12.002%208.594,0.000%202.658,0.000%20Z%22/%3E%3C/svg%3E";

/***/ }),

/***/ "../../node_modules/@vscode/codicons/dist/codicon.ttf?7cea6a135a6c0359d1f6d18e6b2c5c42":
/*!*********************************************************************************************!*\
  !*** ../../node_modules/@vscode/codicons/dist/codicon.ttf?7cea6a135a6c0359d1f6d18e6b2c5c42 ***!
  \*********************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
module.exports = __webpack_require__.p + "aeb98e0beefa59d80a39.ttf?7cea6a135a6c0359d1f6d18e6b2c5c42";

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			loaded: false,
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = __webpack_modules__;
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/node module decorator */
/******/ 	(() => {
/******/ 		__webpack_require__.nmd = (module) => {
/******/ 			module.paths = [];
/******/ 			if (!module.children) module.children = [];
/******/ 			return module;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/publicPath */
/******/ 	(() => {
/******/ 		var scriptUrl;
/******/ 		if (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + "";
/******/ 		var document = __webpack_require__.g.document;
/******/ 		if (!scriptUrl && document) {
/******/ 			if (document.currentScript)
/******/ 				scriptUrl = document.currentScript.src;
/******/ 			if (!scriptUrl) {
/******/ 				var scripts = document.getElementsByTagName("script");
/******/ 				if(scripts.length) {
/******/ 					var i = scripts.length - 1;
/******/ 					while (i > -1 && !scriptUrl) scriptUrl = scripts[i--].src;
/******/ 				}
/******/ 			}
/******/ 		}
/******/ 		// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration
/******/ 		// or pass an empty string ("") and set the __webpack_public_path__ variable from your code to use your own logic.
/******/ 		if (!scriptUrl) throw new Error("Automatic publicPath is not supported in this browser");
/******/ 		scriptUrl = scriptUrl.replace(/#.*$/, "").replace(/\?.*$/, "").replace(/\/[^\/]+$/, "/");
/******/ 		__webpack_require__.p = scriptUrl;
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/jsonp chunk loading */
/******/ 	(() => {
/******/ 		__webpack_require__.b = document.baseURI || self.location.href;
/******/ 		
/******/ 		// object to store loaded and loading chunks
/******/ 		// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 		// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded
/******/ 		var installedChunks = {
/******/ 			"main": 0
/******/ 		};
/******/ 		
/******/ 		// no chunk on demand loading
/******/ 		
/******/ 		// no prefetching
/******/ 		
/******/ 		// no preloaded
/******/ 		
/******/ 		// no HMR
/******/ 		
/******/ 		// no HMR manifest
/******/ 		
/******/ 		// no on chunks loaded
/******/ 		
/******/ 		// no jsonp function
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/nonce */
/******/ 	(() => {
/******/ 		__webpack_require__.nc = undefined;
/******/ 	})();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be in strict mode.
(() => {
"use strict";
var exports = __webpack_exports__;
/*!**********************!*\
  !*** ./lib/index.js ***!
  \**********************/

Object.defineProperty(exports, "__esModule", ({ value: true }));
/********************************************************************************
 * Copyright (c) 2021 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
__webpack_require__(/*! reflect-metadata */ "../../node_modules/reflect-metadata/Reflect.js");
__webpack_require__(/*! ./app */ "./lib/app.js");

})();

/******/ })()
;
//# sourceMappingURL=bundle.js.map